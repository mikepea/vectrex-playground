<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<meta name="dcterms.rights" content="Copyright 2017 &copy; Manta BlueSky, All Rights Reserved">
<link rel="stylesheet" type="text/css" href="http://roadsidethoughts.com/urst.css">
<link rel="author" href="https://plus.google.com/118279428097774141269/"/>
<script type="text/javascript">
function tdf_bof()
{ if (top.location != location) { top.location.href = document.location.href; }
}
</script>
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-16983354-1']);
_gaq.push(['_trackPageview']);

_gaq.push(['_trackPageLoadTime']);

(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src =  'http://www.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
if (document.referrer.match(/google./gi) && document.referrer.match(/cd/gi)) {
  var myString = document.referrer;
  var r = myString.match(/cd=(.*?)&/);
  var rank = parseInt(r[1]);
  var kw = myString.match(/q=(.*?)&/);
  if (kw[1].length > 0) {
    var keyWord = decodeURI(kw[1]);
  } else {
    keyWord = "(not provided)";
  }
  var p = document.location.pathname;
  _gaq.push(['_trackEvent', 'RST-GSearch', keyWord, p, rank, true]);
}
</script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" type="text/javascript"></script>
<script type="application/ld+json">
{ "@context" : "http://schema.org",
"@type" : "WebSite",
"name" : "RoadsideThoughts",
"url" : "http://roadsidethoughts.com",
"description": "A Gazetteer for the United States and Canada"
}
</script>
</head>
<body itemscope itemtype="http://schema.org/WebPage">

<table class="trst">

<tr><td class="vrst" colspan="2">&#160;<a id="top"></a>
    <a class="vrst1" href="http://roadsidethoughts.com/">From RoadsideThoughts ...</a><br />
    <a class="vrst2" href="http://roadsidethoughts.com/vectrex/">A Bit of Vectrex History</a>
    </td></tr>

<tr class="trstb"><td class="tbar" colspan="2">
    <table class="tsct">
    <tr><td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/">Introduction</a></td>
        <td class="tsct wd120"><a class="tsct" href="http://roadsidethoughts.com/vectrex/vectrex-programmers-guide.htm">Programmer's<br />Guide</a></td>
        <td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/the-rum.htm">The RUM</a></td>
        <td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/mine-storm.htm">Mine Storm</a></td>
        <td class="tsct wd120"><a class="tsct" href="http://roadsidethoughts.com/vectrex/fortress-of-narzod.htm">Fortress of<br />Narzod</a></td>
        <td class="tsct wd120"> &#160; <br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/dark-tower.htm">Dark Tower</a></td>
        <td class="vsct wd60"> &#160; </td>
        <td class="vsct wd120"> &#160; <br /><a class="tsct" href="http://roadsidethoughts.com/sitemap.htm">Sitemap</a></td>
    </tr></table></td></tr>


<tr><td class="thlk"><div class="i2"><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/' itemprop='url' title='Home page for RoadsideThoughts: A Gazetteer for the United States and Canada'><span itemprop='title'>Home</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/' itemprop='url' title='Home page for A Bit of Vectrex History'><span itemprop='title'>Vectrex</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/vectrex-programmers-guide.htm' itemprop='url' title='Programmers Guide'><span itemprop='title'>Programmer's Guide</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/act09-assembler.htm' itemprop='url'><span itemprop='title'> The ACT09 Assembler</span></a></span></div> &#160; </td><td class="tsrch rt"><form action="http://roadsidethoughts.com/search.htm" id="cse-search-box"><div><input type="hidden" name="cx" value="partner-pub-6853254609661254:i7pisc-77z3" /><input type="hidden" name="cof" value="FORID:10" /><input type="hidden" name="ie" value="ISO-8859-1" /><input type="text" name="q" size="20" /><input type="submit" name="sa" value="Search" /></div></form><script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script> &#160; &#160; </td></tr>

</table>

<table class="wd100p">
<tr><td class="wd40">&#160;</td><td>
<h1 class="pt">Vectrex Programmer's Guide<br /><br />The ACT09 Assembler</h1><hr class="pt">

<br /><div class="ketr"><table><tr><td class="wd300 ctr"> 

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- vectrex-300x600 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-6853254609661254"
     data-ad-slot="4682436309"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

</td></tr></table></div>

<div class="vh1"><h1 class="ctr">Introduction</h1></div>

<p class="i1">At Western Technologies, we used the Avocet&#160;6809 cross-assembler.  A cross-assembler is a tool that takes the source code written on 
the development machine and translates it to some form of executable code (called hex or binary).  When Mark Indictor and I moved to GCE, we chose to use 
the ACT09&#160;6809 assembler.  In our case, we wrote our source code on a CP/M-based development system and the cross-assembler translated it 
to&#160;6809&#160;executable code.  If the assembly was clean (no errors), the resulting hex code would be downloaded to either the ROM emulator or to 
the EPROM programmer.</p>


<p class="i1">Why did we switch?  That I can't recall.  I imagine that there was probably some esoteric ACT09 feature that we liked better than the 
Avocet - but I can't remember what made the decision.  I would comment that looking between the code for the Avocet and the code for ACT09, the ACT09 
seems to have been the more modern assembler.</p>


<div class="vh1"><h1 class="ctr">ACT09 Command Line Syntax</h1></div>

<br /><table class="i3"><tr><td class="wd100"> <b><u>Parameter</u></b></td>
   <td><b><u>Description</u></b></td></tr><tr><td colspan="2"> &#160; </td></tr>

<tr><td>H=d: </td><td>Output .HEX file to the specified disk ('d:')
   <br />(Default: output to input file drive)</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>H=d:file.ext </td><td>Output .HEX file to the specified disk ('d:'),file name and extension</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>H=0 </td><td>Suppress .HEX file output</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>L </td><td>Output listing to printer</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>L=d: </td><td>Output .PRN file to the specified disk ('d:')</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>L=CON: </td><td>Output listing to user's console</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>L=LP: </td><td>Output listing to printer</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>L=0 </td><td>Suppress .PRN file output (Default)</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>O=n </td><td>Preset values of 'Origin' and location counters (Default value is $0000)</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>PS </td><td>Set page size to 63 (Default is 61)</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>PS=n </td><td>Set page size to <n> source line per page.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>PS=0 </td><td>Do not print title line and page ejects to list file</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>S </td><td>Select normal SYSTEXT file ('A:SYSTEXT.AST')</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>S=d:file.ext </td><td>Select alternate SYSTEXT file. User may specify as many SYSTEXT's as desired (so long as combined number of SYSTEXT's and 
LINK files does not exceed LINK file limit).</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>S=0 </td><td>No SYSTEXT for this assembly is required (Default).</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>R=F </td><td>Include full reference map in listing file.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>R=S </td><td>Include short reference map in listing file.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>R=0 </td><td>Suppress reference map (Default).</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>SL </td><td>Set listing line length to 80 characters (Default value is 180 characters).</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td>SL=n </td><td>Set line length to <n> characters.</td></tr>
<td colspan="2"> &#160; </td></tr>
<td colspan="2"> &#160; </td></tr>


<tr><td colspan="2"><p>All numeric argument values may be specified according to the general syntax for numbers.  An explicit post-radix (B, H, N, or Q) 
may be used.</p>

<p>All lower case letters on the command line are normalized (to upper case) before interpretation.</p>

<p>ACT09 execution may be prematurely terminated by the operator by typing a 'Control C' on the console.</p>

<p>If a disk write error happens, ACT09 displays a message on the console.  The offending file (.HEX or .PRN) is erased and further writes to it are 
suppressed.  Assembly then continues normally.</p></td></tr></table>


<div class="vh1"><h1 class="ctr">ACT09 Expression Operators</h1></div>

<br /><table class="i3"><tr><td class="ctr wd100"> <b><u>Operator</u></b></td>
   <td><b><u>Description</u></b></td></tr><tr><td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> + </td><td>Sum</td></tr>
<tr><td class="ctr"> - </td><td>Difference</td></tr>
<tr><td class="ctr"> * </td><td>Multiply</td></tr>
<tr><td class="ctr"> / </td><td>Divide</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> NOT </td><td>Unary = bit-by-bit complement</td></tr>
<tr><td class="ctr"> AND </td><td>Logical products, conjunction</td></tr>
<tr><td class="ctr"> OR </td><td>Logical sum, disjunction, inclusive OR</td></tr>
<tr><td class="ctr"> XOR </td><td>Logical difference, inequivalence, exclusive OR</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> lop  </td><td>Where .lop. may be:   NE(<>)   EQ(+)   LT(<)   LE(<+)   GT(>)   GE(>=)</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> SHL </td><td>Left shift N bits</td></tr>
<tr><td class="ctr"> SHR </td><td>Right shift N bits</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> HIGH </td><td>Unary, high value to 8 bit field (x / 256)</td></tr>
<tr><td class="ctr"> LOW </td><td>Unary, low value to 8 bit field (x MOD 256)</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> MOD </td><td>Modulus function</td></tr>
<tr><td class="ctr"> REV </td><td>Unary ((LOW x) SHL 8) + HIGH x)</td></tr>
<tr><td class="ctr"> EF </td><td>Unary, logical = TRUE if symbol previously defined.</td></tr></table>


<div class="vh1"><h1 class="ctr">ACT09 Operator Precedence</h1></div>

<br /><table class="i3"><tr><td><b><u>Operator</u></b></td></tr><tr><td> &#160; </td></tr>

<tr><td>Parenthesis</td></tr>
<tr><td>HIGH &#160; &#160; LOW &#160; &#160; &#160; &#160; DEF &#160; &#160; REV</td></tr>
<tr><td>* &#160; &#160; / &#160; &#160; MOD &#160; &#160; SHL &#160; &#160; SHR</td></tr>
<tr><td>+ (monadic)</td></tr>
<tr><td>+ (dyadic)</td></tr>
<tr><td>= &#160; &#160; <> &#160; &#160; < &#160; &#160; <= &#160; &#160; > &#160; &#160; >= &#160; &#160; NE &#160; &#160; EQ &#160; &#160; LT &#160; 
&#160; LE &#160; &#160; GT &#160; &#160; GE</td></tr>
<tr><td>NOT</td></tr>
<tr><td>AND</td></tr>
<tr><td>OR &#160; &#160; XOR</td></tr></table>


<div class="vh1"><h1 class="ctr">ACT09 Expression Operands</h1></div>

<br /><table class="i3"><tr><td class="ctr wd100"> <b>Operand</u></b></td>
   <td><b><u>Description</u></b></td></tr><tr><td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> * </td><td>Current location counter</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> *L </td><td>Same as * (Refer to LOC psuedo-op)</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> *O </td><td>Current value of Origin counter (Refer to ORG psuedo-op)</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> *P </td><td>Current position counter (Refer to VFD psuedo-op)</td></tr></table>



<div class="vh1"><h1 class="ctr">ACT09 Error Codes</h1></div>

<p class="i1">Errors are flagged by a single letter code in column one of the output listing. Lines containing errors are always written to the console, 
regardless of the listing selection.</p>

<br /><table class="i3"><tr><td class="ctr wd100"> <b>Error</u></b></td>
   <td><b><u>Description</u></b></td></tr><tr><td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> A </td><td>Addressing mode conflict. Instruction specified does not support the addressing mode selected.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> C </td><td>CPU conflict. The instruction specified is not available on the machine type selected (CPU psuedo-op). The generated hex 
will be correct for the illegal machine.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> D </td><td>Duplicate label (last value assigned the given label is used).</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> E </td><td>Expression error, ill formed expression in address field.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> F </td><td>Bad nesting of IF / ELSE / ENDIF statements. On the END line, indicates that an IF was not terminated.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> I </td><td>Instruction field not recognized, a long no-op is generated.  On the END line, indicates a MACRO or ECHO was not 
terminated.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> L </td><td>Label field has either an illegal character in field, is too long or is missing.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> M </td><td>MACRO statement error.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> N </td><td>Error in number: digit exceeds radix.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> O </td><td>Stack table overflow occurred in evaluating expression (user should simplify expression), too many LINK files or too many 
PROCs (255 maximum).</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> S </td><td>Syntax error.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> U </td><td>Reference to an undefined symbol.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> V </td><td>Expression overflow: truncated or register conflict.</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> W </td><td>Field width on VFD not (1  <=  width  <=  16).</td></tr>
<td colspan="2"> &#160; </td></tr>

<tr><td class="ctr"> Y </td><td>Opcode misused: Extraneous ENDM.</td></tr></table>

<br /><br />&#160;</td><td class="wd30">&#160;</td></tr>
<tr><td>&#160;</td><td>

<table class="ctr">


<tr><td class="fsrch lt"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-vectrex -->
<ins class="adsbygoogle"
     style="display:inline-block;width:468px;height:15px"
     data-ad-client="ca-pub-6853254609661254"
     data-ad-slot="7097834702"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</td><td class="fsrch rt">
<form action="http://roadsidethoughts.com/search.htm" id="cse-search-box2">
<div>
<input type="hidden" name="cx" value="partner-pub-6853254609661254:i7pisc-77z3" />
<input type="hidden" name="cof" value="FORID:10" />
<input type="hidden" name="ie" value="ISO-8859-1" />
<input type="text" name="q" size="20" />
<input type="submit" name="sa" value="Search" />
</div>
</form>
<script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box2&amp;lang=en"></script>
</td></tr>


   <tr><td class="ctr">
   <table><tr><td colspan="5"> &#160; </td></tr><tr><td colspan="5"> &#160; </td></tr><tr><td colspan="5"> &#160; </td></tr>
       <tr><td class="ctr" colspan="5"><hr class="ctr wd750 ht2"></td></tr>

   <tr><td class="fbar"><a href="http://roadsidethoughts.com/vectrex/"
               title="Return to our Vectrex home page">Home<br />Page</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/sitemap.htm"
               title="Having trouble navigating our website?  Our sitemap might help">Sitemap</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/privacy.htm"
               title="Our statement about the privacy of your visit">Privacy<br />Statement</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/terms.htm"
               title="The terms, conditions and notices that govern your use of the information from RoadsideThoughts">Terms<br />of Use</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/vectrex/feedback.htm"
               title="How to contact us">Feedback</a></td>

   </tr><tr><td class="ctr" colspan="5"><hr class="ctr wd750 ht2"></td></tr>
   </table></td></tr>


   <tr><td>&#160;</td></tr>
   <tr><td>&#160;</td></tr>
   <tr><td class="lt">
   <table class="wd100p"><tr><td class="ftn">
       <p class="ftn">Please keep in mind that we can not guarantee the accuracy or timeliness of the information
       on this website, so use with care.  We encourage you to double-check the information that is critical to you.</p>
       <p class="ftn">If you've found an error or have additional information that you would like to share,
       please don't hesitate to write. <a href="http://roadsidethoughts.com/vectrex/feedback.htm">Click here to contact us.</a></p></td>
       <td class="fcpy"><div class="fcpy"></div>Copyright 2016 <br />All Rights Reserved</td></tr>
       </table>
       </td></tr>


   <tr><td class="flm">This page was last modified: 12 Jan 2017</td></tr>
   <tr><td class="flm">By John Hall</td></tr>


   <tr><td>&#160;</td></tr></table>

&#160;</td><td>&#160;</td></tr>
</table>
</body></html>
