<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<meta name="dcterms.rights" content="Copyright 2017 &copy; Manta BlueSky, All Rights Reserved">
<link rel="stylesheet" type="text/css" href="http://roadsidethoughts.com/urst.css">
<link rel="author" href="https://plus.google.com/118279428097774141269/"/>
<script type="text/javascript">
function tdf_bof()
{ if (top.location != location) { top.location.href = document.location.href; }
}
</script>
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-16983354-1']);
_gaq.push(['_trackPageview']);

_gaq.push(['_trackPageLoadTime']);

(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src =  'http://www.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
if (document.referrer.match(/google./gi) && document.referrer.match(/cd/gi)) {
  var myString = document.referrer;
  var r = myString.match(/cd=(.*?)&/);
  var rank = parseInt(r[1]);
  var kw = myString.match(/q=(.*?)&/);
  if (kw[1].length > 0) {
    var keyWord = decodeURI(kw[1]);
  } else {
    keyWord = "(not provided)";
  }
  var p = document.location.pathname;
  _gaq.push(['_trackEvent', 'RST-GSearch', keyWord, p, rank, true]);
}
</script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" type="text/javascript"></script>
<script type="application/ld+json">
{ "@context" : "http://schema.org",
"@type" : "WebSite",
"name" : "RoadsideThoughts",
"url" : "http://roadsidethoughts.com",
"description": "A Gazetteer for the United States and Canada"
}
</script>
</head>
<body itemscope itemtype="http://schema.org/WebPage">

<table class="trst">

<tr><td class="vrst" colspan="2">&#160;<a id="top"></a>
    <a class="vrst1" href="http://roadsidethoughts.com/">From RoadsideThoughts ...</a><br />
    <a class="vrst2" href="http://roadsidethoughts.com/vectrex/">A Bit of Vectrex History</a>
    </td></tr>

<tr class="trstb"><td class="tbar" colspan="2">
    <table class="tsct">
    <tr><td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/">Introduction</a></td>
        <td class="tsct wd120"><a class="tsct" href="http://roadsidethoughts.com/vectrex/vectrex-programmers-guide.htm">Programmer's<br />Guide</a></td>
        <td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/the-rum.htm">The RUM</a></td>
        <td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/mine-storm.htm">Mine Storm</a></td>
        <td class="tsct wd120"><a class="tsct" href="http://roadsidethoughts.com/vectrex/fortress-of-narzod.htm">Fortress of<br />Narzod</a></td>
        <td class="tsct wd120"> &#160; <br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/dark-tower.htm">Dark Tower</a></td>
        <td class="vsct wd60"> &#160; </td>
        <td class="vsct wd120"> &#160; <br /><a class="tsct" href="http://roadsidethoughts.com/sitemap.htm">Sitemap</a></td>
    </tr></table></td></tr>


<tr><td class="thlk"><div class="i2"><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/' itemprop='url' title='Home page for RoadsideThoughts: A Gazetteer for the United States and Canada'><span itemprop='title'>Home</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/' itemprop='url' title='Home page for A Bit of Vectrex History'><span itemprop='title'>Vectrex</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/dark-tower.htm' itemprop='url' title='Dark Tower'><span itemprop='title'>Dark Tower</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/dark-tower-tower-drk.htm' itemprop='url'><span itemprop='title'> TOWER.DRK - Rev. A</span></a></span></div> &#160; </td><td class="tsrch rt"><form action="http://roadsidethoughts.com/search.htm" id="cse-search-box"><div><input type="hidden" name="cx" value="partner-pub-6853254609661254:i7pisc-77z3" /><input type="hidden" name="cof" value="FORID:10" /><input type="hidden" name="ie" value="ISO-8859-1" /><input type="text" name="q" size="20" /><input type="submit" name="sa" value="Search" /></div></form><script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script> &#160; &#160; </td></tr>

</table>

<table class="wd100p">
<tr><td class="wd40">&#160;</td><td>
<h1 class="pt">Vectrex 6809 Source Code<br /><br />Dark Tower</h1><hr class="pt">

<br /><div class="ketr"><table><tr><td class="wd160 ctr"> 

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- vectrex-160x600 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-6853254609661254"
     data-ad-slot="2830915509"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

</td></tr></table></div>

<br /><div class="vh1"><h1 class="ctr">Index of Dark Tower Files</h1>

<p class="i1">The top most file for Dark Tower:</p>

<p class="i2"><a href="http://roadsidethoughts.com/vectrex/dark-tower-asm.htm">DRKTWR.ASM</a></p>


<p class="i1">The associated files:</p>

<table class="i2">

<tr><td class="wd150"> <a href="http://roadsidethoughts.com/vectrex/dark-tower-brgand-drk.htm">BRGAND.DRK</a> </td>
    <td class="wd150"> <a href="http://roadsidethoughts.com/vectrex/dark-tower-frgmnt-drk.htm">FRGMNTE.DRK</a> </td>
    <td class="wd150"> <a href="http://roadsidethoughts.com/vectrex/dark-tower-map-drk.htm">MAP.DRK</a> </td>
    <td class="wd150"> <a href="http://roadsidethoughts.com/vectrex/dark-tower-tower-drk.htm">TOWER.DRK</a> </td></tr>

<tr><td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-colide-drk.htm">COLIDE.DRK</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-goblin-drk.htm">GOBLIN.DRK</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-packs-drk.htm">PACKS.DRK</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-warior-drk.htm">WARIOR.DRK</a> </td></tr>

<tr><td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-fight-drk.htm">FIGHT.DRK</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-grdscn-drk.htm">GRDSCN.DRK</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-scenry-drk.htm">SCENRY.DRK</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-wizard-drk.htm">WIZARD.DRK</a> </td></tr>

<tr><td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-flamer-drk.htm">FLAMER.DRK</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-invent-drk.htm">INVENT.DRK</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-sound-drk.htm">SOUND.DRK</a> </td>
    <td> &#160; </td></tr>

<tr><td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-forest-drk.htm">FOREST.DRK</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-magic-drk.htm">MAGIC.DRK</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/dark-tower-subr-drk.htm">SUBR.DRK</a> </td>
    <td> &#160; </td></tr>

</table>


<br><div class="vh1"><h1 class="ctr">TOWER.DRK - Rev. A</h1></div>

<table class="i3"><tr><td class="brd1 wd600"><pre class="pd20 lt">

;
;
         IF      L.TWR = OFF      ;-------------------------------------------
         LIST    -L               ;--  TOWER  --------------------------------
         ENDIF                    ;-------------------------------------------
;
;
;
;
;  ***************************************************************
;  ***************************************************************
;  ***                                                         ***
;  ***          D A R K   T O W E R   S U B - P L O T          ***
;  ***                                                         ***
;  ***************************************************************
;  ***************************************************************
;
;  DARK-TOWER KEY RIDDLE
;  =====================
;
         SETDP   $C8
;        =====   ===
;
TOWER    PSHS    Y,U,DP           ;  SAVE ENTRY VALUES
;
         JSR     SAVGRD           ;  SAVE GRID SCAN VALUES
         JSR     WRKCLR           ;  CLEAR OVER-LAYED STORAGE
;
         LDA     #$C8             ;  SET 'DP' = RAM
         TFR     A,DP             ;  .
         SETDP   $C8              ;  .
;
         CLR     RFLAG            ;  CLEAR DRAW REVERSE FLAG
;
RIDL1    JSR     INVENT           ;  DISPLAY INVENTORY PAGE OR PAUSE ?
         SETDP   $D0              ;  .    SET 'DP' = I/O
;
;
         LDA     NXTKEY           ;  MOVE KEY POINTER RIGHT ?
         BEQ     RIDL2            ;  .
;
         LDB     RKPTR            ;  .    MOVE KEY POINTER RIGHT
         INCB                     ;  .    .
         ANDB    #$03             ;  .    .
         STB     RKPTR            ;  .    .
;
RIDL2    LDA     INCKEY           ;  CHANGE KEY SELECTION UPWARD ?
         BEQ     RIDL4            ;  . 
;
         LDU     #RKEY0           ;  .    WHICH HAS BEEN SELECTED ?
         LDA     #$03             ;  .    .
         SUBA    RKPTR            ;  .    .
         LEAU    A,U              ;  .    .
         LDB     ,U               ;  .    .
;
         INCB                     ;  .    MOVE KEY SELECTION UP
         CMPB    #$04             ;  .    .
         BLS     RIDL3            ;  .    .
         LDB     #$01             ;  .    .
RIDL3    STB     ,U               ;  .    .
;
;
RIDL4    LDA     TRYKEY           ;  TEST KEY COMBINATION ?
         LBNE    RDLTST           ;  .
;
;
RIDL5    JSR     INTMAX           ;  DISPLAY RIDDLE MESSAGE
         LDU     #M.RIDL          ;  .
         JSR     DSMESS           ;  .
;
         LDD     #$C0C4           ;  DRAW TOWER DOOR
         JSR     POSITD           ;  .    POSITION DOOR FRAME
         LDB     #$E0             ;  .    DRAW TOWER DOOR FRAME
         LDX     #TWRDR1          ;  .    .
         JSR     ZDIFFY           ;  .    .
;
         JSR     INT3Q            ;  .    SET INTENSITY FOR KEY HOLE
         LDD     #$1020           ;  .    POSITION KEY HOLE
         JSR     POSITD           ;  .    .
         LDB     #$A0             ;  .    DRAW TOWER DOOR KEY-HOLE
         LDX     #TWRDR2          ;  .    .
         JSR     ZDIFFY           ;  .    .
;
;
         LDD     #$B290           ;  DRAW KEY SYMBOLS (4 TOTAL)
         STD     TEMP1            ;  .    SET INITIAL KEY SYMBOL POSITION
         LDD     #$A880           ;  .    SET INITIAL KEY MESSAGE POSITION
         STD     TEMP3            ;  .    .
         LDA     #$03             ;  .    SET KEY COUNTER
         STA     TEMP5            ;  .    .
;
RIDL6    JSR     INT3Q            ;  .    DRAW KEY SYMBOLS
         LDD     TEMP1            ;  .    .    POSITION KEY SYMBOL
         ADDB    #$2E             ;  .    .    .    CALCULATE NEW POSITION
         STD     TEMP1            ;  .    .    .    .
         JSR     POSITD           ;  .    .    .
         LDB     #$38             ;  .    .    DRAW KEY SYMBOL
         LDX     #PKEY            ;  .    .    .
         JSR     ZDIFFY           ;  .    .    .
;
         LDD     #$FC30           ;  .    DRAW KEY MESSAGE
         STD     SIZRAS           ;  .    .    SET RASTER MESSAGE SIZE
;
         JSR     INTMAX           ;  .    .    POSITION KEY MESSAGE
         LDD     TEMP3            ;  .    .    .    CALCULATE NEW POSITION
         ADDB    #$2E             ;  .    .    .    .
         STD     TEMP3            ;  .    .    .    .
         JSR     POSITD           ;  .    .    .
         LDU     #RKEY0           ;  .    .    DISPLAY KEY TYPE MESSAGE
         LDA     TEMP5            ;  .    .    .    WHICH KEY TO DISPLAY ?
         LDA     A,U              ;  .    .    .    .
         LDU     #RK.TBL          ;  .    .    .    FETCH KEY MESSAGE
         ASLA                     ;  .    .    .    .
         LDU     A,U              ;  .    .    .    .
         JSR     RASTER           ;  .    .    .
;
         DEC     TEMP5            ;  .    TRY NEXT SYMBOL ?
         BPL     RIDL6            ;  .    .
;
         LDU     #APOINT          ;  POSITION AND DRAW KEY POINTER
         LDA     RKPTR            ;  .    DETERMINE KEY POINTER POSITION
         LDB     A,U              ;  .    .
         LDA     #$98             ;  .    .
         JSR     POSITD           ;  .    POSITION KEY POINTER
         LDB     #$14             ;  .    DRAW KEY POINTER
         LDX     #PPOINT          ;  .    .
         JSR     ZDIFFY           ;  .    .
;
         JMP     RIDL1            ;  .
;
;
;
RDLTST   LDX     #KRIDL0          ;  COMPARE RIDDLE AND KEY SETTINGS
         LDU     #RKEY0           ;  .
         LDB     #$03             ;  .
;
         LDA     ,U               ;  .    HAVE ALL THE KEYS BEEN DEFINED ?
         ADDA    1,U              ;  .    .
         ADDA    2,U              ;  .    .
         ADDA    3,U              ;  .    .
         CMPA    #$0A             ;  .    .
         LBNE    RIDL5            ;  .    .
;
RDLTS1   LDA     B,X              ;  .    COMPARE AGAINST RIDDLE SETTINGS
         CMPA    B,U              ;  .    .
         BNE     BADKEY           ;  .    .
         DECB                     ;  .    .
         BPL     RDLTS1           ;  .    .
         JMP     KEYDON           ;  .    .    KEYS MATCH RIDDLE
;
;
;
;
;  FAILED KEY TEST - DISPLAY CORRECT KEYS
;  ======================================
;
;
BADKEY   LDA     #$C8             ;  SET 'DP' = RAM
         TFR     A,DP             ;  .
         SETDP   $C8              ;  .
;
         CLR     RFLAG            ;  CLEAR DRAW REVERSE FLAG
;
         LDA     #$50             ;  SET DELAY TIMER
         STA     CBXDLY           ;  .
;
BDKEY1   JSR     INVENT           ;  DISPLAY INVENTORY PAGE OR PAUSE ?
         SETDP   $D0              ;  .    SET 'DP' = I/O
;
         JSR     INTMAX           ;  DRAW TOWER DOOR
         LDD     #$C0C4           ;  .    POSITION DOOR FRAME
         JSR     POSITD           ;  .    .
         LDB     #$E0             ;  .    DRAW TOWER DOOR FRAME
         LDX     #TWRDR1          ;  .    .
         JSR     ZDIFFY           ;  .    .
;
         JSR     INT3Q            ;  .    SET INTENSITY FOR KEY HOLE
         LDD     #$1020           ;  .    POSITION KEY HOLE
         JSR     POSITD           ;  .    .
         LDB     #$A0             ;  .    DRAW TOWER DOOR KEY-HOLE
         LDX     #TWRDR2          ;  .    .
         JSR     ZDIFFY           ;  .    .
;
         LDD     #$B290           ;  DRAW CORRECT KEYS
         STD     TEMP1            ;  .    SET INITIAL KEY SYMBOL POSITION
         LDD     #$A880           ;  .    SET INITIAL KEY MESSAGE POSITION
         STD     TEMP3            ;  .    .
         LDA     #$03             ;  .    SET KEY COUNTER
         STA     TEMP5            ;  .    .
         LDD     #$FC30           ;  .    SET RASTER MESSAGE SIZE
         STD     SIZRAS           ;  .    .
;
BDKEY2   LDD     TEMP1            ;  .    SET NEW KEY SYMBOL POSITION
         ADDB    #$2E             ;  .    .
         STD     TEMP1            ;  .    .
;
         LDD     TEMP3            ;  .    SET NEW KEY MESSAGE POSITION
         ADDB    #$2E             ;  .    .
         STD     TEMP3            ;  .    .
;
         JSR     INT3Q            ;  .    DRAW KEY SYMBOLS
         LDD     TEMP1            ;  .    .    POSITION KEY SYMBOL
         JSR     POSITD           ;  .    .    .
         LDB     #$38             ;  .    .    DRAW KEY SYMBOL
         LDX     #PKEY            ;  .    .    .
         JSR     ZDIFFY           ;  .    .    .
;
         LDX     #KRIDL0          ;  .    DOES THIS KEY MATCH RIDDLE ?
         LDA     TEMP5            ;  .    .
         LDB     A,X              ;  .    .
         LDX     #RKEY0           ;  .    .
         CMPB    A,X              ;  .    .
         BNE     BDKEY3           ;  .    .
;
         JSR     INTMAX           ;  .    DRAW KEY RASTER MESSAGE
         LDU     #KRIDL0          ;  .    .    FETCH RASTER MESSAGE FOR KEY
         LDA     TEMP5            ;  .    .    .
         LDA     A,U              ;  .    .    .
         LDU     #RK.TBL          ;  .    .    .
         ASLA                     ;  .    .    .
         LDU     A,U              ;  .    .    .
         LDD     TEMP3            ;  .    .    POSITION KEY MESSAGE
         JSR     POSITD           ;  .    .    .
         JSR     RASTER           ;  .    .    DISPLAY MESSAGE
;
BDKEY3   DEC     TEMP5            ;  .    TRY NEXT SYMBOL ?
         BPL     BDKEY2           ;  .    .
;
         DEC     CBXDLY           ;  DISPLAY TIME-OUT ?
         LBNE    BDKEY1           ;  .
;
;
         LDA     #$C8             ;  SET 'DP' = RAM
         TFR     A,DP             ;  .
         SETDP   $C8              ;  .
;
         JSR     WRKCLR           ;  CLEAR OVER-LAYED STORAGE
         JSR     GRDSCN           ;  RE-CALCULATE FOREST PROJECTIONS
         JSR     RSTGRD           ;  RESTORE RETAINED GRID VALUES
;
         PULS    Y,U,DP,PC        ;  RETURN TO CALLER
;
;
;
;
;  RIDDLE COMPLETED - SET-UP FOR VOLUME II
;  =======================================
;
;
KEYDON   LDA     #$C8             ;  SET 'DP' = RAM
         TFR     A,DP             ;  .
         SETDP   $C8              ;  .
;
         LDU     #BOXACT          ;  PASS PARAMETERS TO VOLUME II
         LDA     #$10             ;  .    SET NUMBER OF BLOCKS
         STA     TEMP2            ;  .    .
;
KYDN1    LDX     #GLDKEY          ;  .    START NEW BLOCK
         LDD     #$FF00           ;  .    .    SET START FLAG
         STD     U++              ;  .    .    .
         CLR     TEMP1            ;  .    .    CLEAR CHECK BYTE
;
KYDN2    LDA     X+               ;  .    MOVE PARAMETER TABLE
         STA     U+               ;  .    .
         ADDA    TEMP1            ;  .    .    FORM CHECK BYTE
         STA     TEMP1            ;  .    .    .
;
         CMPX    #TROOPS          ;  .    END OF BLOCK ?
         BLE     KYDN2            ;  .    .
;
         LDB     #$03             ;  .    .    SAVE ASCII GOLD VALUE
         LDY     #GOLD            ;  .    .    .
KYDN3    LDA     Y+               ;  .    .    .
         STA     U+               ;  .    .    .
         ADDA    TEMP1            ;  .    .    .
         STA     TEMP1            ;  .    .    .
         DECB                     ;  .    .    .
         BPL     KYDN3            ;  .    .    .
;
         LDB     #$03             ;  .    .    SAVE ASCII TROOPS VALUE
         LDY     #MEN             ;  .    .    .
KYDN4    LDA     Y+               ;  .    .    .
         STA     U+               ;  .    .    .
         ADDA    TEMP1            ;  .    .    .
         STA     TEMP1            ;  .    .    .
         DECB                     ;  .    .    .
         BPL     KYDN4            ;  .    .    .
;
         LDB     #$06             ;  .    .    SAVE ASCII PLAYERS SCORE
         LDY     #PLYSCR          ;  .    .    .
KYDN5    LDA     Y+               ;  .    .    .
         STA     U+               ;  .    .    .
         ADDA    TEMP1            ;  .    .    .
         STA     TEMP1            ;  .    .    .
         DECB                     ;  .    .    .
         BPL     KYDN5            ;  .    .    .
;
         LDA     TEMP1            ;  .    .    SAVE CHECK BYTE
         STA     U+               ;  .    .    .
;
         DEC     TEMP2            ;  .    DONE PASSING PARAMETERS ?
         BNE     KYDN1            ;  .    .
;
         LDU     #OPNING          ;  PLAY CLOSING TUNE
         JSR     SPLAY            ;  .
;
         LDX     #PLYSCR          ;  ADD VALUE TO PLAYERS SCORE
         LDD     #$3000           ;  .
         JSR     SCRADD           ;  .
;
         LDA     #$FF             ;  SET-UP FOR WARRIORS ENTRANCE TO TOWER
         LDB     #SZ.WAR          ;  .
         STD     TEMP8            ;  .
         CLR     TEMP10           ;  .
;
         LDD     #$E000           ;  .    SET INITIAL WARRIOR POSITION
         STD     WARYW            ;  .    .
;
;
KYDN6    JSR     INVENT           ;  DISPLAY KEY RIDDLE DONE MESSAGE
         SETDP   $D0              ;  .    SET 'DP' = I/O
;
         LDU     #RK.DON          ;  .    DRAW RASTER STRING
         JSR     DSMESS           ;  .    .
;
         LDD     #$48FF           ;  SET-UP TO DRAW DARK TOWER
         STD     DRWINT           ;  .    SET INTENSITY AND SIZE
         LDD     #$F000           ;  .    SET POSITION
         STD     TEMP1            ;  .    .
         CLR     RFLAG            ;  .    RESET DRAW REVERSE FLAG
;
         LDD     #DTWR1           ;  DRAW DARK TOWER
         LDX     #DTWR2           ;  .    FETCH DARK TOWER ADDRESSES
         LDY     #TEMP1           ;  .    FETCH SCREEN POSITION
         JSR     CDIFFY           ;  .    DRAW BOTTOM OF BOX
;
         LDA     #$C8             ;  SET 'DP' = RAM
         TFR     A,DP             ;  .
         SETDP   $C8              ;  .
;
         DEC     TEMP8            ;  DISPLAY MARCHING WARRIOR
         LDA     TEMP8            ;  .    CALCULATE NEW INTENSITY
         BMI     KYDN7            ;  .    .    WARRIOR IDLE ?
         CMPA    #$20             ;  .    .    WARRIOR ENTRANCE DONE ?
         BLE     GMDON1           ;  .    .    .
         STA     DRWINT           ;  .    .
         LDD     TEMP9            ;  .    CALCULATE NEW SIZE
         SUBD    #$0020           ;  .    .
         STD     TEMP9            ;  .    .
         STA     DRWSIZ           ;  .    .
;
         JSR     WARR9            ;  .    DISPLAY WARRIOR
         BRA     KYDN6            ;  .    .
;
;
KYDN7    LDA     #$7F             ;  DISPLAY IDLE WARRIOR
         LDB     #SZ.WAR          ;  .
         STD     DRWINT           ;  .
;
         JSR     WARR11           ;  .    DISPLAY WARRIOR
         BRA     KYDN6            ;  .    .
;
;
;
GMDON1   JSR     INVENT           ;  HANDLE GAME OVER
         SETDP   $D0              ;  .    SET 'DP' = I/O
;
         LDD     #$48FF           ;  SET-UP TO DRAW DARK TOWER
         STD     DRWINT           ;  .    SET INTENSITY AND SIZE
         LDD     #$F000           ;  .    SET POSITION
         STD     TEMP1            ;  .    .
         CLR     RFLAG            ;  .    RESET DRAW REVERSE FLAG
;
         LDD     #DTWR1           ;  DRAW DARK TOWER
         LDX     #DTWR2           ;  .    FETCH DARK TOWER ADDRESSES
         LDY     #TEMP1           ;  .    FETCH SCREEN POSITION
         JSR     CDIFFY           ;  .    DRAW BOTTOM OF BOX
;
         JSR     GAMDON           ;  HANDLE GAME DONE LOGIC
;
         BRA     GMDON1           ;  .
;
         IF      L.TWR = OFF      ;-------------------------------------------
         LIST    *                ;-------------------------------------------
         ENDIF                    ;-------------------------------------------

</pre></td></tr></table>

<br /><br />&#160;</td><td class="wd30">&#160;</td></tr>
<tr><td>&#160;</td><td>

<table class="ctr">


<tr><td class="fsrch lt"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-vectrex -->
<ins class="adsbygoogle"
     style="display:inline-block;width:468px;height:15px"
     data-ad-client="ca-pub-6853254609661254"
     data-ad-slot="7097834702"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</td><td class="fsrch rt">
<form action="http://roadsidethoughts.com/search.htm" id="cse-search-box2">
<div>
<input type="hidden" name="cx" value="partner-pub-6853254609661254:i7pisc-77z3" />
<input type="hidden" name="cof" value="FORID:10" />
<input type="hidden" name="ie" value="ISO-8859-1" />
<input type="text" name="q" size="20" />
<input type="submit" name="sa" value="Search" />
</div>
</form>
<script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box2&amp;lang=en"></script>
</td></tr>


   <tr><td class="ctr">
   <table><tr><td colspan="5"> &#160; </td></tr><tr><td colspan="5"> &#160; </td></tr><tr><td colspan="5"> &#160; </td></tr>
       <tr><td class="ctr" colspan="5"><hr class="ctr wd750 ht2"></td></tr>

   <tr><td class="fbar"><a href="http://roadsidethoughts.com/vectrex/"
               title="Return to our Vectrex home page">Home<br />Page</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/sitemap.htm"
               title="Having trouble navigating our website?  Our sitemap might help">Sitemap</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/privacy.htm"
               title="Our statement about the privacy of your visit">Privacy<br />Statement</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/terms.htm"
               title="The terms, conditions and notices that govern your use of the information from RoadsideThoughts">Terms<br />of Use</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/vectrex/feedback.htm"
               title="How to contact us">Feedback</a></td>

   </tr><tr><td class="ctr" colspan="5"><hr class="ctr wd750 ht2"></td></tr>
   </table></td></tr>


   <tr><td>&#160;</td></tr>
   <tr><td>&#160;</td></tr>
   <tr><td class="lt">
   <table class="wd100p"><tr><td class="ftn">
       <p class="ftn">Please keep in mind that we can not guarantee the accuracy or timeliness of the information
       on this website, so use with care.  We encourage you to double-check the information that is critical to you.</p>
       <p class="ftn">If you've found an error or have additional information that you would like to share,
       please don't hesitate to write. <a href="http://roadsidethoughts.com/vectrex/feedback.htm">Click here to contact us.</a></p></td>
       <td class="fcpy"><div class="fcpy"></div>Copyright 2016 <br />All Rights Reserved</td></tr>
       </table>
       </td></tr>


   <tr><td class="flm">This page was last modified: 12 Jan 2017</td></tr>
   <tr><td class="flm">By John Hall</td></tr>


   <tr><td>&#160;</td></tr></table>

&#160;</td><td>&#160;</td></tr>
</table>
</body></html>
