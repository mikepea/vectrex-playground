<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<meta name="dcterms.rights" content="Copyright 2017 &copy; Manta BlueSky, All Rights Reserved">
<link rel="stylesheet" type="text/css" href="http://roadsidethoughts.com/urst.css">
<link rel="author" href="https://plus.google.com/118279428097774141269/"/>
<script type="text/javascript">
function tdf_bof()
{ if (top.location != location) { top.location.href = document.location.href; }
}
</script>
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-16983354-1']);
_gaq.push(['_trackPageview']);

_gaq.push(['_trackPageLoadTime']);

(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src =  'http://www.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
if (document.referrer.match(/google./gi) && document.referrer.match(/cd/gi)) {
  var myString = document.referrer;
  var r = myString.match(/cd=(.*?)&/);
  var rank = parseInt(r[1]);
  var kw = myString.match(/q=(.*?)&/);
  if (kw[1].length > 0) {
    var keyWord = decodeURI(kw[1]);
  } else {
    keyWord = "(not provided)";
  }
  var p = document.location.pathname;
  _gaq.push(['_trackEvent', 'RST-GSearch', keyWord, p, rank, true]);
}
</script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" type="text/javascript"></script>
<script type="application/ld+json">
{ "@context" : "http://schema.org",
"@type" : "WebSite",
"name" : "RoadsideThoughts",
"url" : "http://roadsidethoughts.com",
"description": "A Gazetteer for the United States and Canada"
}
</script>
</head>
<body itemscope itemtype="http://schema.org/WebPage">

<table class="trst">

<tr><td class="vrst" colspan="2">&#160;<a id="top"></a>
    <a class="vrst1" href="http://roadsidethoughts.com/">From RoadsideThoughts ...</a><br />
    <a class="vrst2" href="http://roadsidethoughts.com/vectrex/">A Bit of Vectrex History</a>
    </td></tr>

<tr class="trstb"><td class="tbar" colspan="2">
    <table class="tsct">
    <tr><td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/">Introduction</a></td>
        <td class="tsct wd120"><a class="tsct" href="http://roadsidethoughts.com/vectrex/vectrex-programmers-guide.htm">Programmer's<br />Guide</a></td>
        <td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/the-rum.htm">The RUM</a></td>
        <td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/mine-storm.htm">Mine Storm</a></td>
        <td class="tsct wd120"><a class="tsct" href="http://roadsidethoughts.com/vectrex/fortress-of-narzod.htm">Fortress of<br />Narzod</a></td>
        <td class="tsct wd120"> &#160; <br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/dark-tower.htm">Dark Tower</a></td>
        <td class="vsct wd60"> &#160; </td>
        <td class="vsct wd120"> &#160; <br /><a class="tsct" href="http://roadsidethoughts.com/sitemap.htm">Sitemap</a></td>
    </tr></table></td></tr>


<tr><td class="thlk"><div class="i2"><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/' itemprop='url' title='Home page for RoadsideThoughts: A Gazetteer for the United States and Canada'><span itemprop='title'>Home</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/' itemprop='url' title='Home page for A Bit of Vectrex History'><span itemprop='title'>Vectrex</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/fortress-of-narzod.htm' itemprop='url' title='Fortress of Narzod'><span itemprop='title'>Fortress of Narzod</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/fortress-of-narzod-sound-nar.htm' itemprop='url'><span itemprop='title'> SOUND.NAR - Rev. B</span></a></span></div> &#160; </td><td class="tsrch rt"><form action="http://roadsidethoughts.com/search.htm" id="cse-search-box"><div><input type="hidden" name="cx" value="partner-pub-6853254609661254:i7pisc-77z3" /><input type="hidden" name="cof" value="FORID:10" /><input type="hidden" name="ie" value="ISO-8859-1" /><input type="text" name="q" size="20" /><input type="submit" name="sa" value="Search" /></div></form><script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script> &#160; &#160; </td></tr>

</table>

<table class="wd100p">
<tr><td class="wd40">&#160;</td><td>
<h1 class="pt">Vectrex 6809 Source Code<br /><br />Fortress of Narzod</h1><hr class="pt">

<br /><div class="ketr"><table><tr><td class="wd160 ctr"> 

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- vectrex-160x600 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-6853254609661254"
     data-ad-slot="2830915509"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

</td></tr></table></div>

<div class="vh1"><br /><h1 class="ctr">Index of Narzod Files</h1></div>

<p class="i1">The top most file for the Fortress of Narzod:</p>

<p class="i2"><a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-asm.htm">NARZOD.ASM</a></p>


<p class="i1">The associated files:</p>

<table class="i2">
<tr><td class="wd150"> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-citdel-nar.htm">CITDEL.NAR</a> </td>
    <td class="wd150"> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-gbulet-nar.htm">GBULET.NAR</a> </td>
    <td class="wd150"> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-main-nar.htm">MAIN.NAR</a> </td>
    <td class="wd150"> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-tail-nar.htm">TAIL.NAR</a> </td></tr>

<tr><td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-collide-nar.htm">COLLIDE.NAR</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-gguard-nar.htm">GGUARD.NAR</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-packs-nar.htm">PACKS.NAR</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-timers-nar.htm">TIMERS.NAR</a> </td></tr>

<tr><td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-game-nar.htm">GAME.NAR</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-gspike-nar.htm">GSPIKE.NAR</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-prspct-nar.htm">PRSPCT.NAR</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-walls-nar.htm">WALLS.NAR</a> </td></tr>

<tr><td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-gbird-nar.htm">GBIRD.NAR</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-init-nar.htm">INIT.NAR</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-sound-nar.htm">SOUND.NAR</a> </td>
    <td> &#160; </td></tr>

<tr><td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-gblast-nar.htm">GBLAST.NAR</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-killer-nar.htm">KILLER.NAR</a> </td>
    <td> <a href="http://roadsidethoughts.com/vectrex/fortress-of-narzod-subr-nar.htm">SUBR.NAR</a> </td>
    <td> &#160; </td></tr>
</table>


<br /><div class="vh1"><h1 class="ctr">SOUND.NAR - Rev. B</h1></div>

<table class="i3"><tr><td class="brd1 wd600"><pre class="pd20 lt">

;
;
         IF      L.SND = OFF      ;-------------------------------------------
         LIST    -L               ;--  SOUND  --------------------------------
         ENDIF                    ;-------------------------------------------
;
;
;
;
;  SOUND-EFFECT HANDLER
;  ====================
;
         SETDP   $C8
;        =====   ===
;
SOUND    LDA     EXPLO2           ;  BLASTER EXPLOSION PENDING ?
         LBMI    BEXPL            ;  .
         LBNE    BLUPDT           ;  .
;
         LDA     SIZZLE           ;  FORTRESS DISINTEGRATION PENDING ?
         LBNE    FRTSIZ           ;  .
;
         LDA     SHOOT            ;  IF EFFECT IS PENDING, SKIP TUNE
         ORA     OUCH             ;  .
         ORA     SQUAWK           ;  .
         ORA     EXPLO1           ;  .
         BNE     GRDOCH           ;  .
;
         JSR     REPLAY           ;  PLAY PENDING TUNE
         JMP     SNUP0            ;  .
;
;
;
;  GUARDIAN 'OUCH' HANDLER
;  =======================
;        REQUIRES CHANNEL 'A'
;
GRDOCH   CLR     TSTAT            ;  RESET PENDING TUNE
         LDA     #$FF             ;  CLEAR SOUND GENERATOR
         JSR     CLRSND           ;  .
;
         LDA     EXPLO1           ;  GUARDIAN EXPLOSION PENDING ?
         BMI     GEXPL            ;  .
         BNE     FIRING           ;  .
;
         LDB     OUCH             ;  GUARDIAN 'OUCH' PENDING ?
         BEQ     FIRING           ;  .    SKIP SOUND EFFECT ?
         BPL     GOCH1            ;  .
;
         LDA     #$10             ;  SET-UP GUARDIAN 'OUCH'
         STA     OUCH             ;  .
         LDX     #$0080           ;  .    SET BASE FREQUENCY
         STX     BASFRQ           ;  .    .
;
GOCH1    DEC     OUCH             ;  DECREMENT SOUND EFFECT TIMER
         STB     REQ5             ;  SET AMPLITUDE
         LDX     BASFRQ           ;  GET BASE FREQUENCY
         LDB     OUCH             ;  CALCULATE OFFSET TO BASE FREQUENCY
         BITB    #$01             ;
         BEQ     GOCH2            ;
         LEAX    -16,X            ;  NEGATIVE OFFSET (INCREASE IN FREQUENCY)
         BRA     GOCH3            ;
;
GOCH2    LEAX    12,X             ;  POSITIVE OFFSET (DECREASE IN FREQUENCY)
;
GOCH3    STX     BASFRQ           ;  UPDATE BASE FREQUENCY
         STX     REQC             ;  SET PITCH (CHANNEL A)
         LDA     #11111110B       ;  ENABLE CHANNEL A TONE
         ANDA    REQ6             ;
         STA     REQ6             ;
         BRA     FIRING           ;
;
;
;
;  HANDLE GUARDIAN EXPLOSION
;  =========================
;        REQUIRES CHANNEL 'A'
;
GEXPL    LDA     #$FF             ;  RESET SOUND GENERATOR
         JSR     CLRSND           ;  .
;
         LDA     #$01             ;  RESET EXPLOSION FLAG
         STA     EXPLO1           ;  .
;
         CLR     XACON            ;  ENABLE EXPLOSION
         LDA     #$80             ;  .
         STA     SATUS            ;  .
         LDU     #EXP01           ;  START GUARDIAN EXPLOSION
         JSR     EXPLOD           ;  .
;
;
;
;  BULLET FIRING SOUND HANDLER
;  ===========================
;        REQUIRES CHANNEL 'B' & 'C'
;
FIRING   LDB     SHOOT            ;  BULLET FIRING SOUND PENDING ?
         BEQ     BRDSQK           ;  .    SKIP SOUND EFFECT ?
         BPL     FIRE0A           ;  .
;
         LDA     #$10             ;  SET-UP BULLET 'FIRING' SOUND EFFECT
         STA     SHOOT            ;  .
;
FIRE0A   LDA     SQUAWK           ;  HAS WAR-BIRD CRY STARTED ?
         BMI     FIRE0B           ;  .
         CLR     SQUAWK           ;  .    IF SO, RESET CRY
;
FIRE0B   DEC     SHOOT            ;  DECREMENT SOUND EFFECT TIMER
         CMPB    #10              ;  IF &gt; 10, THEN VALUE BECOMES VOLUME (RAMP DOWN)
         BHS     FIRE2            ;
         CMPB    #7               ;  IF &gt; 7 AND &lt; 10, THEN RAMP UP
         BHS     FIRE1            ;
         LSLB                     ;  IF &lt; 7 THEN SLOW RAMP DOWN
         BRA     FIRE2            ;
;
FIRE1    LDB     #16              ;  RAMP UP
         SUBB    SHOOT            ;  .
;
FIRE2    STB     REQ4             ;  SET AMPLITUDES
         STB     REQ3             ;  .
         LDA     #$18             ;  SET PITCH (CHANNEL B)
         MUL                      ;  .
         STD     REQA             ;  .
         LDB     #16              ;  SET NOISE PERIOD
         SUBB    SHOOT            ;  .
         STB     REQ7             ;  .
         LDA     #$24             ;  SET PITCH (CHANNEL B)
         MUL                      ;  .
         STD     REQ8             ;  .
;
;==========================================================================JJH
;        LDA     #11101001B       ;  CODE DELETED - REV. B CHANGES   ======JJH
;==========================================================================JJH
;
         LDA     #11111001B       ;  ENABLE CHANNEL B AND C TONE
         ANDA    REQ6             ;  .     AND CHANNEL B NOISE
         STA     REQ6             ;  .     .
         JMP     SNUPDT           ;  .
;
;
;
;  WAR-BIRD SQUAWK HANDLER
;  =======================
;        REQUIRES CHANNEL 'B' & 'C'
;
BRDSQK   LDB     CBRD             ;  ARE BIRDS ACTIVE ON SCREEN ?
         BNE     SQWK0C           ;  .
         CLR     SQUAWK           ;  .    NO BIRD ACTIVE - RESET SQUAWK
         BRA     SQWK1            ;  .    .
;
SQWK0C   LDB     SQUAWK           ;  BIRD SQUAWK PENDING ?
         BEQ     SQWK1            ;  .    SKIP SOUND EFFECT ?
         BPL     SQWK0A           ;  .
;
         LDA     #$20             ;  INITIALIZE BIRD-SQUAWK
         STA     SQUAWK           ;  .
;
SQWK0A   DEC     SQUAWK           ;
         LDA     FRAME            ; SET AMPLITUDE TO TIMER VALUE EVERY OTHER FRAME
         BITA    #$01             ;
         BEQ     SQWK0            ;
         CLRB                     ; SET AMPLITUEE TO 0 EVERY OTHER FRAME
;
SQWK0    ASRB                     ; DIVIDE BY 2
         STB     REQ4             ; SET AMPLITUDES
         STB     REQ3             ;
         LDA     #11111001B       ; ENABLE CHANNEL B AND C TONE
         ANDA    REQ6             ;
         STA     REQ6             ;
         LDA     #$20             ; CALCULATE DESCENDING TONES
         SUBA    SQUAWK           ;
         LDB     #8               ; &lt;-- CHANGES OVERALL PITCH: SMALLER IS HIGHER
         MUL                      ;
         ADDD    #$0080           ; &lt;-- CHANGES OVERALL PITCH: SMALLER IS HIGHER
         STD     REQA             ;
         ADDD    #$0050           ; &lt;-- CHANGES DISTANCE BETWEEN LOWER AND HIGHER
         STD     REQ8             ;
;
SQWK1    BRA     SNUPDT           ;
;
;
;
;  FORTESS DISINTEGRATION SOUND HANDLER
;  ====================================
;        REQUIRES ALL CHANNELS
;
FRTSIZ   CMPA    #$01             ;  FIRST PASS ?
         BNE     SIZL0            ;  .
         CLR     SIZCNT           ;  CLEAR 'SIZCNT' ON FIRST PASS
;
;
SIZL0    LDB     SIZZLE           ;
         LDA     SIZCNT           ; IF SIZCNT IS CLEAR, CONTINUE WITH RAMP 
         BNE     SIZL2            ;
         CMPB    #$80             ; CHECK TO SEE IF AT CENTER OF RAMP (TOP)
         BNE     SIZL1            ;   IF NOT, CONTINUE WITH RAMP
         LDA     #$48             ; IF AT TOP OF RAMP, INITIALIZE SIZCNT TO
         STA     SIZCNT           ;    DELAY BEFORE STARTING DOWN.
;
SIZL1    INC     SIZZLE           ; NORMAL INCREMENT OF RAMP/TIMER VALUE
;
SIZL2    DEC     SIZCNT           ; DECREMENT SIZCNT
         BPL     SIZL3            ;   
         CLR     SIZCNT           ; LIMIT SIZCNT AT 0
;
SIZL3    LDA     #$FF             ; CLEAR ALL CHANNELS
         BSR     CLRSND           ;
         ASRB                     ; CALCULATE AMPLITUDE RAMP
         ASRB                     ;
         ASRB                     ;
         JSR     ABSB             ; ALWAYS POSITIVE THROUGH 256 VALUES
         CMPB    #$0F             ; CANNOT ALLOW TO BE &gt; 15
         BLS     SIZL4            ;
         DECB                     ; 16 BECOMES 15
;
SIZL4    STB     REQ5             ; SET AMPLITUDES 
         STB     REQ4             ;
         STB     REQ3             ;
         STB     REQ7             ; AND NOISE PERIOD
         LDD     #$0100           ; SET PITCHES:
         STD     REQC             ;
         SUBD    #$0070           ; RELETIVELY RANDOM PITCHES    
         STD     REQA             ;   (I THINK THEY ARE EIRRIE)  
         SUBD    #$0030           ;
         STD     REQ8             ;
         LDA     #11001000B       ; ENABLE ALL REGISTERS' TONES,
         ANDA    REQ6             ;   AND CHANNEL B AND C NOISE
         STA     REQ6             ;        
         BRA     SNDRST           ;
;
;
;
;  HANDLE BLASTER EXPLOSION
;  ========================
;        REQUIRES ALL CHANNELS
;
BEXPL    LDA     #$FF             ;  RESET SOUND GENERATOR
         BSR     CLRSND           ;  .
;
         LDA     #$01             ;  RESET EXPLOSION FLAG
         STA     EXPLO2           ;  .
;
         CLR     XACON            ;  ENABLE EXPLOSION
         LDA     #$80             ;  .
         STA     SATUS            ;  .
         LDU     #EXP02           ;  START BLASTER EXPLOSION
         JSR     EXPLOD           ;  .
;
BLUPDT   CLR     SHOOT            ;  RESET PENDING SOUND EFFECTS
         CLR     OUCH             ;  .
         CLR     SQUAWK           ;  .
         CLR     SIZZLE           ;  .
         CLR     EXPLO1           ;  .
;
;
SNUPDT   JSR     EXPLOD           ;  UPDATE EXPLOSION SOUND
;
         LDA     XACON            ;  ARE EXPLOSIONS DONE ?
         BNE     SNUP0            ;  .
;
SNDRST   CLR     EXPLO1           ;  .    RESET EXPLOSION FLAGS
         CLR     EXPLO2           ;  .    .
         CLR     SATUS            ;  .    .
;
SNUP0    PSHS    DP               ;  UPDATE SOUND GENERATOR
         LDA     #$D0             ;  .    SET 'DP' TO I/O
         TFR     A,DP             ;  .    .
         JSR     REQOUT           ;  .    UPDATE SOUND CHIP
         PULS    DP,PC            ;  .    .
;
;
;
;
;  CLEAR SOUND GENERATION PARAMETERS
;  =================================
;
;        ENTRY VALUES
;        ------------
;           A  = BIT 7 = CLEAR ALL SOUND REGISTERS
;                    2 = CLEAR CHANNEL 'C' ONLY
;                    1 = CLEAR CHANNEL 'B' ONLY
;                    0 = CLEAR CHANNEL 'A' ONLY
;
CLRSND   PSHS    D,X,U            ; SAVE ENTRY VALUES
         CLR     TSTAT            ; STOP SONG IF GOING
         TSTA                     ; IF A &lt; 0, THEN CLEAR ALL REGISTERS
         BPL     CLSND0           ;
         JSR     INTREQ           ; RESET ALL REGISTERS
         PULS    D,X,U,PC         ; RETURN
;
CLSND0   ANDA    #00000111B       ; LOWER THREE BITS SIGNIFICANT
         TFR     A,B              ;
         PSHS    D                ; SAVE 2 COPIES ON STACK
         LSLA                     ; SHIFT LEFT 3 TIMES TO SET CORROSPONDING 
         LSLA                     ; NOISE CONTROL BIT
         LSLA                     ;
         ORA     S+               ; REASSEMBLE WHOLE BYTE
         ORA     REQ6             ; 
         STA     REQ6             ; SET BITS IN CONTROL REGISTER
         LDX     #REQ0            ; X --&gt; SOUND CHIP MIRROR REGISTERS
         CLR     X+               ; CLEAR ENVELOPE TYPE         (ALL CHANNELS)
         CLR     X+               ; CLEAR ENVELOPE PERIOD (MSB) (ALL CHANNELS)
         CLR     X+               ; CLEAR ENVELOPE PERIOD (LSB) (ALL CHANNELS)
         CLR     REQ7             ; CLEAR NOISE PERIOD
         LDU     #REQ8            ; U --&gt; CHANNEL C PITCH (MSB)
         PULS    A                ; RETRIEVE OTHER COPY OF ENTRY BIT MASK
         LDB     #2               ; B = 2 -- COUNTER AND INDEX OFFSET VALUE
;
CLSND1   LSRA                     ; CHECK FOR BITS SET
         BCC     CLSND2           ;
         CLR     B,X              ; CLEAR AMPLITUDE
         LSLB                     ; * 2 FOR OFFSET
         CLR     B,U              ; CLEAR PITCH (MSB)
         INCB                     ;   - NEXT -
         CLR     B,U              ; CLEAR PITCH (LSB)
         DECB                     ; FASTER THAN A PUSH AND PULL
         LSRB                     ;
;
CLSND2   DECB                     ; AGAIN FOR ALL 3 BITS (CHANNELS)
         BPL     CLSND1           ;
;
         PULS    D,X,U,PC         ; RESTORE ENTRY X REG AND RETURN
;
;
;
;
;  EXPLOSION PARAMETERS
;  ====================
;
EXP01    DB      $08,$FF,$00,$02  ;  GUARDIAN EXPLOSION
;
EXP02    DB      $3F,$00,$00,$01  ;  BLASTER EXPLOSION
;
;
;
;
;  OPENING TUNE
;  ============
;
        TEMPO   60,6
;
WAGNER   DW      $FEE8            ; FADE CONTROL
         DW      $FEB6            ; VIBRATO CONTROL
         DB      A2 OR $80
         DB      E3 OR $80
         DB      A4,:DOT4
         DB      A2 OR $80
         DB      E3 OR $80
         DB      E4,:8TH
         DB      A2 OR $80
         DB      E3 OR $80
         DB      A4,:QRTR
         DB      A2 OR $80
         DB      E3 OR $80
         DB      C5,:QRTR*3
         DB      A2 OR $80
         DB      E3 OR $80
         DB      A4,:QRTR*3 
         DB      C3 OR $80
         DB      A3 OR $80
         DB      C5,:DOT4  
         DB      C3 OR $80
         DB      A3 OR $80
         DB      A4,:8TH   
         DB      C3 OR $80
         DB      A3 OR $80
         DB      C5,:QRTR  
         DB      C3 OR $80
         DB      A3 OR $80
         DB      E5,:QRTR*3
         DB      C3 OR $80
         DB      A3 OR $80
         DB      C5,:QRTR*3
         DB      G3 OR $80
         DB      C3 OR $80
         DB      E5,:DOT4  
         DB      G3 OR $80
         DB      C3 OR $80
         DB      C5,:8TH   
         DB      G3 OR $80
         DB      C3 OR $80
         DB      E5,:QRTR  
         DB      G3 OR $80
         DB      C3 OR $80
         DB      G5,:QRTR*3
         DB      G3 OR $80
         DB      B3 OR $80
         DB      G4,:QRTR*3
         DB      C4 OR $80
         DB      E3 OR $80
         DB      C5,:DOT4  
         DB      C4 OR $80
         DB      E3 OR $80
         DB      G4,:8TH   
         DB      C4 OR $80
         DB      E3 OR $80
         DB      C5,:QRTR          
         DB      C4 OR $80
         DB      E3 OR $80
         DB      E5,:QRTR*10
         DB      E5,$80
;
;
;
;
;  CALL TO ARMS
;  ============
;
        TEMPO   30,2
;
GRDTUN   DW      $FDC3            ; FADE CONTROL
         DW      VIBENL           ; VIBRATO CONTROL
         DB      AS5 OR $80
         DB      AS4 OR $80
         DB      AS3,:QRTR
         DB      AS5 OR $80
         DB      AS4 OR $80
         DB      AS3,:TRPLT
         DB      AS5 OR $80
         DB      AS4 OR $80
         DB      AS3,:TRPLT
         DB      AS5 OR $80
         DB      AS4 OR $80
         DB      AS3,:TRPLT
         DB      F6 OR $80
         DB      F5 OR $80
         DB      F4,$7F
         DB      F5,$80
;
;
         IF      L.SND = OFF      ;-------------------------------------------
         LIST    *                ;-------------------------------------------
         ENDIF                    ;-------------------------------------------

</pre></td></tr></table>

<br /><br />&#160;</td><td class="wd30">&#160;</td></tr>
<tr><td>&#160;</td><td>

<table class="ctr">


<tr><td class="fsrch lt"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-vectrex -->
<ins class="adsbygoogle"
     style="display:inline-block;width:468px;height:15px"
     data-ad-client="ca-pub-6853254609661254"
     data-ad-slot="7097834702"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</td><td class="fsrch rt">
<form action="http://roadsidethoughts.com/search.htm" id="cse-search-box2">
<div>
<input type="hidden" name="cx" value="partner-pub-6853254609661254:i7pisc-77z3" />
<input type="hidden" name="cof" value="FORID:10" />
<input type="hidden" name="ie" value="ISO-8859-1" />
<input type="text" name="q" size="20" />
<input type="submit" name="sa" value="Search" />
</div>
</form>
<script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box2&amp;lang=en"></script>
</td></tr>


   <tr><td class="ctr">
   <table><tr><td colspan="5"> &#160; </td></tr><tr><td colspan="5"> &#160; </td></tr><tr><td colspan="5"> &#160; </td></tr>
       <tr><td class="ctr" colspan="5"><hr class="ctr wd750 ht2"></td></tr>

   <tr><td class="fbar"><a href="http://roadsidethoughts.com/vectrex/"
               title="Return to our Vectrex home page">Home<br />Page</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/sitemap.htm"
               title="Having trouble navigating our website?  Our sitemap might help">Sitemap</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/privacy.htm"
               title="Our statement about the privacy of your visit">Privacy<br />Statement</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/terms.htm"
               title="The terms, conditions and notices that govern your use of the information from RoadsideThoughts">Terms<br />of Use</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/vectrex/feedback.htm"
               title="How to contact us">Feedback</a></td>

   </tr><tr><td class="ctr" colspan="5"><hr class="ctr wd750 ht2"></td></tr>
   </table></td></tr>


   <tr><td>&#160;</td></tr>
   <tr><td>&#160;</td></tr>
   <tr><td class="lt">
   <table class="wd100p"><tr><td class="ftn">
       <p class="ftn">Please keep in mind that we can not guarantee the accuracy or timeliness of the information
       on this website, so use with care.  We encourage you to double-check the information that is critical to you.</p>
       <p class="ftn">If you've found an error or have additional information that you would like to share,
       please don't hesitate to write. <a href="http://roadsidethoughts.com/vectrex/feedback.htm">Click here to contact us.</a></p></td>
       <td class="fcpy"><div class="fcpy"></div>Copyright 2016 <br />All Rights Reserved</td></tr>
       </table>
       </td></tr>


   <tr><td class="flm">This page was last modified: 12 Jan 2017</td></tr>
   <tr><td class="flm">By John Hall</td></tr>


   <tr><td>&#160;</td></tr></table>

&#160;</td><td>&#160;</td></tr>
</table>
</body></html>
