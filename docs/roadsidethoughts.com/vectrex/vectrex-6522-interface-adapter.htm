<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
<head>
<meta charset="UTF-8">
<meta name="dcterms.rights" content="Copyright 2017 &copy; Manta BlueSky, All Rights Reserved">
<link rel="stylesheet" type="text/css" href="http://roadsidethoughts.com/urst.css">
<link rel="author" href="https://plus.google.com/118279428097774141269/"/>
<script type="text/javascript">
function tdf_bof()
{ if (top.location != location) { top.location.href = document.location.href; }
}
</script>
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-16983354-1']);
_gaq.push(['_trackPageview']);

_gaq.push(['_trackPageLoadTime']);

(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src =  'http://www.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
if (document.referrer.match(/google./gi) && document.referrer.match(/cd/gi)) {
  var myString = document.referrer;
  var r = myString.match(/cd=(.*?)&/);
  var rank = parseInt(r[1]);
  var kw = myString.match(/q=(.*?)&/);
  if (kw[1].length > 0) {
    var keyWord = decodeURI(kw[1]);
  } else {
    keyWord = "(not provided)";
  }
  var p = document.location.pathname;
  _gaq.push(['_trackEvent', 'RST-GSearch', keyWord, p, rank, true]);
}
</script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" type="text/javascript"></script>
<script type="application/ld+json">
{ "@context" : "http://schema.org",
"@type" : "WebSite",
"name" : "RoadsideThoughts",
"url" : "http://roadsidethoughts.com",
"description": "A Gazetteer for the United States and Canada"
}
</script>
</head>
<body itemscope itemtype="http://schema.org/WebPage">

<table class="trst">

<tr><td class="vrst" colspan="2">&#160;<a id="top"></a>
    <a class="vrst1" href="http://roadsidethoughts.com/">From RoadsideThoughts ...</a><br />
    <a class="vrst2" href="http://roadsidethoughts.com/vectrex/">A Bit of Vectrex History</a>
    </td></tr>

<tr class="trstb"><td class="tbar" colspan="2">
    <table class="tsct">
    <tr><td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/">Introduction</a></td>
        <td class="tsct wd120"><a class="tsct" href="http://roadsidethoughts.com/vectrex/vectrex-programmers-guide.htm">Programmer's<br />Guide</a></td>
        <td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/the-rum.htm">The RUM</a></td>
        <td class="tsct wd120"> &#160;<br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/mine-storm.htm">Mine Storm</a></td>
        <td class="tsct wd120"><a class="tsct" href="http://roadsidethoughts.com/vectrex/fortress-of-narzod.htm">Fortress of<br />Narzod</a></td>
        <td class="tsct wd120"> &#160; <br /><a class="tsct" href="http://roadsidethoughts.com/vectrex/dark-tower.htm">Dark Tower</a></td>
        <td class="vsct wd60"> &#160; </td>
        <td class="vsct wd120"> &#160; <br /><a class="tsct" href="http://roadsidethoughts.com/sitemap.htm">Sitemap</a></td>
    </tr></table></td></tr>


<tr><td class="thlk"><div class="i2"><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/' itemprop='url' title='Home page for RoadsideThoughts: A Gazetteer for the United States and Canada'><span itemprop='title'>Home</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/' itemprop='url' title='Home page for A Bit of Vectrex History'><span itemprop='title'>Vectrex</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/vectrex-programmers-guide.htm' itemprop='url' title='Programmers Guide'><span itemprop='title'>Programmer's Guide</span></a> &gt;&gt; </span><span itemscope itemtype='http://data-vocabulary.org/Breadcrumb'><a href='http://roadsidethoughts.com/vectrex/vectrex-6522-interface-adapter.htm' itemprop='url'><span itemprop='title'> 6522 Interface Adapter (PIA)</span></a></span></div> &#160; </td><td class="tsrch rt"><form action="http://roadsidethoughts.com/search.htm" id="cse-search-box"><div><input type="hidden" name="cx" value="partner-pub-6853254609661254:i7pisc-77z3" /><input type="hidden" name="cof" value="FORID:10" /><input type="hidden" name="ie" value="ISO-8859-1" /><input type="text" name="q" size="20" /><input type="submit" name="sa" value="Search" /></div></form><script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script> &#160; &#160; </td></tr>

</table>

<table class="wd100p">
<tr><td class="wd40">&#160;</td><td>
<h1 class="pt">Vectrex Programmer's Guide<br /><br />6522 Interface Adapter (PIA)</h1><hr class="pt">

<div class="vh1"><h1 class="ctr">6522 PIA Register Map</h1></div>

<br /><div class="ketr"><table><tr><td class="wd160 ctr"> 

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- vectrex-160x600 -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px"
     data-ad-client="ca-pub-6853254609661254"
     data-ad-slot="2830915509"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

</td></tr></table></div>

<p>The 6522 Programmable Interface Adapter has been mapped to the following addresses:</p>


<br /><table class="i3"><tr><td class="ctr"><b><u>Address</u></b></td><td class="wd20"> &#160; </td><td><b><u>Description</u></b></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D000 &#160; </td><td> &#160; </td><td><a href="#cntrl">8-bit port 'B' (Control bits)  [CNTRL]</a></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D001 &#160; </td><td> &#160; </td><td><a href="#dac">8-bit port 'A' (DAC and PSG data)  [DAC]</a></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D002 &#160; </td><td> &#160; </td><td><a href="#ddac">Port 'B' direction control  [DCNTRL]</a></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D003 &#160; </td><td> &#160; </td><td><a href="#ddac">Port 'A' direction control  [DDAC]</a></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D004 - 07 &#160; </td><td> &#160; </td><td><a href="#timer1">Timer #1  [T1LOLC, T1HOC, T1LOL, T1HOL]</a></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D008 - 09 &#160; </td><td> &#160; </td><td><a href="#timer2">Timer #2  [T2LOLC, T2HOC]</a></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D00A &#160; </td><td> &#160; </td><td><a href="#shift">Shift register  [SHIFT]</a></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D00B &#160; </td><td> &#160; </td><td><a href="#acntrl">Auxiliary control register [ACNTRL]</a></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D00C &#160; </td><td> &#160; </td><td><a href="#pcntrl">Peripheral control register [PCNTRL]</a></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D00D &#160; </td><td> &#160; </td><td><a href="#iflag">Interrupt flag register  [IFLAG]</td></a></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D00E &#160; </td><td> &#160; </td><td><a href="#ienabl">Interrupt enable register  [IENABL]</a></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D00F &#160; </td><td> &#160; </td><td>ORA</td></tr>
</table>


<div class="vh1"><h1 id="ddac" class="ctr">Port 'A' / 'B' Direction Registers [DDAC & DCNTRL]</h1></div>

<p class="i1">The 'A' direction register [DDAC] controls the direction of data flow for the 'A' data port [DAC].</p>

<p class="i1">The 'B' direction register [DCNTRL] controls the direction of data flow for the 'B' data port [CNTRL].</p>

<p class="i1">Data flow direction is determined on a bit-by-bit basis.  A 0 in a bit of the data direction register causes the corresponding data port 
pin to act as an input. A 1 causes the pin to act as an output.</p>


<div class="vh1"><h1 id="dac" class="ctr">Port 'A' Data - DAC and PSG data [DAC]</h1></div>

<p class="i1">When outputting data to the DAC, the data byte placed in the port 'A' data register is in a two's complement format (bit 6 of the data byte 
is the high order bit with bit 0 being the lowest.  Bit 7 of the data byte is used for the sign).  Therefore, the minimum hex value to the DAC is $80; 
$00 is the centre point and $7F is the maximum.</p>

<p class="i1">When passing data with the programmable sound generator, the data direction will have to be set according to the type of transfer.</p>


<div class="vh1"><h1 id="cntrl" class="ctr">Port 'B' Data - Vectrex Hardware Control [CNTRL]</h1></div>

<br /><table class="i3"><tr><td class="ctr wd50"><b><u>Bit</u></b></td><td class="wd20"> &#160; </td><td><b><u>Description</u></b></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> 0 </td><td> &#160; </td><td>Sample / Hold strobe<br />
   <p class="i2">Normally high (binary 1). Setting low (binary 0) will strobe DAC value thru the multiplexer to selected sample / hold.</p>
   <p class="i2">Minimum strobe time = Unknown</p>
   </td></tr>

<tr><td class="ctr"> 2 - 1 </td><td> &#160; </td><td>Analog multiplexer select<br />
   <p class="i2">Switch 'A'
   <table class="i3"><tr><td>00 - 'Y' axis sample / hold</td></tr>
   <tr><td>01 &#160; - &#160; Active ground</td></tr>
   <tr><td>10 &#160; - &#160; Intensity sample / hold</td></tr>
   <tr><td>11 &#160; - &#160; CPU sound</td></tr></table></p>

   <p class="i2">Switch 'B'
   <table class="i3"><tr><td>00 &#160; - &#160; Controller #1: Right / Left joystick (POT0)</td></tr>
   <tr><td>01 &#160; - &#160; Controller #1: Up / Down joystick (POT1)</td></tr>
   <tr><td>10 &#160; - &#160; Controller #2: Right / Left joystick (POT2)</td></tr>
   <tr><td>11 &#160; - &#160; Controller #2: Up / Down joystick (POT3)</td></tr></table></p>
   <p class="i2">Settling time = Take a guess, everybody else did</p>
   </td></tr>

<tr><td class="ctr"> 3 </td><td> &#160; </td><td>Sound generator, term 'BC1'<br />
   <p class="i2">Register select for sound generator</p>
   </td></tr>

<tr><td class="ctr"> 4 </td><td> &#160; </td><td>Sound generator, term 'BDIR'<br />
   <p class="i2">Write control for sound generator

   <table class="i2"><tr><td class="ctr wd40"> <u>BC1</u> </td><td class="ctr wd40"> <u>BDIR</u> </td><td><u>Register</u></td></tr>
   <tr><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td>No select</td></tr>
   <tr><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td>Write to PSG data register</td></tr>
   <tr><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td>Read from PSG data register</td></tr>
   <tr><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td>Write address latch</td></tr></table></p>
   <p class="i2">Settling time = Unknown</p>
   </td></tr>

<tr><td class="ctr"> 5 </td><td> &#160; </td><td>Analog compare term (Input to 6522)<br />
   <p class="i2">This signal results from the analog comparsion of the selected joystick pot versus the current setting of the DAC.
   (If this term is high, the voltage of the DAC is greater than the voltage of POTx).</p>
   <p class="i2">Settling time = Unknown - no consensus</p>
   </td></tr>

<tr><td colspan="3"> &#160; </td></tr>
<tr><td class="ctr"> 6 </td><td> &#160; </td><td>Available to cartridge connector</td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> 7 </td><td> &#160; </td><td>Integrator ramp
   <p class="i2">Normally high (binary 1). While low (binary 0), the integration ramp will occur. The Vectrex executive configures
   the 6522 so that this term is controlled by Timer #1 (low while counting, returns to high when down-counted pass zero).</p></td></tr>

</table>


<div class="vh1"><h1 id="acntrl" class="ctr">Auxiliary Control Register [ACNTRL]</h1></div>

   <table class="i3"><tr><td class="ctr wd50"><b><u>Bits</u></b></td><td class="wd20"> &#160; </td><td><b><u>Description</u></b></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td> &#160; </td><td>Refer to Port 'A' description</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td> &#160; </td><td>Refer to Port 'B' description</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 4 - 2 </td><td> &#160; </td><td><a href="#shift">Refer to Shift register description</a></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 5 </td><td> &#160; </td><td><a href="#timer1">Refer to Timer #2 description</a></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 7 - 6 </td><td> &#160; </td><td><a href="#timer2">Refer to Timer #1 description</a></td></tr></table>


<div class="vh1"><h1 id="pcntrl" class="ctr">Peripheral Control Register [PCNTRL]</h1></div>

   <table class="i3"><tr><td class="ctr wd50"><b><u>Bits</u></b></td><td class="wd20"> &#160; </td><td><b><u>Description</u></b></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 3 - 0 &#160; </td><td> &#160; </td><td><a href="#ca1_2">Refer to Port 'A' handshake controls</a></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 7 - 4 &#160; </td><td> &#160; </td><td><a href="#cb1_2">Refer to Port 'B' handshake controls</a></td></tr></table>


<div class="vh1"><h1 id="ca1_2" class="ctr">Port 'A' Handshake Controls (CA1 / 2)</h1></div>

<p class="i1">CA1 is connected directly to button #4 of controller #2. It is on this pin that the light pen status is brought into the Vectrex.</p>

<p class="i1">Driving CA2 low zeroes the integrators (Settling time is unknown).  The integrators are normally clamped (zeroed) when exiting one of the 
executive drawing routines. The integrators must be released prior to ramping (this can be done by positioning the icon prior to drawing it).</p>

   <br /><table class="i3"><tr><td class="ctr wd40"><b> PCNTRL <br /><u>Bit 0</u></b></td>
   <td class="wd20"> &#160; </td><td><br /><b><u>Description</u></b></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td> &#160; </td><td>The CA1 interrupt flag (IFR1) will be set on a negative transition of the CA1 input pin.</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td> &#160; </td><td>The CA1 interrupt flag (IFR1) will be set on a positive transition of the CA1 input pin.

   <p>The CA1 interrupt flag (IFR1) will be cleared on a read or write of the Port 'A' data register.</p></td></tr></table>

   <br /><br /><table class="i3"><tr><td class="ctr" colspan="3"> <b> PCNTRL Bits</b> </td><td colspan="2"> &#160; </td></tr>
   <tr><td class="ctr wd40"> <b><u>3</u></b> </td><td class="ctr wd40"> <b><u>2</u></b> </td><td class="ctr wd40"> <b><u>1</u></b> </td>
   <td class="wd20"> &#160; </td><td><b><u>Description</u></b></td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Interrupt input mode - Set CA2 interrupt flag (IFR0) 
on a negative transition of the CA2 input pin.  Clear the interrupt flag (IFR0) on a read or write of the Port 'A' data register.</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Independent interrupt input mode - Set CA2 interrupt 
flag (IFR0) on a negative transition of the CA2 input pin.  Reading or writing of the Port 'A' data register does not affect the status of the interrupt 
flag (IFR0).</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Interrupt input mode - Set CA2 interrupt flag (IFR0) 
on a positive transition of the CA2 input pin.  Clear the interrupt flag (IFR0) on a read or write of the Port 'A' data register.</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Independent interrupt input mode - Set CA2 interrupt 
flag (IFR0) on a positive transition of the CA2 input pin.  Reading or writing of the Port 'A' data register does not affect the status of the interrupt 
flag (IFR0).</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Handshake output mode - Set CA2 output pin low on a 
read or write of the Port 'A' data register.  Reset CA2 pin to high with an active transition of the CA1 input pin.</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Pulse output mode - CA2 goes low for one cycle 
following a read or write of the Port 'A' data register.</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Manual output mode - The CA2 output is held low in 
this mode.</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Manual output mode - The CA2 output is held high in 
this mode.</td></tr></table>


<div class="vh1"><h1 id="cb1_2" class="ctr">Port 'B' Handshake Controls (CB1 / 2)</h1></div>

<p class="i1">The term CB1 is not currently connected.</p>

<p class="i1">Driving CB2 low, blanks the video output (over-riding the shift register's control over video on - off). The executive does not use this 
control, buts does set it high during initialization.</p>


<br /><table class="i3"><tr><td class="ctr wd40"> <b>PCNTRL <br /><u>Bit 4</u></b></td>
   <td class="wd20"> &#160; </td><td><br /><b><u>Description</u></b></td></tr><tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td> &#160; </td><td>The CB1 interrupt flag (IFR4) will be set on a negative transition of the CB1 input pin.</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td> &#160; </td><td>The CB1 interrupt flag (IFR4) will be set on a positive transition of the CB1 input pin.

   <p>The CB1 interrupt flag (IFR4) will be cleared on a read or write of the Port 'B' data register.</p></td></tr></table>


   <br /><br /><table class="i3"><tr><td class="ctr" colspan="3"> <b>PCNTRL Bits</b> </td><td colspan="2"> &#160; </td></tr>
   <tr><td class="ctr wd40"> <b><u>7</u></b> </td><td class="ctr wd40"> <b><u>6</u></b> </td><td class="ctr wd40"> <b><u>5</u></b> </td>
   <td class="wd20"> &#160; </td><td><b><u>Description</u></b></td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Interrupt input mode - Set CB2 interrupt flag (IFR3) 
on a negative transition of the CB2 input pin.  Clear the interrupt flag (IFR3) on a read or write of the Port 'B' data register.</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Independent interrupt input mode - Set CB2
                                   interrupt flag (IFR3) on a negative transition of the CB2 input pin.  Reading or writing of the Port 'B' data register 
does not affect the status of the interrupt flag (IFR3).</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Interrupt input mode - Set CB2 interrupt flag (IFR3) 
on a positive transition of the CB2 input pin.  Clear the interrupt flag (IFR3) on a read or write of the Port 'B' data register.</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Independent interrupt input mode - Set CB2 interrupt 
flag (IFR3) on a positive transition of the CB2 input pin.  Reading or writing of the Port 'B' data register does not affect the status of the interrupt 
flag (IFR3).</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Handshake output mode - Set CB2 output pin low on a 
read or write of the Port 'B' data register.  Reset CB2 pin to high with an active transition of the CB1 input pin.</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Pulse output mode - CB2 goes low for one cycle 
following a read or write of the Port 'B' data register.</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Manual output mode - The CB2 output is held low in 
this mode.</td></tr>
<tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Manual output mode - The CB2 output is held high in 
this mode.</td></tr></table>


<div class="vh1"><h1 id="timer1" class="ctr">Timer #1</h1></div>

<table class="i3"><tr><td class="ctr"> &#160; <b><u>Addr</u></b> &#160; </td><td> &#160; <b><u>Label</u></b> &#160; </td>
   <td><b><u>Description</u></b></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D004 &#160; </td><td class="ctr"> &#160; T1LOLC &#160; </td><td>Write into low order latch
   <p>Read from low-order counter and reset interrupt</p></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D005 &#160; </td><td class="ctr"> &#160; T1HOC &#160; </td><td>Write into high-order latch, transfer latches to counter and 
reset interrupt
   <p>Read from high-order counter</p></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D006 &#160; </td><td class="ctr"> &#160; T1LOL &#160; </td><td>Write into low-order latch
   <p>Read from low-order latch</p></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D007 &#160; </td><td class="ctr"> &#160; T1HOL &#160; </td><td>Write into high-order latch and reset timer #1 interrupt
   <p>Read from high-order latch</p></td></tr></table>


   <br /><br /><table class="i3"><tr><td class="ctr" colspan="2"> <b>ACNTRL Bits</b> </td><td colspan="2"> &#160; </td></tr>
   <tr><td class="ctr wd40"> <b><u>7</u></b> </td><td class="ctr wd40"> <b><u>6</u></b> </td>
   <td class="wd20"> &#160; </td><td><b><u>Description</u></b></td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 0 <td> &#160; </td><td>Generate a single time-out interrupt each time timer #1 is loaded.  Output pin PB7 
is disabled.</td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 1<td> &#160; </td><td>Generate continuous interrupts.  Output pin PB7 is disabled.</td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 0<td> &#160; </td><td>Generate a single interrupt and an output pulse on pin PB7 for timer #1 load 
operation.</td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 1<td> &#160; </td><td>Generate continuous interrupts and a square wave output on pin 
PB7.</td></tr></table>


<br /><p class="i1">One-shot Mode</p>

<p class="i3">The one-shot mode allows generation of a single interrupt each time a load operation occurs. In addition to generating a single interrupt, 
Timer #1 can be programmed to produce a single negative pulse on the PB7 peripheral pin. With the output enabled (ACNTRL7 = 1), a write to location $D005 
[T1HOC] will cause PB7 to go low. PB7 will return high when Timer #1 counts down to zero. For PB7 to act as the output of Timer #1, both the direction 
register for Port 'B' (bit 7) and the auxiliary control register (bit 7) must be set (e.g. - DCNTRL7 = 1 .and. ACNTRL7 = 1).</p>

<p class="i3">It is necessary to assure that the low order latch contains the proper data before initiating the count-down by writing to location $D005 
[T1HOC]. When starting the down-count, the interrupt flag is cleared, the contents of the low-order latch will be transferred into the low-order counter 
and the timer will begin to decrement at the system clock rate. If the PB7 output is enabled, this signal will go low on the phase two following the 
write operation.</p>

<p class="i3">When the counter reaches zero, the timer #1 interrupt flag will be set, the IRQ pin will go low and the signal on PB7 will go high. The 
counter will still continue to decrement, this will allow the time since the interrupt to be determined (note: the timer #1 interrupt will not be set 
again unless it has previously cleared).</p>

<br /><p class="i1">Free-running Mode</p>

<p class="i3">The most important advantages associated with the latches are the ability to produce a continuous series of evenly spaced interrupts and 
the ability to produce a square wave on PB7 whose frequency is not affected by variations in the processor interrupt response time.</p>

<p class="i3">In the free-running mode (ACNTRL6 = 1), the interrupt flag is set and the signal on PB7 is inverted each time the counter reaches zero. 
However, instead of continuing to decrement from zero after a time-out, the timer automatically transfers the contents of the latch into the counter and 
continues to decrement from there.</p>



<div class="vh1"><h1 id="timer2" class="ctr">Timer #2</h1></div>

<table class="i3"><tr><td class="ctr"> &#160; <b><u>Addr</u></b> &#160; </td><td> &#160; <b><u>Label</u></b> &#160; </td>
   <td><b><u>Description</u></b></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D008 &#160; </td><td class="ctr"> &#160; T2LOLC &#160; </td><td>Write into low-order latch
   <p>Read from low-order counter and reset interrupt</p></td></tr>
<tr><td colspan="3"> &#160; </td></tr>

<tr><td class="ctr"> &#160; $D009 &#160; </td><td class="ctr"> &#160; T2HOC &#160; </td><td>Write into high-order latch, transfer latches to counter and 
reset interrupt
   <p>Read from high-order counter</p></td></tr></table>


   <br /><br /><table class="i3"><tr><td class="ctr"> <b>ACNTRL<br />Bit 5</b> </td>
   <td class="wd20"> &#160; </td><td><br /><b><u>Description</u></b></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td> &#160; </td><td>Interval timer mode - As an interval timer, Timer #2 operates in one-shot mode similiar to Timer #1. 
In this mode, Timer #2 provides a single interrupt for each T2HOC operation.  After timing out, the counter will continue to decrement. However, setting 
of the interrupt flag will be disabled after initial time-out so that it will not be set by the counter continuing to decrement through zero. The 
processor must rewrite T2HOC to enable setting of the interrupt flag. The interrupt flag is cleared by reading T2LOLC or by writing T2HOC.</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td> &#160; </td><td>Pulse counting mode - This is accomplished by first loading a number into T2LOLC. Writing into T2HOC 
clears the interrupt flag and allows the counter to decrement each time a pulse is applied to PB6. The interrupt flag will be set when Timer #2 reaches 
zero. The timer will continue to down-count with each pulse on PB6.  However, it is necessary to rewrite T2HOC to allow the interrupt flag to set on 
subsequent down-counting operations. The pulse must be low on the leading edge of the phase 2 clock.</td></tr></table>


<br /><p class="i1">Interval Timer Mode</p>

<p class="i3">In interval timer mode, Timer #2 operates in the 'one-shot' mode similar to timer #1. Timer #2 issues an interrupt for each timer load 
operation.  After timing out, the counter will continue to decrement.</p>

<br /><p class="i1">Pulse-counting Mode</p>

<p class="i3">In the pulse counting mode, Timer #2 serves primarily to count a predetermined number of negative transitions on PB6.  Writing into $D009 
[T2HOC] clears the interrupt flag and allows the counter to decrement for each negative transition applied to PB6. The interrupt flag will be set when 
Timer #2 reaches zero.</p>

<p class="i3">At this time the counter will continue to decrement with each negative transition on PB6. The pulse must be low on the leading edge of 
phase two.</p>


<div class="vh1"><h1 id="shift" class="ctr">Shift Register [SHIFT]</h1></div>

<p class="i1">The shift register performs serial data transfers into and out of the CB2 pin under control of an internal modulo-8 counter. Shift pulses 
can be applied to the CB1 pin from an external source or, with the proper mode selection, shift pulses generated internally will appear on the CB1 pin 
for controlling shifting in external devices.</p>

<p class="i1">The control bits which allow control of the various shift register operating modes are located in the the Auxiliary control register 
[ACNTRL]:</p>


   <br /><table class="i3"><tr><td class="ctr" colspan="3"> <b>ACNTRL Bits</b> </td><td colspan="2"> &#160; </td></tr>
   <tr><td class="ctr wd40"> <b><u>4</u></b> </td><td class="ctr wd40"> <b><u>3</u></b> </td><td class="ctr wd40"> <b><u>2</u></b> </td>
   <td class="wd20"> &#160; </td><td><b><u>Description</u></b></td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Shift register disabled</td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Shift-in under control of Timer #2</td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Shift-in at system clock rate</td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Shift-in under control of external pulses</td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Shift-out under control of Timer #2</td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Shift-out under control of Timer #2</td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td class="ctr"> 0 </td><td> &#160; </td><td>Shift-out at system clock rate</td></tr>
   <tr><td colspan="5"> &#160; </td></tr>

   <tr><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td class="ctr"> 1 </td><td> &#160; </td><td>Shift-out under control of external 
pulses</td></tr></table>


<br /><p class="i1">The data shifted-out of the shift register appears from bit 7 (note: at the same time, bit 7 is shifted-in at bit 0).</p>

<p class="i1">The first two shift-out modes differ in that the second mode (1 0 1) places the shift pulses on the CB1 pin.</p>

<p class="i1">The shift-in modes are not used with the standard Vectrex hardware and are described only for reference.</p>


<div class="vh1"><h1 id="ienabl" class="ctr">Interrupt enable register [IENABL]</h1></div>

<p class="i3">Enabling flags - When writing to the Interrupt enable register ($D00E) and bit 7 is set, then each 1 in bits 6 through 0 sets the 
corresponding bit in the Interrupt enable register.</p>

<p class="i3">Disabling flags - When writing to the Interrupt enable register ($D00E) and bit 7 is cleared, then each 1 in bits 6 through 0 sets the 
corresponding bit in the Interrupt enable register.</p>


<br /><table class="i3"><tr><td class="ctr wd40"> <b>Bit</u></b></td>
   <td class="wd20"> &#160; </td><td><b><u>Description</u></b></td></tr><tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 0 <td> &#160; </td><td>Enable / disable 'CA2' flag</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 1 <td> &#160; </td><td>Enable / disable 'CA1' flag</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 2 <td> &#160; </td><td>Enable / disable Shift register done flag</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 3 <td> &#160; </td><td>Enable / disable 'CB2' flag</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 4 <td> &#160; </td><td>Enable / disable 'CB1' flag</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 5 <td> &#160; </td><td>Enable / disable Timer #2 flag</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 6 <td> &#160; </td><td>Enable / disable Timer #1 flag</td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 7 <td> &#160; </td><td>Set / clear control</td></tr></table>


<div class="vh1"><h1 id="iflag" class="ctr">Interrupt flag register [IFLAG]</h1></div>


<br /><table class="i3"><tr><td class="ctr wd40"> <b>Bit</u></b></td>
   <td class="wd20"> &#160; </td><td><b><u>Description</u></b></td></tr><tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 0 <td> &#160; </td><td>Set by an active transition of 'CA2' signal
   <p>Cleared by the reading or writing of the Port 'A' data register (register address $D001). Reading or writing the Port 'A' data at register address 
$D00F does not affect the setting of this bit.</p></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 1 <td> &#160; </td><td>Set by an active transition of 'CA1' signal
   <p>Cleared by the reading or writing of the Port 'A' data register (register address $D001). Reading or writing the Port 'A' data at register address 
$D00F does not affect the setting of this bit.</p></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 2 <td> &#160; </td><td>Shift register done
   <p>Cleared by the reading or writing of the shift register (register address $D00A).</p></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 3 <td> &#160; </td><td>Set by an active transition of 'CB2' signal
   <p>Cleared by the reading or writing of the Port 'B' data register (register address $D000).</p></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 4 <td> &#160; </td><td>Set by an active transition of 'CB1' signal
   <p>Cleared by the reading or writing of the Port 'B' data register (register address $D000).</p></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 5 <td> &#160; </td><td>Timer #2 has down-counted to zero
   <p>Cleared by reading Timer #2's low-order counter (register address $D008) or writing Timer #2's high-order counter (register address 
$D009).</p></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 6 <td> &#160; </td><td>Timer #1 has down-counted to zero
   <p>Cleared by reading Timer #1's low-order counter (register address $D004) or writing Timer #1's high-order counter (register address 
$D005).</p></td></tr>
   <tr><td colspan="3"> &#160; </td></tr>

   <tr><td class="ctr"> 7 <td> &#160; </td><td>Logic expression of (IFR6&#160;.and.&#160;IER6) .or. (IFR5&#160;.and.&#160;IER5) .or. 
(IFR4&#160;.and.&#160;IER4) .or. (IFR3.&#160;and.&#160;IER3) .or. (IFR2&#160;.and&#160;.IER2) .or. (IFR1&#160;.and.&#160;IER1) .or. 
(IFR0&#160;.and.&#160;IER0)</td></tr></table>


</td></tr></table>

<br /><br />&#160;</td><td class="wd30">&#160;</td></tr>
<tr><td>&#160;</td><td>

<table class="ctr">


<tr><td class="fsrch lt"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- link-vectrex -->
<ins class="adsbygoogle"
     style="display:inline-block;width:468px;height:15px"
     data-ad-client="ca-pub-6853254609661254"
     data-ad-slot="7097834702"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</td><td class="fsrch rt">
<form action="http://roadsidethoughts.com/search.htm" id="cse-search-box2">
<div>
<input type="hidden" name="cx" value="partner-pub-6853254609661254:i7pisc-77z3" />
<input type="hidden" name="cof" value="FORID:10" />
<input type="hidden" name="ie" value="ISO-8859-1" />
<input type="text" name="q" size="20" />
<input type="submit" name="sa" value="Search" />
</div>
</form>
<script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box2&amp;lang=en"></script>
</td></tr>


   <tr><td class="ctr">
   <table><tr><td colspan="5"> &#160; </td></tr><tr><td colspan="5"> &#160; </td></tr><tr><td colspan="5"> &#160; </td></tr>
       <tr><td class="ctr" colspan="5"><hr class="ctr wd750 ht2"></td></tr>

   <tr><td class="fbar"><a href="http://roadsidethoughts.com/vectrex/"
               title="Return to our Vectrex home page">Home<br />Page</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/sitemap.htm"
               title="Having trouble navigating our website?  Our sitemap might help">Sitemap</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/privacy.htm"
               title="Our statement about the privacy of your visit">Privacy<br />Statement</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/terms.htm"
               title="The terms, conditions and notices that govern your use of the information from RoadsideThoughts">Terms<br />of Use</a></td>

       <td class="fbar"><a href="http://roadsidethoughts.com/vectrex/feedback.htm"
               title="How to contact us">Feedback</a></td>

   </tr><tr><td class="ctr" colspan="5"><hr class="ctr wd750 ht2"></td></tr>
   </table></td></tr>


   <tr><td>&#160;</td></tr>
   <tr><td>&#160;</td></tr>
   <tr><td class="lt">
   <table class="wd100p"><tr><td class="ftn">
       <p class="ftn">Please keep in mind that we can not guarantee the accuracy or timeliness of the information
       on this website, so use with care.  We encourage you to double-check the information that is critical to you.</p>
       <p class="ftn">If you've found an error or have additional information that you would like to share,
       please don't hesitate to write. <a href="http://roadsidethoughts.com/vectrex/feedback.htm">Click here to contact us.</a></p></td>
       <td class="fcpy"><div class="fcpy"></div>Copyright 2016 <br />All Rights Reserved</td></tr>
       </table>
       </td></tr>


   <tr><td class="flm">This page was last modified: 12 Jan 2017</td></tr>
   <tr><td class="flm">By John Hall</td></tr>


   <tr><td>&#160;</td></tr></table>

&#160;</td><td>&#160;</td></tr>
</table>
</body></html>
