BANK 0
EQU $00 
EQU $00 INVINCIBLE
EQU $01 USE_PB6
LABEL $C800 Vec_Snd_Shadow
COMMENT_LABEL $C800 Shadow of sound chip registers (15 bytes)
LABEL $C80F Vec_Btn_State
COMMENT_LABEL $C80F Current state of all joystick buttons
LABEL $C810 Vec_Prev_Btns
COMMENT_LABEL $C810 Previous state of all joystick buttons
LABEL $C811 Vec_Buttons
COMMENT_LABEL $C811 Current toggle state of all buttons
LABEL $C812 Vec_Button_1_1
COMMENT_LABEL $C812 Current toggle state of stick 1 button 1
LABEL $C813 Vec_Button_1_2
COMMENT_LABEL $C813 Current toggle state of stick 1 button 2
LABEL $C814 Vec_Button_1_3
COMMENT_LABEL $C814 Current toggle state of stick 1 button 3
LABEL $C815 Vec_Button_1_4
COMMENT_LABEL $C815 Current toggle state of stick 1 button 4
LABEL $C816 Vec_Button_2_1
COMMENT_LABEL $C816 Current toggle state of stick 2 button 1
LABEL $C817 Vec_Button_2_2
COMMENT_LABEL $C817 Current toggle state of stick 2 button 2
LABEL $C818 Vec_Button_2_3
COMMENT_LABEL $C818 Current toggle state of stick 2 button 3
LABEL $C819 Vec_Button_2_4
COMMENT_LABEL $C819 Current toggle state of stick 2 button 4
LABEL $C81A Vec_Joy_Resltn
COMMENT_LABEL $C81A Joystick A/D resolution ($80=min $00=max)
LABEL $C81F Vec_Joy_Mux
COMMENT_LABEL $C81F Joystick enable/mux flags (4 bytes)
LABEL $C81F Vec_Joy_Mux_1_X
COMMENT_LABEL $C81F Joystick 1 X enable/mux flag (=1)
LABEL $C820 Vec_Joy_Mux_1_Y
COMMENT_LABEL $C820 Joystick 1 Y enable/mux flag (=3)
LABEL $C821 Vec_Joy_Mux_2_X
COMMENT_LABEL $C821 Joystick 2 X enable/mux flag (=5)
LABEL $C822 Vec_Joy_Mux_2_Y
COMMENT_LABEL $C822 Joystick 2 Y enable/mux flag (=7)
LABEL $C823 Vec_Misc_Count
COMMENT_LABEL $C823 Misc counter/flag byte, zero when not in use
LABEL $C824 Vec_0Ref_Enable
COMMENT_LABEL $C824 Check0Ref enable flag
LABEL $C825 Vec_Loop_Count
COMMENT_LABEL $C825 Loop counter word (incremented in Wait_Recal)
LABEL $C827 Vec_Brightness
COMMENT_LABEL $C827 Default brightness
LABEL $C828 Vec_Dot_Dwell
COMMENT_LABEL $C828 Dot dwell time?
LABEL $C829 Vec_Pattern
COMMENT_LABEL $C829 Dot pattern (bits)
LABEL $C82A Vec_Text_HW
COMMENT_LABEL $C82A Default text height and width
LABEL $C82A Vec_Text_Height
COMMENT_LABEL $C82A Default text height
LABEL $C82B Vec_Text_Width
COMMENT_LABEL $C82B Default text width
LABEL $C82C Vec_Str_Ptr
COMMENT_LABEL $C82C Temporary string pointer for Print_Str
LABEL $C82E Vec_Counters
COMMENT_LABEL $C82E Six bytes of counters
LABEL $C82E Vec_Counter_1
COMMENT_LABEL $C82E First  counter byte
LABEL $C82F Vec_Counter_2
COMMENT_LABEL $C82F Second counter byte
LABEL $C830 Vec_Counter_3
COMMENT_LABEL $C830 Third  counter byte
LABEL $C831 Vec_Counter_4
COMMENT_LABEL $C831 Fourth counter byte
LABEL $C832 Vec_Counter_5
COMMENT_LABEL $C832 Fifth  counter byte
LABEL $C833 Vec_Counter_6
COMMENT_LABEL $C833 Sixth  counter byte
LABEL $C834 Vec_RiseRun_Tmp
COMMENT_LABEL $C834 Temp storage word for rise/run
LABEL $C836 Vec_Angle
COMMENT_LABEL $C836 Angle for rise/run and rotation calculations
LABEL $C837 Vec_Run_Index
COMMENT_LABEL $C837 Index pair for run
LABEL $C839 Vec_Rise_Index
COMMENT_LABEL $C839 Index pair for rise
LABEL $C83B Vec_RiseRun_Len
COMMENT_LABEL $C83B length for rise/run
LABEL $C83D Vec_Rfrsh
COMMENT_LABEL $C83D Refresh time (divided by 1.5MHz)
LABEL $C83D Vec_Rfrsh_lo
COMMENT_LABEL $C83D Refresh time low byte
LABEL $C83E Vec_Rfrsh_hi
COMMENT_LABEL $C83E Refresh time high byte
LABEL $C83F Vec_Music_Work
COMMENT_LABEL $C83F Music work buffer (14 bytes, backwards?)
LABEL $C842 Vec_Music_Wk_A
COMMENT_LABEL $C842 register 10
LABEL $C845 Vec_Music_Wk_7
COMMENT_LABEL $C845 register 7
LABEL $C846 Vec_Music_Wk_6
COMMENT_LABEL $C846 register 6
LABEL $C847 Vec_Music_Wk_5
COMMENT_LABEL $C847 register 5
LABEL $C84B Vec_Music_Wk_1
COMMENT_LABEL $C84B register 1
LABEL $C84D Vec_Freq_Table
COMMENT_LABEL $C84D Pointer to note-to-frequency table (normally $FC8D)
LABEL $C84F Vec_Max_Players
COMMENT_LABEL $C84F Maximum number of players for Select_Game
LABEL $C850 Vec_Max_Games
COMMENT_LABEL $C850 Maximum number of games for Select_Game
LABEL $C84F Vec_ADSR_Table
COMMENT_LABEL $C84F Storage for first music header word (ADSR table)
LABEL $C851 Vec_Twang_Table
COMMENT_LABEL $C851 Storage for second music header word ('twang' table)
LABEL $C853 Vec_Music_Ptr
COMMENT_LABEL $C853 Music data pointer
LABEL $C853 Vec_Expl_ChanA
COMMENT_LABEL $C853 Used by Explosion_Snd - bit for first channel used?
LABEL $C854 Vec_Expl_Chans
COMMENT_LABEL $C854 Used by Explosion_Snd - bits for all channels used?
LABEL $C855 Vec_Music_Chan
COMMENT_LABEL $C855 Current sound channel number for Init_Music
LABEL $C856 Vec_Music_Flag
COMMENT_LABEL $C856 Music active flag ($00=off $01=start $80=on)
LABEL $C857 Vec_Duration
COMMENT_LABEL $C857 Duration counter for Init_Music
LABEL $C858 Vec_Music_Twang
COMMENT_LABEL $C858 3 word 'twang' table used by Init_Music
LABEL $C858 Vec_Expl_1
COMMENT_LABEL $C858 Four bytes copied from Explosion_Snd's U-reg parameters
LABEL $C859 Vec_Expl_2
LABEL $C85A Vec_Expl_3
LABEL $C85B Vec_Expl_4
LABEL $C85C Vec_Expl_Chan
COMMENT_LABEL $C85C Used by Explosion_Snd - channel number in use?
LABEL $C85D Vec_Expl_ChanB
COMMENT_LABEL $C85D Used by Explosion_Snd - bit for second channel used?
LABEL $C85E Vec_ADSR_Timers
COMMENT_LABEL $C85E ADSR timers for each sound channel (3 bytes)
LABEL $C861 Vec_Music_Freq
COMMENT_LABEL $C861 Storage for base frequency of each channel (3 words)
LABEL $C867 Vec_Expl_Flag
COMMENT_LABEL $C867 Explosion_Snd initialization flag?
LABEL $C877 Vec_Expl_Timer
COMMENT_LABEL $C877 Used by Explosion_Snd
LABEL $C879 Vec_Num_Players
COMMENT_LABEL $C879 Number of players selected in Select_Game
LABEL $C87A Vec_Num_Game
COMMENT_LABEL $C87A Game number selected in Select_Game
LABEL $C87B Vec_Seed_Ptr
COMMENT_LABEL $C87B Pointer to 3-byte random number seed (=$C87D)
LABEL $C87D Vec_Random_Seed
COMMENT_LABEL $C87D Default 3-byte random number seed
LABEL $CBEA Vec_Default_Stk
COMMENT_LABEL $CBEA Default top-of-stack
LABEL $CBEB Vec_High_Score
COMMENT_LABEL $CBEB High score storage (7 bytes)
LABEL $CBF2 Vec_SWI3_Vector
COMMENT_LABEL $CBF2 SWI2/SWI3 interrupt vector (3 bytes)
LABEL $CBF2 Vec_SWI2_Vector
COMMENT_LABEL $CBF2 SWI2/SWI3 interrupt vector (3 bytes)
LABEL $CBF5 Vec_FIRQ_Vector
COMMENT_LABEL $CBF5 FIRQ interrupt vector (3 bytes)
LABEL $CBF8 Vec_IRQ_Vector
COMMENT_LABEL $CBF8 IRQ interrupt vector (3 bytes)
LABEL $CBFB Vec_SWI_Vector
COMMENT_LABEL $CBFB SWI/NMI interrupt vector (3 bytes)
LABEL $CBFB Vec_NMI_Vector
COMMENT_LABEL $CBFB SWI/NMI interrupt vector (3 bytes)
LABEL $CBFE Vec_Cold_Flag
COMMENT_LABEL $CBFE Cold start flag (warm start if = $7321)
LABEL $D000 VIA_port_b
COMMENT_LABEL $D000 VIA port B data I/O register
LABEL $D001 VIA_port_a
COMMENT_LABEL $D001 VIA port A data I/O register (handshaking)
LABEL $D002 VIA_DDR_b
COMMENT_LABEL $D002 VIA port B data direction register (0=input 1=output)
LABEL $D003 VIA_DDR_a
COMMENT_LABEL $D003 VIA port A data direction register (0=input 1=output)
LABEL $D004 VIA_t1_cnt_lo
COMMENT_LABEL $D004 VIA timer 1 count register lo (scale factor)
LABEL $D005 VIA_t1_cnt_hi
COMMENT_LABEL $D005 VIA timer 1 count register hi
LABEL $D006 VIA_t1_lch_lo
COMMENT_LABEL $D006 VIA timer 1 latch register lo
LABEL $D007 VIA_t1_lch_hi
COMMENT_LABEL $D007 VIA timer 1 latch register hi
LABEL $D008 VIA_t2_lo
COMMENT_LABEL $D008 VIA timer 2 count/latch register lo (refresh)
LABEL $D009 VIA_t2_hi
COMMENT_LABEL $D009 VIA timer 2 count/latch register hi
LABEL $D00A VIA_shift_reg
COMMENT_LABEL $D00A VIA shift register
LABEL $D00B VIA_aux_cntl
COMMENT_LABEL $D00B VIA auxiliary control register
LABEL $D00C VIA_cntl
COMMENT_LABEL $D00C VIA control register
LABEL $D00D VIA_int_flags
COMMENT_LABEL $D00D VIA interrupt flags register
LABEL $D00E VIA_int_enable
COMMENT_LABEL $D00E VIA interrupt enable register
LABEL $D00F VIA_port_a_nohs
COMMENT_LABEL $D00F VIA port A data I/O register (no handshaking)
LABEL $F000 Cold_Start
LABEL $F06C Warm_Start
LABEL $F14C Init_VIA
LABEL $F164 Init_OS_RAM
LABEL $F18B Init_OS
LABEL $F192 Wait_Recal
LABEL $F1A2 Set_Refresh
LABEL $F1AA DP_to_D0
LABEL $F1AF DP_to_C8
LABEL $F1B4 Read_Btns_Mask
LABEL $F1BA Read_Btns
LABEL $F1F5 Joy_Analog
LABEL $F1F8 Joy_Digital
LABEL $F256 Sound_Byte
LABEL $F259 Sound_Byte_x
LABEL $F25B Sound_Byte_raw
LABEL $F272 Clear_Sound
LABEL $F27D Sound_Bytes
LABEL $F284 Sound_Bytes_x
LABEL $F289 Do_Sound
LABEL $F28C Do_Sound_x
LABEL $F29D Intensity_1F
LABEL $F2A1 Intensity_3F
LABEL $F2A5 Intensity_5F
LABEL $F2A9 Intensity_7F
LABEL $F2AB Intensity_a
LABEL $F2BE Dot_ix_b
LABEL $F2C1 Dot_ix
LABEL $F2C3 Dot_d
LABEL $F2C5 Dot_here
LABEL $F2D5 Dot_List
LABEL $F2DE Dot_List_Reset
LABEL $F2E6 Recalibrate
LABEL $F2F2 Moveto_x_7F
LABEL $F2FC Moveto_d_7F
LABEL $F308 Moveto_ix_FF
LABEL $F30C Moveto_ix_7F
LABEL $F30E Moveto_ix_a
LABEL $F310 Moveto_ix
LABEL $F312 Moveto_d
LABEL $F34A Reset0Ref_D0
LABEL $F34F Check0Ref
LABEL $F354 Reset0Ref
LABEL $F35B Reset_Pen
LABEL $F36B Reset0Int
LABEL $F373 Print_Str_hwyx
LABEL $F378 Print_Str_yx
LABEL $F37A Print_Str_d
LABEL $F385 Print_List_hw
LABEL $F38A Print_List
LABEL $F38C Print_List_chk
LABEL $F391 Print_Ships_x
LABEL $F393 Print_Ships
LABEL $F3AD Mov_Draw_VLc_a
COMMENT_LABEL $F3AD count y x y x ...
LABEL $F3B1 Mov_Draw_VL_b
COMMENT_LABEL $F3B1 y x y x ...
LABEL $F3B5 Mov_Draw_VLcs
COMMENT_LABEL $F3B5 count scale y x y x ...
LABEL $F3B7 Mov_Draw_VL_ab
COMMENT_LABEL $F3B7 y x y x ...
LABEL $F3B9 Mov_Draw_VL_a
COMMENT_LABEL $F3B9 y x y x ...
LABEL $F3BC Mov_Draw_VL
COMMENT_LABEL $F3BC y x y x ...
LABEL $F3BE Mov_Draw_VL_d
COMMENT_LABEL $F3BE y x y x ...
LABEL $F3CE Draw_VLc
COMMENT_LABEL $F3CE count y x y x ...
LABEL $F3D2 Draw_VL_b
COMMENT_LABEL $F3D2 y x y x ...
LABEL $F3D6 Draw_VLcs
COMMENT_LABEL $F3D6 count scale y x y x ...
LABEL $F3D8 Draw_VL_ab
COMMENT_LABEL $F3D8 y x y x ...
LABEL $F3DA Draw_VL_a
COMMENT_LABEL $F3DA y x y x ...
LABEL $F3DD Draw_VL
COMMENT_LABEL $F3DD y x y x ...
LABEL $F3DF Draw_Line_d
COMMENT_LABEL $F3DF y x y x ...
LABEL $F404 Draw_VLp_FF
COMMENT_LABEL $F404 pattern y x pattern y x ... $01
LABEL $F408 Draw_VLp_7F
COMMENT_LABEL $F408 pattern y x pattern y x ... $01
LABEL $F40C Draw_VLp_scale
COMMENT_LABEL $F40C scale pattern y x pattern y x ... $01
LABEL $F40E Draw_VLp_b
COMMENT_LABEL $F40E pattern y x pattern y x ... $01
LABEL $F410 Draw_VLp
COMMENT_LABEL $F410 pattern y x pattern y x ... $01
LABEL $F434 Draw_Pat_VL_a
COMMENT_LABEL $F434 y x y x ...
LABEL $F437 Draw_Pat_VL
COMMENT_LABEL $F437 y x y x ...
LABEL $F439 Draw_Pat_VL_d
COMMENT_LABEL $F439 y x y x ...
LABEL $F46E Draw_VL_mode
COMMENT_LABEL $F46E mode y x mode y x ... $01
LABEL $F495 Print_Str
LABEL $F511 Random_3
LABEL $F517 Random
LABEL $F533 Init_Music_Buf
LABEL $F53F Clear_x_b
LABEL $F542 Clear_C8_RAM
COMMENT_LABEL $F542 never used by GCE carts?
LABEL $F545 Clear_x_256
LABEL $F548 Clear_x_d
LABEL $F550 Clear_x_b_80
LABEL $F552 Clear_x_b_a
LABEL $F55A Dec_3_Counters
LABEL $F55E Dec_6_Counters
LABEL $F563 Dec_Counters
LABEL $F56D Delay_3
COMMENT_LABEL $F56D 30 cycles
LABEL $F571 Delay_2
COMMENT_LABEL $F571 25 cycles
LABEL $F575 Delay_1
COMMENT_LABEL $F575 20 cycles
LABEL $F579 Delay_0
COMMENT_LABEL $F579 12 cycles
LABEL $F57A Delay_b
COMMENT_LABEL $F57A 5*B + 10 cycles
LABEL $F57D Delay_RTS
COMMENT_LABEL $F57D 5 cycles
LABEL $F57E Bitmask_a
LABEL $F584 Abs_a_b
LABEL $F58B Abs_b
LABEL $F593 Rise_Run_Angle
LABEL $F5D9 Get_Rise_Idx
LABEL $F5DB Get_Run_Idx
LABEL $F5EF Get_Rise_Run
LABEL $F5FF Rise_Run_X
LABEL $F601 Rise_Run_Y
LABEL $F603 Rise_Run_Len
LABEL $F610 Rot_VL_ab
LABEL $F616 Rot_VL
LABEL $F61F Rot_VL_Mode_a
LABEL $F62B Rot_VL_Mode
LABEL $F637 Rot_VL_dft
LABEL $F65B Xform_Run_a
LABEL $F65D Xform_Run
LABEL $F661 Xform_Rise_a
LABEL $F663 Xform_Rise
LABEL $F67F Move_Mem_a_1
LABEL $F683 Move_Mem_a
LABEL $F687 Init_Music_chk
LABEL $F68D Init_Music
LABEL $F692 Init_Music_x
LABEL $F7A9 Select_Game
LABEL $F84F Clear_Score
LABEL $F85E Add_Score_a
LABEL $F87C Add_Score_d
LABEL $F8B7 Strip_Zeros
LABEL $F8C7 Compare_Score
LABEL $F8D8 New_High_Score
LABEL $F8E5 Obj_Will_Hit_u
LABEL $F8F3 Obj_Will_Hit
LABEL $F8FF Obj_Hit
LABEL $F92E Explosion_Snd
LABEL $FF9F Draw_Grid_VL
LABEL $FD0D music1
LABEL $FD1D music2
LABEL $FD81 music3
LABEL $FDD3 music4
LABEL $FE38 music5
LABEL $FE76 music6
LABEL $FEC6 music7
LABEL $FEF8 music8
LABEL $FF26 music9
LABEL $FF44 musica
LABEL $FF62 musicb
LABEL $FF7A musicc
LABEL $FF8F musicd
LABEL $F9F4 Char_Table
LABEL $FBD4 Char_Table_End
LABEL $C80F list_empty_head
LABEL $C811 list_objects_head
LABEL $C813 list_objects_tail
LABEL $C815 currentSFX_1
LABEL $C817 currentSFX_2
LABEL $C819 currentSFX_3
LABEL $C81B sfx_status_1
LABEL $C81C sfx_status_2
LABEL $C81D sfx_pointer_1
LABEL $C81F sfx_pointer_2
LABEL $C821 sfx_pointer_3
LABEL $C823 phase_count
LABEL $C824 spawn_count
LABEL $C826 deadEnemies
LABEL $C827 spawnRest_Counter
LABEL $C828 spawn_increase_delay
LABEL $C829 spawn_reset
LABEL $C82A spawn_timer
LABEL $C82B shield_delay
LABEL $C82C shieldMinorIncreaseCounter
LABEL $C82D shieldWidthCounter
LABEL $C82E tmp_byte
LABEL $C82E tmp_count2
LABEL $C82F tmp_word
LABEL $C82F tmp_add
LABEL $C831 tmp_angle
LABEL $C833 neg_test
LABEL $C834 tmp_offset
LABEL $C836 tmp_lastpos
LABEL $C838 currentMusic
LABEL $C83A currentYLenCount
LABEL $C83C nextMusic
LABEL $C84D rotList
LABEL $C860 star_swirl
LABEL $C861 tmp_first_vector
LABEL $C863 sfx_status_3
LABEL $C864 starletCount
LABEL $C865 starletAngle
LABEL $C867 currentMaxOffset
LABEL $C868 player_score
LABEL $C868 player_score_5
LABEL $C869 player_score_4
LABEL $C86A player_score_3
LABEL $C86B player_score_2
LABEL $C86C player_score_1
LABEL $C86D player_score_0
LABEL $C86E star_0_score
LABEL $C86E star_0_score_3
LABEL $C86F star_0_score_2
LABEL $C870 star_0_score_1
LABEL $C871 star_0_score_0
LABEL $C872 star_1_score
LABEL $C872 star_1_score_3
LABEL $C873 star_1_score_2
LABEL $C874 star_1_score_1
LABEL $C875 star_1_score_0
LABEL $C876 star_2_score
LABEL $C876 star_2_score_3
LABEL $C877 star_2_score_2
LABEL $C878 star_2_score_1
LABEL $C879 star_2_score_0
LABEL $C87A score_buf
LABEL $C87D star_active_flag
LABEL $C87E currentPatternPointer
LABEL $C880 tmp_count
LABEL $C881 RecalCounter
LABEL $C881 RecalCounterHi
LABEL $C882 RecalCounterLow
LABEL $C883 current_button_state
LABEL $C884 last_button_state
LABEL $C885 my_random
LABEL $C886 my_random2
LABEL $C887 hs_place_got
LABEL $C887 phaseBlockStart
LABEL $C887 spawn_allowed
LABEL $C888 hs_place_edit
LABEL $C888 shieldWidthGrowth
LABEL $C889 hs_blink_count
LABEL $C889 shieldSpeed
LABEL $C88A hs_blink_state
LABEL $C88A shieldMinorIncreaseCounterReset
LABEL $C88B last_joy_x
LABEL $C88B shieldMinorIncrease
LABEL $C88C last_joy_y
LABEL $C88C shield_width_adder
LABEL $C88D Vec_Joy_1_X
LABEL $C88D shot_add_delay
LABEL $C88E Vec_Joy_1_Y
LABEL $C88E shot_addi
LABEL $C88F Vec_Joy_2_X
LABEL $C88F X_add_delay
LABEL $C890 Vec_Joy_2_Y
LABEL $C890 X_addi
LABEL $C891 HX_add_delay
LABEL $C892 Hunter_addi
LABEL $C893 Bomber_add_delay
LABEL $C894 Bomber_addi
LABEL $C895 bomber_delay_start
LABEL $C896 Dragon_Scale_delay
LABEL $C897 Dragon_Angle_addi
LABEL $C899 Dragon_Angle_delay
LABEL $C89A dragonchild_addi
LABEL $C89B minimum_bomb_reload
LABEL $C89C Bonus_add_delay
LABEL $C89D Bonus_addi
LABEL $C89E bonusActiveTime
LABEL $C89F phase_spawn_reset
LABEL $C8A0 phase_spawn_increase_delay
LABEL $C8A1 phase_min_spawn_reset
LABEL $C8A2 phase_max_spawn_increase_delay
LABEL $C8A3 next_phase_at
LABEL $C8A5 phaseBlockEnd
LABEL $C8A5 Hunter_add_delay
LABEL $C8A6 HX_addi
LABEL $C8A7 base_angle
LABEL $C8A9 sided
LABEL $C8AA shieldWidth
LABEL $C8AB shieldStart
LABEL $C8AC innerShield
LABEL $C8AD noShieldGrowthVar
LABEL $C8AE current_forth_dif
LABEL $C8AF current_back_dif
LABEL $C8B0 osc_forth
LABEL $C8B1 currentScroller
LABEL $C8B1 osc_back
LABEL $C8B2 bonusCounter
LABEL $C8B2 bonusCounter_hi
LABEL $C8B3 bonusCounter_lo
LABEL $C8B4 bonus_time_1
LABEL $C8B5 bonus_time_0
LABEL $C8B6 bonusIconMoveScale
LABEL $C8B7 bonusIconList
LABEL $C8B9 use_half_stepCounter
LABEL $C8B9 bonusActiveType
LABEL $C8BA currentPhaseData
LABEL $C8BC shield_max
LABEL $C8BD spawn_max
LABEL $C8BE min_spawn_reset
LABEL $C8BF max_spawn_increase_delay
LABEL $C8C0 current_eprom_blocksize
LABEL $C8C1 current_eprom_blockadr
LABEL $C8C2 ds2431Present
LABEL $C8C3 ignoreDs2431
EQU $06 HighScoreEntry
EQU $00 NAME
EQU $03 BCD_SCORE
LABEL $C8C4 v4e_saveBlockStart
LABEL $C8C4 optionsBlock
LABEL $C8C4 demo_mode
LABEL $C8C4 option1
LABEL $C8C5 musicOption
LABEL $C8C6 sfxOption
LABEL $C8C7 halfnoise
LABEL $C8C8 demo_blink_Counter
LABEL $C8C8 option5
LABEL $C8C9 return_state
LABEL $C8C9 option6
LABEL $C8CA demo_Intensity
LABEL $C8CA option7
LABEL $C8CB option8
LABEL $C8CC optionsBlockEnd
LABEL $C8CC highScoreBlock
LABEL $C8CC highScoreTable
LABEL $C8EC highScoreTableEnd
LABEL $C8EC v4e_saveBlockEnd
LABEL $C8EC bcd_buf
LABEL $C8EF csa_buf
LABEL $C8F5 t2_rest
LABEL $C8F6 noTimerCheck
LABEL $C8F7 explosionMax
LABEL $C8F8 object_count
LABEL $C8F9 starFieldCounter
LABEL $C8FA explosionActiveCounter
LABEL $C8FB score_display_time
LABEL $C8FC starfield_max
LABEL $C8FD shieldActive
LABEL $C8FE startDataPos
LABEL $C900 nextDataPos
LABEL $C902 currentDataBitPos
LABEL $C903 currentDataByte
LABEL $C904 inMovePointer
LABEL $C906 initialPhase
LABEL $C908 demoWaitShieldToActivate
LABEL $C909 demoWaitShieldToDeActivate
LABEL $C90A scrollBlink
LABEL $C90B scrollIntensity
LABEL $C90C scrollBlinkAdd
LABEL $C90D bonusDestroyedCounter
EQU $0A INITIAL_STARFIELD_MAX
EQU $10 ObjectStruct
EQU $00 Y_POS
COMMENT_LABEL $00 current position
EQU $01 SCALE
COMMENT_LABEL $01 scale to position the object
EQU $02 CURRENT_LIST
COMMENT_LABEL $02 current list vectorlist of first score digit
EQU $04 TYPE
EQU $04 BEHAVIOUR
EQU $06 X_POS
EQU $07 ANGLE
COMMENT_LABEL $07 if angle base, angle in degree *2
EQU $09 NEXT_OBJECT
COMMENT_LABEL $09 positive = end of list
EQU $06 filler
COMMENT_LABEL $06 #noDoubleWarn
EQU $26 MAX_OBJECTS
COMMENT_LABEL $26 todo determine max possible spawns!
LABEL $C90E object_list
LABEL $CB6E object_list_end
LABEL $CB7E timerObject
LABEL $CB8E arkosPlayerMemStart
LABEL $CB8E tmp_track_param
LABEL $CB8F tmp_track_instrument
LABEL $CB90 tmp_instrument_second_byte
LABEL $CB91 PLY_HEIGHT
LABEL $CB92 PLY_SPEED
LABEL $CB93 PLY_SPEEDCPT
LABEL $CB94 PLY_HEIGHTCPT
LABEL $CB95 PLY_TRACK_INSTRUMENTSTABLEPT
LABEL $CB97 PLY_LINKER_PT
LABEL $CB99 PLY_PSGREG13_RETRIG
LABEL $CB9A PLY_SAVESPECIALTRACK
LABEL $CB9C PLY_SPECIALTRACK_PT
LABEL $CB9E PLY_SPECIALTRACK_WAITCOUNTER
EQU $11 ArkosChannel
EQU $00 PLY_TRANSPOSITION
EQU $01 PLY_TRACK_SAVEPTINSTRUMENT
EQU $03 PLY_TRACK_INSTRUMENT
EQU $05 PLY_TRACK_INSTRUMENTSPEED
EQU $06 PLY_TRACK_INSTRUMENTSPEEDCPT
EQU $07 PLY_TRACK_PT
EQU $09 PLY_TRACK_WAITCOUNTER
EQU $0A PLY_TRACK_NOTE
EQU $0B PLY_TRACK_VOLUME
EQU $0C PLY_TRACK_PITCH
EQU $0E PLY_TRACK_PITCHADD
EQU $10 PLY_TRACK_REG_7
LABEL $CB9F Channel1Data
LABEL $CBB0 Channel2Data
LABEL $CBC1 Channel3Data
LABEL $CBD2 ChannelDataEnd
LABEL $CBD2 PLY_PSGREG13
LABEL $CBD3 PLY_VOL_REG
LABEL $CBD5 PLY_FREQ_REG
LABEL $CBD7 songOver
LABEL $CBD8 arkosPlayerMemEnd
LABEL $C83F PLY_PSGREGISTERSARRAY
COMMENT_LABEL $C83F #isfunction
LABEL $C83F PLY_PSGREG0
LABEL $C840 PLY_PSGREG1
LABEL $C841 PLY_PSGREG2
LABEL $C842 PLY_PSGREG3
LABEL $C843 PLY_PSGREG4
LABEL $C844 PLY_PSGREG5
LABEL $C845 PLY_PSGREG6
LABEL $C847 PLY_PSGREG8
LABEL $C848 PLY_PSGREG9
LABEL $C849 PLY_PSGREG10
LABEL $C84A PLY_PSGREG11
LABEL $C84B PLY_PSGREG12
LABEL $C84D PLY_PSGREGISTERSARRAY_END
LABEL $CA4E SCROLL_RAM_START
COMMENT_LABEL $CA4E reserve space for 20 objects for starfield
LABEL $0020 SHIFT_TITLE_UP
EQU $05 BASE_SCALE
COMMENT_LABEL $05 base scale is "5"
EQU $01 SHIELD_START_SCALE
EQU $03 SHIELD_START_WIDTH
COMMENT_LABEL $03 first shield width is 3 scale
EQU $04 SHIELD_WIDTH_GROWTH_DEFAULT
COMMENT_LABEL $04 2 up ; grow shield width every x ticks with speed (counter)
EQU $01 INITIAL_SHIELD_WIDTH_ADDER
COMMENT_LABEL $01 1-4 WIDTH OF SHIELD increase (strength)
EQU $02 SHIELD_DEFAULT_SPEED
COMMENT_LABEL $02 increase position of shield with 2 every each increase step
LABEL $00D0 SHIELD_MAX_SCALE_INIT
COMMENT_LABEL $00D0 further out gives more often the "external" glow
EQU $0A SHIELD_VARIANCE
COMMENT_LABEL $0A for collision detection, shield to midpoint of object - 10 should reach every midpoint...
EQU $02 SHIELD_MINOR_DELAY_COUNTER_DEFAULT
COMMENT_LABEL $02 every third
EQU $00 SHIELD_MINOR_INCREASE_DEFAULT
COMMENT_LABEL $00 add 0
EQU $07 SHIELD_DELAY_TICKS
COMMENT_LABEL $07 wait after each shield collaps this many ticks, befor a new shield can be initiated (otherwise shield spawning is possible)
EQU $28 INITIAL_EXPLOSION_MAX
COMMENT_LABEL $28 max scale of explosion
LABEL $1160 bonusBehaviour
COMMENT_LABEL $1160 #isfunction
LABEL $0E6D dragonchildBoundBehaviour
COMMENT_LABEL $0E6D #isfunction
LABEL $1040 dragonBehaviour_full
LABEL $0D63 shotBehaviour
COMMENT_LABEL $0D63 #isfunction
LABEL $125B bomberBehaviour
COMMENT_LABEL $125B #isfunction
LABEL $0A58 hunterBehaviour
COMMENT_LABEL $0A58 #isfunction
LABEL $0B30 hiddenXBehaviour
COMMENT_LABEL $0B30 #isfunction
LABEL $0C68 starletBehaviour
COMMENT_LABEL $0C68 #isfunction
LABEL $0541 xBehaviour
COMMENT_LABEL $0541 #isfunction
EQU $60 TYPE_BOUNDARY
LABEL $73C0 explosionBehaviour
COMMENT_LABEL $73C0 #isfunction
LABEL $7655 scoreBehaviour
COMMENT_LABEL $7655 #isfunction
LABEL $7712 timerBehaviour
COMMENT_LABEL $7712 #isfunction
LABEL $7808 starfieldBehaviour
COMMENT_LABEL $7808 #isfunction
LABEL $7B36 letterBehaviour
COMMENT_LABEL $7B36 #isfunction
EQU $0A BUFFER_OBJECT_COUNT
COMMENT_LABEL $0A number of objects that should be free - starfields will spawn/destroyed accordingly
EQU $32 INITIAL_SCORE_DISPLAY_TIME
COMMENT_LABEL $32 scores are displayed for about 1 s
LABEL $00C8 SPAWN_MAX_SCALE_INIT
COMMENT_LABEL $00C8 further out gives more often the "external" glow
EQU $28 STAR_SCALE
COMMENT_LABEL $28 radius pos of starlets
EQU $01 STARLET_ANIM_DELAY
COMMENT_LABEL $01 test for dec -> bpl
EQU $02 X_ANIM_DELAY
COMMENT_LABEL $02 test for dec -> bpl
EQU $4B STARLET_SCORE_DELAY
COMMENT_LABEL $4B at 50Hz 1,5 seconds
EQU $02 STARLET_START_SCORE
COMMENT_LABEL $02 start bonus of star score at 2 bonus points (first displayed is 4)
EQU $01 BONUS_ANIM_DELAY
EQU $00 INITIAL_BONUS_MOVE_DELAY
COMMENT_LABEL $00 every tick
EQU $02 INITIAL_BONUS_MOVE_STRENGTH
COMMENT_LABEL $02 move one scale pos
EQU $01 INITIAL_SHOT_MOVE_DELAY
COMMENT_LABEL $01 every tick
EQU $01 INITIAL_SHOT_MOVE_STRENGTH
COMMENT_LABEL $01 move one scale pos
EQU $01 INITIAL_HX_MOVE_DELAY
COMMENT_LABEL $01 every second tick
EQU $01 INITIAL_HX_MOVE_STRENGTH
COMMENT_LABEL $01 move one scale pos
EQU $01 INITIAL_X_MOVE_DELAY
COMMENT_LABEL $01 every second tick
EQU $01 INITIAL_X_MOVE_STRENGTH
COMMENT_LABEL $01 move one scale pos
EQU $00 INITIAL_HUNTER_MOVE_DELAY
COMMENT_LABEL $00 every tick
EQU $01 INITIAL_HUNTER_MOVE_STRENGTH
COMMENT_LABEL $01 move one scale pos
EQU $01 INITIAL_BOMBER_MOVE_DELAY
COMMENT_LABEL $01 move two scale pos
EQU $01 INITIAL_BOMBER_MOVE_STRENGTH
COMMENT_LABEL $01 move one scale pos
LABEL $00C8 INITIAL_BOMBER_SHOT_DELAY
COMMENT_LABEL $00C8 4s
EQU $02 BOMBER_ANIM_DELAY
COMMENT_LABEL $02 test for dec -> bpl
EQU $19 BOMB_RELOAD_REDUCTION
COMMENT_LABEL $19 each bomb is shot 1/2 faster than the last, untill minum reload is reached
EQU $32 DEFAULT_MINIMUM_BOMB_RELOAD_DELAY
COMMENT_LABEL $32 minimum reload timer for bombs (1 s)
EQU $05 INITIAL_DRAGON_MOVE_DELAY
COMMENT_LABEL $05 every fifth tick one inward move
EQU $02 INITIAL_DRAGON_MOVE_STRENGTH
COMMENT_LABEL $02 angle SUB per
EQU $00 INITIAL_DRAGON_ANGLE_DELAY
COMMENT_LABEL $00 angle SUB per
EQU $01 DRAGON_CHILD_FREE_SPEED
COMMENT_LABEL $01 decrease scale with 2 every tick
EQU $01 INITIAL_SPAWN_INCREASE_DELAY
EQU $32 INITIAL_SPAWN_RESET_TIMER
COMMENT_LABEL $32 each second , test for dec -> bpl
EQU $0A MAXIMUM_RESET_INCREASE_SLOWDOWN
EQU $0F FASTEST_SPAWN_RATE
COMMENT_LABEL $0F 15/50 s a spawn happens at the fastest rate
EQU $1E DEFAULT_BONUS_ACTIVE_TIME
COMMENT_LABEL $1E 99 is max! seconds - in seconds!
EQU $01 ALLOW_STAR
EQU $02 ALLOW_X
EQU $04 ALLOW_HIDDEN_X
EQU $08 ALLOW_HUNTER
EQU $10 ALLOW_BOMBER
EQU $20 ALLOW_DRAGON
EQU $40 ALLOW_BONUS
LABEL $0080 ALLOW_SQUAD
LABEL $00FF DEFAULT_ALL_SPAWN
EQU $01 BONUS_TYPE_SHIELD
EQU $02 BONUS_TYPE_EXPAND
EQU $03 BONUS_TYPE_FASTER
EQU $60 SCALE_FACTOR_GAME
EQU $11 release_string
LABEL $7C72 first_init
COMMENT_LABEL $7C72 #isfunction
EQU $1D bomber_in_title
EQU $24 bonus_in_title
EQU $2A PC_MAIN_A
LABEL $01ED main
COMMENT_LABEL $01ED #isfunction
EQU $2C PC_TITLE_A
LABEL $00E3 title_main1
EQU $2E PC_SCORE_A
LABEL $4CB1 display_highscore_intern
EQU $26 PC_MAIN
EQU $28 PC_TITLE
EQU $2A PC_SCORE
LABEL $0034 v4ecartversion
LABEL $0036 v4ecartflags
LABEL $0038 v4efontptr
LABEL $003A v4efontwidth
LABEL $003B v4efontlastchar
LABEL $003C v4estringlists
LABEL $003E v4eStorageArea
LABEL $7F45 vec4SaveBuffer
COMMENT_LABEL $7F45 #isfunction
LABEL $0040 v4eStorageSize
LABEL $0042 v4eStorageLoaded
EQU $44 v4eStorageID
COMMENT_LABEL $44 storage identifier
EQU $48 hx_in_title
EQU $51 dragon_in_title
EQU $58 helper_in_title
EQU $5D demo_string
EQU $62 hunter_in_title
EQU $69 x_in_title
EQU $74 defaultValuesEeprom
LABEL $009A backFromDemo_setUp
LABEL $54BB clear_all_sound
COMMENT_LABEL $54BB #isfunction
LABEL $36BF titleMusic
LABEL $7347 PLY_INIT_ALL
COMMENT_LABEL $7347 #isfunction
LABEL $CA52 scroll_speed
LABEL $CA55 scroll_x_left
LABEL $CA58 scroll_intensity
LABEL $060F scroller1
LABEL $558F set_up_scrolling
COMMENT_LABEL $558F #isfunction
LABEL $5BB6 initTitel
COMMENT_LABEL $5BB6 #isfunction
LABEL $00C8 start_cart
LABEL $1DB5 initGame
COMMENT_LABEL $1DB5 #isfunction
LABEL $00CB title_main_go
LABEL $00D6 backFromDemo
LABEL $00D8 title_main1_hs_ret
LABEL $5D73 initTitle2
COMMENT_LABEL $5D73 #isfunction
LABEL $00F5 notToLoBlink
LABEL $00FE notToHiBlink
LABEL $701E PLY_PLAY
COMMENT_LABEL $701E #isfunction
LABEL $2B5A do_ym_sound2_no_sfx
LABEL $CAB4 print_angle
LABEL $CABC angle_speed
LABEL $0121 no_anglecircle_overflow
LABEL $012A no_anglecircle_overflow2
LABEL $CAB6 print_angle_2
LABEL $013C no_anglecircle_overflow2_2
LABEL $55DE do_one_scroll_step
COMMENT_LABEL $55DE #isfunction
LABEL $5BDE do_one_title_round
COMMENT_LABEL $5BDE #isfunction
LABEL $CA65 scrollReset
LABEL $01A5 normalRound
LABEL $0165 startScroll2
LABEL $016F startScroll3
LABEL $0179 startScroll4
LABEL $0197 start_a_demo_ft
LABEL $0647 scroller2
LABEL $0183 cont_scroll_init
LABEL $06A4 scroller3
LABEL $0748 scroller4
LABEL $CA53 scroll_y
LABEL $01D4 game_start
LABEL $1EB6 getButtonState
COMMENT_LABEL $1EB6 #isfunction
LABEL $01B5 check_buttons
LABEL $01AA do_normal_after_all
LABEL $1EB5 emptyStreamInMove
LABEL $4C7B display_highscore
COMMENT_LABEL $4C7B #isfunction
LABEL $5FDD display_options
COMMENT_LABEL $5FDD #isfunction
LABEL $7EEF goback
COMMENT_LABEL $7EEF #isfunction
LABEL $36BB inGameMusic
LABEL $6FAF PLY_INIT_CH1
COMMENT_LABEL $6FAF #isfunction
LABEL $7010 decode_1ChannelRest
LABEL $01F8 can_do_shield_m
LABEL $5394 check_stage
LABEL $020F wrn_trch6
LABEL $0212 LF19E6
LABEL $2B4C do_ym_sound2
COMMENT_LABEL $2B4C #isfunction
LABEL $023D playMusic_NOk_m
LABEL $6CC5 PLY_PLAY_1CHANNEL_PART1
COMMENT_LABEL $6CC5 #isfunction
LABEL $4FAE draw_Score_game
LABEL $50B2 drawBonus
COMMENT_LABEL $50B2 #isfunction
LABEL $0254 angleOk
LABEL $02BF no_demo_m1
LABEL $0282 no_demo_m1_button
LABEL $0272 returnFromDemoInGame
LABEL $028F no_demo_m1_testshield
LABEL $02A9 shieldIsActiveDemo
LABEL $02A6 no_shield
LABEL $02BB shieldActiveDemo
LABEL $15ED newShield
COMMENT_LABEL $15ED #isfunction
LABEL $1629 continueShield
COMMENT_LABEL $1629 #isfunction
LABEL $1692 finishShield
COMMENT_LABEL $1692 #isfunction
LABEL $02D1 no_playerAction
COMMENT_LABEL $02D1 returning here when shield stuff is finished
LABEL $187C drawPlayerHome
COMMENT_LABEL $187C #isfunction
LABEL $02E1 noTimer_now
LABEL $037F check_spawn
COMMENT_LABEL $037F #isfunction
LABEL $02E9 speedAlert_10000
LABEL $0328 speed_loaded
LABEL $02FD speedAlert_5000
LABEL $0307 speedAlert_1000
LABEL $0311 no_spawn_now
LABEL $0348 no_starfield_change
LABEL $0343 at_least_one
LABEL $0345 starfieldMaxStore
LABEL $11D4 spawnStarfield
COMMENT_LABEL $11D4 #isfunction
LABEL $0355 despawnStarfield
LABEL $0369 no_starfield_found
LABEL $035A seek_starfield_next
LABEL $0078 TYPE_STARFIELD
COMMENT_LABEL $0078 -4
LABEL $0365 nextObject_test
LABEL $000F IS_NEW_STARFIELD
LABEL $0379 removeStarfield
LABEL $0378 no_starfield_found_1
LABEL $036E seek_starfield_next_1
LABEL $0AAE removeObject_rts
COMMENT_LABEL $0AAE #isfunction
LABEL $03A7 no_resetDecrease
LABEL $0398 noMax_cs
LABEL $03A7 nomin_cs
LABEL $03B5 noCount_cs1
LABEL $0437 spawnSquad
LABEL $0535 doStarlet
LABEL $0BA7 spawnX
COMMENT_LABEL $0BA7 #isfunction
LABEL $0D13 spawnHiddenX
COMMENT_LABEL $0D13 #isfunction
LABEL $0BF9 spawnHunter
COMMENT_LABEL $0BF9 #isfunction
LABEL $0F1F spawnBomber
COMMENT_LABEL $0F1F #isfunction
LABEL $0F87 spawnDragon
COMMENT_LABEL $0F87 #isfunction
LABEL $03F3 no_spawn_at_all
LABEL $03F3 returnSpawnNotAllowed
LABEL $110D spawnBonus
COMMENT_LABEL $110D #isfunction
LABEL $03FB cs_done
LABEL $03FC correctSquad
LABEL $0421 sbs_done_cs
LABEL $0410 not_oob_squad_19
LABEL $275A circle
COMMENT_LABEL $275A #isfunction
LABEL $0423 correctHunterAngle
LABEL $227C HunterList
COMMENT_LABEL $227C #isfunction
LABEL $0453 squadallowed
LABEL $04F7 spawnHunterSquad
LABEL $04C8 spawnHiddenXSquad
LABEL $0499 spawnXSquad
LABEL $046A spawnBomberSquad
LABEL $0F29 spb_allowed
LABEL $0497 sbs_done
LABEL $0BB1 spx_allowed
LABEL $04C6 sxs_done
LABEL $0D1D sphx_allowed
LABEL $04F5 shxs_done
LABEL $0C03 sph_allowed
LABEL $0533 sph_done
LABEL $0DB2 spawnStarlet
COMMENT_LABEL $0DB2 #isfunction
EQU -$06 u_offset1
COMMENT_LABEL -$06 behaviour offset is determined by next structure element
EQU $10 LetterObjectStruct
EQU $0B SPACE_TO_PREVIOUS
COMMENT_LABEL $0B with what value does the animation get updated
EQU $0D PREVIOUS_LETTER
COMMENT_LABEL $0D after how many rounds the movement updates (0 = each, 1 = every second etc)
EQU $0F DIF_DELAY
COMMENT_LABEL $0F #noDoubleWarn
EQU $10 DragonObjectStruct
EQU $0B DRAGON_COUNTER
COMMENT_LABEL $0B DRAGON TICK_COUNTER - on a different position, therfor named differently
EQU $0C CHILD_1
EQU $0E CHILD_2
EQU $10 DragonChildObjectStruct
EQU $02 WIGGLE
EQU $03 WIGGLE_DIRECTION
EQU $0B ANGLE_OFFSET
COMMENT_LABEL $0B two byte for easier adding
EQU $0D DRAGON
COMMENT_LABEL $0D my parent - I have to tell him when I die
EQU $0F SCALE_OFFSET
EQU $10 XObjectStruct
EQU $0B ANIM_COUNTER
COMMENT_LABEL $0B jmp to current draw routine
EQU $0C TICK_COUNTER
COMMENT_LABEL $0C after how many rounds the movement updates (0 = each, 1 = every second etc)
EQU $0D SCALE_DELTA
COMMENT_LABEL $0D with what value does the movement get updated (1-4)?
EQU $10 ShotObjectStruct
EQU $10 HunterObjectStruct
EQU $10 BomberObjectStruct
EQU $0C ANGLE_TICK_COUNTER
COMMENT_LABEL $0C after how many rounds the movement updates (0 = each, 1 = every second etc)
EQU $0D SHOT_COUNTER_RESET
COMMENT_LABEL $0D after how many ticks will the counter be resetd next time
EQU $0E SHOT_COUNTER
COMMENT_LABEL $0E after how many ticks do I shoot again?
EQU $0F ANGLE_DELTA
COMMENT_LABEL $0F add to angle each countdown
EQU $0F StarletObjectStruct
EQU $0C SCORE_COUNTER
COMMENT_LABEL $0C next time I spawn a bonus score
EQU $0D SCORE_COUNT
COMMENT_LABEL $0D what is the current bonus score (2-255)
EQU $0E I_AM_STAR_NO
COMMENT_LABEL $0E what number of star am I (0-2)
EQU $10 ExplosionObjectStruct
EQU $0B EXPLOSION_SCALE
EQU $0D EXPLOSION_INTENSITY
EQU $0E EXPLOSION_DATA
EQU $0F EXPLOSION_TYPE
EQU $10 ScoreObjectStruct
EQU $0B SCORE_COUNTDOWN
COMMENT_LABEL $0B how long will I be displayed (countdon to zero)
EQU $10 ScoreXObjectStruct
EQU $02 SCORE_POINTER_1
COMMENT_LABEL $02 current list vectorlist of first score digit
EQU $0C SCORE_POINTER_2
COMMENT_LABEL $0C current list vectorlist of second score digit
EQU $0E SCORE_POINTER_3
COMMENT_LABEL $0E current list vectorlist of third score digit
EQU $10 TimerObjectStruct
EQU $0B SECOND_COUNTER
COMMENT_LABEL $0B initialized with 50 again and again and countdown
EQU $10 StarfieldObjectStruct
EQU $00 SCALE_1
EQU $01 POS_1
EQU $02 SCALE_2
EQU $03 POS_2
EQU $07 CIRCLE_ADR
COMMENT_LABEL $07 circle adr preload to y
EQU $0B SCALE_3
EQU $0C POS_3
COMMENT_LABEL $0C current position
EQU $0D SCALE_4
EQU $0E POS_4
EQU $05 TYPE_X
COMMENT_LABEL $05 1
LABEL $0562 noMusic_xb1
LABEL $0578 no_scale_update_xb
LABEL $0573 die_xb
LABEL $0576 base_not_reached
LABEL $1FFA gameOver
COMMENT_LABEL $1FFA #isfunction
LABEL $0590 no_anim_update_xb
LABEL $20B4 enemyXList_1
LABEL $20A7 enemyXList_0
COMMENT_LABEL $20A7 #isfunction
LABEL $20CE enemyXList_3
LABEL $058E not_last_anim_xb
LABEL $0599 LF33D16
LABEL $135F myDraw_VL_mode_direct
COMMENT_LABEL $135F #isfunction
LABEL $05AB removeObject
COMMENT_LABEL $05AB #isfunction
LABEL $05DA was_not_first_re
COMMENT_LABEL $05DA find previous, go thru all objects from first and look where "I" am the next...
LABEL $05B2 was_first_re
LABEL $05C8 was_first_and_last_re
LABEL $05B9 was_first_not_last_re
LABEL $05DE try_next_re
LABEL $05E7 found_next_switch_re
LABEL $05FC was_not_first_but_last_re
LABEL $05ED was_not_first_and_not_last_re
EQU $0A TYPE_HUNTER
COMMENT_LABEL $0A 4
LABEL $0A79 noMusic_hub1
LABEL $0A8F no_scale_update_hb
LABEL $0A8A die_hb
LABEL $0A8D base_not_reached_hb
LABEL $14CC unloop_start_addressSub
LABEL $001E LENGTH_OF_HEADER
LABEL $0A9C LF33D23
LABEL $14C5 entry_optimized_draw_mvlc_unloop
COMMENT_LABEL $14C5 #isfunction
LABEL $0ADB was_not_first_re_rts
COMMENT_LABEL $0ADB find previous, go thru all objects from first and look where "I" am the next...
LABEL $0AB5 was_first_rts
LABEL $0ACA was_first_and_last_rts
LABEL $0ABC was_first_not_last_rts
LABEL $0ADF try_next_re_rts
LABEL $0AE8 found_next_switch_re_rts
LABEL $0AFC was_not_first_but_last_rts
LABEL $0AEE was_not_first_and_not_last_rts
LABEL $0B0E newObject
COMMENT_LABEL $0B0E #isfunction
LABEL $0B2F cs_done_no
LABEL $0B21 no_next_no
LABEL $0B24 was_not_only_no
EQU $0B TYPE_HIDDEN_X
COMMENT_LABEL $0B 3
LABEL $0B4F noMusic_hxb1
LABEL $0B67 no_anim_update_hxb
LABEL $0B65 not_last_anim_hxb
LABEL $0B7F no_scale_update_hxb
LABEL $0B7A die_hxb
LABEL $0B7D base_not_reached_hxb
LABEL $0B88 go_on_int_hxb
LABEL $0B8F no_int_hxb
LABEL $0B95 LF33D30
LABEL $2C05 SpawnX_Sound
LABEL $5516 play_sfx
COMMENT_LABEL $5516 #isfunction
LABEL $2BF3 SpawnHunter_Sound
LABEL $0C35 noMax_dh
EQU $0C TYPE_STARLET
COMMENT_LABEL $0C 2
LABEL $0C8F not_oob_sb
LABEL $0C98 no_angle_update_sb
LABEL $0CB0 no_anim_update_sb
LABEL $2402 StarletList_1
LABEL $23EA StarletList_0
LABEL $24DA StarletList_10
LABEL $0CAE not_last_anim_sb
LABEL $0CF1 no_score_update_sb
LABEL $0CEA score_ok
LABEL $0CEC score_max
LABEL $0CEC abort_new_new_score_sb
LABEL $1D54 buildscoreX
COMMENT_LABEL $1D54 #isfunction
LABEL $0D01 LF33D47
EQU $0D TYPE_SHOT
COMMENT_LABEL $0D 6
LABEL $0D90 no_scale_update_sb
LABEL $0D8B die_sb
LABEL $0D8E base_not_reached_sb
LABEL $0DA0 LF33D53
LABEL $15CB my_drawVLC_inner
COMMENT_LABEL $15CB #isfunction
LABEL $0DBC sps_allowed
LABEL $2C08 SpawnStar_Sound
LABEL $0E12 i_am_0
LABEL $0E01 i_am_1
LABEL $0DF0 i_am_2
LABEL $0E1B my_flag_set_ss
LABEL $0E2E storeStarAngle_ss
LABEL $0E24 notFirstStar_ss
LABEL $0E2C notSecondStar_ss
LABEL $0E3D not_oob1_ss
LABEL $0E4E not_oob_ss
EQU $0E TYPE_DRAGONCHILD
COMMENT_LABEL $0E 8
LABEL $0E94 noAngleChange_dcb
LABEL $0EB1 wiggle_minus
LABEL $0EBA do_changescale
LABEL $209A Dragonchild_List
COMMENT_LABEL $209A #isfunction
LABEL $0ECA LF33D56
LABEL $0EDC dragonchildFreeBehaviour
COMMENT_LABEL $0EDC #isfunction
LABEL $0EFC die_dcfb
LABEL $0EFF base_not_reached_dcfb
LABEL $0F01 no_scale_update_dcfb
LABEL $0F0D LF33D59
LABEL $2BFF SpawnBomber_Sound
LABEL $2504 BomberList_0
LABEL $0F91 spd_allowed
LABEL $2BF9 SpawnDragon_Sound
LABEL $23A4 DragonList_0
LABEL $1018 initDragonChild
LABEL $1023 noAngleChange_idc
EQU $10 TYPE_DRAGON
COMMENT_LABEL $10 7
LABEL $1041 dragonBehaviour_half
COMMENT_LABEL $1041 #isfunction
LABEL $1082 dragon_no_angle_update
LABEL $1076 dragonAngleOk_db
LABEL $10BE no_scale_update_db
LABEL $10BE base_not_reached_db
LABEL $109B die_db
LABEL $10AB no_child1_ex_db
LABEL $10B9 explodeDragonDone_ex_db
LABEL $10E3 no_anim_update_db
LABEL $23B0 DragonList_1
LABEL $23C8 DragonList_3
LABEL $10E1 not_last_anim_db
LABEL $10F0 half_dead_dragon
LABEL $10FB LF33D66
LABEL $1117 bonux_allowed
LABEL $2C02 SpawnBonus_Sound
LABEL $25E4 BonusList_0
EQU $11 TYPE_BONUS
COMMENT_LABEL $11 9
LABEL $1181 noMusic_bb1
LABEL $11A1 no_scale_update_bob
LABEL $1192 get_bob
LABEL $119F base_not_reached_bob
LABEL $1194 LF33D72
LABEL $1F0C initBonus
COMMENT_LABEL $1F0C #isfunction
LABEL $11B9 no_anim_update_bob
LABEL $25FA BonusList_1
LABEL $2744 BonusList_16
LABEL $11B7 not_last_anim_bob
LABEL $11C2 LF33D74
LABEL $1235 spawnFailed
LABEL $123B spawnLetter
LABEL $1246 _no_space_found_letter_object
LABEL $5735 _abc
LABEL $124E cont_letter_object
LABEL $CABE vector_move_scale
EQU $12 TYPE_BOMBER
COMMENT_LABEL $12 5
LABEL $128F no_angle_update_bb
LABEL $1283 angle_ok_bb
LABEL $12A7 no_anim_update_bb
LABEL $2518 BomberList_1
LABEL $25A4 BomberList_8
LABEL $12A5 not_last_anim_bb
LABEL $12F0 no_shot_update_bb
LABEL $12B7 short_timer_ok
LABEL $12EE noObjectAvailable_bs
LABEL $25B8 ShotList_0
COMMENT_LABEL $25B8 #isfunction
LABEL $2BFC BomberShot_Sound
LABEL $12F9 LF33D77
LABEL $1304 do_rest_above
EQU $0C MAX_LINE_NUM
LABEL $15EB line_end
COMMENT_LABEL $15EB #noDoubleWarn
LABEL $15D7 line_start
COMMENT_LABEL $15D7 #noDoubleWarn
EQU $0A MAX_LINE_NUM_A
LABEL $1312 myDraw_VL_mode
COMMENT_LABEL $1312 #isfunction
LABEL $1316 next_line
LABEL $1344 move_vl
LABEL $1324 draw_vl
LABEL $131C done_vl
LABEL $1363 next_line_direct
LABEL $1392 move_vl_direct
LABEL $1372 draw_vl_direct
LABEL $1369 done_vl_direct
LABEL $13AD myDraw_VL_mode2
COMMENT_LABEL $13AD #isfunction
LABEL $13B1 next_line2
LABEL $13E2 move_vl2
LABEL $13C3 draw_vl2
LABEL $13B7 done_vl2
LABEL $13FD myDraw_VL_mode3
COMMENT_LABEL $13FD #isfunction
LABEL $1401 next_line3
LABEL $1438 move_vl3
LABEL $1417 draw_vl3
LABEL $1407 done_vl3
LABEL $1422 wait_bra_1
LABEL $1443 wait_bra_2
LABEL $1459 myDraw_VL_mode4
COMMENT_LABEL $1459 #isfunction
LABEL $149C move_vl4
LABEL $1473 draw_vl4
LABEL $1463 done_vl4
LABEL $14CC header_start
LABEL $14EA header_end
LABEL $14EA JUMP_INTO_ALL79
LABEL $14EA JUMP_INTO_1179
EQU $14 ONE_LINE_LENGTH
LABEL $14FE JUMP_INTO_1079
LABEL $1512 JUMP_INTO_0979
LABEL $1526 JUMP_INTO_0879
LABEL $153A JUMP_INTO_0779
LABEL $154E JUMP_INTO_0679
LABEL $1562 JUMP_INTO_0579
LABEL $1576 JUMP_INTO_0479
LABEL $158A JUMP_INTO_0379
LABEL $159E JUMP_INTO_0279
LABEL $15B2 JUMP_INTO_0179
LABEL $161C sideok
LABEL $16E0 maxOffsetValues
LABEL $1630 can_do_shield
LABEL $164E noShieldGrowth
LABEL $1662 noMinorIncrease
LABEL $1683 noMax_c_s
LABEL $1680 nowidthuse
LABEL $168F widthOk_sc
LABEL $18B6 drawShield
COMMENT_LABEL $18B6 #isfunction
LABEL $16E4 polygon_5_div_correction
COMMENT_LABEL $16E4 72 values
LABEL $16C4 done92
LABEL $172C polygon_6_div_correction
COMMENT_LABEL $172C 60 values
LABEL $1768 polygon_7_div_correction
COMMENT_LABEL $1768 52 values
LABEL $179C polygon_8_div_correction
COMMENT_LABEL $179C 45 values
LABEL $16CB do_next_shield_check
LABEL $17CB onShield
COMMENT_LABEL $17CB #isfunction
LABEL $16D9 shield_not_touched
LABEL $1AC1 exchangeToExplosion
COMMENT_LABEL $1AC1 #isfunction
LABEL $16DB backfromExplosionRemove
LABEL $16DD shield_check_done
LABEL $16E0 correctionList
LABEL $0000 NO_DIV
LABEL $0001 DIV_BY32
LABEL $0003 DIV_BY12
LABEL $0004 DIV_BY11
LABEL $0005 DIV_BY10
LABEL $0007 DIV_BY8
LABEL $0008 DIV_BY7
LABEL $0009 DIV_BY6
LABEL $000A DIV_BY52
LABEL $000B DIV_BY53
LABEL $000C DIV_BY55
LABEL $000D DIV_BY5
LABEL $0002 DIV_BY16
LABEL $17C9 out_notTouched
LABEL $17DA noadd_os1
LABEL $17EF no_minus_os
LABEL $17FE isPositive_os
LABEL $180E test_n694
LABEL $0090 FIVE_ADD
LABEL $1823 got_it94
LABEL $1817 test_n794
LABEL $0078 SIX_ADD
LABEL $1820 test_n894
LABEL $0066 SEVEN_ADD
LABEL $005A EIGHT_ADD
LABEL $1825 getMod_os
LABEL $183D noadd_os2
LABEL $184E subCompleteDone95
LABEL $4C5F divi_list
LABEL $1878 out_notTouched2
LABEL $185F no_underflow_os
LABEL $186E subCompleteDone96
LABEL $1A45 buildRotatedNSidedFigure
COMMENT_LABEL $1A45 #isfunction  about 500-600 cycles
LABEL $18A7 is_five_list
LABEL $18A1 is_six_list
LABEL $189B is_seven_list
LABEL $1895 is_eight_list
LABEL $18AB do_draw_home
LABEL $18BB drawRotated_i1
LABEL $18F7 noInnerChange
LABEL $18FA a
LABEL $18FD LF33D98
LABEL $1901 next_line_dri1
LABEL $1918 wait_draw_dri1
LABEL $1934 drawRotated_i2
LABEL $1959 new_osc_forth
LABEL $1967 draw_next_osc_forth
LABEL $1964 nosf_1ok
LABEL $196A LF33D101
LABEL $196E next_line_dri2
LABEL $1985 wait_draw_dri2
LABEL $1990 no_innerShield
LABEL $19A1 drawRotated_i3
LABEL $19BF greaterzero_b
LABEL $19CD draw_next_osc_back
LABEL $19C7 new_osc_back
LABEL $19D0 LF33D104
LABEL $19D4 next_line_dri3
LABEL $19EB wait_draw_dri3
LABEL $1A1E LF33D107
LABEL $1A22 next_line_dr_ds4
LABEL $1A37 wait_draw_dr_ds4
LABEL $1A5D test_n6
LABEL $1A72 brnsf1
LABEL $1A66 test_n7
LABEL $1A6F test_n8
LABEL $1A88 next_brnsf
LABEL $1A97 brnsf2
LABEL $1AD9 nofullDragon_ete
LABEL $2BF6 DragonFirstHit_Sound
LABEL $1B28 noBonus_ete
LABEL $1AF6 add_again_bonus5
LABEL $4F58 add_score_x
COMMENT_LABEL $4F58 #isfunction
LABEL $1B01 testagainBonus
LABEL $1B09 doit_boe
LABEL $1FB8 initPacman
LABEL $1FC3 initWorm
LABEL $1FCE initGhost
LABEL $2BF0 Explosion_Sound
LABEL $1C1B entry_otherexplosion_type
LABEL $1B58 noStar_ete
LABEL $1B4D disable_star_0
LABEL $1B42 disable_star_1
LABEL $1B37 disable_star_2
LABEL $1C45 was_star_ete
LABEL $1BF7 explode_typeDragonchild
LABEL $1BB4 explode_typeDragon
LABEL $1BA5 explode_typeBomber
LABEL $1BED explode_typeHiddenX
LABEL $1BDF explode_typeHunter
LABEL $1B94 explode_typeX
LABEL $1B7E explode_typeShot
LABEL $1CA0 buildscore10
COMMENT_LABEL $1CA0 #isfunction
LABEL $1C0E continue_ete
LABEL $1D09 buildscore18
COMMENT_LABEL $1D09 #isfunction
LABEL $1BC2 no_child1_ex
LABEL $1BD0 explodeDragonDone_ex
LABEL $1C57 buildscore15
COMMENT_LABEL $1C57 #isfunction
LABEL $1C09 parentWasDead_ex
LABEL $1C07 notChild1_ex
LABEL $1C1E entry_otherexplosion_type_star
LABEL $1C51 explosion_is_ok
LABEL $1C8A bs15_0
LABEL $1C76 bs15_1
LABEL $1C60 bs15_2
LABEL $216E score45
COMMENT_LABEL $216E #isfunction
LABEL $1CE3 copy_rest_10
LABEL $2133 score30
COMMENT_LABEL $2133 #isfunction
LABEL $20F1 score15
COMMENT_LABEL $20F1 #isfunction
LABEL $1CD1 bs10_0
LABEL $1CBD bs10_1
LABEL $1CA9 bs10_2
LABEL $211A score20
COMMENT_LABEL $211A #isfunction
LABEL $20DB score10
COMMENT_LABEL $20DB #isfunction
LABEL $1D06 noObjectAvailable_b10_2
LABEL $1D05 noObjectAvailable_b10
LABEL $1D3E bs18_0
LABEL $1D28 bs18_1
LABEL $1D12 bs18_2
LABEL $21A9 score54
COMMENT_LABEL $21A9 #isfunction
LABEL $214F score36
COMMENT_LABEL $214F #isfunction
LABEL $2107 score18
COMMENT_LABEL $2107 #isfunction
LABEL $1DB4 noObjectAvailable_bx
LABEL $21C8 NumberList
COMMENT_LABEL $21C8 #isfunction
LABEL $1D8F no_hundred_bx
LABEL $1D92 store_hundred_bx
LABEL $1D9D draw_tens_bx
LABEL $1DA1 no_tens_bx
LABEL $1DA4 store_tens_bx
LABEL $76B4 scoreXBehaviour
COMMENT_LABEL $76B4 #isfunction
LABEL $50F5 phaseList
COMMENT_LABEL $50F5 #isfunction
LABEL $1E6D seekPhase
LABEL $1E7B phaseFound_i
LABEL $53B9 initPhase
LABEL $1E83 init_objects
LABEL $1E85 init_objects_a
LABEL $1EA0 is_game
LABEL $1EA0 is_title
LABEL $1EA0 next_list_entry_ig
LABEL $1ECF b2_gbs
LABEL $1EDC no2_gbs
LABEL $1F06 noButtonPressed
LABEL $1F18 addBonusTimeAgain
LABEL $1F2B noten_gbs
LABEL $1F3D no4B
LABEL $1F59 activeFaster
LABEL $1F6C activeExpand
LABEL $1F4C activeShield
LABEL $2087 BonusShieldList
COMMENT_LABEL $2087 #isfunction
LABEL $1F82 exchangeToBonusTimer
COMMENT_LABEL $1F82 #isfunction
LABEL $206E BonusFasterList
COMMENT_LABEL $206E #isfunction
LABEL $2049 BonusExpandList
COMMENT_LABEL $2049 #isfunction
LABEL $1F93 smallNumber_gbs
LABEL $1F96 storePos_gbs
LABEL $2C0B BonusGot_Sound
LABEL $2A58 PacmanSmall_0
LABEL $1FD7 cont_i
LABEL $2AEA WormSmall_0
LABEL $2AA8 GhostSmall_0
LABEL $7BDC gimmikBehaviour
LABEL $203D not_gameOver
LABEL $2009 no_demo_go
LABEL $6318 doGameOver
COMMENT_LABEL $6318 #isfunction
LABEL $547C test_highscore
COMMENT_LABEL $547C #isfunction
LABEL $202A no_hs_acchieved
LABEL $4D97 edit_highscore
COMMENT_LABEL $4D97 #isfunction
LABEL $0020 EEPROM_STORESIZE_HS
COMMENT_LABEL $0020 32 only 31 bytes must be used, last byte is always a generated checksum
LABEL $0008 EEPROM_HS1_BLOCK
LABEL $7E96 eeprom_save_highscore
COMMENT_LABEL $7E96 #isfunction
LABEL $20C1 enemyXList_2
LABEL $218A score50
COMMENT_LABEL $218A #isfunction
LABEL $21DC NumberList_0
LABEL $21EC NumberList_1
LABEL $21F6 NumberList_2
LABEL $2206 NumberList_3
LABEL $2216 NumberList_4
LABEL $2229 NumberList_5
LABEL $223C NumberList_6
LABEL $224F NumberList_7
LABEL $2259 NumberList_8
LABEL $2269 NumberList_9
LABEL $22AC HunterList_0
LABEL $22B6 HunterList_1
LABEL $22C0 HunterList_2
LABEL $22CA HunterList_3
LABEL $22D4 HunterList_4
LABEL $22DE HunterList_5
LABEL $22E8 HunterList_6
LABEL $22F2 HunterList_7
LABEL $22FC HunterList_8
LABEL $2306 HunterList_9
LABEL $2310 HunterList_10
LABEL $231A HunterList_11
LABEL $2324 HunterList_12
LABEL $232E HunterList_13
LABEL $2338 HunterList_14
LABEL $2342 HunterList_15
LABEL $234C HunterList_16
LABEL $2356 HunterList_17
LABEL $2360 HunterList_18
LABEL $236A HunterList_19
LABEL $2374 HunterList_20
LABEL $237E HunterList_21
LABEL $2388 HunterList_22
LABEL $2392 HunterList_23
LABEL $239C DragonList
COMMENT_LABEL $239C #isfunction
LABEL $23BC DragonList_2
LABEL $23D4 StarletList
COMMENT_LABEL $23D4 #isfunction
LABEL $241A StarletList_2
LABEL $2432 StarletList_3
LABEL $244A StarletList_4
LABEL $2462 StarletList_5
LABEL $247A StarletList_6
LABEL $2492 StarletList_7
LABEL $24AA StarletList_8
LABEL $24C2 StarletList_9
LABEL $24F2 BomberList
COMMENT_LABEL $24F2 #isfunction
LABEL $252C BomberList_2
LABEL $2540 BomberList_3
LABEL $2554 BomberList_4
LABEL $2568 BomberList_5
LABEL $257C BomberList_6
LABEL $2590 BomberList_7
LABEL $25C2 BonusList
COMMENT_LABEL $25C2 #isfunction
LABEL $2610 BonusList_2
LABEL $2626 BonusList_3
LABEL $263C BonusList_4
LABEL $2652 BonusList_5
LABEL $2668 BonusList_6
LABEL $267E BonusList_7
LABEL $2694 BonusList_8
LABEL $26AA BonusList_9
LABEL $26C0 BonusList_10
LABEL $26D6 BonusList_11
LABEL $26EC BonusList_12
LABEL $2702 BonusList_13
LABEL $2718 BonusList_14
LABEL $272E BonusList_15
EQU $0E BLOW_UP_PACMAN
EQU $0C BLOW_UP_GHOST
EQU $0C BLOW_UP_WORM
LABEL $2A6C PacmanSmall_1
LABEL $2A80 PacmanSmall_2
LABEL $2A94 PacmanSmall_3
LABEL $2ABE GhostSmall_1
LABEL $2AD4 GhostSmall_2
LABEL $2AF8 WormSmall_1
LABEL $2B06 WormSmall_2
LABEL $2B14 WormSmall_3
LABEL $2B22 WormSmall_4
LABEL $2B30 WormSmall_5
LABEL $2B3E WormSmall_6
LABEL $4A91 sfx_doframe_intern_3
COMMENT_LABEL $4A91 #isfunction
LABEL $4AFC sfx_doframe_intern_2
COMMENT_LABEL $4AFC #isfunction
LABEL $4B67 sfx_doframe_intern_1
COMMENT_LABEL $4B67 #isfunction
LABEL $2B62 next_reg_dsy
LABEL $2BA1 inc_reg_dsy
LABEL $2B8B no_halfnoise
LABEL $2B7D noCH1TestHalf
LABEL $2B85 do_half
LABEL $2B81 no9_s
LABEL $2B8B no10_s
LABEL $2BA4 doneSound_2
LABEL $2BA5 play_sfx_3
COMMENT_LABEL $2BA5 #isfunction
LABEL $2BB0 storeO_12k_3
LABEL $2BBD no_new_12_3
LABEL $2BBE play_sfx_2
COMMENT_LABEL $2BBE #isfunction
LABEL $2BC9 storeO_12k_2
LABEL $2BD6 no_new_12_2
LABEL $2BD7 play_sfx_1
COMMENT_LABEL $2BD7 #isfunction
LABEL $2BE2 storeO_12k_1
LABEL $2BEF no_new_12_1
LABEL $362D explosion1_data
LABEL $35B8 hunterSpawn_data
LABEL $32F5 DragonFirstHit_data
LABEL $352B dragon_data
LABEL $33B5 BomberShot_data
LABEL $34C2 bomber_data
LABEL $348F BonusAppears_data
LABEL $3615 spawnX_data
LABEL $2C26 StarAppears_1_data
LABEL $33FC BonusCollected_data
LABEL $2C0E phaseChange_Sound
LABEL $366D phaseChange_data
LABEL $2C11 explosionStart_Sound
LABEL $3259 explosionStart_data
LABEL $2C14 explosion2_Sound
LABEL $31B1 explosion2_data
LABEL $2C17 explosion3_Sound
LABEL $30A9 explosion3Triller_data
LABEL $2C1A explosionB_Sound
LABEL $2FB0 DockingB_data
LABEL $2C1D explosionA_Sound
LABEL $2EF0 DockingA_data
LABEL $2C20 explosionFading_Sound
LABEL $2DAF explostion_fading_data
LABEL $2C23 explosionLast_Sound
LABEL $2CB9 last_explosion_data
LABEL $36CB vtkIngameSong
LABEL $3FE6 vtktitleSong
LABEL $36C3 highscoreMusic
LABEL $46D4 vtkHighscoreSong
LABEL $36C7 gameOverMusic
LABEL $48CF gameOverSong
LABEL $36E8 instrument0
LABEL $36F1 instrument1
LABEL $36F9 instrument2
LABEL $3711 instrument3
LABEL $371C instrument4
LABEL $3726 instrument5
LABEL $373D instrument6
LABEL $374E instrument7
LABEL $375C instrument8
LABEL $3768 instrument9
LABEL $377E instrument10
LABEL $378B instrument11
LABEL $37B4 instrument12
LABEL $36EA instrument0loop
LABEL $36F3 instrument1loop
LABEL $3782 instrument10loop
LABEL $37C5 linker
LABEL $3C8F specialtrackDef0
LABEL $37CB pattern0Definition
LABEL $3CB4 trackDef0
LABEL $3C91 trackDef1
LABEL $37D3 pattern1Definition
LABEL $3CF9 trackDef3
LABEL $37DB pattern2Definition
LABEL $3D1C trackDef4
LABEL $37E3 pattern3Definition
LABEL $37EA pattern4Definition
LABEL $37F1 pattern5Definition
LABEL $37F8 pattern6Definition
LABEL $37FF pattern7Definition
LABEL $3806 pattern8Definition
LABEL $3D2C trackDef5
LABEL $380D pattern9Definition
LABEL $3814 pattern10Definition
LABEL $381B pattern11Definition
LABEL $3822 pattern12Definition
LABEL $3829 pattern13Definition
LABEL $3830 pattern14Definition
LABEL $3837 pattern15Definition
LABEL $383E pattern16Definition
LABEL $3D3D trackDef6
LABEL $3845 pattern17Definition
LABEL $384C pattern18Definition
LABEL $3853 pattern19Definition
LABEL $385A pattern20Definition
LABEL $3861 pattern21Definition
LABEL $3868 pattern22Definition
LABEL $386F pattern23Definition
LABEL $3876 pattern24Definition
LABEL $3D54 trackDef7
LABEL $387D pattern25Definition
LABEL $3D6C trackDef8
LABEL $3884 pattern26Definition
LABEL $388B pattern27Definition
LABEL $3892 pattern28Definition
LABEL $3899 pattern29Definition
LABEL $38A0 pattern30Definition
LABEL $38A7 pattern31Definition
LABEL $38AE pattern32Definition
LABEL $3D83 trackDef9
LABEL $38B5 pattern33Definition
LABEL $3D9D trackDef10
LABEL $38BC pattern34Definition
LABEL $38C3 pattern35Definition
LABEL $3DB5 trackDef11
LABEL $38CA pattern36Definition
LABEL $38D1 pattern37Definition
LABEL $38D8 pattern38Definition
LABEL $38DF pattern39Definition
LABEL $3DCF trackDef12
LABEL $38E6 pattern40Definition
LABEL $38ED pattern41Definition
LABEL $38F4 pattern42Definition
LABEL $38FB pattern43Definition
LABEL $3902 pattern44Definition
LABEL $3909 pattern45Definition
LABEL $3910 pattern46Definition
LABEL $3917 pattern47Definition
LABEL $391E pattern48Definition
LABEL $3926 pattern49Definition
LABEL $3E4C trackDef13
LABEL $392E pattern50Definition
LABEL $3EBA trackDef14
LABEL $3936 pattern51Definition
LABEL $3EF8 trackDef15
LABEL $393E pattern52Definition
LABEL $3946 pattern53Definition
LABEL $3F1D trackDef16
LABEL $394E pattern54Definition
LABEL $3956 pattern55Definition
LABEL $395E pattern56Definition
LABEL $3966 pattern57Definition
LABEL $396E pattern58Definition
LABEL $3DE9 trackDef17
LABEL $3976 pattern59Definition
LABEL $3E32 trackDef18
LABEL $397E pattern60Definition
LABEL $3986 pattern61Definition
LABEL $3E5C trackDef19
LABEL $398E pattern62Definition
LABEL $3996 pattern63Definition
LABEL $399E pattern64Definition
LABEL $39A6 pattern65Definition
LABEL $39AE pattern66Definition
LABEL $3E76 trackDef20
LABEL $39B5 pattern67Definition
LABEL $3E8F trackDef21
LABEL $39BC pattern68Definition
LABEL $39C3 pattern69Definition
LABEL $3EA4 trackDef22
LABEL $39CA pattern70Definition
LABEL $39D1 pattern71Definition
LABEL $39D8 pattern72Definition
LABEL $39DF pattern73Definition
LABEL $39E6 pattern74Definition
LABEL $39ED pattern75Definition
LABEL $39F4 pattern76Definition
LABEL $39FB pattern77Definition
LABEL $3A02 pattern78Definition
LABEL $3A09 pattern79Definition
LABEL $3A10 pattern80Definition
LABEL $3A17 pattern81Definition
LABEL $3A1E pattern82Definition
LABEL $3F42 trackDef23
LABEL $3A26 pattern83Definition
LABEL $3FDB trackDef24
LABEL $3A2E pattern84Definition
LABEL $3A35 pattern85Definition
LABEL $3A3C pattern86Definition
LABEL $3A43 pattern87Definition
LABEL $3A4A pattern88Definition
LABEL $3A51 pattern89Definition
LABEL $3A58 pattern90Definition
LABEL $3A5F pattern91Definition
LABEL $3A66 pattern92Definition
LABEL $3A6D pattern93Definition
LABEL $3A74 pattern94Definition
LABEL $3A7B pattern95Definition
LABEL $3A82 pattern96Definition
LABEL $3A89 pattern97Definition
LABEL $3A90 pattern98Definition
LABEL $3A98 pattern99Definition
LABEL $3F57 trackDef25
LABEL $3A9F pattern100Definition
LABEL $3F49 trackDef26
LABEL $3AA7 pattern101Definition
LABEL $3AAF pattern102Definition
LABEL $3F5E trackDef27
LABEL $3AB6 pattern103Definition
LABEL $3ABE pattern104Definition
LABEL $3AC6 pattern105Definition
LABEL $3F65 trackDef28
LABEL $3ACD pattern106Definition
LABEL $3AD5 pattern107Definition
LABEL $3ADC pattern108Definition
LABEL $3AE3 pattern109Definition
LABEL $3AEB pattern110Definition
LABEL $3AF2 pattern111Definition
LABEL $3AFA pattern112Definition
LABEL $3B02 pattern113Definition
LABEL $3B09 pattern114Definition
LABEL $3B11 pattern115Definition
LABEL $3B19 pattern116Definition
LABEL $3B20 pattern117Definition
LABEL $3B28 pattern118Definition
LABEL $3B2F pattern119Definition
LABEL $3B36 pattern120Definition
LABEL $3B3E pattern121Definition
LABEL $3B45 pattern122Definition
LABEL $3B4C pattern123Definition
LABEL $3F6C trackDef29
LABEL $3B54 pattern124Definition
LABEL $3B5C pattern125Definition
LABEL $3B63 pattern126Definition
LABEL $3B6A pattern127Definition
LABEL $3B71 pattern128Definition
LABEL $3B78 pattern129Definition
LABEL $3B7F pattern130Definition
LABEL $3B86 pattern131Definition
LABEL $3B8D pattern132Definition
LABEL $3B94 pattern133Definition
LABEL $3B9C pattern134Definition
LABEL $3BA3 pattern135Definition
LABEL $3BAA pattern136Definition
LABEL $3BB1 pattern137Definition
LABEL $3BB8 pattern138Definition
LABEL $3BBF pattern139Definition
LABEL $3BC7 pattern140Definition
LABEL $3BCE pattern141Definition
LABEL $3BD5 pattern142Definition
LABEL $3BDC pattern143Definition
LABEL $3BE3 pattern144Definition
LABEL $3BEA pattern145Definition
LABEL $3BF1 pattern146Definition
LABEL $3BF8 pattern147Definition
LABEL $3BFF pattern148Definition
LABEL $3C06 pattern149Definition
LABEL $3C0D pattern150Definition
LABEL $3C14 pattern151Definition
LABEL $3C1C pattern152Definition
LABEL $3F78 trackDef30
LABEL $3C23 pattern153Definition
LABEL $3F90 trackDef31
LABEL $3C2A pattern154Definition
LABEL $3FA8 trackDef32
LABEL $3C31 pattern155Definition
LABEL $3C38 pattern156Definition
LABEL $3C3F pattern157Definition
LABEL $3C46 pattern158Definition
LABEL $3C4D pattern159Definition
LABEL $3C54 pattern160Definition
LABEL $3C5B pattern161Definition
LABEL $3C62 pattern162Definition
LABEL $3C69 pattern163Definition
LABEL $3C70 pattern164Definition
LABEL $3C77 pattern165Definition
LABEL $3C7E pattern166Definition
LABEL $3C85 pattern167Definition
LABEL $3FC0 trackDef33
LABEL $3C8C pattern168Definition
LABEL $400F instrument0TitleMusic
LABEL $4018 instrument1TitleMusic
LABEL $4020 instrument2TitleMusic
LABEL $4030 instrument3TitleMusic
LABEL $403F instrument4TitleMusic
LABEL $404D instrument5TitleMusic
LABEL $405B instrument6TitleMusic
LABEL $4064 instrument7TitleMusic
LABEL $4071 instrument8TitleMusic
LABEL $407A instrument9TitleMusic
LABEL $4093 instrument10TitleMusic
LABEL $40A5 instrument11TitleMusic
LABEL $40BA instrument12TitleMusic
LABEL $40CC instrument13TitleMusic
LABEL $40D6 instrument14TitleMusic
LABEL $40E1 instrument15TitleMusic
LABEL $40FA instrument16TitleMusic
LABEL $411F instrument17TitleMusic
LABEL $4138 instrument18TitleMusic
LABEL $4011 instrument0loopTitleMusic
LABEL $401A instrument1loopTitleMusic
LABEL $4038 instrument3loopTitleMusic
LABEL $40E3 instrument15loopTitleMusic
LABEL $40FC instrument16loopTitleMusic
LABEL $4151 linkerTitleMusic
LABEL $4378 specialtrackDef0TitleMusic
LABEL $4157 pattern0DefinitionTitleMusic
LABEL $437F trackDef0TitleMusic
LABEL $437A trackDef1TitleMusic
LABEL $415F pattern1DefinitionTitleMusic
LABEL $43C4 trackDef3TitleMusic
LABEL $4167 pattern2DefinitionTitleMusic
LABEL $43D1 trackDef4TitleMusic
LABEL $4401 trackDef5TitleMusic
LABEL $4424 trackDef6TitleMusic
LABEL $416F pattern3DefinitionTitleMusic
LABEL $43DF trackDef7TitleMusic
LABEL $4176 pattern4DefinitionTitleMusic
LABEL $43EC trackDef9TitleMusic
LABEL $417D pattern5DefinitionTitleMusic
LABEL $4184 pattern6DefinitionTitleMusic
LABEL $418B pattern7DefinitionTitleMusic
LABEL $4192 pattern8DefinitionTitleMusic
LABEL $4199 pattern9DefinitionTitleMusic
LABEL $41A0 pattern10DefinitionTitleMusic
LABEL $4447 trackDef16TitleMusic
LABEL $41A8 pattern11DefinitionTitleMusic
LABEL $41AF pattern12DefinitionTitleMusic
LABEL $41B6 pattern13DefinitionTitleMusic
LABEL $41BD pattern14DefinitionTitleMusic
LABEL $41C5 pattern15DefinitionTitleMusic
LABEL $41CC pattern16DefinitionTitleMusic
LABEL $41D3 pattern17DefinitionTitleMusic
LABEL $41DA pattern18DefinitionTitleMusic
LABEL $41E2 pattern19DefinitionTitleMusic
LABEL $41E9 pattern20DefinitionTitleMusic
LABEL $41F0 pattern21DefinitionTitleMusic
LABEL $41F7 pattern22DefinitionTitleMusic
LABEL $41FF pattern23DefinitionTitleMusic
LABEL $4206 pattern24DefinitionTitleMusic
LABEL $420D pattern25DefinitionTitleMusic
LABEL $4214 pattern26DefinitionTitleMusic
LABEL $421C pattern27DefinitionTitleMusic
LABEL $4223 pattern28DefinitionTitleMusic
LABEL $422A pattern29DefinitionTitleMusic
LABEL $4231 pattern30DefinitionTitleMusic
LABEL $4239 pattern31DefinitionTitleMusic
LABEL $4240 pattern32DefinitionTitleMusic
LABEL $4247 pattern33DefinitionTitleMusic
LABEL $424E pattern34DefinitionTitleMusic
LABEL $445B trackDef41TitleMusic
LABEL $44B8 trackDef43TitleMusic
LABEL $4256 pattern35DefinitionTitleMusic
LABEL $4489 trackDef44TitleMusic
LABEL $44DF trackDef46TitleMusic
LABEL $425D pattern36DefinitionTitleMusic
LABEL $4264 pattern37DefinitionTitleMusic
LABEL $426B pattern38DefinitionTitleMusic
LABEL $4272 pattern39DefinitionTitleMusic
LABEL $4279 pattern40DefinitionTitleMusic
LABEL $4280 pattern41DefinitionTitleMusic
LABEL $4287 pattern42DefinitionTitleMusic
LABEL $4506 trackDef53TitleMusic
LABEL $455E trackDef54TitleMusic
LABEL $4536 trackDef55TitleMusic
LABEL $428E pattern43DefinitionTitleMusic
LABEL $4581 trackDef56TitleMusic
LABEL $4295 pattern44DefinitionTitleMusic
LABEL $429C pattern45DefinitionTitleMusic
LABEL $45A3 trackDef58TitleMusic
LABEL $42A3 pattern46DefinitionTitleMusic
LABEL $45C5 trackDef59TitleMusic
LABEL $46B2 trackDef60TitleMusic
LABEL $45F5 trackDef61TitleMusic
LABEL $42AA pattern47DefinitionTitleMusic
LABEL $42B1 pattern48DefinitionTitleMusic
LABEL $42B8 pattern49DefinitionTitleMusic
LABEL $42BF pattern50DefinitionTitleMusic
LABEL $461D trackDef62TitleMusic
LABEL $42C6 pattern51DefinitionTitleMusic
LABEL $42CD pattern52DefinitionTitleMusic
LABEL $42D4 pattern53DefinitionTitleMusic
LABEL $42DB pattern54DefinitionTitleMusic
LABEL $42E2 pattern55DefinitionTitleMusic
LABEL $42E9 pattern56DefinitionTitleMusic
LABEL $42F0 pattern57DefinitionTitleMusic
LABEL $4640 trackDef67TitleMusic
LABEL $42F7 pattern58DefinitionTitleMusic
LABEL $4663 trackDef68TitleMusic
LABEL $42FE pattern59DefinitionTitleMusic
LABEL $467C trackDef69TitleMusic
LABEL $4305 pattern60DefinitionTitleMusic
LABEL $430C pattern61DefinitionTitleMusic
LABEL $4313 pattern62DefinitionTitleMusic
LABEL $431A pattern63DefinitionTitleMusic
LABEL $4321 pattern64DefinitionTitleMusic
LABEL $4328 pattern65DefinitionTitleMusic
LABEL $432F pattern66DefinitionTitleMusic
LABEL $4336 pattern67DefinitionTitleMusic
LABEL $433D pattern68DefinitionTitleMusic
LABEL $4344 pattern69DefinitionTitleMusic
LABEL $434B pattern70DefinitionTitleMusic
LABEL $4352 pattern71DefinitionTitleMusic
LABEL $4359 pattern72DefinitionTitleMusic
LABEL $4360 pattern73DefinitionTitleMusic
LABEL $4367 pattern74DefinitionTitleMusic
LABEL $46A2 trackDef84TitleMusic
LABEL $4696 trackDef85TitleMusic
LABEL $46AD trackDef86TitleMusic
LABEL $436E pattern75DefinitionTitleMusic
LABEL $4375 pattern76DefinitionTitleMusic
LABEL $46E7 instrument0HighscoreMusik
LABEL $46F0 instrument1HighscoreMusik
LABEL $470B instrument2HighscoreMusik
LABEL $4727 instrument3HighscoreMusik
LABEL $4739 instrument4HighscoreMusik
LABEL $4744 instrument5HighscoreMusik
LABEL $4766 instrument6HighscoreMusik
LABEL $476F instrument7HighscoreMusik
LABEL $46E9 instrument0loopHighscoreMusik
LABEL $4771 instrument7loopHighscoreMusik
LABEL $4788 linkerHighscoreMusik
LABEL $4801 specialtrackDef0HighscoreMusik
LABEL $478E pattern0DefinitionHighscoreMusik
LABEL $4808 trackDef0HighscoreMusik
LABEL $4824 trackDef1HighscoreMusik
LABEL $4847 trackDef2HighscoreMusik
LABEL $4795 pattern1DefinitionHighscoreMusik
LABEL $479C pattern2DefinitionHighscoreMusik
LABEL $47A3 pattern3DefinitionHighscoreMusik
LABEL $47AA pattern4DefinitionHighscoreMusik
LABEL $47B1 pattern5DefinitionHighscoreMusik
LABEL $47B8 pattern6DefinitionHighscoreMusik
LABEL $47BF pattern7DefinitionHighscoreMusik
LABEL $47C6 pattern8DefinitionHighscoreMusik
LABEL $486A trackDef10HighscoreMusik
LABEL $47CD pattern9DefinitionHighscoreMusik
LABEL $488D trackDef11HighscoreMusik
LABEL $47D4 pattern10DefinitionHighscoreMusik
LABEL $47DB pattern11DefinitionHighscoreMusik
LABEL $48AF trackDef13HighscoreMusik
LABEL $47E2 pattern12DefinitionHighscoreMusik
LABEL $4803 trackDef14HighscoreMusik
LABEL $47E9 pattern13DefinitionHighscoreMusik
LABEL $47F0 pattern14DefinitionHighscoreMusik
LABEL $47F7 pattern15DefinitionHighscoreMusik
LABEL $47FE pattern16DefinitionHighscoreMusik
LABEL $48DA instrument0GameOverMusik
LABEL $48E3 instrument1GameOverMusik
LABEL $491D instrument2GameOverMusik
LABEL $4944 instrument3GameOverMusik
LABEL $48DC instrument0loopGameOverMusik
LABEL $48EA instrument1loopGameOverMusik
LABEL $4924 instrument2loopGameOverMusik
LABEL $494A instrument3loopGameOverMusik
LABEL $4967 linkerGameOverMusik
LABEL $4985 specialtrackDef0GameOverMusik
LABEL $496D pattern0DefinitionGameOverMusik
LABEL $4987 trackDef0GameOverMusik
LABEL $49CF trackDef1GameOverMusik
LABEL $49AA trackDef2GameOverMusik
LABEL $4974 pattern1DefinitionGameOverMusik
LABEL $4A14 trackDef3GameOverMusik
LABEL $49F2 trackDef4GameOverMusik
LABEL $497B pattern2DefinitionGameOverMusik
LABEL $4A38 trackDef5GameOverMusik
LABEL $4A5C trackDef6GameOverMusik
LABEL $4982 pattern3DefinitionGameOverMusik
LABEL $C83F SHADOW_BASE
LABEL $4A81 sfx_endofeffect_3
LABEL $4A90 noay3
LABEL $4AA5 sfx_checktonefreq_3
LABEL $4AAE sfx_checknoisefreq_3
LABEL $4AB7 sfx_checkvolume_3
LABEL $4ABE sfx_checktonedisable_3
LABEL $4AD4 sfx_enabletone_3
LABEL $4AC5 sfx_disabletone_3
LABEL $4AE3 sfx_enablenoise_3
LABEL $4AD6 sfx_checknoisedisable_3
LABEL $4ADA sfx_disablenoise_3
LABEL $4AEC sfx_endofeffect_2
LABEL $4AFB noay2
LABEL $4B10 sfx_checktonefreq_2
LABEL $4B19 sfx_checknoisefreq_2
LABEL $4B22 sfx_checkvolume_2
LABEL $4B29 sfx_checktonedisable_2
LABEL $4B3F sfx_enabletone_2
LABEL $4B30 sfx_disabletone_2
LABEL $4B4E sfx_enablenoise_2
LABEL $4B41 sfx_checknoisedisable_2
LABEL $4B45 sfx_disablenoise_2
LABEL $4B57 sfx_endofeffect_1
LABEL $4B66 noay1
LABEL $4B7B sfx_checktonefreq_1
LABEL $4B84 sfx_checknoisefreq_1
LABEL $4B8D sfx_checkvolume_1
LABEL $4B94 sfx_checktonedisable_1
LABEL $4BAA sfx_enabletone_1
LABEL $4B9B sfx_disabletone_1
LABEL $4BB9 sfx_enablenoise_1
LABEL $4BAC sfx_checknoisedisable_1
LABEL $4BB0 sfx_disablenoise_1
LABEL $4BC2 div32
LABEL $4BCB div16
LABEL $4BD3 div12
LABEL $4BE1 div11
LABEL $4BED div10
LABEL $4BFA div9
LABEL $4C08 div8
LABEL $4C0F div7
LABEL $4C1D div6
LABEL $4C2A div52
LABEL $4C39 div53
LABEL $4C44 div55
LABEL $4C53 div5
EQU $06 DIV_BY9
LABEL $7090 HIGH_SCORE_ZERO_POS
EQU $14 X_STEP_LETTERS
LABEL $4D76 return_to_title
LABEL $CA5A tmp1
LABEL $4CDF next_score_entry
LABEL $4CE4 next_name_letter
LABEL $CA5B mov_x
LABEL $4D14 LF33D127
LABEL $5439 bcd_to_csa
LABEL $CA5A mov_y
LABEL $4FC8 in_game_score
LABEL $4D8C display_highscore_intern2
EQU $10 BLINK_LENGTH
COMMENT_LABEL $10 1/3 second
LABEL $4DC2 edit_highscore_inner
LABEL $4DE9 next_score_entry_edit
LABEL $4DEE next_name_letter_edit
LABEL $4E3F no_blinker
LABEL $4E37 no_blink_state_change
LABEL $4E34 clear_blink_state
LABEL $593D ABC_28
COMMENT_LABEL $593D " "
LABEL $4E4D LF33D140
LABEL $5540 query_joystick
COMMENT_LABEL $5540 #isfunction
LABEL $4ED7 hs_no_new_xpos
LABEL $4EC3 pos_left_hse
LABEL $4EB6 pos_right_hse
LABEL $4F2A positioning_done_hse
LABEL $4F2A hs_no_new_ypos
LABEL $4F07 pos_down_hse
LABEL $4EE4 pos_up_hse
LABEL $4F03 no_overflow_plus_hs
LABEL $4F26 no_overflow_minus_hs
LABEL $4F31 check_buttons_edit
LABEL $4F68 no_overflow_0_asx
LABEL $4F76 no_overflow_1_asx
LABEL $4F83 overflow_2_asx
LABEL $4F91 overflow_3_asx
LABEL $4F9F overflow_4_asx
LABEL $4FAD overflow_5_asx
EQU $10 SCORE_SIZE
EQU $10 SCORE_POS_DIF
EQU $10 SCORE_X_START
LABEL $4FAE draw_Score
COMMENT_LABEL $4FAE #isfunction
LABEL $5022 draw_demo
COMMENT_LABEL $5022 #isfunction
LABEL $4FDE LF33D146
LABEL $504B no_change_demo_int
LABEL $5046 make_light_demo
LABEL $5050 LF33D149
LABEL $5065 next_name_letter_vp_d
LABEL $507D indemo_draw
LABEL $5095 LF33D154
EQU -$1E BONUS_X_START
LABEL $50F4 noBonus_db
LABEL $50C7 scale_mx_db
LABEL $50E9 LF33D158
LABEL $50F5 phaseList_start
LABEL $513B phase0_x
LABEL $5159 phase0_hx
LABEL $5177 hunter_raid_1
LABEL $51D1 phase1
LABEL $5267 squad_raid_1
LABEL $5195 bomber_raid_1
LABEL $51EF phase2
LABEL $51B3 dragon_raid_1
LABEL $520D phase3
LABEL $5375 squad_raid_2a
LABEL $52FD hunter_raid_2
LABEL $522B phase4
LABEL $52A3 squad_raid_2
LABEL $531B bomber_raid_2
LABEL $5249 phase5
LABEL $5339 dragon_raid_2
LABEL $5285 phase6
LABEL $5357 squad_raid_3
LABEL $52C1 phase7
LABEL $52DF phase8
LABEL $513B phaseList_end
LABEL $5393 out_cs2
LABEL $53CE no_change_cs1
LABEL $53D8 no_change_cs2
LABEL $53E2 no_change_cs3
LABEL $53EC no_change_cs4
LABEL $5422 out_cs
LABEL $540F activeFaster_cs
LABEL $5417 activeExpand_cs
LABEL $5422 activeShield_cs
LABEL $5423 csa_to_bcd
LABEL $5425 next_byte_c_b
LABEL $543B next_byte_b_c
LABEL $544D compare_csa
LABEL $544F next_compare_cc
LABEL $5460 return_u_greater_x
LABEL $545D return_u_smaller_x
LABEL $545A return_u_equal_x
LABEL $5463 compare_csa_bcd
LABEL $5472 highScoreSeekDone
LABEL $547B done_hsd
LABEL $5484 testNext_highscore_th
LABEL $5491 newHighscore
LABEL $54A8 only_new_score_copy
LABEL $54E0 play_sfx_p1
LABEL $54E4 use1SFX_psfx1
LABEL $54EE use2SFX_psfx1
LABEL $5513 out_psfx1
LABEL $54F8 use3SFX_psfx1
LABEL $5502 testPrio1_psfx1
LABEL $5509 testPrio2_psfx1
LABEL $5510 testPrio3_psfx1
LABEL $551F use2SFX_psfx_np
LABEL $5529 use3SFX_psfx_np
LABEL $553D out_psfx_np
LABEL $5533 testPrio2_psfx_np
LABEL $553A testPrio3_psfx_np
LABEL $5540 queryHW160
EQU $08 DIGITAL_JOYTICK_LOOP_MIN
LABEL $5549 waitLoopV160
LABEL $5561 yReadDone160
LABEL $5568 noymove160
LABEL $558E noxmove160
LABEL $5571 waitLoopH160
LABEL $5589 xReadDone160
EQU $08 SCROLL_SCALE_FACTOR
EQU $0F NUMBER_OF_SCROLL_LETTERS
LABEL $CA4E scroll_text_address_start
LABEL $CA50 scroll_text_address_current
LABEL $CA54 scroll_x
LABEL $CA56 scroll_x_right
LABEL $CA57 scroll_step_width
LABEL $CA59 counter
LABEL $CA5C divide_tmp
LABEL $CA5E half_stepCounter
LABEL $CA5F v0
LABEL $CA5F y0
LABEL $CA60 x0
LABEL $CA61 v1
LABEL $CA61 y1
LABEL $CA62 x1
LABEL $CA63 v2
LABEL $CA63 y2
LABEL $CA64 x2
LABEL $CA66 neggi
LABEL $CA67 clip_test
LABEL $CA69 clip_line_counter
LABEL $CA6A clip_counter
LABEL $CA6C clip_pattern
LABEL $CA6E firstVector
LABEL $CA6F BORDER
LABEL $CA71 is_first_letter
LABEL $CA72 do_another_letter
LABEL $CA73 clipped_vector_list
LABEL $CAAF clip_end
EQU $01 STEP_DELAY
COMMENT_LABEL $01 tst bpl -> 1 = 2
LABEL $55C9 divide_by_zero161
LABEL $55C1 divide_next161
LABEL $55B3 divide_next1161
LABEL $55BB divide_by_zero1161
LABEL $55CC divide_end161
LABEL $55FF do_not_use_half_steps
LABEL $5644 no_scrollstep_change
LABEL $560A no_neg_s
LABEL $5614 notestForSignChange
LABEL $5619 scroll_overflow_hardcoded
LABEL $5636 getNextChar_start
LABEL $5636 scroll_text_not_over_yet
LABEL $564A getNextChar
LABEL $5659 no_text_end
LABEL $5662 no_scroll_space
LABEL $568D load_x_with_letter_address_done
LABEL $566B no_scroll_fullstop
LABEL $5930 ABC_26
LABEL $5674 noExclamation
LABEL $593E ABC_29
COMMENT_LABEL $593E "!"
LABEL $5679 no_scroll_0
LABEL $5685 noBlinky
LABEL $568D startScrolling
LABEL $568D scroll_next_intern
LABEL $56C0 not_last_letter
LABEL $56A4 isPerhapsLastLetter
LABEL $56AB isLastLetter
LABEL $56C0 noClipRight_s
LABEL $5AFA clip_vlp_p2_right
COMMENT_LABEL $5AFA #isfunction
LABEL $56E1 not_first_letter
LABEL $56DE noClipLeft_s
LABEL $595A clip_vlp_p2_left
COMMENT_LABEL $595A #isfunction
LABEL $5706 scroll_objects_all_notdone_1
LABEL $5711 scroll_objects_all_notdone_2
LABEL $571A LF33D168
LABEL $5734 scroll_objects_all_done
EQU $08 BLOW_UP
COMMENT_LABEL $08 max = 64
LABEL $5735 ABC
COMMENT_LABEL $5735 #isfunction
LABEL $576F ABC_0
LABEL $5782 ABC_1
LABEL $5795 ABC_2
LABEL $57AE ABC_3
LABEL $57C1 ABC_4
LABEL $57D7 ABC_5
LABEL $57E7 ABC_6
LABEL $5800 ABC_7
LABEL $5810 ABC_8
LABEL $5820 ABC_9
LABEL $5830 ABC_10
LABEL $5840 ABC_11
LABEL $584A ABC_12
LABEL $5857 ABC_13
LABEL $5861 ABC_14
LABEL $5877 ABC_15
LABEL $5884 ABC_16
LABEL $58A3 ABC_17
LABEL $58B9 ABC_18
LABEL $58D5 ABC_19
LABEL $58E2 ABC_20
LABEL $58EF ABC_21
LABEL $58F9 ABC_22
LABEL $5909 ABC_23
LABEL $5913 ABC_24
LABEL $5923 ABC_25
LABEL $576F ABC_0__1
LABEL $5982 was_not_visible_vlp
LABEL $5976 do_next_vector_vlp
LABEL $59C8 was_visible_vlp
LABEL $59A2 startpoint_invisible_coord
LABEL $59BE startpoint_invisible_pattern
LABEL $59B2 end_of_computing_vlp
LABEL $5A04 first_invisible_second_visible
LABEL $59A2 str_pat_and_scale_vlp
LABEL $59A6 str_pat_and_scale_vlp_nt
LABEL $59A6 next_point_invisible_pattern
LABEL $59F4 first_visible_second_invisible
LABEL $59F4 make_two_pieces_visible_vlp
LABEL $5A27 bothEndsSame
LABEL $5A0A do_end_calcs
LABEL $5A04 make_two_pieces_invisible_vlp
LABEL $5A3A CALC_P2
LABEL $5A54 is_pl1172
LABEL $5ACC div_d_32172
LABEL $5A8D div_d_16172
LABEL $5AA2 div_d_8172
LABEL $5AB7 div_d_4172
LABEL $5A64 div_d_64172
LABEL $5A6D is_pl2172
LABEL $5A76 is_pl3172
LABEL $5A81 no_neggi1172
LABEL $5AF9 end_macro172
LABEL $5A96 is_pl4172
LABEL $5A9F is_pl5172
LABEL $5AE1 enter_div32172
LABEL $5AAB is_pl48172
LABEL $5AB4 is_pl58172
LABEL $5AE3 enter_div328172
LABEL $5AC0 is_pl44172
LABEL $5AC9 is_pl54172
LABEL $5AE5 enter_div324172
LABEL $5AD5 is_pl6172
LABEL $5ADE is_pl7172
LABEL $5AEF no_neggi172
LABEL $5B23 was_not_visible_vlpr
LABEL $5B68 was_visible_vlpr
LABEL $5B17 do_next_vector_vlpr
LABEL $5B3F str_pat_and_scale_vlpr
LABEL $5B61 str_pat_and_scale_vlpr_nv
LABEL $5B4F end_of_computing_vlpr
LABEL $5B98 make_two_pieces_invisible_vlpr
LABEL $5B43 str_pat_and_scale_vlpr_nt
LABEL $5B5B str_pat_and_scale_vlpr_nt_ft
LABEL $5B90 make_two_pieces_visible_vlpr
LABEL $CAAF title_phase
LABEL $CAB0 title_phase_counter
LABEL $CAB2 title_scale
LABEL $CAB3 vector_print_scale
LABEL $CAB8 print_letter_angle_dif
LABEL $CABA work_angle
EQU $05 ADD_DELAY
LABEL $CABF dummyCounter
EQU $00 PHASE_0_NONE
EQU $01 PHASE_1_SHOW_NOTHING
EQU $02 PHASE_2_SHOW_X
EQU $03 PHASE_3_SHOW_HX
EQU $04 PHASE_4_SHOW_HUNTER
EQU $05 PHASE_5_SHOW_BOMBER
EQU $06 PHASE_6_SHOW_DRAGON
EQU $07 PHASE_7_SHOW_BONUS
EQU $08 PHASE_8_SHOW_SCORER
EQU $09 PHASE_END_SHOW_END
LABEL $00C8 INITIAL_TITLE_PHASE_LENGTH
LABEL $5BC5 remove_unwanted_objects
COMMENT_LABEL $5BC5 #isfunction
LABEL $5BC8 test_text_unwanted
LABEL $5BDD unwanted_done
LABEL $5BD9 do_next_one
LABEL $5CF5 no_title_phase_switch
LABEL $5C0E do_slow
LABEL $5BFC do_fast
LABEL $5C27 speed_done
LABEL $5C33 no_to_hi_speed
LABEL $5C3F no_to_lo_speed
LABEL $5C49 was_not_last_phase
LABEL $5C73 init_title_phase_2
LABEL $5C7F init_title_phase_3
LABEL $5C8B init_title_phase_4
LABEL $5C97 init_title_phase_5
LABEL $5CA3 init_title_phase_6
LABEL $5CCF init_title_phase_7
LABEL $5CDB init_title_phase_8
LABEL $5CF5 done_title_init_phase_done
EQU $28 SHIFT_TITLE_UP_SPRITE
LABEL $5E5B behaviourXTitel
COMMENT_LABEL $5E5B #isfunction
LABEL $5CE7 done_title_init_phase
LABEL $5EA7 behaviourHXTitel
COMMENT_LABEL $5EA7 #isfunction
LABEL $5EE2 behaviourHunterTitel
COMMENT_LABEL $5EE2 #isfunction
LABEL $5F1B behaviourBomberTitel
COMMENT_LABEL $5F1B #isfunction
LABEL $5F3C behaviourDragonTitel
COMMENT_LABEL $5F3C #isfunction
LABEL $5F5F behaviourDragonChildTitel
LABEL $5F89 behaviourBonusTitel
COMMENT_LABEL $5F89 #isfunction
LABEL $5FAA behaviourStarletTitel
COMMENT_LABEL $5FAA #isfunction
LABEL $5D0E not_high_scale
LABEL $5D1A not_low_scale
LABEL $5D3B title_phase_2
LABEL $5D40 title_phase_3
LABEL $5D45 title_phase_4
LABEL $5D4A title_phase_5
LABEL $5D4F title_phase_6
LABEL $5D54 title_phase_7
LABEL $5D59 title_phase_8
LABEL $5D72 completely_done_title_phase
LABEL $5D5E done_title_phase
LABEL $5E0A vectorPrint
COMMENT_LABEL $5E0A #isfunction
EQU $3C INITIAL_ANGLE_DIFFERENCE
LABEL $5DE3 initOneFollowingLetter
LABEL $5E0D next_name_letter_vp
LABEL $5E31 _no_space_found
LABEL $5E39 cont_vp
LABEL $5E4B LF33D187
LABEL $5FCB move_to_d_start
LABEL $5E7A no_anim_update_ti_xb
LABEL $5E78 not_last_anim_ti_xb
LABEL $5E7A do_behaviourRest1
LABEL $5E8E noscale_max_bxt
LABEL $5E93 do_behaviourRest2
LABEL $5E95 LF33D189
LABEL $5EC6 no_anim_update_ti_Hxb
LABEL $5EC4 not_last_anim_ti_Hxb
LABEL $5EDA noscale_max_bHxt
LABEL $5EE9 do_behaviourRest3
LABEL $5F04 noscale_max_bHuntert
LABEL $5F09 LF33D191
LABEL $5F3A no_anim_update_bbt
LABEL $5F38 not_last_anim_bbt
LABEL $5F5D no_anim_update_dbt
LABEL $5F5B not_last_anim_dbt
LABEL $5F78 wiggle_minus_t
LABEL $5F83 do_changescale_t
LABEL $5FA7 no_anim_update_bobt
LABEL $5FA5 not_last_anim_bobt
LABEL $5FC8 no_anim_update_sb_t
LABEL $5FC6 not_last_anim_sb_t
LABEL $CAB4 selected_option_O
LABEL $CAB5 selected_scale_size_O
LABEL $CAB6 is_first_move_O
LABEL $CAB7 letterScale_O
LABEL $CAB8 moveScale_O
LABEL $CAB9 printing_now
LABEL $CABA inc_o
LABEL $CABB use_scale_letter_o
LABEL $CABC change_scale
LABEL $CABD resetDone
LABEL $CABE veryUp
LABEL $CABF veryUoCount_1
LABEL $CAC0 veryUoCount_2
LABEL $5FF5 checkLevelAgain
LABEL $600E initLevelDone
LABEL $6009 digit1Ok_opt_init
LABEL $600E display_options_loop
LABEL $6057 noVeryup1
LABEL $61EA options_string
COMMENT_LABEL $61EA #isfunction
LABEL $6218 vectorPrint2
COMMENT_LABEL $6218 #isfunction
LABEL $61F2 music_string
LABEL $609B printMusicOff
LABEL $6090 printMusicOn
LABEL $620B on_string
LABEL $60A6 continueWithSFX
LABEL $6207 off_string
LABEL $61F8 sfx_string
LABEL $60DB printSFXOff
LABEL $60C0 printSFXOn
LABEL $60D0 no_haldNoise_print
LABEL $620E half_string
LABEL $60E6 continueWithBack
LABEL $61FC reset_string
LABEL $6109 not_done_o
LABEL $6213 done_string
LABEL $6202 back_string
LABEL $615D display_options_joystick
LABEL $6141 doGoBack_options
LABEL $62CE doResetOptions
LABEL $62D8 doSwitchSFX
LABEL $62F9 doSwitchMusic
LABEL $0008 EEPROM_STORESIZE_OPTIONS
COMMENT_LABEL $0008 8 only 7 bytes must be used, last byte is always a generated checksum
LABEL $0000 EEPROM_OPTION_BLOCK
LABEL $7E96 eeprom_save_options
COMMENT_LABEL $7E96 #isfunction
LABEL $618C no_new_ypos_options
LABEL $617A pos_down_options
LABEL $616D pos_up_options
LABEL $618C positioning_done_options
LABEL $61E4 positioning_done_options_2
LABEL $61E1 noVeryup2
LABEL $61E1 no_new_xpos_opt
LABEL $61C0 pos_left_opt
LABEL $61A0 pos_right_opt
LABEL $61BB digit1Ok_opt
LABEL $61DC digit1Ok_opt_2
LABEL $621E next_name_letter_vp2
LABEL $6296 is_not_first_move
LABEL $6272 noScaleChange_o
LABEL $6260 do_dec_o
LABEL $624C do_inc_o
LABEL $6254 noScaleChange_o1
LABEL $6272 loadsizedone_o
LABEL $6268 noScaleChange_o2
LABEL $6277 LF33D200
LABEL $628B is_not_first_move2
LABEL $628B noIntChange_o2
LABEL $62A1 _no_space_found2
LABEL $62A9 cont_vp2
LABEL $62B8 LF33D203
LABEL $7E51 resetEprom
COMMENT_LABEL $7E51 #isfunction
LABEL $62FE switchMusicOn
LABEL $62F0 sfx_was_off
LABEL $62DD sfx_was_on
LABEL $62E9 half_noise_was_on
LABEL $62E2 only_sfx_was_on
LABEL $62F6 sfxOptionOkSwitched
LABEL $62F3 sfxOptionOkSwitched_1
LABEL $630D switchMusicOff
EQU $01 DO_Z_KOORDINATE
LABEL $CA5C allDirs_calc
LABEL $CA5C _0_0_0
LABEL $002A INVERS_OFFSET
LABEL $CA5F _1_0_0
LABEL $CA62 _1_1_0
LABEL $CA65 _1_0_1
LABEL $CA68 _1_1_1
LABEL $CA6B _0_1_0
LABEL $CA6E _0_1_1
LABEL $CA71 _0_0_1
LABEL $CA74 _N_1_0
LABEL $CA77 _N_0_1
LABEL $CA7A _0_N_1
LABEL $CA7D _N_1_1
LABEL $CA80 _1_N_1
LABEL $CA83 _1_1_N
LABEL $CA4E END_RAM_START
LABEL $CA4E gameOverCounter1
LABEL $CA4F gameOverIntensity
LABEL $CA50 helper
LABEL $CA51 cosx
LABEL $CA52 sinx
LABEL $CA53 cosy
LABEL $CA54 siny
LABEL $CA55 cosz
LABEL $CA56 sinz
LABEL $CA57 angle_x
LABEL $CA58 angle_y
LABEL $CA59 angle_z
LABEL $CA5A scale_3d
LABEL $CA5B scale_3d_move
LABEL $CAAD start_letter_data
LABEL $CA5C _000x
LABEL $CA5D _000y
LABEL $CA5E _000z
LABEL $CA5F _100x
LABEL $CA60 _100y
LABEL $CA61 _100z
LABEL $CA62 _110x
LABEL $CA63 _110y
LABEL $CA64 _110z
LABEL $CA65 _101x
LABEL $CA66 _101y
LABEL $CA67 _101z
LABEL $CA68 _111x
LABEL $CA69 _111y
LABEL $CA6A _111z
LABEL $CA6B _010x
LABEL $CA6C _010y
LABEL $CA6D _010z
LABEL $CA6E _011x
LABEL $CA6F _011y
LABEL $CA70 _011z
LABEL $CA71 _001x
LABEL $CA72 _001y
LABEL $CA73 _001z
LABEL $CA74 _N10x
LABEL $CA75 _N10y
LABEL $CA76 _N10z
LABEL $CA77 _N01x
LABEL $CA78 _N01y
LABEL $CA79 _N01z
LABEL $CA7A _0N1x
LABEL $CA7B _0N1y
LABEL $CA7C _0N1z
LABEL $CA7D _N11x
LABEL $CA7E _N11y
LABEL $CA7F _N11z
LABEL $CA80 _1N1x
LABEL $CA81 _1N1y
LABEL $CA82 _1N1z
LABEL $CA83 _11Nx
LABEL $CA84 _11Ny
LABEL $CA85 _11Nz
LABEL $CAAF _11Nzi
LABEL $CAAE _11Nyi
LABEL $CAAD _11Nxi
LABEL $CAAC _1N1zi
LABEL $CAAB _1N1yi
LABEL $CAAA _1N1xi
LABEL $CAA9 _N11zi
LABEL $CAA8 _N11yi
LABEL $CAA7 _N11xi
LABEL $CAA6 _0N1zi
LABEL $CAA5 _0N1yi
LABEL $CAA4 _0N1xi
LABEL $CAA3 _N01zi
LABEL $CAA2 _N01yi
LABEL $CAA1 _N01xi
LABEL $CAA0 _N10zi
LABEL $CA9F _N10yi
LABEL $CA9E _N10xi
LABEL $CA9D _001zi
LABEL $CA9C _001yi
LABEL $CA9B _001xi
LABEL $CA9A _011zi
LABEL $CA99 _011yi
LABEL $CA98 _011xi
LABEL $CA97 _010zi
LABEL $CA96 _010yi
LABEL $CA95 _010xi
LABEL $CA94 _111zi
LABEL $CA93 _111yi
LABEL $CA92 _111xi
LABEL $CA91 _101zi
LABEL $CA90 _101yi
LABEL $CA8F _101xi
LABEL $CA8E _110zi
LABEL $CA8D _110yi
LABEL $CA8C _110xi
LABEL $CA8B _100zi
LABEL $CA8A _100yi
LABEL $CA89 _100xi
LABEL $CA88 _000zi
LABEL $CA87 _000yi
LABEL $CA86 _000xi
LABEL $CA86 I_0_0_0
LABEL $CA89 I_1_0_0
LABEL $CA8C I_1_1_0
LABEL $CA8F I_1_0_1
LABEL $CA92 I_1_1_1
LABEL $CA95 I_0_1_0
LABEL $CA98 I_0_1_1
LABEL $CA9B I_0_0_1
LABEL $CA9E I_N_1_0
LABEL $CAA1 I_N_0_1
LABEL $CAA4 I_0_N_1
LABEL $CAA7 I_N_1_1
LABEL $CAAA I_1_N_1
LABEL $CAAD I_1_1_N
LABEL $CA89 _N_0_0
LABEL $CA8C _N_N_0
LABEL $CA8F _N_0_N
LABEL $CA92 _N_N_N
LABEL $CA95 _0_N_0
LABEL $CA98 _0_N_N
LABEL $CA9B _0_0_N
LABEL $CA9E _1_N_0
LABEL $CAA1 _1_0_N
LABEL $CAA4 _0_1_N
LABEL $CAA7 _1_N_N
LABEL $CAAA _N_1_N
LABEL $CAAD _N_N_1
LABEL $CA4E spinSpeed_all
LABEL $CA50 spawnDelay
LABEL $CA51 expl_scale_base
LABEL $CA51 armSpeed
LABEL $CA52 endstage
LABEL $CA53 stageCounter
LABEL $CA55 counter_Arm
LABEL $CA56 expandArms
LABEL $CA57 addi_ex
LABEL $CA57 angle_Arm1
LABEL $CA59 angle_Arm2
LABEL $CA5B angle_Arm3
EQU $04 DotStruct
EQU $00 dangle
EQU $02 dscale
EQU $03 dintensity
EQU $04 DOT_SPAWN_DELAY
EQU $18 MAX_DOT_PER_ARM
EQU $14 ARM_SPAWN_ANGLE_ADD
EQU $06 SPIN_SPEED
EQU $01 EXPAND_PER_FRAME
LABEL $CA5D dotsArm1
LABEL $CABD dotsArm2
LABEL $CB1D dotsArm3
LABEL $CAAD letters_3d
LABEL $CB7D armsEND
EQU $00 STAGE_1
EQU $01 STAGE_2
EQU $02 STAGE_3
EQU $03 STAGE_4
EQU $04 STAGE_5
EQU $05 STAGE_6
EQU $06 STAGE_7
EQU $07 STAGE_8
EQU $60 STAGE_1_LENGTH
COMMENT_LABEL $60 (1,x seconds)
EQU $60 STAGE_2_LENGTH
COMMENT_LABEL $60 (1,x seconds)
EQU $60 STAGE_3_LENGTH
COMMENT_LABEL $60 (1,x seconds)
LABEL $0080 STAGE_4_LENGTH
COMMENT_LABEL $0080 (1,y seconds)
EQU $50 STAGE_5_LENGTH
COMMENT_LABEL $50 (1 seconds)
LABEL $00A0 STAGE_6_LENGTH
COMMENT_LABEL $00A0 (2 seconds)
LABEL $01E0 STAGE_7_LENGTH
COMMENT_LABEL $01E0 (6 seconds)
LABEL $635C mainGameOver
COMMENT_LABEL $635C #isfunction
LABEL $673F do3dGameOver_buttons
LABEL $6373 do_ym_sound2_no_sfx_go
LABEL $640F stage_continue
LABEL $63A5 initStage2
LABEL $63B9 initStage3
LABEL $63C7 initStage4
LABEL $63DA initStage5
LABEL $63E8 initStage6
LABEL $6407 initStage7
LABEL $640F stageInitDone
LABEL $650A do_stage1_stuff
LABEL $64E1 do_stage2_stuff
LABEL $64B4 do_stage3_stuff
LABEL $6498 do_stage4_stuff
LABEL $6496 do_stage5_stuff
LABEL $6439 do_stage6_stuff
LABEL $6737 do3dGameOver
COMMENT_LABEL $6737 #isfunction
LABEL $650C endofstagestuff
LABEL $6452 gosf6
LABEL $6463 nextexpl
LABEL $6652 drawOneBase
LABEL $6491 donehereAgainb
LABEL $64A5 noy4_1
LABEL $64B2 gosf4
LABEL $64B2 noy4_2
LABEL $64C1 noy3_1
LABEL $64CE gosf3
LABEL $64CE noy3_2
LABEL $64DC noobs3
LABEL $64EF noy2_1
LABEL $6508 noobs2_2
LABEL $6505 noobs2
LABEL $651A angleOk_GO
LABEL $652F noHomeDraw
LABEL $65AE drawTheDots
LABEL $65AC armDoneSpawn
LABEL $654F not_oob209
LABEL $6572 not_oob210
LABEL $6595 not_oob211
LABEL $65B7 draw_next_dot
LABEL $65D3 drawTheDot
LABEL $65D0 doreturn
LABEL $65DE keepScale
LABEL $65EC noChangeInt
LABEL $6605 not_oob1_go
LABEL $6623 LF33D214
LABEL $6641 noShiftOff
LABEL $66A9 noBaseDraw
LABEL $6666 drawRotated_dwb
LABEL $6683 LF33D218
LABEL $6687 next_line_dwb
LABEL $669E wait_draw_dwb
EQU $09 Letter3d
EQU $00 s_vlist_3d
EQU $02 s_pos_3d
EQU $04 s_angle_x_3d
EQU $05 s_angle_y_3d
EQU $06 s_angle_z_3d
EQU $07 s_scale_3d
EQU $08 s_offset_3d
LABEL $66AE print3dLetter
LABEL $693B init_all
LABEL $6707 notStartgo_3d
LABEL $6705 decit_3d
LABEL $66EF in_3d_x_ok
LABEL $66F9 in_3d_y_ok
LABEL $6703 in_3d_z_ok
LABEL $6712 scaleok3d2
LABEL $6718 LF33D221
LABEL $6837 myDraw_VL_mode4_3d
LABEL $6724 init_3d_letter_jsr
LABEL $6737 mainGameOver3d
COMMENT_LABEL $6737 #isfunction
LABEL $6C24 g_3d
LABEL $6BDA a_3d
LABEL $6C51 m_3d
LABEL $6BFF e_3d
LABEL $6C6E o_3d
LABEL $6CB0 v_3d
LABEL $6C93 r_3d
EQU $05 DECREASE
LABEL $67D9 mainGameOver3dLoop
LABEL $6808 not_higher_scale
LABEL $6818 notMaxScale
LABEL $681F another_letter
LABEL $686F move_vl4_3d
LABEL $684D draw_vl4_3d
LABEL $6843 done_vl4_3d
LABEL $688D cosinus3d
LABEL $68CD sinus3d
LABEL $690D initStart
LABEL $6953 mul_Ap235
LABEL $6957 mul_An_Bp235
LABEL $695C mul_An_Bn235
LABEL $695C mul_Ap_Bp235
LABEL $695D mul_end235
LABEL $6977 mul_Ap238
LABEL $697B mul_An_Bp238
LABEL $6980 mul_An_Bn238
LABEL $6980 mul_Ap_Bp238
LABEL $6981 mul_end238
LABEL $69A5 mul_Ap243
LABEL $69A9 mul_An_Bp243
LABEL $69AE mul_An_Bn243
LABEL $69AE mul_Ap_Bp243
LABEL $69AF mul_end243
LABEL $69C5 mul_Ap245
LABEL $69C9 mul_An_Bp245
LABEL $69CE mul_An_Bn245
LABEL $69CE mul_Ap_Bp245
LABEL $69CF mul_end245
LABEL $69E5 mul_Ap247
LABEL $69E9 mul_An_Bp247
LABEL $69EE mul_An_Bn247
LABEL $69EE mul_Ap_Bp247
LABEL $69EF mul_end247
LABEL $6A0D mul_Ap252
LABEL $6A11 mul_An_Bp252
LABEL $6A16 mul_An_Bn252
LABEL $6A16 mul_Ap_Bp252
LABEL $6A17 mul_end252
LABEL $6A2D mul_Ap254
LABEL $6A31 mul_An_Bp254
LABEL $6A36 mul_An_Bn254
LABEL $6A36 mul_Ap_Bp254
LABEL $6A37 mul_end254
LABEL $6A65 mul_Ap260
LABEL $6A69 mul_An_Bp260
LABEL $6A6E mul_An_Bn260
LABEL $6A6E mul_Ap_Bp260
LABEL $6A6F mul_end260
LABEL $6A88 mul_Ap262
LABEL $6A8C mul_An_Bp262
LABEL $6A91 mul_An_Bn262
LABEL $6A91 mul_Ap_Bp262
LABEL $6A92 mul_end262
LABEL $6AA8 mul_Ap264
LABEL $6AAC mul_An_Bp264
LABEL $6AB1 mul_An_Bn264
LABEL $6AB1 mul_Ap_Bp264
LABEL $6AB2 mul_end264
LABEL $6ACF mul_Ap268
LABEL $6AD3 mul_An_Bp268
LABEL $6AD8 mul_An_Bn268
LABEL $6AD8 mul_Ap_Bp268
LABEL $6AD9 mul_end268
LABEL $6AEF mul_Ap270
LABEL $6AF3 mul_An_Bp270
LABEL $6AF8 mul_An_Bn270
LABEL $6AF8 mul_Ap_Bp270
LABEL $6AF9 mul_end270
LABEL $6B28 mul_Ap277
LABEL $6B2C mul_An_Bp277
LABEL $6B31 mul_An_Bn277
LABEL $6B31 mul_Ap_Bp277
LABEL $6B32 mul_end277
LABEL $6B4B mul_Ap279
LABEL $6B4F mul_An_Bp279
LABEL $6B54 mul_An_Bn279
LABEL $6B54 mul_Ap_Bp279
LABEL $6B55 mul_end279
LABEL $6B6B mul_Ap281
LABEL $6B6F mul_An_Bp281
LABEL $6B74 mul_An_Bn281
LABEL $6B74 mul_Ap_Bp281
LABEL $6B75 mul_end281
LABEL $6B92 mul_Ap285
LABEL $6B96 mul_An_Bp285
LABEL $6B9B mul_An_Bn285
LABEL $6B9B mul_Ap_Bp285
LABEL $6B9C mul_end285
LABEL $6BB2 mul_Ap287
LABEL $6BB6 mul_An_Bp287
LABEL $6BBB mul_An_Bn287
LABEL $6BBB mul_Ap_Bp287
LABEL $6BBC mul_end287
LABEL $6BCC GameOver3d
LABEL $6BDA GameOver3d_0
LABEL $6BFF GameOver3d_1
LABEL $6C24 GameOver3d_2
LABEL $6C51 GameOver3d_3
LABEL $6C6E GameOver3d_4
LABEL $6C93 GameOver3d_5
LABEL $6CB0 GameOver3d_6
EQU $64 LETTER_SIZE
LABEL $00FE PLY_RETRIGVALUE
COMMENT_LABEL $00FE some value greater than 0x0f
LABEL $6DBF PLY_SPEEDEND_CH1
LABEL $6D0B PLY_HEIGHTEND_CH1
LABEL $6CE2 PLY_SONGNOTOVER_CH1
LABEL $6CF2 PLY_NONEWHEIGHT_CH1
LABEL $6D0B _read_special_track_CH1
LABEL $6D2A PLY_SPECIALTRACK_DONE_CH1
LABEL $6D24 PLY_SPECIALTRACK_NEWWAIT_CH1
LABEL $6D1D PLY_SPECIALTRACK_NOESCAPECODE_CH1
LABEL $6D22 PLY_PT_SPECIALTRACK_ENDDATA_CH1
LABEL $6D1F PLY_SPECIALTRACK_SPEED_CH1
LABEL $6D2A readnextchannel_CH1
LABEL $6D2A _read_track_CH1
LABEL $6DB9 PLY_TRACK_NEWINSTRUMENT_WAIT_CONT_CH1
LABEL $6D32 PLY_READTRACK_CH1
LABEL $6D61 PLY_READTRACK_FULLOPTIMISATION_CH1
LABEL $6D6C PLY_READTRACK_WAIT_CH1
LABEL $6D5D PLY_READTRACK_NOOPTIMISATION_ESCAPECODE_CH1
LABEL $6D3E PLY_READTRACK_READPARAMETERS_CH1
LABEL $6D4B PLY_READTRACK_PITCH_END_CH1
LABEL $6D74 do_continue_p_vol_CH1
LABEL $6D56 PLY_TRACK_SAMEVOLUME_2_CH1
LABEL $6D7B do_continue_p_vol_done_CH1
LABEL $6D84 full_opt_note_given_CH1
LABEL $6DB7 PLY_TRACK_NEWINSTRUMENT_SETWAIT_CH1
LABEL $6D7B PLY_TRACK_SAMEVOLUME_1_CH1
LABEL $6DB5 PLY_TRACK_NONOTEGIVEN_CH1
LABEL $6D99 PLY_TRACK_NEWINSTRUMENT_CH1
COMMENT_LABEL $6D99 New  Instrument. We have to get its new address, and Speed.
LABEL $6DAC PLY_TRACK_INSTRUMENTRESETPT_CH1
LABEL $6DB3 noIntrumentRetrigger_CH1
LABEL $6DC6 PLY_PLAY_1CHANNEL_PART2
COMMENT_LABEL $6DC6 #isfunction
LABEL $6DCC PLY_PLAY_1CHANNEL_PART2_woy
LABEL $6DCC playnextchannel_CH1
LABEL $6DCC _play_sound_track_CH1
LABEL $6DDA PLY_PLAYSOUND_CH1
LABEL $6E39 PLY_PS_HARD_CH1
LABEL $6E07 PLY_PS_S_SECONDBYTENEEDED_CH1
LABEL $6DF2 PLY_PS_S_SOUNDON_CH1
LABEL $6E3D out_sound_CH1
LABEL $6DF7 vol_not_null_1_CH1
LABEL $6E64 PLY_PS_CALCULATEFREQUENCY
LABEL $6E18 PLY_PS_S_SBN_NONOISE_CH1
LABEL $6E21 no_vol_underflow_1_CH1
LABEL $6E2F PLY_PS_S_SBN_SOUND_CH1
LABEL $6E3D outahere_1_CH1
LABEL $6E47 PLY_TRACK_PLAYNOFORWARD_CH1
LABEL $6E47 doneplaying_CH1
LABEL $6E58 PLY_PLAY_1CHANNEL
LABEL $6E63 playMusic_NOk_m_p1c
LABEL $6E70 PLY_PS_S_SOUNDON_NOPITCH
LABEL $6E7E PLY_PS_S_SOUNDON_ARPEGGIOEND
LABEL $6E7E no_max_appegio
LABEL $6E8F PLY_FREQUENCYTABLE
LABEL $6FAF initCodeModifications_CH1
LABEL $7010 decode_on
LABEL $701D no_decode
LABEL $701E PLAYER
LABEL $7339 playMusic_NOk_m_pac
LABEL $7158 PLY_SPEEDEND
LABEL $7095 PLY_HEIGHTEND
LABEL $7041 PLY_SONGNOTOVER
LABEL $7049 PLY_NONEWTRANSPOSITION1
LABEL $7051 PLY_NONEWTRANSPOSITION2
LABEL $7059 PLY_NONEWTRANSPOSITION3
LABEL $7070 PLY_NONEWHEIGHT
LABEL $7078 PLY_NONEWSPECIALTRACK
LABEL $7073 PLY_NEWSPECIALTRACK
LABEL $7095 _read_special_track
LABEL $70B4 PLY_SPECIALTRACK_DONE
LABEL $70AE PLY_SPECIALTRACK_NEWWAIT
LABEL $70A7 PLY_SPECIALTRACK_NOESCAPECODE
LABEL $70AC PLY_PT_SPECIALTRACK_ENDDATA
LABEL $70A9 PLY_SPECIALTRACK_SPEED
LABEL $70B8 readnextchannel
LABEL $70B8 _read_track
LABEL $7147 PLY_TRACK_NEWINSTRUMENT_WAIT_CONT
LABEL $70C0 PLY_READTRACK
LABEL $70EF PLY_READTRACK_FULLOPTIMISATION
LABEL $70FA PLY_READTRACK_WAIT
LABEL $70EB PLY_READTRACK_NOOPTIMISATION_ESCAPECODE
LABEL $70CC PLY_READTRACK_READPARAMETERS
LABEL $70D9 PLY_READTRACK_PITCH_END
LABEL $7102 do_continue_p_vol
LABEL $70E4 PLY_TRACK_SAMEVOLUME_2
LABEL $7109 do_continue_p_vol_done
LABEL $7112 full_opt_note_given
LABEL $7145 PLY_TRACK_NEWINSTRUMENT_SETWAIT
LABEL $7109 PLY_TRACK_SAMEVOLUME_1
LABEL $7143 PLY_TRACK_NONOTEGIVEN
LABEL $7127 PLY_TRACK_NEWINSTRUMENT
COMMENT_LABEL $7127 New  Instrument. We have to get its new address, and Speed.
LABEL $713A PLY_TRACK_INSTRUMENTRESETPT
LABEL $7141 noIntrumentRetrigger
LABEL $7168 playnextchannel
LABEL $7168 _play_sound_track
LABEL $7176 PLY_PLAYSOUND
LABEL $71E0 PLY_PS_HARD
LABEL $71A9 PLY_PS_S_SECONDBYTENEEDED
LABEL $7190 PLY_PS_S_SOUNDON
LABEL $72F0 out_sound
LABEL $7195 vol_not_null_1
LABEL $71BA PLY_PS_S_SBN_NONOISE
LABEL $71C3 no_vol_underflow_1
LABEL $71D3 PLY_PS_S_SBN_SOUND
LABEL $733A PLY_PS_CALCULATEFREQUENCY_TESTMANUALFREQUENCY
LABEL $71F0 PLY_PS_HARD_NORETRIG
LABEL $7298 PLY_PS_HARD_LOOPORINDEPENDENT
LABEL $725E PLY_PS_HARDWAREDEPENDENT
LABEL $722E PLY_PS_SD_SHIFT_ADREESS
LABEL $7241 no_shift_carry_sd
LABEL $7247 PLY_PS_SD_NOHARDWAREPITCH
LABEL $724C PLY_PS_SD_NOISE
LABEL $725B ret_nla_here
LABEL $727C PLY_PS_HD_SHIFT_ADREESS
LABEL $7290 PLY_PS_HD_NOSOFTWAREPITCH
LABEL $72A1 PLY_PS_INDEPENDENT
LABEL $72B2 PLY_PS_I_SOUNDON
LABEL $72C7 PLY_PS_I_SKIPSOFTWAREFREQUENCYCALCULATION
LABEL $72F0 outahere_1
LABEL $72FA PLY_TRACK_PLAYNOFORWARD
LABEL $7318 doneplaying
LABEL $7323 PLY_SENDREGISTERS
LABEL $7339 backFromPlayer
LABEL $7347 initCodeModifications
LABEL $73AF PLY_STOP
COMMENT_LABEL $73AF #isfunction
EQU $73 TYPE_EX
COMMENT_LABEL $73 -1 ; negative types are not destroyed by shield
LABEL $73C7 explosion_alive_1
COMMENT_LABEL $73C7 anti glitch
LABEL $73FF noxxplosion1
LABEL $73EA xxplosionPart2
LABEL $73F9 noxxplosion1_2_0
COMMENT_LABEL $73F9 " no x explosion"
LABEL $73F0 removeIt_ex_1
COMMENT_LABEL $73F0 anti glitch
LABEL $740B scalingDone_ex
LABEL $742A explosion_alive_eb
LABEL $7401 noxxplosion1_2
LABEL $7413 noStarExplosion
LABEL $7425 starExplodeDone
LABEL $741D removeIt_ex
LABEL $742A starScaleDone
LABEL $749A doShotExplosion
LABEL $7442 LF33D302
LABEL $7451 next_edd
LABEL $7482 doXExplosion
LABEL $7536 doBomberExplosion
LABEL $75A6 doDragonExplosion
LABEL $7616 doHunterExplosion
LABEL $7517 doBonusExplosion
LABEL $7486 LF33D305
LABEL $74A2 LF33D306
LABEL $750E shot_ongoing
LABEL $751B LF33D308
LABEL $7523 dodecagain
LABEL $753D LF33D310
LABEL $75AD LF33D311
LABEL $7620 LF33D312
LABEL $762F next_line_dr_ds4_eh
LABEL $7644 wait_draw_dr_ds4_eh
EQU $76 TYPE_SCORE
COMMENT_LABEL $76 -2 or scoreXBehaviour ;
LABEL $765C score_alive_1
COMMENT_LABEL $765C anti glitch
LABEL $7678 display_shield_1
COMMENT_LABEL $7678 anti glitch
LABEL $7680 noMusic_ssb1
LABEL $768C score_alive_2
COMMENT_LABEL $768C anti glitch
LABEL $7699 display_score_final
LABEL $7699 noAdd_sb
LABEL $76A2 LF33D316
LABEL $76BB scorex_alive_1
COMMENT_LABEL $76BB anti glitch
LABEL $76DA scorex_alive_2
COMMENT_LABEL $76DA anti glitch
LABEL $76E7 display_scorex_final
LABEL $76E7 noAdd_sxb
LABEL $76EE LF33D319
LABEL $7704 not_3_score_xb
LABEL $770B not_2_score_xb
EQU $77 TYPE_TIMER
COMMENT_LABEL $77 -3
LABEL $778C smallBonusTimer
LABEL $77CD endBonus
LABEL $7761 noTimerChange_tblarge
LABEL $7761 no_hi_timer_change_tb
LABEL $7761 still_large_timer_tb
LABEL $77A5 entry_small_timer_tb
LABEL $77B2 noTimerChange_tb
LABEL $77E6 deactiveFaster
LABEL $77F2 deactiveExpand
LABEL $77E4 deactiveShield
LABEL $77FE deactivateDone_bb
LABEL $78B6 inInit1327
LABEL $783E posAdd_dos327
LABEL $7847 angleStarOk327
LABEL $7871 noChangests327
LABEL $7868 decswirl327
LABEL $7860 incswirl327
LABEL $786E storeswirl327
LABEL $78BC doInit1327
LABEL $788E s1_done327
LABEL $7898 b_ok_1327
LABEL $789A LF33D330
LABEL $78D1 do_pos3327
LABEL $78D1 do_pos2327
LABEL $7981 inInit1333
LABEL $7909 posAdd_dos333
LABEL $7912 angleStarOk333
LABEL $793C noChangests333
LABEL $7933 decswirl333
LABEL $792B incswirl333
LABEL $7939 storeswirl333
LABEL $7987 doInit1333
LABEL $7959 s1_done333
LABEL $7963 b_ok_1333
LABEL $7965 LF33D336
LABEL $799C do_pos3333
LABEL $799C do_pos2333
LABEL $7A4C inInit1339
LABEL $79D4 posAdd_dos339
LABEL $79DD angleStarOk339
LABEL $7A07 noChangests339
LABEL $79FE decswirl339
LABEL $79F6 incswirl339
LABEL $7A04 storeswirl339
LABEL $7A52 doInit1339
LABEL $7A24 s1_done339
LABEL $7A2E b_ok_1339
LABEL $7A30 LF33D342
LABEL $7A67 do_pos3339
LABEL $7A67 do_pos2339
LABEL $7B17 inInit1345
LABEL $7A9F posAdd_dos345
LABEL $7AA8 angleStarOk345
LABEL $7AD2 noChangests345
LABEL $7AC9 decswirl345
LABEL $7AC1 incswirl345
LABEL $7ACF storeswirl345
LABEL $7B1D doInit1345
LABEL $7AEF s1_done345
LABEL $7AF9 b_ok_1345
LABEL $7AFB LF33D348
LABEL $7B32 do_pos3345
LABEL $7B32 do_pos2345
EQU $7B TYPE_LETTER_7
COMMENT_LABEL $7B -17
EQU $7B TYPE_LETTER_6
COMMENT_LABEL $7B -16
EQU $7B TYPE_LETTER_5
COMMENT_LABEL $7B -15
EQU $7B TYPE_LETTER_4
COMMENT_LABEL $7B -14
EQU $7B TYPE_LETTER_3
COMMENT_LABEL $7B -13
EQU $7B TYPE_LETTER_2
COMMENT_LABEL $7B -12
EQU $7B TYPE_LETTER_1
COMMENT_LABEL $7B -11
EQU $7B TYPE_LETTER
COMMENT_LABEL $7B -10
LABEL $7B88 np_previousLetter
LABEL $7B6A do_minus
LABEL $7B71 no_space_changenow_lb
LABEL $7B6F change_space_done_lb
LABEL $7B7D no_anglecircle_overflow_lb
LABEL $7B86 no_anglecircle_overflow2_lb
LABEL $7B8B angle_lb_done
LABEL $7BA3 LF33D353
LABEL $7BCD LF33D357
LABEL $7C67 endGimmik
LABEL $7C46 no_clist_change_g
LABEL $7C34 gimickPac
LABEL $7C20 gimickWorm
LABEL $7C0F gimickGhost
LABEL $7C43 store_vlist_gimmick
EQU $02 CURRENT_BANK
LABEL $7C72 START_OF_LAST_MEM
LABEL $7CCC copyDefaultsToRAM
COMMENT_LABEL $7CCC #isfunction
LABEL $7C9C noignore
LABEL $7CA9 noScoreDefaults
LABEL $7CA9 nov4e
LABEL $7F00 COPY_RAM_TO_VECROM
COMMENT_LABEL $7F00 #isfunction
LABEL $7E80 checkEprom
COMMENT_LABEL $7E80 #isfunction
LABEL $7EC0 eeprom_load_option
COMMENT_LABEL $7EC0 #isfunction
LABEL $7CC9 donotSaveagain
LABEL $7EC0 eeprom_load_highscore
COMMENT_LABEL $7EC0 #isfunction
EQU $00 GAMCRT
COMMENT_LABEL $00 Cartridge ROM ($0000-$7fff = 32k)
LABEL $C800 RAM
COMMENT_LABEL $C800 Internal RAM ($c800-$cbff = 1k)
LABEL $C880 LASRAM
COMMENT_LABEL $C880 Free RAM ($c880-stack)
LABEL $F000 PWRUP
COMMENT_LABEL $F000 Executive ROM ($f000-$ffff = 4k)
LABEL $D000 CNTRL
COMMENT_LABEL $D000 ORB / IRB - Output Register B / Input Register B
LABEL $D001 DAC
COMMENT_LABEL $D001 ORA / IRA - Output Register A / Input Register A
LABEL $D002 DCNTRL
COMMENT_LABEL $D002 DDRB - Data Direction Register B
LABEL $D003 DDAC
COMMENT_LABEL $D003 DDRA - Data Direction Register A
LABEL $D004 T1LOLC
COMMENT_LABEL $D004 T1C-L - Timer 1 Counter/Latch Low byte
LABEL $D005 T1HOC
COMMENT_LABEL $D005 T1C-H - Timer 1 Counter High byte
LABEL $D006 T1LOL
COMMENT_LABEL $D006 T1L-L - Timer 1 Latch Low byte
LABEL $D007 T1HOL
COMMENT_LABEL $D007 T1L-H - Timer 1 Latch High byte
LABEL $D008 T2LOLC
COMMENT_LABEL $D008 T2C-L - Timer 2 Counter/Latch Low byte
LABEL $D009 T2HOC
COMMENT_LABEL $D009 T2C-H - Timer 2 Counter High byte
LABEL $D00A SHIFT
COMMENT_LABEL $D00A SR - Shift Register
LABEL $D00B ACNTRL
COMMENT_LABEL $D00B ACR - Auxiliary Control Register
LABEL $D00C PCNTRL
COMMENT_LABEL $D00C PCR - Peripheral Control Register
LABEL $D00D IFLAG
COMMENT_LABEL $D00D IFR - Interrupt Flag Register
LABEL $D00E IENABL
COMMENT_LABEL $D00E IER - Interrupt Enable Register
LABEL $2A03 DS1W_RESETDUR
COMMENT_LABEL $2A03 Reset Pulse duration
LABEL $D002 DS1W_PRESDUR
COMMENT_LABEL $D002 Presence Pulse duration
EQU $78 DS1W_TSLOTDUR
COMMENT_LABEL $78 Time Slot duration
EQU $33 DS1W_READROM
LABEL $00CC DS1W_SKIPROM
EQU $55 DS1W_MATCHROM
LABEL $00F0 DS1W_SEARCHROM
LABEL $7CD8 ds1w_open
COMMENT_LABEL $7CD8 #isfunction
LABEL $7CE0 ds1w_close
COMMENT_LABEL $7CE0 #isfunction
LABEL $7CE5 ds1w_reset
COMMENT_LABEL $7CE5 #isfunction
LABEL $7CF0 dsreset_loop1
LABEL $7D1B ds1w_notpresent
LABEL $7D03 dsreset_loop2
LABEL $7D0D dsreset_loop3
LABEL $7D15 ds1w_present
LABEL $7D1E ds1w_txbyte
COMMENT_LABEL $7D1E #isfunction
LABEL $7D22 ds1w_txbits
LABEL $7D3A ds1w_txbit1
LABEL $7D25 ds1w_txbit0
LABEL $7D2D dstx0_loop
LABEL $7D46 dstx1_loop
LABEL $7D4F ds1w_rxbyte
COMMENT_LABEL $7D4F #isfunction
LABEL $7D53 ds1w_rxbits
LABEL $7D65 dsrx_loop
EQU $0F DS2431_WRITESP
COMMENT_LABEL $0F Write bytes to Scratch Pad
EQU $55 DS2431_COPYSP
COMMENT_LABEL $55 Copy entire Scratch Pad to EEPROM
LABEL $00AA DS2431_READSP
COMMENT_LABEL $00AA Read bytes from Scratch Pad
LABEL $00F0 DS2431_READMEM
COMMENT_LABEL $00F0 As READSP, but copies EEPROM to SP first
LABEL $983A DS2431_COPYDUR
COMMENT_LABEL $983A $3a98 = 15000 cycles = 10ms (A1: 12.5ms, A2 and later: 10ms)
LABEL $7D6E ds2431_load
COMMENT_LABEL $7D6E #isfunction
LABEL $7D97 ds2431load_exit
LABEL $7D8F ds2431load_loop
LABEL $7D9C ds2431_save
COMMENT_LABEL $7D9C #isfunction
LABEL $7DA2 ds2431_save_all
LABEL $7DA7 ds2431_scratchpadloop
LABEL $7E1B dssave_exit
LABEL $7DBF dssave_loop
LABEL $7E0B dssave_loop2
LABEL $7E20 ds2431_verify
COMMENT_LABEL $7E20 #isfunction
LABEL $7E4C dsverify_exit
LABEL $7E41 dsverify_loop
LABEL $0087 EEPROM_CHECKSUM
COMMENT_LABEL $0087 any value other than $00 or $e0
LABEL $7E7C noDevice1
LABEL $7E74 noDSDevice
LABEL $7F0B store_score
COMMENT_LABEL $7F0B #isfunction
LABEL $7E7D cleanStart
LABEL $7E93 notPresent
LABEL $7EAA eepromSave_1
LABEL $7EAE eesave_loop
LABEL $7EC0 eeprom_load_1
LABEL $7ED5 eeprom_load_2
LABEL $7EDC eeload_loop
LABEL $7EEE doneEEL
LABEL $C90E ramfunction
COMMENT_LABEL $C90E $c900 place of our ram function destination
LABEL $7F2D ramfunctiondata
COMMENT_LABEL $7F2D #isfunction
LABEL $7F45 ramfuncend
LABEL $7F1E StoreHiscoreFnc
COMMENT_LABEL $7F1E #isfunction
LABEL $7F2D StoreHiscoreFncEnd
LABEL $7F26 v4eloop
LABEL $7F38 ramloop
LABEL $7F3F ramloop2
LABEL $7F6D PADDBYTES
LABEL $7FF0 vec4Register
COMMENT_LABEL $7FF0 #isfunction
LABEL $8000 END_OF_MEM
LABEL $8103 *
COMMENT_LINE $0000 ; hey dissi "watch $scrollIntensity 1 0"
COMMENT_LINE $0000 ; hey dissi "watch $scrollBlink 1 0"
COMMENT_LINE $0000 ; hey dissi "watch $scrollBlinkAdd 1 0"
COMMENT_LINE $0000 ; hey dissi "watch $phase_count 1 0"
COMMENT_LINE $0000 this file is part of Release, written by Malban in 2017
COMMENT_LINE $0000 bank     1
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 DEFINE SECTION
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 what is a csa score - used below
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 a csa score can have an arbitary count of digits
COMMENT_LINE $0000 msb first goes down to lsb
COMMENT_LINE $0000 each byte contains a decimal byte value (0-9)
COMMENT_LINE $0000 if one does an add "add" the result is higher than 9, than the next digit is increased
COMMENT_LINE $0000 thus the number 1025 is represented in 4 bytes
COMMENT_LINE $0000 db 01, 00, 02, 05
COMMENT_LINE $0000 using this format makes it very easy to translate the representing number into a drawing of
COMMENT_LINE $0000 individual number vectors
COMMENT_LINE $0000 for each digit we take the digit multiply with two and add that to a pointer to number vectorlists
COMMENT_LINE $0000 in fact the csa score is quite similar to BCD numbers, but use more space and are even more easy to handle
COMMENT_LINE $0000 this file is part of Release, written by Malban in 2017
COMMENT_LINE $0000 load vectrex bios routine definitions
COMMENT $0000 vectrex function includes
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 this file contains includes for vectrex BIOS functions and variables      ;
COMMENT_LINE $0000 it was written by Bruce Tomlin, slightly changed by Malban                ;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 Vec_Joy_1_X     EQU     $C81B   ;Joystick 1 left/right
COMMENT_LINE $0000 Vec_Joy_1_Y     EQU     $C81C   ;Joystick 1 up/down
COMMENT_LINE $0000 Vec_Joy_2_X     EQU     $C81D   ;Joystick 2 left/right
COMMENT_LINE $0000 Vec_Joy_2_Y     EQU     $C81E   ;Joystick 2 up/down
COMMENT_LINE $0000 $C839   ;Pointer to copyright string during startup
COMMENT_LINE $0000 $C83B   ;High score cold-start flag (=0 if valid)
COMMENT_LINE $0000 $C83C   ;temp byte
COMMENT_LINE $0000 $C843   ;        register 9
COMMENT_LINE $0000 $C844   ;        register 8
COMMENT_LINE $0000 $C848   ;        register 4
COMMENT_LINE $0000 $C849   ;        register 3
COMMENT_LINE $0000 $C84A   ;        register 2
COMMENT_LINE $0000 $C84C   ;        register 0
COMMENT_LINE $0000 $C85E   ;Scratch 'score' storage for Display_Option (7 bytes)
COMMENT_LINE $0000 $C868...$C876   ;Unused?
COMMENT_LINE $0000 $C878   ;Unused?
COMMENT_LINE $0000 $C880 - $CBEA is user RAM  ;
COMMENT_LINE $0000 0 sample/hold (0=enable  mux 1=disable mux)
COMMENT_LINE $0000 1 mux sel 0
COMMENT_LINE $0000 2 mux sel 1
COMMENT_LINE $0000 3 sound BC1
COMMENT_LINE $0000 4 sound BDIR
COMMENT_LINE $0000 5 comparator input
COMMENT_LINE $0000 6 external device (slot pin 35) initialized to input
COMMENT_LINE $0000 7 /RAMP
COMMENT_LINE $0000 0 PA latch enable
COMMENT_LINE $0000 1 PB latch enable
COMMENT_LINE $0000 2 \                     110=output to CB2 under control of phase 2 clock
COMMENT_LINE $0000 3  > shift register control     (110 is the only mode used by the Vectrex ROM)
COMMENT_LINE $0000 4 /
COMMENT_LINE $0000 5 0=t2 one shot                 1=t2 free running
COMMENT_LINE $0000 6 0=t1 one shot                 1=t1 free running
COMMENT_LINE $0000 7 0=t1 disable PB7 output       1=t1 enable PB7 output
COMMENT_LINE $0000 0 CA1 control     CA1 -> SW7    0=IRQ on low 1=IRQ on high
COMMENT_LINE $0000 1 \
COMMENT_LINE $0000 2  > CA2 control  CA2 -> /ZERO  110=low 111=high
COMMENT_LINE $0000 3 /
COMMENT_LINE $0000 4 CB1 control     CB1 -> NC     0=IRQ on low 1=IRQ on high
COMMENT_LINE $0000 5 \
COMMENT_LINE $0000 6  > CB2 control  CB2 -> /BLANK 110=low 111=high
COMMENT_LINE $0000 7 /
COMMENT_LINE $0000 bit                             cleared by
COMMENT_LINE $0000 0 CA2 interrupt flag            reading or writing port A I/O
COMMENT_LINE $0000 1 CA1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $0000 2 shift register interrupt flag reading or writing shift register
COMMENT_LINE $0000 3 CB2 interrupt flag            reading or writing port B I/O
COMMENT_LINE $0000 4 CB1 interrupt flag            reading or writing port A I/O
COMMENT_LINE $0000 5 timer 2 interrupt flag        read t2 low or write t2 high
COMMENT_LINE $0000 6 timer 1 interrupt flag        read t1 count low or write t1 high
COMMENT_LINE $0000 7 IRQ status flag               write logic 0 to IER or IFR bit
COMMENT_LINE $0000 0 CA2 interrupt enable
COMMENT_LINE $0000 1 CA1 interrupt enable
COMMENT_LINE $0000 2 shift register interrupt enable
COMMENT_LINE $0000 3 CB2 interrupt enable
COMMENT_LINE $0000 4 CB1 interrupt enable
COMMENT_LINE $0000 5 timer 2 interrupt enable
COMMENT_LINE $0000 6 timer 1 interrupt enable
COMMENT_LINE $0000 7 IER set/clear control
COMMENT $0000 vectrex function includes
COMMENT_LINE $0000 this file is part of Release, written by Malban in 2017
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 pretty for optimizing to use a makro :-)
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 pretty for optimizing to use a makro :-)
COMMENT $0000 done
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 divides D by tmp1, result in B
COMMENT_LINE $0000 uses divide_tmp as storage
COMMENT_LINE $0000 only 8 bit in tmp1, but must be manually poked to tmp1 + 1
COMMENT_LINE $0000 sign is correctly handled
COMMENT_LINE $0000 can probably be optimized like hell
COMMENT_LINE $0000 perhaps only nearing the result
COMMENT_LINE $0000 using 2 shifts and a plus
COMMENT_LINE $0000 might be worth a try,
COMMENT_LINE $0000 see vectrex emulator for algorithm...
COMMENT_LINE $0000 could be implemented with a tabel, which in turn
COMMENT_LINE $0000 could be caclulated on the fly... (upon startup)
COMMENT_LINE $0000 this makro divides exact, but slow
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 /BLANK low and /ZERO low
COMMENT $0000 a = $18, b = $83 disable RAMP, muxsel=false, channel 1 (integrators offsets)
COMMENT $0000 Clear D/A output
COMMENT $0000 set mux to channel 1, leave mux disabled
COMMENT $0000 enable mux, reset integrator offset values
COMMENT_LINE $0000 nop 4
COMMENT $0000 /BLANK high and /ZERO low
COMMENT $0000 Disable mux
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 scale for placing first point
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 move to time 1 lo, this means scaling
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 recal counter, about 21 Minutes befor roll over
COMMENT $0000 Wait for timer t2
COMMENT $0000 Store refresh value
COMMENT $0000 into timer t2
COMMENT $0000 blank low and zero low
COMMENT $0000 clear shift register
COMMENT $0000 clear D/A register
COMMENT $0000 mux=1, disable mux
COMMENT $0000 mux=1, enable mux
COMMENT $0000 disable mux
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 /BLANK low and /ZERO low
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 macro D = D *2
COMMENT $0000 done
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 macro D = D /2
COMMENT $0000 done
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 = X to correct correction pointer for current sidedness polygon
COMMENT_LINE $0000 ldx #polygon_5_correction
COMMENT_LINE $0000 stx tmp_offset
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 load the "divider" for n polygone (given in sided)
COMMENT_LINE $0000 to d
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 expect DP = d0
COMMENT_LINE $0000 playes one piece of music, that is given as param
COMMENT $0000 this piece of music
COMMENT $0000 NOW
COMMENT $0000 this piece of music
COMMENT $0000 NOW
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 destroys X D
COMMENT_LINE $0000 tests if the given SFX has higher (or same) prio as currently playing
COMMENT_LINE $0000 if prio higher (or none playing)
COMMENT_LINE $0000 than playes the SFX (ignored otherwise)
COMMENT_LINE $0000 all effects are playing in PSG channel 3
COMMENT $0000 leaves on success with a = 1
COMMENT $0000 playing1\?
COMMENT $0000 playing2\?
COMMENT $0000 playing2\?
COMMENT_LINE $0000 P1 here means prefer 1 - only to be used with NOISE
COMMENT_LINE $0000 since vtks song doesn't feature noise!
COMMENT $0000 playing1|\?
COMMENT $0000 playing2\?
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 load current sfx
COMMENT $0000 if none playing - jump
COMMENT $0000 load current prio to a
COMMENT $0000 compare to prio of new sfx
COMMENT $0000 if old prio is higher than go out
COMMENT $0000 new sfx is nice
COMMENT $0000 so we store it as current sfx
COMMENT $0000 and the actual sfx data store to our sfx player vars
COMMENT $0000 tell the player, that it should play!
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 destroys D X
COMMENT_LINE $0000 play the given SFX, but only if nothing else is played (regardless of prio)
COMMENT_LINE $0000 hey di ssi "break"
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux
COMMENT $0000 Clear shift regigster
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT $0000 Store Y in D/A register
COMMENT $0000 Blank low, zero high?
COMMENT $0000 Enable mux ; hey dis si "break integratorzero 440"
COMMENT $0000 Clear shift regigster
COMMENT $0000 Disable mux
COMMENT $0000 Store X in D/A register
COMMENT $0000 enable timer
COMMENT_LINE $0000 optimzed, tweaked not perfect... 'MOVE TO D' makro
COMMENT_LINE $0000 optimzed, tweaked not perfect... 'MOVE TO D' makro
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT $0000 Store intensity in D/A
COMMENT $0000 mux disabled channel 2
COMMENT $0000 mux enabled channel 2
COMMENT $0000 turn off mux
COMMENT_LINE $0000 uses x and d
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $0000 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $0000 but with regard to input
COMMENT_LINE $0000 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $0000 mux sel:
COMMENT_LINE $0000 xxxx x00x: port 0 horizontal
COMMENT_LINE $0000 xxxx x01x: port 0 vertical
COMMENT_LINE $0000 xxxx x10x: port 1 horizontal
COMMENT_LINE $0000 xxxx x11x: port 1 vertical
COMMENT_LINE $0000 the result of the pot reading is compared to the
COMMENT_LINE $0000 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $0000 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT $0000 mux disabled, mux sel = 01 (vertical pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive y)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value y was pushed UP
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved up
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved down
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT $0000 if y moved I assume no X move
COMMENT_LINE $0000 now the same for horizontal
COMMENT $0000 mux disabled, mux sel = 00 (horizontal pot port 0)
COMMENT $0000 mux enabled, mux sel = 01
COMMENT $0000 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
COMMENT $0000 ...
COMMENT $0000 wait...
COMMENT $0000 disable mux
COMMENT $0000 load a with test value (positive x)
COMMENT $0000 test value to DAC
COMMENT $0000 default result value x was pushed right
COMMENT $0000 test comparator
COMMENT $0000 if comparator cleared - joystick was moved right
COMMENT $0000 "load" with negative value
COMMENT $0000 also switch the possible result in A
COMMENT $0000 test comparator again
COMMENT $0000 if cleared the joystick was moved left
COMMENT $0000 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $0000 remember the result in "our" joystick data
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 Variable / RAM SECTION
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 insert your variables (RAM usage) in the BSS section
COMMENT_LINE $0000 user RAM starts at $c880
COMMENT $0000 start of our ram space
COMMENT_LINE $C880 Vars
COMMENT_LINE $C880 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C880 ;;; Sound vars
COMMENT_LINE $C880 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C880 I use sound shadow and sound working buffer myself
COMMENT_LINE $C880 $c800 - $c80f used as sound shadow - I use them also for that
COMMENT $C880 20 BIOS bytes to reuse
COMMENT $C80F if empty these contain a positive value that points to a RTS
COMMENT $C811 if negative, than this is a pointer to a RAM location
COMMENT $C815 sfx player used
COMMENT $C817 sfx player used
COMMENT $C819 sfx player used
COMMENT $C81B sfx player used
COMMENT $C81C sfx player used
COMMENT $C81D sfx player used
COMMENT $C81F sfx player used
COMMENT $C821 sfx player used
COMMENT_LINE $C823 only in game usable, since RAM used by print and loops
COMMENT $C829 after x ticks a new spawn happens , test for dec -> bpl
COMMENT $C82A current counter for those ticks , test for dec -> bpl
COMMENT $C82B delay after which a shield collaps and a new shield can spawn
COMMENT $C82C 1 = every second, test for dec -> bpl
COMMENT $C82D shield width, grows each "x" cycles by "y" (this is x)
COMMENT $C82F poly
COMMENT $C831 poly
COMMENT $C834 poly
COMMENT $C836 poly
COMMENT $C838 ym player used
COMMENT $C83A ym player used
COMMENT $C83C ym player used
COMMENT_LINE $C83E $C83d + Recal  music work buffer (14 bytes)
COMMENT_LINE $C83E I use them for ym registers also
COMMENT_LINE $C83E none of the following BIOS RAM location
COMMENT_LINE $C83E must be reserved for "Release" and can thus be reused!
COMMENT $C84D some ... space for a max 8 sided base (shield/explosion)
COMMENT $C860 -1, 1 or 0
COMMENT $C863 sfx player used
COMMENT $C867 dunno if that is correct anymore with new collision detection (TODO check - as of now this is FIXED, should be scale dependend)
COMMENT_LINE $C87E org      $c880
COMMENT $C880 poly
COMMENT $C881 similar var to BIOS Vec_Loop_Count, this gets increased ones every cycle (but also reseted),
COMMENT $C883 only bit 0
COMMENT $C884 only bit 0
COMMENT_LINE $C887 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C887 ;;; Game vars
COMMENT_LINE $C887 ;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C887 ;;;; PHASE BLOCK START
COMMENT $C887 #isfunction
COMMENT $C888 shield width, grows each "x" cycles by "y" (this is y)
COMMENT $C889 speed of the shield MOVEMENT - not the speed of growth
COMMENT $C88D change pos each this "ticks" , test for dec -> bpl
COMMENT $C88E change pos by this each "change"
COMMENT $C88F change pos each this "ticks" , test for dec -> bpl
COMMENT $C890 change pos by this each "change"
COMMENT $C891 change pos each this "ticks" , test for dec -> bpl
COMMENT $C892 change pos by this each "change"
COMMENT $C893 change pos each this "ticks" , test for dec -> bpl
COMMENT $C894 change pos by this each "change"
COMMENT $C896 change pos each this "ticks" , test for dec -> bpl
COMMENT $C897 change (angle) pos each this "tic
COMMENT $C899 change (angle) pos each this "tic
COMMENT $C89A change pos by this each "change"
COMMENT $C89C change pos each this "ticks" , test for dec -> bpl
COMMENT $C89D change pos by this each "change"
COMMENT $C89E in seconds! MAX 99!
COMMENT $C8A5 change pos each this "ticks" , test for dec -> bpl
COMMENT $C8A6 change pos by this each "change"
COMMENT_LINE $C8A7 ;;;; PHASE BLOCK END
COMMENT $C8A7 current start angle of base (*2)
COMMENT $C8A9 current count of sides for base
COMMENT $C8AA shield width now
COMMENT $C8AB outer shield position (in scale)
COMMENT $C8AC inner shield position (in scale)
COMMENT $C8AD if shield has max size do not grow anymore!
COMMENT $C8AE var for oscillating "inner" shield
COMMENT $C8AF var for oscillating "inner" shield
COMMENT $C8B0 var for oscillating "inner" shield
COMMENT $C8B1 var for oscillating "inner" shield
COMMENT $C8B2 counter in system ticks
COMMENT $C8B2 counter in system ticks
COMMENT $C8B3 counter in system ticks
COMMENT $C8B4 csa score digit 1
COMMENT $C8B5 csa score digit 0
COMMENT $C8B6 scaled position of the bonus icon
COMMENT $C8B7 scaled position of the bonus icon
COMMENT $C8B9 0 = yes use half steps,else no
COMMENT $C8C2 flag whether the eEprom was found or not
COMMENT $C8C3 flag whether to ignore eEprom altogether (button on startup), VecFlash gets irritated by PB6 access
COMMENT_LINE $C8C4 ********************************************************************
COMMENT_LINE $C8C4 save to eEprom Starts here!
COMMENT $C8C4 #isfunction
COMMENT $C8C4 1
COMMENT $C8C8 1
COMMENT $C8C9 1
COMMENT $C8CA 1
COMMENT $C8CB last is "filler" chksum
COMMENT $C8CC 8 byte at least for a block
COMMENT $C8CC 6*5 = 30 byte
COMMENT $C8EA filler to 32
COMMENT_LINE $C8EC ********************************************************************
COMMENT $C8F6 if one no timer adjustment!
COMMENT $C8F8 how many objects are alive?
COMMENT_LINE $C90E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C90E newEepromRAMStart   ds      highScoreHardcoreBlockEnd    ; new save struct, straight 32 bytes
COMMENT_LINE $C90E newEepromRAMEnd     ds      32        ; of which only 28 bytes are used!
COMMENT_LINE $C90E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $C90E org      $c900
COMMENT_LINE $C90E 16 bytes per object
COMMENT $C90E D (1) current position
COMMENT $C90E D (2) scale to position the object
COMMENT $C90E X current list vectorlist
COMMENT $C90E PC
COMMENT $C90E D (2)
COMMENT $C90E if angle base, angle in degree *2
COMMENT $C90E positive = end of list
COMMENT $C90E #noDoubleWarn
COMMENT_LINE $C90E all objects are held in a linked list
COMMENT_LINE $C90E the linked list is made up by object defined by structs
COMMENT_LINE $C90E the BASIC Object list consists of empty fields - plus the entry "NEXT_OBJECT"
COMMENT_LINE $C90E if NEXT_OBJECT is positive (not RAM pointer), than the list is finished
COMMENT $C90E #isfunction
COMMENT $CB7E #isfunction
COMMENT_LINE $CB8E start of some RAM Vars for Arkos Tracker
COMMENT_LINE $CB8E below RAM usuage is 74 byte (without psh shadow/work registers, which are = to
COMMENT_LINE $CB8E vectrex default RAM locations)
COMMENT $CB8E #isfunction
COMMENT_LINE $CB91 following are player vars which are channel independend
COMMENT $CB91 height of pattern
COMMENT $CB92 speed of pattern
COMMENT $CB93 current speed position (count down to 0)
COMMENT $CB94 current height position (count down to 0)
COMMENT $CB95 address of instrument table
COMMENT $CB97 current linker position
COMMENT $CB99 retrigger "flag" - if same as PLY_PSGREG13, than not retriggered, otherewise - yes
COMMENT $CB9A start position of current special track
COMMENT $CB9C current position in special track
COMMENT $CB9E wait counter for special track (count down to 0)
COMMENT_LINE $CB9F in general in below player, y reg points to the start of
COMMENT_LINE $CB9F following structure (one for each channel)
COMMENT $CBD2 special - this is used for retrigger activities
COMMENT $CBD3 these two are used to stay "channel" independend
COMMENT $CBD5 they are loaded befor the "work" routines with the corresponding regs of the current channel
COMMENT_LINE $C83F simple redefines for source compatability
COMMENT_LINE $C84D Defines
COMMENT_LINE $C84D for enemies it must be ensured that ALL have a different highbyte
COMMENT_LINE $C84D below behaviours are WAY bigger than above ones
COMMENT_LINE $C84D with each spawn increase
COMMENT_LINE $C84D the speed of the increase slows down
COMMENT_LINE $C84D each "phase" can allow / forbid spawns
COMMENT_LINE $C84D 0000 0001 STAR
COMMENT_LINE $C84D 0000 0010 X
COMMENT_LINE $C84D 0000 0100 HIDDEN X
COMMENT_LINE $C84D 0000 1000 HUNTER
COMMENT_LINE $C84D 0001 0000 BOMBER
COMMENT_LINE $C84D 0010 0000 DRAGON
COMMENT_LINE $C84D 0100 0000 BONUS
COMMENT_LINE $C84D ***************************************************************************
COMMENT_LINE $C84D HEADER SECTION
COMMENT_LINE $C84D ***************************************************************************
COMMENT_LINE $C84D The cartridge ROM starts at address 0
COMMENT_LINE $0000 the first few bytes are mandatory, otherwise the BIOS will not load
COMMENT_LINE $0000 the ROM file, and will start MineStorm instead
COMMENT $0000 'g' is copyright sign
COMMENT $000B music from the rom
COMMENT $000D hight, width, rel y, rel x (from 0,0)
COMMENT $0011 some game information, ending with $80
COMMENT $0019 end of game header
COMMENT_LINE $001A ***************************************************************************
COMMENT_LINE $001A CODE SECTION
COMMENT_LINE $001A ***************************************************************************
COMMENT_LINE $001A here the cartridge program starts off
FORCE_SYMBOL $001A first_init
COMMENT_LINE $001D ***************************************************************************
COMMENT_LINE $001D MAGIC CARTHEADER SECTION
COMMENT_LINE $001D DO NOT CHANGE THIS STRUCT
COMMENT_LINE $001D ***************************************************************************
COMMENT_LINE $002A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $002A this is actually an Object structure with a behaviour RTS (not rts anymore - but to a place of our definition)
COMMENT $002A pc
COMMENT $002C pc
COMMENT $002E pc
COMMENT_LINE $0030 1 byte left
COMMENT_LINE $0030 following the card header for VecFever support!
COMMENT $0030 magic handshake marker
COMMENT $0034 I always have a version
COMMENT_LINE $0036 in comm. structs
COMMENT $0036 v4e flags:
COMMENT_LINE $0038 $8000 + always set by v4e
COMMENT_LINE $0038 $4000 - hiscore entry supported
COMMENT_LINE $0038 $2000 - enable cart as ram
COMMENT_LINE $0038 $1000 - supply default font
COMMENT_LINE $0038 $0800 - 1: fast menu switch supported
COMMENT_LINE $0038 set to 0 if hiscore entry
COMMENT_LINE $0038 $0700 + v4e timing bits:
COMMENT_LINE $0038 0 - heuristic
COMMENT_LINE $0038 1 - zero
COMMENT_LINE $0038 2 - one
COMMENT_LINE $0038 3 - two
COMMENT_LINE $0038 4 - three
COMMENT_LINE $0038 $0080 - populate storage upon start
COMMENT_LINE $0038 $0040 - 1: extension calls used
COMMENT_LINE $0038 $0020 - gpios used (@7ffe)
COMMENT_LINE $0038 $0010 - free for future use
COMMENT_LINE $0038 $0008 - 1:screensaver enabled
COMMENT_LINE $0038 $0003 - font size
COMMENT_LINE $0038 first the variables for the v4e font system
COMMENT $0038 supplied by app:
COMMENT_LINE $003A if != 0: the cart uses this
COMMENT_LINE $003A ptr to supply a font and to
COMMENT_LINE $003A optimize strings;
COMMENT $003A supplied by app:
COMMENT_LINE $003B the cart stores a system
COMMENT_LINE $003B font at v4efontptr+0x20 and
COMMENT_LINE $003B adds v4efontwidth per line
COMMENT_LINE $003B ..must be at least $3f
COMMENT $003B supplied by cart:($5e or $7e)
COMMENT_LINE $003C last char supplied by v4e
COMMENT_LINE $003C (first one is always 0x20)
COMMENT $003C if !=0 a ptr to a list of ptrs
COMMENT_LINE $003E containing lists of constant
COMMENT_LINE $003E strings that can be optimized
COMMENT_LINE $003E for a given font (0 == end
COMMENT_LINE $003E of lists)
COMMENT_LINE $003E now the variables for the v4e store/load area
COMMENT $003E pointer to the area - 0: unused
COMMENT $0040 and its size
COMMENT $0042 = by v4e: return size for a load
COMMENT_LINE $0044 e.g. if set to zero in compile an != 0
COMMENT_LINE $0044 at the start shows whether something was
COMMENT_LINE $0044 loaded via 'populate storage upon start'
COMMENT_LINE $0048 end of v4e cart header
COMMENT_LINE $0048 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0074 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0074 options
FORCE_SYMBOL $009A demo_mode
FORCE_SYMBOL $009D clear_all_sound
COMMENT $00A0 this piece of music
FORCE_SYMBOL $00A0 titleMusic
COMMENT $00A3 NOW
FORCE_SYMBOL $00A3 PLY_INIT_ALL
COMMENT $00A6 scroll speed (going from right to left)
FORCE_NO_SYMBOL $00A6
COMMENT $00A9 store it
FORCE_SYMBOL $00A9 scroll_speed
COMMENT $00AC left boundary
COMMENT $00AF store it
FORCE_SYMBOL $00AF scroll_x_left
COMMENT $00B2 and intensity of scroll text
FORCE_NO_SYMBOL $00B2
COMMENT $00B5 store it
FORCE_SYMBOL $00B5 scroll_intensity
FORCE_SYMBOL $00B8 currentScroller
FORCE_SYMBOL $00BB use_half_stepCounter
FORCE_SYMBOL $00BE scroller1
FORCE_SYMBOL $00C1 set_up_scrolling
COMMENT_LINE $00C4 clr current_button_state
FORCE_SYMBOL $00C4 initTitel
FORCE_SYMBOL $00C8 initGame
FORCE_SYMBOL $00CB demo_mode
FORCE_NO_SYMBOL $00CE
COMMENT $00D0 in init game where should the object return to - here title = 1
FORCE_SYMBOL $00D0 return_state
FORCE_SYMBOL $00D3 initGame
FORCE_SYMBOL $00D8 initTitle2
FORCE_NO_SYMBOL $00DB
FORCE_SYMBOL $00DD current_button_state
FORCE_SYMBOL $00E0 last_button_state
FORCE_SYMBOL $00E3 scrollBlink
FORCE_SYMBOL $00E6 scrollBlinkAdd
FORCE_SYMBOL $00E9 scrollBlink
FORCE_NO_SYMBOL $00EC
FORCE_NO_SYMBOL $00F0
FORCE_SYMBOL $00F2 scrollBlinkAdd
FORCE_NO_SYMBOL $00F5
FORCE_SYMBOL $00FB scrollBlinkAdd
COMMENT $00FE the ym song only using channel 1
FORCE_SYMBOL $00FE PLY_PLAY
FORCE_SYMBOL $0101 Wait_Recal
COMMENT $0104 recal counter, about 21 Minutes befor roll over
FORCE_SYMBOL $0104 RecalCounter
FORCE_NO_SYMBOL $0107
FORCE_SYMBOL $0109 RecalCounter
COMMENT $010C round_startup_main expects dp set to d0
FORCE_NO_SYMBOL $010C
COMMENT $0110 copies all ym shadow registers that did change to the psg chip
FORCE_SYMBOL $0110 do_ym_sound2_no_sfx
FORCE_SYMBOL $0113 Intensity_5F
COMMENT $0116 agle of the first letter "R" of release - the BASE angle
FORCE_SYMBOL $0116 print_angle
COMMENT $0119 change it in accordance to the current speed of "change"
FORCE_SYMBOL $0119 angle_speed
COMMENT $011C ensure not higher lower 0
FORCE_NO_SYMBOL $011E
COMMENT $0121 or higher 720
FORCE_NO_SYMBOL $0121
FORCE_NO_SYMBOL $0127
FORCE_SYMBOL $012A print_angle
COMMENT $012D angle2 is the "rythm" of the letters expanding and shrinking in releation to their position to the "R"
FORCE_SYMBOL $012D print_angle_2
FORCE_NO_SYMBOL $0130
FORCE_NO_SYMBOL $0133
FORCE_NO_SYMBOL $0139
FORCE_SYMBOL $013C print_angle_2
COMMENT $013F 13000 cycles
FORCE_SYMBOL $013F do_one_scroll_step
COMMENT $0142 this prints the little messages in the mittle of the release circle
FORCE_SYMBOL $0142 do_one_title_round
FORCE_NO_SYMBOL $0145
COMMENT $0147 /BLANK low and /ZERO low
FORCE_SYMBOL $0147 VIA_cntl
COMMENT $0149 if scrolltext has run its course - do one demo start
FORCE_SYMBOL $0149 scrollReset
FORCE_SYMBOL $014E currentScroller
FORCE_SYMBOL $0151 currentScroller
FORCE_SYMBOL $0154 use_half_stepCounter
FORCE_NO_SYMBOL $0157
FORCE_NO_SYMBOL $015B
FORCE_NO_SYMBOL $015F
COMMENT $0165 scroll speed (going from right to left)
COMMENT $0167 store it
FORCE_SYMBOL $0167 scroll_speed
FORCE_SYMBOL $016A scroller2
COMMENT $016F scroll speed (going from right to left)
COMMENT $0171 store it
FORCE_SYMBOL $0171 scroll_speed
FORCE_SYMBOL $0174 scroller3
COMMENT $0179 scroll speed (going from right to left)
COMMENT $017B store it
FORCE_SYMBOL $017B scroll_speed
FORCE_SYMBOL $017E scroller4
FORCE_SYMBOL $0186 scroll_x_left
COMMENT $0189 y position of scroller
FORCE_NO_SYMBOL $0189
COMMENT $018C store it
FORCE_SYMBOL $018C scroll_y
COMMENT $018F store it
FORCE_SYMBOL $018F scroll_intensity
FORCE_SYMBOL $0192 set_up_scrolling
FORCE_SYMBOL $019A demo_mode
FORCE_SYMBOL $019D demoWaitShieldToActivate
FORCE_SYMBOL $01A0 demoWaitShieldToDeActivate
COMMENT $01A5 is a button pressed?
FORCE_SYMBOL $01A5 getButtonState
COMMENT $01A8 title_main1
FORCE_SYMBOL $01AA emptyStreamInMove
FORCE_SYMBOL $01AD inMovePointer
FORCE_SYMBOL $01B0 list_objects_head
COMMENT $01B3 (D = y,x, X = vectorlist) ; do all objects (the circling letters and the starfield)
COMMENT $01B5 same aslast state
FORCE_NO_SYMBOL $01B5
COMMENT $01B9 as released - possibly from highscore return
FORCE_NO_SYMBOL $01B9
FORCE_NO_SYMBOL $01BD
FORCE_NO_SYMBOL $01C3
FORCE_NO_SYMBOL $01C9
COMMENT $01CB no -> than jump to game start
COMMENT $01CD check if there is any v4e at all?
FORCE_SYMBOL $01CD v4ecartflags
COMMENT $01D0 if vec4 present - go back to vec4 menu
COMMENT $01D4 return 0 is IN GAME (for objects)
FORCE_SYMBOL $01D4 return_state
FORCE_SYMBOL $01D7 initGame
COMMENT $01DA round_startup_main expects dp set to d0
FORCE_NO_SYMBOL $01DA
COMMENT_LINE $01DE reset music to 0
COMMENT $01DE no music is playing ->0
FORCE_SYMBOL $01DE Vec_Music_Flag
COMMENT $01E1 shadow regs
FORCE_SYMBOL $01E1 Init_Music_Buf
COMMENT $01E4 ROM function that does the sound playing, here used to clear all regs
FORCE_SYMBOL $01E4 Do_Sound
COMMENT $01E7 this piece of music
FORCE_SYMBOL $01E7 inGameMusic
COMMENT $01EA NOW
FORCE_SYMBOL $01EA PLY_INIT_CH1
COMMENT $01ED decode the possible rest of un decoded YM stuff (if there are not enought objetcs with move vectors)
FORCE_SYMBOL $01ED decode_1ChannelRest
COMMENT $01F0 shields are not allowed directly after the other, otherwise the plaer could spawn shields like mad directly around his base
FORCE_SYMBOL $01F0 shield_delay
FORCE_SYMBOL $01F5 shield_delay
COMMENT $01F8 check if another stage is reached - if so initialize it
FORCE_SYMBOL $01F8 check_stage
FORCE_NO_SYMBOL $01FB
COMMENT $01FD recal counter, about 21 Minutes befor roll over
FORCE_SYMBOL $01FD RecalCounter
FORCE_NO_SYMBOL $0200
FORCE_SYMBOL $0202 RecalCounter
FORCE_SYMBOL $0205 noTimerCheck
FORCE_SYMBOL $020A VIA_t2_hi
FORCE_SYMBOL $020C t2_rest
FORCE_SYMBOL $020F noTimerCheck
COMMENT $0212 Wait for timer t2
FORCE_SYMBOL $0212 VIA_int_flags
COMMENT $0216 Store refresh value
FORCE_NO_SYMBOL $0216
COMMENT $0219 into timer t2
FORCE_SYMBOL $0219 VIA_t2_lo
FORCE_NO_SYMBOL $021B
COMMENT $021E blank low and zero low
FORCE_SYMBOL $021E VIA_cntl
COMMENT $0220 clear shift register
FORCE_SYMBOL $0220 VIA_shift_reg
COMMENT $0222 clear D/A register
FORCE_SYMBOL $0222 VIA_port_a
FORCE_NO_SYMBOL $0224
COMMENT $0227 mux=1, disable mux
FORCE_SYMBOL $0227 VIA_port_b
COMMENT $0229 mux=1, enable mux
FORCE_SYMBOL $0229 VIA_port_b
FORCE_NO_SYMBOL $022B
COMMENT $022D disable mux
FORCE_SYMBOL $022D VIA_port_b
FORCE_SYMBOL $022F do_ym_sound2
COMMENT_LINE $0232 init in move pointer
COMMENT_LINE $0232 todo for 1channel player
FORCE_SYMBOL $0232 emptyStreamInMove
FORCE_SYMBOL $0235 musicOption
FORCE_SYMBOL $023A PLY_PLAY_1CHANNEL_PART1
FORCE_SYMBOL $023D inMovePointer
COMMENT $0240 has a nice long moveto
FORCE_SYMBOL $0240 draw_Score_game
COMMENT $0243 if there is a bonus active draw the icon
FORCE_SYMBOL $0243 drawBonus
COMMENT_LINE $0246 increase base angle by 1 degree
COMMENT_LINE $0246 and modulo it at 360 degrees
COMMENT $0246 slight rotation of the base
FORCE_SYMBOL $0246 base_angle
FORCE_NO_SYMBOL $0249
FORCE_SYMBOL $0254 base_angle
FORCE_NO_SYMBOL $025B
FORCE_NO_SYMBOL $025E
COMMENT $0261 starlets rotate opposite...
FORCE_SYMBOL $0261 starletAngle
COMMENT_LINE $0264 query joystick buttons
COMMENT_LINE $0264 four states:
COMMENT_LINE $0264 a) was not pressed and is not pressed -> do nothing
COMMENT_LINE $0264 b) was not pressed and is NOW pressed -> init new shield
COMMENT_LINE $0264 c) was pressed and is pressed -> continue shield (grow)
COMMENT_LINE $0264 d) was pressed and is NOT pressed -> shield finished
COMMENT $0264 is a button pressed?
FORCE_SYMBOL $0264 getButtonState
FORCE_SYMBOL $0267 demo_mode
FORCE_SYMBOL $026F demo_mode
FORCE_NO_SYMBOL $0272
COMMENT $0274 returning to title - restore "DEMO" return for objects
FORCE_SYMBOL $0274 return_state
FORCE_SYMBOL $0277 initGame
FORCE_NO_SYMBOL $027A
COMMENT $027C save a known button state, that way the game does not start immedialtly upon exiting the demo
FORCE_SYMBOL $027C current_button_state
FORCE_SYMBOL $027F backFromDemo
COMMENT $0282 automatical demo return, if there are many spawn objects
FORCE_SYMBOL $0289 backFromDemo_setUp
COMMENT $028C returnFromDemoInGame
FORCE_SYMBOL $028C display_highscore
COMMENT_LINE $028F do random shield activation during demo
FORCE_SYMBOL $028F demoWaitShieldToActivate
FORCE_SYMBOL $0294 demoWaitShieldToActivate
FORCE_NO_SYMBOL $0299
COMMENT_LINE $029B reload shield to deactive waiter
FORCE_SYMBOL $029B my_random2
FORCE_NO_SYMBOL $029E
FORCE_SYMBOL $02A1 demoWaitShieldToDeActivate
FORCE_SYMBOL $02A9 demoWaitShieldToDeActivate
COMMENT_LINE $02AE reload shield to activate waiter
FORCE_SYMBOL $02AE my_random2
FORCE_NO_SYMBOL $02B1
FORCE_SYMBOL $02B4 demoWaitShieldToActivate
FORCE_NO_SYMBOL $02B7
FORCE_NO_SYMBOL $02BB
COMMENT_LINE $02BF now check the button for above mentioned states
COMMENT $02BF yes, but last time is was not pressed
FORCE_NO_SYMBOL $02BF
COMMENT $02C5 yes, and last time was pressed
FORCE_NO_SYMBOL $02C5
COMMENT $02CB no, but last time was pressed
FORCE_NO_SYMBOL $02CB
COMMENT_LINE $02D1 beq no_playerAction ; zero means no, and last was also not pressed
FORCE_NO_SYMBOL $02D1
COMMENT $02D3 /BLANK low and /ZERO low
FORCE_SYMBOL $02D3 VIA_cntl
COMMENT $02D5 draws the "base"
FORCE_SYMBOL $02D5 drawPlayerHome
COMMENT $02DD timer or gimmik
FORCE_SYMBOL $02E1 check_spawn
FORCE_SYMBOL $02E4 list_objects_head
COMMENT $02E7 (D = y,x, X = vectorlist)
COMMENT_LINE $02E9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $02E9 following entries are reached from check spawn
COMMENT_LINE $02E9 in check span we also check the current speed
COMMENT_LINE $02E9 and initialize/deinitialize objects according to the analysis
COMMENT_LINE $02E9 less than 10000 cycles to spare
COMMENT $02E9 if shield is active than 10000 is normal - do nothing
FORCE_SYMBOL $02E9 shieldActive
COMMENT $02EE if explosions are active - don't bother about 10000
FORCE_SYMBOL $02EE explosionActiveCounter
COMMENT $02F3 two starfields less than max...
FORCE_NO_SYMBOL $02F3
FORCE_SYMBOL $02F5 starfield_max
COMMENT_LINE $02FD less than 5000 cycles to spare
COMMENT $02FD only 3 starfields
FORCE_NO_SYMBOL $02FD
FORCE_SYMBOL $02FF starfield_max
COMMENT_LINE $0302 ldd      #((INITIAL_EXPLOSION_MAX/2)*256) + (INITIAL_SCORE_DISPLAY_TIME/2) ; explosion scale and score time somehat reduced
COMMENT $0302 explosion scale and score time somehat reduced
COMMENT_LINE $0307 less than 1000 cycles to spare
COMMENT $0307 only one starfield
FORCE_NO_SYMBOL $0307
FORCE_SYMBOL $0309 starfield_max
COMMENT_LINE $030C ldd      #((INITIAL_EXPLOSION_MAX/4)*256) + (INITIAL_SCORE_DISPLAY_TIME/4) ; explosion scale and score time greatly reduced
COMMENT $030C explosion scale and score time greatly reduced
COMMENT_LINE $0311 this round we did no spawn
COMMENT_LINE $0311 thus we have some time to do a 50Hz analysis
COMMENT_LINE $0311 $3a = about 15000 cycles
COMMENT_LINE $0311 $27 = about 10000 cycles
COMMENT_LINE $0311 $13 = about 5000 cycles
COMMENT_LINE $0311 $3 = about 1000 cycles
FORCE_SYMBOL $0311 t2_rest
FORCE_NO_SYMBOL $0314
FORCE_NO_SYMBOL $0318
FORCE_NO_SYMBOL $031C
COMMENT_LINE $0320 reset to max if more than 10000 left
FORCE_SYMBOL $0320 INITIAL_STARFIELD_MAX
FORCE_SYMBOL $0322 starfield_max
FORCE_SYMBOL $0328 explosionMax
FORCE_SYMBOL $032B score_display_time
COMMENT_LINE $032E above we checked for speed - no lets
COMMENT_LINE $032E check for object count
COMMENT $032E max num of objects
FORCE_SYMBOL $032E MAX_OBJECTS
COMMENT $0330 reduced b current objects
FORCE_SYMBOL $0330 object_count
FORCE_SYMBOL $0333 starfield_max
COMMENT $0336 so many objects besides the starfield should be available
FORCE_SYMBOL $0336 BUFFER_OBJECT_COUNT
FORCE_NO_SYMBOL $0338
FORCE_NO_SYMBOL $0343
FORCE_SYMBOL $0345 starfield_max
COMMENT_LINE $0348 now check the number of starfields displayed, spawn or destroy accordingly (one at a time)
FORCE_SYMBOL $0348 starFieldCounter
FORCE_SYMBOL $034B starfield_max
COMMENT_LINE $0355 go thru all objects
COMMENT_LINE $0355 look if there is a "fresh" starfield - destory fresh starfields (that are internaly not initialzed yet)
COMMENT_LINE $0355 first - so switching on and of is not so "visible" to the player
FORCE_SYMBOL $0355 list_objects_head
COMMENT_LINE $035A seek round 1
FORCE_SYMBOL $035A TYPE
COMMENT $035C seek new starfields
FORCE_SYMBOL $035C TYPE_STARFIELD
FORCE_SYMBOL $0360 IS_NEW_STARFIELD
FORCE_SYMBOL $0365 NEXT_OBJECT
FORCE_SYMBOL $0369 list_objects_head
COMMENT_LINE $036E if non was found - destroy the first found - all are seemingly initialized...
FORCE_SYMBOL $036E TYPE
COMMENT $0370 seek any starfield
FORCE_SYMBOL $0370 TYPE_STARFIELD
FORCE_SYMBOL $0374 NEXT_OBJECT
FORCE_SYMBOL $0379 starFieldCounter
FORCE_SYMBOL $037C removeObject_rts
COMMENT_LINE $037F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $037F counts down spawn timer
COMMENT_LINE $037F if 0 than spawn new
COMMENT_LINE $037F t2_rest ds 1
COMMENT_LINE $037F noTimerCheck ds 1 ; if one no timer adjustment!
COMMENT_LINE $037F explosionMax ds 1
COMMENT_LINE $037F object_count ds 1 ; how many objects are alive?
COMMENT_LINE $037F starFieldCounter ds 1
COMMENT $037F only ever spawn if spawn _timer < 0
FORCE_SYMBOL $037F spawn_timer
COMMENT_LINE $0382 is initially "INITIAL_SPAWN_RESET_TIMER = 50"  = each second one spawn (might be "empty" spawn though)
COMMENT_LINE $0382 the spawn_timer is decreased as the game gets harder (faster spawning)
COMMENT_LINE $0384 reset the timer for next spawn
COMMENT $0384 in spawn reset is the timer that needs to be count down to achieve a spawn
FORCE_SYMBOL $0384 spawn_reset
COMMENT_LINE $0387 in spawnRest_Counter a counter is decreased
COMMENT_LINE $0387 each time the counter reaches 0 the the "spawn_reset" (in reg a) timer is decreased, thus
COMMENT_LINE $0387 the game gets  more difficult as the game progresses
COMMENT_LINE $0387 spawnResr_Counter is initialized with INITIAL_SPAWN_INCREASE_DELAY = 1
COMMENT_LINE $0387 each countdown the spawnResr_Counter is reset with spawn_increase_delay
COMMENT_LINE $0387 spawn_increase_delay is increased each such a reset (up to a maximum)
COMMENT_LINE $0387 thus the game gets slower more difficult the longer the game lasts
FORCE_SYMBOL $0387 spawnRest_Counter
FORCE_SYMBOL $038C spawn_increase_delay
COMMENT $0390 slowes in
FORCE_SYMBOL $0390 max_spawn_increase_delay
FORCE_SYMBOL $0395 max_spawn_increase_delay
FORCE_SYMBOL $0398 spawn_increase_delay
FORCE_SYMBOL $039B spawnRest_Counter
COMMENT $039E decrease the actual SPAWN rate
COMMENT $039F fastest spawn rate = 15/50 seconds delay
FORCE_SYMBOL $039F min_spawn_reset
FORCE_SYMBOL $03A4 min_spawn_reset
FORCE_SYMBOL $03A7 spawn_reset
FORCE_SYMBOL $03AA spawn_timer
COMMENT_LINE $03AD calculate object position of next spawned object
COMMENT_LINE $03AD determine (random) type
COMMENT_LINE $03AD random coordinates
COMMENT_LINE $03AD scale
COMMENT_LINE $03AD but first determine what kind of object we spawn
COMMENT_LINE $03AD for each spawn we do we increase the spawn count
COMMENT_LINE $03AD the # of spawns determines a possible phase switch (in main)
FORCE_SYMBOL $03AD spawn_count
FORCE_NO_SYMBOL $03B0
FORCE_SYMBOL $03B2 spawn_count
COMMENT $03B5 load a random number
FORCE_SYMBOL $03B5 my_random
COMMENT $03B8 and our current "allowed" flags
FORCE_SYMBOL $03B8 spawn_allowed
COMMENT $03BB if ONLY squad - than do squad directly
FORCE_SYMBOL $03BB ALLOW_SQUAD
FORCE_NO_SYMBOL $03BF
FORCE_NO_SYMBOL $03C5
FORCE_NO_SYMBOL $03CB
FORCE_NO_SYMBOL $03D1
FORCE_NO_SYMBOL $03D7
FORCE_NO_SYMBOL $03DD
FORCE_NO_SYMBOL $03E3
FORCE_NO_SYMBOL $03E7
FORCE_SYMBOL $03EB bonusCounter
FORCE_SYMBOL $03F0 spawnBonus
COMMENT_LINE $03F3 if spawn was not allowed - decrease spawn count and return
FORCE_SYMBOL $03F3 spawn_count
FORCE_SYMBOL $03F8 spawn_count
COMMENT $0000 store current angle of object
COMMENT $0000 store current angle of object
COMMENT $0000 u pointer to spwan angle coordinates
COMMENT $0000 save start pos
COMMENT $0000 save start pos
COMMENT_LINE $0000 dont worry about cycles when squad
COMMENT_LINE $0000 we have time enough, otherwise it wouldn't be a squad...
FORCE_NO_SYMBOL $03FE
COMMENT $0400 store current angle of object
FORCE_SYMBOL $0400 ANGLE
FORCE_NO_SYMBOL $0403
FORCE_NO_SYMBOL $0406
COMMENT $0410 store current angle of object
FORCE_SYMBOL $0410 ANGLE
FORCE_SYMBOL $0413 circle
COMMENT $0416 u pointer to spwan angle coordinates
FORCE_NO_SYMBOL $0418
COMMENT $041A save start pos
FORCE_SYMBOL $041A Y_POS
COMMENT $041C save start pos
FORCE_SYMBOL $041C X_POS
FORCE_NO_SYMBOL $041E
COMMENT $0421 just one more pull
FORCE_NO_SYMBOL $042D
FORCE_SYMBOL $042F HunterList
FORCE_SYMBOL $0434 CURRENT_LIST
COMMENT_LINE $0437 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $0437 demo_mode
FORCE_SYMBOL $043C object_count
COMMENT $043F squad appears only if less than 25 object are visible
FORCE_NO_SYMBOL $043F
FORCE_SYMBOL $0443 t2_rest
COMMENT $0446 suqad only appears if more than 10000 cycle to spare
FORCE_NO_SYMBOL $0446
FORCE_SYMBOL $044A ALLOW_SQUAD
COMMENT $044E check spawn next round again
FORCE_SYMBOL $044E spawn_timer
COMMENT_LINE $0453 no "timer" checking in squad wave...
COMMENT $0453 load a random number
FORCE_SYMBOL $0453 my_random2
FORCE_NO_SYMBOL $0456
FORCE_NO_SYMBOL $045C
FORCE_NO_SYMBOL $0460
FORCE_NO_SYMBOL $0464
COMMENT_LINE $0468 cmpa #250
COMMENT_LINE $0468 lbls spawnDragonSquad
FORCE_SYMBOL $046A spawn_count
FORCE_NO_SYMBOL $046D
FORCE_SYMBOL $046F spawn_count
COMMENT_LINE $0472 spawn 6
FORCE_SYMBOL $0472 spb_allowed
FORCE_SYMBOL $0479 spb_allowed
COMMENT $047C CORRECT_SQUAD
FORCE_SYMBOL $047C correctSquad
FORCE_SYMBOL $047F spb_allowed
COMMENT $0482 CORRECT_SQUAD
FORCE_SYMBOL $0482 correctSquad
FORCE_SYMBOL $0485 spb_allowed
COMMENT $0488 CORRECT_SQUAD
FORCE_SYMBOL $0488 correctSquad
FORCE_SYMBOL $048B spb_allowed
COMMENT $048E CORRECT_SQUAD
FORCE_SYMBOL $048E correctSquad
FORCE_SYMBOL $0491 spb_allowed
COMMENT $0494 CORRECT_SQUAD
FORCE_SYMBOL $0494 correctSquad
FORCE_SYMBOL $0499 spawn_count
FORCE_NO_SYMBOL $049C
FORCE_SYMBOL $049E spawn_count
COMMENT_LINE $04A1 spawn 6
FORCE_SYMBOL $04A1 spx_allowed
FORCE_SYMBOL $04A8 spx_allowed
COMMENT $04AB CORRECT_SQUAD
FORCE_SYMBOL $04AB correctSquad
FORCE_SYMBOL $04AE spx_allowed
COMMENT $04B1 CORRECT_SQUAD
FORCE_SYMBOL $04B1 correctSquad
FORCE_SYMBOL $04B4 spx_allowed
COMMENT $04B7 CORRECT_SQUAD
FORCE_SYMBOL $04B7 correctSquad
FORCE_SYMBOL $04BA spx_allowed
COMMENT $04BD CORRECT_SQUAD
FORCE_SYMBOL $04BD correctSquad
FORCE_SYMBOL $04C0 spx_allowed
COMMENT $04C3 CORRECT_SQUAD
FORCE_SYMBOL $04C3 correctSquad
FORCE_SYMBOL $04C8 spawn_count
FORCE_NO_SYMBOL $04CB
FORCE_SYMBOL $04CD spawn_count
COMMENT_LINE $04D0 spawn 6
FORCE_SYMBOL $04D0 sphx_allowed
FORCE_SYMBOL $04D7 sphx_allowed
COMMENT $04DA CORRECT_SQUAD
FORCE_SYMBOL $04DA correctSquad
FORCE_SYMBOL $04DD sphx_allowed
COMMENT $04E0 CORRECT_SQUAD
FORCE_SYMBOL $04E0 correctSquad
FORCE_SYMBOL $04E3 sphx_allowed
COMMENT $04E6 CORRECT_SQUAD
FORCE_SYMBOL $04E6 correctSquad
FORCE_SYMBOL $04E9 sphx_allowed
COMMENT $04EC CORRECT_SQUAD
FORCE_SYMBOL $04EC correctSquad
FORCE_SYMBOL $04EF sphx_allowed
COMMENT $04F2 CORRECT_SQUAD
FORCE_SYMBOL $04F2 correctSquad
FORCE_SYMBOL $04F7 spawn_count
FORCE_NO_SYMBOL $04FA
FORCE_SYMBOL $04FC spawn_count
COMMENT_LINE $04FF spawn 6
FORCE_SYMBOL $04FF sph_allowed
FORCE_SYMBOL $0506 sph_allowed
FORCE_SYMBOL $0509 correctSquad
COMMENT $050C CORRECT_HUNTER_ANGLE
FORCE_SYMBOL $050C correctHunterAngle
FORCE_SYMBOL $050F sph_allowed
FORCE_SYMBOL $0512 correctSquad
COMMENT $0515 CORRECT_HUNTER_ANGLE
FORCE_SYMBOL $0515 correctHunterAngle
FORCE_SYMBOL $0518 sph_allowed
FORCE_SYMBOL $051B correctSquad
COMMENT $051E CORRECT_HUNTER_ANGLE
FORCE_SYMBOL $051E correctHunterAngle
FORCE_SYMBOL $0521 sph_allowed
FORCE_SYMBOL $0524 correctSquad
COMMENT $0527 CORRECT_HUNTER_ANGLE
FORCE_SYMBOL $0527 correctHunterAngle
FORCE_SYMBOL $052A sph_allowed
FORCE_SYMBOL $052D correctSquad
COMMENT $0530 CORRECT_HUNTER_ANGLE
FORCE_SYMBOL $0530 correctHunterAngle
COMMENT_LINE $0535 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $0535 check starlet count - max 3
FORCE_SYMBOL $0535 starletCount
FORCE_NO_SYMBOL $0538
FORCE_SYMBOL $053E spawnStarlet
COMMENT_LINE $0541 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0541 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0541 this file is part of Release, written by Malban in 2017
COMMENT_LINE $0541 Note!
COMMENT_LINE $0541 the bevahour routines are ordered, that each one has a different "high" byte
COMMENT_LINE $0541 this is now used as "type" identification!
COMMENT_LINE $0541 this is the offset in the below defined "stack" structure after the initial pull has been done
COMMENT_LINE $0541 all following objects "inherit" from defined Objectstruct
COMMENT_LINE $0541 all vars after "NEXT_OBJECT" can be different for each of the objects
COMMENT_LINE $0541 all definitions with the same name must be at the same structure position
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT $0541 current list vectorlist
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 with what value does the animation get updated
COMMENT $0541 after how many rounds the movement updates (0 = each, 1 = every second etc)
COMMENT $0541 #noDoubleWarn
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT $0541 current list vectorlist
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 DRAGON TICK_COUNTER - on a different position, therfor named differently
COMMENT_LINE $0542 lower nibble is counter for scale move (inward)
COMMENT_LINE $0542 higher nibble is counter for angle move
COMMENT $0541 #noDoubleWarn
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT_LINE $0542 ds CURRENT_LIST,2 ; current list vectorlist
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 two byte for easier adding
COMMENT $0541 my parent - I have to tell him when I die
COMMENT $0541 #noDoubleWarn
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT $0541 current list vectorlist
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 with what value does the animation get updated
COMMENT $0541 after how many rounds the movement updates (0 = each, 1 = every second etc)
COMMENT $0541 with what value does the movement get updated (1-4)?
COMMENT $0541 #noDoubleWarn
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT $0541 current list vectorlist
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 #noDoubleWarn
COMMENT $0541 after how many rounds the movement updates (0 = each, 1 = every second etc)
COMMENT $0541 with what value does the movement get updated (1-4)?
COMMENT $0541 #noDoubleWarn
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT $0541 current list vectorlist
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 #noDoubleWarn
COMMENT $0541 after how many rounds the movement updates (0 = each, 1 = every second etc)
COMMENT $0541 with what value does the movement get updated (1-4)?
COMMENT $0541 #noDoubleWarn
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT $0541 current list vectorlist
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 with what value does the animation get updated
COMMENT $0541 after how many rounds the movement updates (0 = each, 1 = every second etc)
COMMENT $0541 after how many ticks will the counter be resetd next time
COMMENT $0541 after how many ticks do I shoot again?
COMMENT $0541 add to angle each countdown
COMMENT $0541 #noDoubleWarn
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT $0541 current list vectorlist
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 jmp to current draw routine
COMMENT $0541 next time I spawn a bonus score
COMMENT $0541 what is the current bonus score (2-255)
COMMENT $0541 what number of star am I (0-2)
COMMENT $0541 #noDoubleWarn
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT $0541 current list vectorlist
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 #noDoubleWarn
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT $0541 current list vectorlist
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 how long will I be displayed (countdon to zero)
COMMENT $0541 #noDoubleWarn
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT $0541 current list vectorlist of first score digit
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 how long will I be displayed (countdon to zero)
COMMENT $0541 current list vectorlist of second score digit
COMMENT $0541 current list vectorlist of third score digit
COMMENT $0541 #noDoubleWarn
COMMENT $0541 current position
COMMENT $0541 scale to position the object
COMMENT $0541 current list vectorlist of first score digit
COMMENT $0541 if angle base, angle in degree *2
COMMENT $0541 positive = end of list
COMMENT $0541 initialized with 50 again and again and countdown
COMMENT $0541 #noDoubleWarn
COMMENT $0541 #noDoubleWarn
COMMENT $0541 circle adr preload to y
COMMENT $0541 positive = end of list
COMMENT $0541 current position
COMMENT_LINE $0541 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0541 GENERAL Object functions
COMMENT_LINE $0541 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0541 this macro is placed at the end of each possible "remove" exit
COMMENT_LINE $0541 it stores the just removed object at the head of the "empty" list and
COMMENT_LINE $0541 sets up its "next" pointer
COMMENT $0000 set u free, as new free head
COMMENT $0000 load to u the next linked list element
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 behaviours control (action) and draw all objects
COMMENT_LINE $0000 each object type has an individual behaviour
COMMENT_LINE $0000 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0000 values are = from "u" list as:
COMMENT_LINE $0000 pulu     pc,d,x ; (D = y,x, X = vectorlist)
COMMENT_LINE $0000 04a0
COMMENT_LINE $0541 do the scaling
COMMENT $0541 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $0541 VIA_t1_cnt_lo
COMMENT_LINE $0545 start the move to
COMMENT_LINE $0545 following calcs can be done within that move
COMMENT $0545 Store Y in D/A register
FORCE_SYMBOL $0545 VIA_port_a
COMMENT $0547 Blank low, zero high?
FORCE_NO_SYMBOL $0547
FORCE_SYMBOL $0549 VIA_cntl
COMMENT $054C Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $054C VIA_port_b
COMMENT $054E Clear shift regigster
FORCE_SYMBOL $054E VIA_shift_reg
COMMENT $0550 Disable mux
FORCE_SYMBOL $0550 VIA_port_b
COMMENT $0552 Store X in D/A register
FORCE_SYMBOL $0552 VIA_port_a
COMMENT $0554 enable timer
FORCE_SYMBOL $0554 VIA_t1_cnt_hi
COMMENT $0556 load current scale to a - for later calcs
COMMENT $0558 if scale is rather large, we cen decipher music in that time
FORCE_NO_SYMBOL $0558
COMMENT $055C uncrunch one music "piece"
FORCE_SYMBOL $055C inMovePointer
COMMENT $0562 see if wee need calc at all, compare tick counter with below zero
COMMENT $0564 if not, scale will not be updated
COMMENT $0566 otherwise reset the delay counter for scale update (this is global now, should I use that from the structure?)
FORCE_SYMBOL $0566 X_add_delay
COMMENT $0569 store it
COMMENT $056B and actually descrease the scale with the "decrease" value
COMMENT $056D if below zero, than base reaches
COMMENT $056F if lower base scale, than also dead
COMMENT_LINE $0573 if we reached the base -
COMMENT_LINE $0573 a) moveto was SMALL - finished anyway
COMMENT_LINE $0573 b) not interested in move - nothing will be drawn anymore!
COMMENT_LINE $0573 MY_MOVE_TO_B_END
COMMENT_LINE $0573 cancle move
COMMENT $0573 if base was hit -> game over
FORCE_SYMBOL $0573 gameOver
COMMENT $0576 store the calculated scale (used next round)
COMMENT_LINE $0578 check if animation should change
COMMENT_LINE $0578 if yes, get the new vectorlist for NEXT beheaviour round
COMMENT_LINE $0578 (current round uses the X reg from U stack)
COMMENT $0578 see if wee need calc at all, compare tick counter with below zero
COMMENT $057A if not, scale will not be updated
COMMENT $057C anim reset
FORCE_SYMBOL $057C X_ANIM_DELAY
FORCE_SYMBOL $058B enemyXList_0
COMMENT $0590 preload next user stack
COMMENT $0592 set scale value for next print
FORCE_NO_SYMBOL $0592
COMMENT $0595 to timer t1 (lo= and preload intensity
FORCE_SYMBOL $0595 VIA_t1_cnt_lo
COMMENT $0597 end a move to
FORCE_NO_SYMBOL $0597
FORCE_SYMBOL $0599 VIA_int_flags
COMMENT $059D Store intensity in D/A
FORCE_SYMBOL $059D VIA_port_a
COMMENT $059F mux disabled channel 2
FORCE_NO_SYMBOL $059F
FORCE_SYMBOL $05A2 VIA_port_b
COMMENT $05A4 mux enabled channel 2
FORCE_SYMBOL $05A4 VIA_port_b
COMMENT $05A6 turn off mux
FORCE_SYMBOL $05A6 VIA_port_b
COMMENT $05A8 draw the list
FORCE_SYMBOL $05A8 myDraw_VL_mode_direct
COMMENT_LINE $05AB ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $05AB in u+u_offset1 pointer to the object that must be removed
COMMENT_LINE $05AB destroys x, y
COMMENT_LINE $05AB sets u to pointer of next object in linked list (might be the "return" structure)
COMMENT_LINE $05AB this version is called at the end of an explosion or at the
COMMENT_LINE $05AB end of a score display, called by "behaviours"
COMMENT_LINE $05AB and thus the "return" is the call of the next object thru U stack
COMMENT_LINE $05AB since often called from "in move" we disable the move!
COMMENT_LINE $05AB = default draw values
COMMENT_LINE $05AB and zero everything
COMMENT_LINE $05AB in the hopes of less glitches (ZERO should actually do all we need)
COMMENT_LINE $05AB ;;; this cleanup is not really neccessary . it was inserted in hope to find the "glitch"
COMMENT_LINE $05AB ldd      #$0300
COMMENT_LINE $05AB sta      VIA_t1_cnt_lo                ; disable ramping
COMMENT_LINE $05AB stb      VIA_t1_cnt_hi                ; disable ramping
COMMENT_LINE $05AB MY_MOVE_TO_B_END                      ; end a move to
COMMENT_LINE $05AB LDD      #$98cc                       ;[6] check
COMMENT_LINE $05AB STa      <VIA_aux_cntl                ; [4] Shift reg mode = 000 free disable, T1 PB7 enabled
COMMENT_LINE $05AB STB      VIA_cntl                     ;/BLANK low and /ZERO low
COMMENT_LINE $05AB lda      #$83                         ; a = $18, b = $83 disable RAMP, muxsel=false, channel 1 (integrators offsets)
COMMENT_LINE $05AB clr      <VIA_port_a                  ; Clear D/A output
COMMENT_LINE $05AB sta      <VIA_port_b                  ; = mux to channel 1, leave mux disabled
COMMENT_LINE $05AB dec      <VIA_port_b                  ; enable mux, reset integrator offset values
COMMENT_LINE $05AB inc      <VIA_port_b                  ; enable mux, reset integrator offset values
COMMENT_LINE $05AB ;;;
COMMENT_LINE $05AB draw cleanup done, now start the remove
COMMENT $05AB x -> pointer object struture (correction of offset)
FORCE_SYMBOL $05AB u_offset1
COMMENT $05AD is it the first?
FORCE_SYMBOL $05AD list_objects_head
COMMENT $05B0 no -> jump
COMMENT $05B2 u pointer to next objext
FORCE_SYMBOL $05B2 NEXT_OBJECT
COMMENT $05B4 the next object will be the first
FORCE_SYMBOL $05B4 list_objects_head
COMMENT $05B7 if the next is "positive" than the removed object also was the last
COMMENT $05B9 if not - cleaning up of current "working" list is done
FORCE_SYMBOL $05B9 object_count
COMMENT $05BC set u free, as new free head
FORCE_SYMBOL $05BC list_empty_head
COMMENT $05C0 load to u the next linked list element
FORCE_SYMBOL $05C0 NEXT_OBJECT
FORCE_SYMBOL $05C3 list_empty_head
COMMENT $05C6 (D = y,x, X = vectorlist)
COMMENT $05C8 if our object was also the last, than also store the "next" object (the returner) to the tail
FORCE_SYMBOL $05C8 list_objects_tail
COMMENT $05CB and clean up the empties
FORCE_SYMBOL $05CB object_count
COMMENT $05CE set u free, as new free head
FORCE_SYMBOL $05CE list_empty_head
COMMENT $05D2 load to u the next linked list element
FORCE_SYMBOL $05D2 NEXT_OBJECT
FORCE_SYMBOL $05D5 list_empty_head
COMMENT $05D8 (D = y,x, X = vectorlist)
COMMENT $05DA start at list head
FORCE_SYMBOL $05DA list_objects_head
COMMENT $05DE am I the next object of the current investigated list element
FORCE_SYMBOL $05DE NEXT_OBJECT
COMMENT $05E0 jup -> jump
COMMENT $05E2 otherwise load the next as new current
FORCE_SYMBOL $05E2 NEXT_OBJECT
COMMENT $05E5 and search further
COMMENT $05E7 we load "our" next object to u
FORCE_SYMBOL $05E7 NEXT_OBJECT
COMMENT $05E9 and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $05E9 NEXT_OBJECT
COMMENT $05EB of our next was positive, than we were last,
COMMENT $05ED if not last, than finish and restore empties
FORCE_SYMBOL $05ED object_count
COMMENT $05F0 set u free, as new free head
FORCE_SYMBOL $05F0 list_empty_head
COMMENT $05F4 load to u the next linked list element
FORCE_SYMBOL $05F4 NEXT_OBJECT
FORCE_SYMBOL $05F7 list_empty_head
COMMENT $05FA (D = y,x, X = vectorlist)
COMMENT $05FC otherwise our we were last, than our previous is the new last
FORCE_SYMBOL $05FC list_objects_tail
COMMENT $0600 and clean up the empties
FORCE_SYMBOL $0600 object_count
COMMENT $0603 set u free, as new free head
FORCE_SYMBOL $0603 list_empty_head
COMMENT $0607 load to u the next linked list element
FORCE_SYMBOL $0607 NEXT_OBJECT
FORCE_SYMBOL $060A list_empty_head
COMMENT $060D (D = y,x, X = vectorlist)
COMMENT_LINE $0A58 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0A58 behaviours control (action) and draw all objects
COMMENT_LINE $0A58 each object type has an individual behaviour
COMMENT_LINE $0A58 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0A58 values are = from "u" list as:
COMMENT_LINE $0A58 pulu     pc,d,x ; (D = y,x, X = vectorlist)
COMMENT_LINE $0A58 0590
COMMENT_LINE $0A58 do the scaling
COMMENT $0A58 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $0A58 VIA_t1_cnt_lo
COMMENT_LINE $0A5C start the move to
COMMENT_LINE $0A5C following calcs can be done within that move
COMMENT $0A5C Store Y in D/A register
FORCE_SYMBOL $0A5C VIA_port_a
COMMENT $0A5E Blank low, zero high?
FORCE_NO_SYMBOL $0A5E
FORCE_SYMBOL $0A60 VIA_cntl
COMMENT $0A63 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0A63 VIA_port_b
COMMENT $0A65 Clear shift regigster
FORCE_SYMBOL $0A65 VIA_shift_reg
COMMENT $0A67 Disable mux
FORCE_SYMBOL $0A67 VIA_port_b
COMMENT $0A69 Store X in D/A register
FORCE_SYMBOL $0A69 VIA_port_a
COMMENT $0A6B enable timer
FORCE_SYMBOL $0A6B VIA_t1_cnt_hi
COMMENT $0A6D load current scale to a - for later calcs
COMMENT $0A6F if scale is rather large, we cen decipher music in that time
FORCE_NO_SYMBOL $0A6F
COMMENT $0A73 uncrunch one music "piece"
FORCE_SYMBOL $0A73 inMovePointer
COMMENT $0A79 see if wee need calc at all, compare tick counter with below zero
COMMENT $0A7B if not, scale will not be updated
COMMENT $0A7D otherwise reset the delay counter for scale update (this is global now, should I use that from the structure?)
FORCE_SYMBOL $0A7D Hunter_add_delay
COMMENT $0A80 store it
COMMENT $0A82 and actually descrease the scale with the "decrease" value
COMMENT $0A84 if below zero, than base reaches
COMMENT $0A86 if lower base scale, than also dead
COMMENT $0A88 if the decreas generated an overflow - than we reached the base (scale below zero)
COMMENT_LINE $0A8A if we reached the base -
COMMENT_LINE $0A8A a) moveto was SMALL - finished anyway
COMMENT_LINE $0A8A b) not interested in move - nothing will be drawn anymore!
COMMENT_LINE $0A8A MY_MOVE_TO_B_END
COMMENT_LINE $0A8A cancle move
COMMENT $0A8A if base was hit -> game over
FORCE_SYMBOL $0A8A gameOver
COMMENT $0A8D store the calculated scale (used next round)
COMMENT $0A8F preload next user stack
COMMENT $0A91 load offset of vector list draw
COMMENT $0A98 intensity
FORCE_NO_SYMBOL $0A98
COMMENT $0A9A end a move to
FORCE_NO_SYMBOL $0A9A
FORCE_SYMBOL $0A9C VIA_int_flags
COMMENT $0AA0 Store intensity in D/A
FORCE_SYMBOL $0AA0 VIA_port_a
COMMENT $0AA2 mux disabled channel 2
FORCE_NO_SYMBOL $0AA2
FORCE_SYMBOL $0AA5 VIA_port_b
COMMENT $0AA7 mux enabled channel 2
FORCE_SYMBOL $0AA7 VIA_port_b
COMMENT $0AA9 turn off mux
FORCE_SYMBOL $0AA9 VIA_port_b
FORCE_SYMBOL $0AAB entry_optimized_draw_mvlc_unloop
COMMENT_LINE $0AAE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0AAE the return version is called by out timing analysier
COMMENT_LINE $0AAE it removes in general stars
COMMENT_LINE $0AAE but might also remove the occasional explosion if
COMMENT_LINE $0AAE there are to many (from shield)
COMMENT_LINE $0AAE no cleanup of vectors needed
COMMENT $0AAE x -> pointer object struture (correction of offset)
FORCE_NO_SYMBOL $0AAE
COMMENT $0AB0 is it the first?
FORCE_SYMBOL $0AB0 list_objects_head
COMMENT $0AB3 no -> jump
COMMENT $0AB5 u pointer to next objext
FORCE_SYMBOL $0AB5 NEXT_OBJECT
COMMENT $0AB7 the next object will be the first
FORCE_SYMBOL $0AB7 list_objects_head
COMMENT $0ABA if the next is "positive" than the removed object also was the last
COMMENT $0ABC if not - cleaning up of current "working" list is done
FORCE_SYMBOL $0ABC object_count
COMMENT $0ABF set u free, as new free head
FORCE_SYMBOL $0ABF list_empty_head
COMMENT $0AC3 load to u the next linked list element
FORCE_SYMBOL $0AC3 NEXT_OBJECT
FORCE_SYMBOL $0AC6 list_empty_head
COMMENT $0ACA if our object was also the last, than also store the "next" object (the returner) to the tail
FORCE_SYMBOL $0ACA list_objects_tail
COMMENT $0ACD and clean up the empties
FORCE_SYMBOL $0ACD object_count
COMMENT $0AD0 set u free, as new free head
FORCE_SYMBOL $0AD0 list_empty_head
COMMENT $0AD4 load to u the next linked list element
FORCE_SYMBOL $0AD4 NEXT_OBJECT
FORCE_SYMBOL $0AD7 list_empty_head
COMMENT $0ADB start at list head
FORCE_SYMBOL $0ADB list_objects_head
COMMENT $0ADF am I the next object of the current investigated list element
FORCE_SYMBOL $0ADF NEXT_OBJECT
COMMENT $0AE1 jup -> jump
COMMENT $0AE3 otherwise load the next as new current
FORCE_SYMBOL $0AE3 NEXT_OBJECT
COMMENT $0AE6 and search further
COMMENT $0AE8 we load "our" next object to u
FORCE_SYMBOL $0AE8 NEXT_OBJECT
COMMENT $0AEA and store our next in the place of our previous next and thus eleminate ourselfs
FORCE_SYMBOL $0AEA NEXT_OBJECT
COMMENT $0AEC of our next was positive, than we were last,
COMMENT $0AEE if not last, than finish and restore empties
FORCE_SYMBOL $0AEE object_count
COMMENT $0AF1 set u free, as new free head
FORCE_SYMBOL $0AF1 list_empty_head
COMMENT $0AF5 load to u the next linked list element
FORCE_SYMBOL $0AF5 NEXT_OBJECT
FORCE_SYMBOL $0AF8 list_empty_head
COMMENT $0AFC otherwise our we were last, than our previous is the new last
FORCE_SYMBOL $0AFC list_objects_tail
COMMENT $0B00 and clean up the empties
FORCE_SYMBOL $0B00 object_count
COMMENT $0B03 set u free, as new free head
FORCE_SYMBOL $0B03 list_empty_head
COMMENT $0B07 load to u the next linked list element
FORCE_SYMBOL $0B07 NEXT_OBJECT
FORCE_SYMBOL $0B0A list_empty_head
COMMENT_LINE $0B0E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0B0E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0B0E new list object to U
COMMENT_LINE $0B0E leaves with flags = to result
COMMENT_LINE $0B0E (positive = not successfull) ROM
COMMENT_LINE $0B0E negative = successfull RAM
COMMENT_LINE $0B0E destroys d, u , x
FORCE_SYMBOL $0B0E list_empty_head
COMMENT $0B11 we don't have any spare objects -> go out
COMMENT_LINE $0B13 = the new empty head
COMMENT $0B13 the next in out empty list will be the new
FORCE_SYMBOL $0B13 NEXT_OBJECT
COMMENT $0B15 head of our empty list
FORCE_SYMBOL $0B15 list_empty_head
COMMENT_LINE $0B18 load last of current object list
COMMENT $0B18 load current last "working" object
FORCE_SYMBOL $0B18 list_objects_tail
COMMENT $0B1B if positive, than there was no previous last (and no head)
COMMENT_LINE $0B1D of the last object, the new object is the next object
COMMENT $0B1D otherwise we will be the next of that working object
FORCE_SYMBOL $0B1D NEXT_OBJECT
COMMENT $0B21 if there was no last, than also no first -> therefor set new object as head
FORCE_SYMBOL $0B21 list_objects_head
COMMENT $0B24 the next object of our current object is "return", since we are last
FORCE_SYMBOL $0B24 PC_MAIN
FORCE_SYMBOL $0B27 NEXT_OBJECT
COMMENT $0B29 and remember that we created a new object
FORCE_SYMBOL $0B29 object_count
COMMENT $0B2C our new object is the new tail
FORCE_SYMBOL $0B2C list_objects_tail
COMMENT_LINE $0B30 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0B30 behaviours control (action) and draw all objects
COMMENT_LINE $0B30 each object type has an individual behaviour
COMMENT_LINE $0B30 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0B30 values are = from "u" list as:
COMMENT_LINE $0B30 pulu     pc,d,x ; (D = y,x, X = vectorlist)
COMMENT_LINE $0B30 0671
COMMENT_LINE $0B30 do the scaling
COMMENT $0B30 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $0B30 VIA_t1_cnt_lo
COMMENT_LINE $0B34 start the move to
COMMENT_LINE $0B34 following calcs can be done within that move
COMMENT $0B34 Store Y in D/A register
FORCE_SYMBOL $0B34 VIA_port_a
COMMENT $0B36 Blank low, zero high?
FORCE_NO_SYMBOL $0B36
FORCE_SYMBOL $0B38 VIA_cntl
COMMENT $0B3B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0B3B VIA_port_b
COMMENT $0B3D Clear shift regigster
FORCE_SYMBOL $0B3D VIA_shift_reg
COMMENT $0B3F Disable mux
FORCE_SYMBOL $0B3F VIA_port_b
COMMENT $0B41 Store X in D/A register
FORCE_SYMBOL $0B41 VIA_port_a
COMMENT $0B43 enable timer
FORCE_SYMBOL $0B43 VIA_t1_cnt_hi
COMMENT $0B45 load current scale to a - for later calcs
COMMENT $0B47 if scale is rather large, we cen decipher music in that time
FORCE_NO_SYMBOL $0B47
COMMENT $0B4B uncrunch one music "piece"
FORCE_SYMBOL $0B4B inMovePointer
COMMENT $0B4F see if wee need calc at all, compare tick counter with below zero
COMMENT $0B51 if not, scale will not be updated
COMMENT $0B53 anim reset
FORCE_SYMBOL $0B53 X_ANIM_DELAY
FORCE_SYMBOL $0B62 enemyXList_0
COMMENT $0B67 load current scale to a - for later calcs
COMMENT $0B69 see if wee need calc at all, compare tick counter with below zero
COMMENT $0B6B if not, scale will not be updated
COMMENT $0B6D otherwise reset the delay counter for scale update (this is global now, should I use that from the structure?)
FORCE_SYMBOL $0B6D HX_add_delay
COMMENT $0B70 store it
COMMENT $0B72 and actually descrease the scale with the "decrease" value
COMMENT $0B74 if below zero, than base reaches
COMMENT $0B76 if lower base scale, than also dead
COMMENT $0B78 if the decreas generated an overflow - than we reached the base (scale below zero)
COMMENT_LINE $0B7A if we reached the base -
COMMENT_LINE $0B7A a) moveto was SMALL - finished anyway
COMMENT_LINE $0B7A b) not interested in move - nothing will be drawn anymore!
COMMENT_LINE $0B7A MY_MOVE_TO_B_END
COMMENT_LINE $0B7A cancle move
COMMENT $0B7A if base was hit -> game over
FORCE_SYMBOL $0B7A gameOver
COMMENT $0B7D store the calculated scale (used next round)
COMMENT_LINE $0B7F calculate a slowly  brightening intensity
COMMENT $0B7F preload next user stack
COMMENT $0B81 if far away
FORCE_NO_SYMBOL $0B81
COMMENT $0B85 make it invisible
COMMENT $0B88 inverse the near scale (now -1 - -127)
COMMENT $0B89 add 143, result is positive intensity
FORCE_NO_SYMBOL $0B89
COMMENT $0B8D adjust negative values slightly
FORCE_NO_SYMBOL $0B8D
COMMENT $0B8F preload and set scale
FORCE_NO_SYMBOL $0B8F
COMMENT $0B91 to timer t1 (lo= scale)
FORCE_SYMBOL $0B91 VIA_t1_cnt_lo
COMMENT $0B93 end a move to
FORCE_NO_SYMBOL $0B93
FORCE_SYMBOL $0B95 VIA_int_flags
COMMENT $0B99 set the int
COMMENT $0B99 Store intensity in D/A
FORCE_SYMBOL $0B99 VIA_port_a
COMMENT $0B9B mux disabled channel 2
FORCE_NO_SYMBOL $0B9B
FORCE_SYMBOL $0B9E VIA_port_b
COMMENT $0BA0 mux enabled channel 2
FORCE_SYMBOL $0BA0 VIA_port_b
COMMENT $0BA2 turn off mux
FORCE_SYMBOL $0BA2 VIA_port_b
COMMENT $0BA4 draw the list
FORCE_SYMBOL $0BA4 myDraw_VL_mode_direct
COMMENT_LINE $0BA7 all behaviour routines leave
COMMENT_LINE $0BA7 with u pointed to the next object structure (+ offset of PUL)
COMMENT_LINE $0BA7 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0BA7 SPECIFIC Object functions
COMMENT_LINE $0BA7 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0BA7 *****************************
COMMENT_LINE $0BA7 **** OBJECT X ***************
COMMENT_LINE $0BA7 *****************************
COMMENT_LINE $0BA7 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0BA7 X SPAWN
COMMENT_LINE $0BA7 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0BA7 in x pointer to new object structure that should be filled with object
COMMENT_LINE $0BA7 data
COMMENT $0BA7 first check if allowed to spawn
FORCE_SYMBOL $0BA7 ALLOW_X
COMMENT $0BA9 if so -> jumo
COMMENT $0BAB if not make sure to check spawn next round again
FORCE_SYMBOL $0BAB spawn_timer
COMMENT $0BAE and jump back (to the only location we can be called from)
FORCE_SYMBOL $0BAE returnSpawnNotAllowed
COMMENT $0BB1 "create" (or rather get) new object
FORCE_SYMBOL $0BB1 newObject
COMMENT $0BB4 if positve - there is no object left, jump out
COMMENT $0BB8 pointer to new object now in X also
FORCE_NO_SYMBOL $0BB8
COMMENT $0BBA play a sound for out new spawn
FORCE_SYMBOL $0BBA SpawnX_Sound
FORCE_SYMBOL $0BBD play_sfx
COMMENT_LINE $0BC0 copy and initialze new enemy
COMMENT $0BC0 delay between two scale changes (speed of object)
FORCE_SYMBOL $0BC0 X_add_delay
FORCE_SYMBOL $0BC3 TICK_COUNTER
COMMENT $0BC5 strength of scale change once we actually do it
FORCE_SYMBOL $0BC5 X_addi
FORCE_SYMBOL $0BC8 SCALE_DELTA
FORCE_SYMBOL $0BCA xBehaviour
FORCE_SYMBOL $0BCD BEHAVIOUR
COMMENT $0BCF anim reset
FORCE_SYMBOL $0BCF X_ANIM_DELAY
FORCE_SYMBOL $0BD1 ANIM_COUNTER
COMMENT $0BD3 vectorlist
FORCE_SYMBOL $0BD3 enemyXList_0
FORCE_SYMBOL $0BD6 CURRENT_LIST
FORCE_NO_SYMBOL $0BD8
COMMENT $0BDA maximum our object can spawn at
FORCE_SYMBOL $0BDA spawn_max
COMMENT $0BDD start with max scale (for xEnemy)
FORCE_SYMBOL $0BDD SCALE
COMMENT_LINE $0BDF leaves with angle also in D
COMMENT_LINE $0BDF stores the angle to ANGLE,x
COMMENT_LINE $0000 the following generates an angle between 0 - 762 degrees (we have enough angles in out list to support this) angles are "doubles" so the real angle is 0° - 381°
COMMENT $0000 make sure this is random2 not just "random", since the random was already used in "creating" the X object, using it again leaves pretty same values for location
COMMENT $0000 0 - 127
COMMENT $0000 double it 0 - 254
COMMENT $0000 in u 0-254 times 3 -> 0 - 762
COMMENT $0000 store current angle of object
COMMENT $0000 circle with angle as offset gives us the actual coordinates
COMMENT $0000 save start pos
COMMENT $0000 save start pos
COMMENT_LINE $0000 the following generates an angle between 0 - 762 degrees (we have enough angles in out list to support this) angles are "doubles" so the real angle is 0° - 381°
COMMENT $0BDF make sure this is random2 not just "random", since the random was already used in "creating" the X object, using it again leaves pretty same values for location
FORCE_SYMBOL $0BDF my_random2
COMMENT $0BE2 0 - 127
FORCE_NO_SYMBOL $0BE2
COMMENT $0BE5 double it 0 - 254
COMMENT $0BEB in u 0-254 times 3 -> 0 - 762
COMMENT $0BED store current angle of object
FORCE_SYMBOL $0BED ANGLE
COMMENT $0BEF circle with angle as offset gives us the actual coordinates
FORCE_SYMBOL $0BEF circle
COMMENT $0BF4 save start pos
FORCE_SYMBOL $0BF4 Y_POS
COMMENT $0BF6 save start pos
FORCE_SYMBOL $0BF6 X_POS
COMMENT_LINE $0BF9 *****************************
COMMENT_LINE $0BF9 **** OBJECT HUNTER **********
COMMENT_LINE $0BF9 *****************************
COMMENT_LINE $0BF9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0BF9 Hunter SPAWN
COMMENT_LINE $0BF9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0BF9 in x pointer to new object structure that should be filled with object
COMMENT_LINE $0BF9 data
COMMENT $0BF9 first check if allowed to spawn
FORCE_SYMBOL $0BF9 ALLOW_HUNTER
COMMENT $0BFB if so -> jumo
COMMENT $0BFD if not make sure to check spawn next round again
FORCE_SYMBOL $0BFD spawn_timer
COMMENT $0C00 and jump back (to the only location we can be called from)
FORCE_SYMBOL $0C00 returnSpawnNotAllowed
COMMENT $0C03 "create" (or rather get) new object
FORCE_SYMBOL $0C03 newObject
COMMENT $0C06 if positve - there is no object left, jump out
COMMENT $0C0A pointer to new object now in X also
FORCE_NO_SYMBOL $0C0A
COMMENT $0C0C play a sound for out new spawn
FORCE_SYMBOL $0C0C SpawnHunter_Sound
FORCE_SYMBOL $0C0F play_sfx
COMMENT_LINE $0C12 copy and initialze new enemy
COMMENT $0C12 delay between two scale changes (speed of object)
FORCE_SYMBOL $0C12 Hunter_add_delay
FORCE_SYMBOL $0C15 TICK_COUNTER
COMMENT $0C17 strength of scale change once we actually do it
FORCE_SYMBOL $0C17 Hunter_addi
FORCE_SYMBOL $0C1A SCALE_DELTA
FORCE_SYMBOL $0C1C hunterBehaviour
FORCE_SYMBOL $0C1F BEHAVIOUR
FORCE_SYMBOL $0C21 spawn_max
COMMENT $0C24 start with max scale (for xEnemy)
FORCE_SYMBOL $0C24 SCALE
FORCE_SYMBOL $0C26 my_random2
FORCE_NO_SYMBOL $0C29
COMMENT_LINE $0C2B in a random number between 0 - 127
COMMENT $0C2C mod 120
FORCE_NO_SYMBOL $0C2C
COMMENT $0C30 if higher
COMMENT $0C32 sub 120
FORCE_NO_SYMBOL $0C32
COMMENT_LINE $0C35 following calculates the correct angle vectorlist for the hunter
COMMENT $0C35 double it 0 - 240
COMMENT $0C37 triple it
COMMENT $0C3B u = 0 - 720 -> spawning angle of our new enemy
COMMENT_LINE $0C3D leau 31,u looks better with a little offset?
COMMENT $0C3D u = 0 - 720 -> spawning angle of our new enemy
COMMENT $0C47 angle / 32
COMMENT $0C49 *2, in d now 0 - 44 (in steps of 2)
COMMENT $0C4B take this "angle" as our offsit of our different hunter rotations
FORCE_SYMBOL $0C4B HunterList
COMMENT $0C50 and store as current vectorlist
FORCE_SYMBOL $0C50 CURRENT_LIST
COMMENT $0C52 *2
COMMENT $0C54 *2
COMMENT $0C56 *2
COMMENT $0C58 *2 retrieved the full 720 angle (0 - 704 actually)
COMMENT $0C5C store current angle of object
FORCE_SYMBOL $0C5C ANGLE
FORCE_SYMBOL $0C5E circle
COMMENT $0C63 save start pos
FORCE_SYMBOL $0C63 Y_POS
COMMENT $0C65 save start pos
FORCE_SYMBOL $0C65 X_POS
COMMENT_LINE $0C68 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0C68 behaviours control (action) and draw all objects
COMMENT_LINE $0C68 each object type has an individual behaviour
COMMENT_LINE $0C68 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0C68 values are = from "u" list as:
COMMENT_LINE $0C68 pulu     pc,d,x ; (D = y,x, X = vectorlist)
COMMENT_LINE $0C68 0852
COMMENT_LINE $0C68 do the scaling
COMMENT $0C68 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $0C68 VIA_t1_cnt_lo
COMMENT_LINE $0C6C start the move to
COMMENT_LINE $0C6C following calcs can be done within that move
COMMENT $0C6C Store Y in D/A register
FORCE_SYMBOL $0C6C VIA_port_a
COMMENT $0C6E Blank low, zero high?
FORCE_NO_SYMBOL $0C6E
FORCE_SYMBOL $0C70 VIA_cntl
COMMENT $0C73 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0C73 VIA_port_b
COMMENT $0C75 Clear shift regigster
FORCE_SYMBOL $0C75 VIA_shift_reg
COMMENT $0C77 Disable mux
FORCE_SYMBOL $0C77 VIA_port_b
COMMENT $0C79 Store X in D/A register
FORCE_SYMBOL $0C79 VIA_port_a
COMMENT $0C7B enable timer
FORCE_SYMBOL $0C7B VIA_t1_cnt_hi
COMMENT $0C7D load current scale to a - for later calcs
COMMENT $0C80 and add the "main" starlet angle
FORCE_SYMBOL $0C80 starletAngle
COMMENT $0C83 watch out that it isn't to high (modulo 720)
FORCE_NO_SYMBOL $0C85
COMMENT $0C8F and get the current positions
FORCE_SYMBOL $0C8F circle
COMMENT $0C94 save pos
COMMENT $0C96 save pos
COMMENT $0C98 see if wee need calc at all, compare tick counter with below zero
COMMENT $0C9A if not, scale will not be updated
COMMENT $0C9C anim reset
FORCE_SYMBOL $0C9C STARLET_ANIM_DELAY
FORCE_SYMBOL $0CAB StarletList_0
COMMENT $0CB0 decrease score "delay" counter
COMMENT $0CB2 jump if not minus
COMMENT $0CB4 now initiate a new score spawn, first reinstate the next delay
FORCE_SYMBOL $0CB4 STARLET_SCORE_DELAY
COMMENT_LINE $0CB8 following code adds two to the current starlet score
COMMENT_LINE $0CB8 and correct the csa score pointers
COMMENT_LINE $0CB8 lda      SCORE_COUNT+u_offset1, u ; current score value - which is not used anymore
COMMENT $0CB8 save
COMMENT_LINE $0CBA if new score is higher than a "digit" we have to check following digits
COMMENT_LINE $0CBA sta      SCORE_COUNT+u_offset1, u
COMMENT_LINE $0CBA scores are now held in the individual score csa counters
COMMENT_LINE $0CBA each star accesses its csa counters by their id
COMMENT $0CBA get ID
COMMENT $0CBD times 4 (one csa score is 4 bytes), only need 3 but 4 is easier math
COMMENT_LINE $0CBE wasting 3 bytes of precious RAM here!
COMMENT $0CBE base score
FORCE_SYMBOL $0CBE star_0_score
FORCE_NO_SYMBOL $0CC1
COMMENT $0CC3 and offset with ID * 4
COMMENT_LINE $0CC5 in x now pointer to lowest csa score
COMMENT $0CC5 score 0
FORCE_NO_SYMBOL $0CC5
COMMENT $0CC7 add two
COMMENT $0CC9 if rollover
FORCE_NO_SYMBOL $0CC9
COMMENT $0CCD reduce by 10 (might be 1m since we added 2)
FORCE_NO_SYMBOL $0CCD
COMMENT $0CCF store it
FORCE_NO_SYMBOL $0CCF
COMMENT $0CD1 load next digit, since we rolled over
COMMENT $0CD3 add one
COMMENT $0CD4 check for next roll over
FORCE_NO_SYMBOL $0CD4
COMMENT $0CD8 or simply to 0 since max 1 was added
COMMENT $0CD9 store it
FORCE_NO_SYMBOL $0CD9
COMMENT $0CDB load next digit
COMMENT $0CDD +1
COMMENT $0CDE if rollower, ignore
FORCE_NO_SYMBOL $0CDE
COMMENT $0CE2 and for safety - the complete score is set to 999
FORCE_NO_SYMBOL $0CE2
FORCE_NO_SYMBOL $0CE4
FORCE_NO_SYMBOL $0CE6
COMMENT $0CEA store last digit
FORCE_NO_SYMBOL $0CEA
COMMENT_LINE $0CEC pointer x =
COMMENT_LINE $0CEC hundreds (0,1,2)
COMMENT_LINE $0CEC tens (0-9)
COMMENT_LINE $0CEC singles (0-9)
COMMENT_LINE $0CEC build a new scoreX object
COMMENT $0CEC actually spawn a score with above values
FORCE_SYMBOL $0CEC buildscoreX
COMMENT $0CEF restore
COMMENT $0CF1 preload next user stack
COMMENT $0CF3 tiny starlet
FORCE_NO_SYMBOL $0CF3
COMMENT $0CF6 to timer t1 (lo=
FORCE_SYMBOL $0CF6 VIA_t1_cnt_lo
COMMENT $0CF8 load offset of vector list draw
COMMENT $0CFF end a move to
FORCE_NO_SYMBOL $0CFF
FORCE_SYMBOL $0D01 VIA_int_flags
COMMENT $0D05 Store intensity in D/A
FORCE_SYMBOL $0D05 VIA_port_a
COMMENT $0D07 mux disabled channel 2
FORCE_NO_SYMBOL $0D07
FORCE_SYMBOL $0D0A VIA_port_b
COMMENT $0D0C mux enabled channel 2
FORCE_SYMBOL $0D0C VIA_port_b
COMMENT $0D0E turn off mux
FORCE_SYMBOL $0D0E VIA_port_b
FORCE_SYMBOL $0D10 entry_optimized_draw_mvlc_unloop
COMMENT_LINE $0D13 *****************************
COMMENT_LINE $0D13 **** OBJECT HIDDEN X ********
COMMENT_LINE $0D13 *****************************
COMMENT_LINE $0D13 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0D13 HIDDEN X SPAWN
COMMENT_LINE $0D13 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0D13 in x pointer to new object structure that should be filled with object
COMMENT_LINE $0D13 data
COMMENT $0D13 first check if allowed to spawn
FORCE_SYMBOL $0D13 ALLOW_HIDDEN_X
COMMENT $0D15 if so -> jumo
COMMENT $0D17 if not make sure to check spawn next round again
FORCE_SYMBOL $0D17 spawn_timer
COMMENT $0D1A and jump back (to the only location we can be called from)
FORCE_SYMBOL $0D1A returnSpawnNotAllowed
COMMENT $0D1D "create" (or rather get) new object
FORCE_SYMBOL $0D1D newObject
COMMENT $0D20 if positve - there is no object left, jump out
COMMENT $0D24 pointer to new object now in X also
FORCE_NO_SYMBOL $0D24
COMMENT $0D26 play a sound for out new spawn
FORCE_SYMBOL $0D26 SpawnX_Sound
FORCE_SYMBOL $0D29 play_sfx
COMMENT_LINE $0D2C copy and initialze new enemy
COMMENT $0D2C delay between two scale changes (speed of object)
FORCE_SYMBOL $0D2C HX_add_delay
FORCE_SYMBOL $0D2F TICK_COUNTER
COMMENT $0D31 strength of scale change once we actually do it
FORCE_SYMBOL $0D31 HX_addi
FORCE_SYMBOL $0D34 SCALE_DELTA
FORCE_SYMBOL $0D36 hiddenXBehaviour
FORCE_SYMBOL $0D39 BEHAVIOUR
COMMENT $0D3B anim reset
FORCE_SYMBOL $0D3B X_ANIM_DELAY
FORCE_SYMBOL $0D3D ANIM_COUNTER
COMMENT $0D3F vectorlist
FORCE_SYMBOL $0D3F enemyXList_0
FORCE_SYMBOL $0D42 CURRENT_LIST
FORCE_SYMBOL $0D44 spawn_max
COMMENT $0D47 start with max scale (for xEnemy)
FORCE_SYMBOL $0D47 SCALE
COMMENT_LINE $0D49 the following generates an angle between 0 - 762 degrees (we have enough angles in out list to support this) angles are "doubles" so the real angle is 0° - 381°
COMMENT $0D49 make sure this is random2 not just "random", since the random was already used in "creating" the X object, using it again leaves pretty same values for location
FORCE_SYMBOL $0D49 my_random2
COMMENT $0D4C 0 - 127
FORCE_NO_SYMBOL $0D4C
COMMENT $0D4F double it 0 - 254
COMMENT $0D55 in u 0-254 times 3 -> 0 - 762
COMMENT $0D57 store current angle of object
FORCE_SYMBOL $0D57 ANGLE
COMMENT $0D59 circle with angle as offset gives us the actual coordinates
FORCE_SYMBOL $0D59 circle
COMMENT $0D5E save start pos
FORCE_SYMBOL $0D5E Y_POS
COMMENT $0D60 save start pos
FORCE_SYMBOL $0D60 X_POS
COMMENT_LINE $0D63 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0D63 095f
COMMENT_LINE $0D63 do the scaling
COMMENT $0D63 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $0D63 VIA_t1_cnt_lo
COMMENT_LINE $0D67 start the move to
COMMENT_LINE $0D67 following calcs can be done within that move
COMMENT $0D67 Store Y in D/A register
FORCE_SYMBOL $0D67 VIA_port_a
COMMENT $0D69 Blank low, zero high?
FORCE_NO_SYMBOL $0D69
FORCE_SYMBOL $0D6B VIA_cntl
COMMENT $0D6E Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0D6E VIA_port_b
COMMENT $0D70 Clear shift regigster
FORCE_SYMBOL $0D70 VIA_shift_reg
COMMENT $0D72 Disable mux
FORCE_SYMBOL $0D72 VIA_port_b
COMMENT $0D74 Store X in D/A register
FORCE_SYMBOL $0D74 VIA_port_a
COMMENT $0D76 enable timer
FORCE_SYMBOL $0D76 VIA_t1_cnt_hi
COMMENT $0D78 load current scale to a - for later calcs
COMMENT $0D7A see if wee need calc at all, compare tick counter with below zero
COMMENT $0D7C if not, scale will not be updated
COMMENT $0D7E otherwise reset the delay counter for scale update (this is global now, should I use that from the structure?)
FORCE_SYMBOL $0D7E shot_add_delay
COMMENT $0D81 store it
COMMENT $0D83 and actually descrease the scale with the "decrease" value
COMMENT $0D85 if below zero, than base reaches
COMMENT $0D87 if lower base scale, than also dead
COMMENT_LINE $0D8B if we reached the base -
COMMENT_LINE $0D8B a) moveto was SMALL - finished anyway
COMMENT_LINE $0D8B b) not interested in move - nothing will be drawn anymore!
COMMENT_LINE $0D8B MY_MOVE_TO_B_END
COMMENT $0D8B if base was hit -> game over
FORCE_SYMBOL $0D8B gameOver
COMMENT $0D8E store the calculated scale (used next round)
COMMENT $0D90 preload next user stack
FORCE_NO_SYMBOL $0D92
COMMENT $0D95 to timer t1 (lo=
FORCE_SYMBOL $0D95 VIA_t1_cnt_lo
COMMENT $0D97 load offset of vector list draw
COMMENT $0D9E end a move to
FORCE_NO_SYMBOL $0D9E
FORCE_SYMBOL $0DA0 VIA_int_flags
COMMENT $0DA4 Store intensity in D/A
FORCE_SYMBOL $0DA4 VIA_port_a
COMMENT $0DA6 mux disabled channel 2
FORCE_NO_SYMBOL $0DA6
FORCE_SYMBOL $0DA9 VIA_port_b
COMMENT $0DAB mux enabled channel 2
FORCE_SYMBOL $0DAB VIA_port_b
COMMENT $0DAD turn off mux
FORCE_SYMBOL $0DAD VIA_port_b
FORCE_SYMBOL $0DAF my_drawVLC_inner
COMMENT_LINE $0DB2 *****************************
COMMENT_LINE $0DB2 **** OBJECT STARLET *********
COMMENT_LINE $0DB2 *****************************
COMMENT_LINE $0DB2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0DB2 STARTLET SPAWN
COMMENT_LINE $0DB2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0DB2 in x pointer to new object structure that should be filled with object
COMMENT_LINE $0DB2 data
COMMENT $0DB2 first check if allowed to spawn
FORCE_SYMBOL $0DB2 ALLOW_STAR
COMMENT $0DB4 if so -> jumo
COMMENT $0DB6 if not make sure to check spawn next round again
FORCE_SYMBOL $0DB6 spawn_timer
COMMENT $0DB9 and jump back (to the only location we can be called from)
FORCE_SYMBOL $0DB9 returnSpawnNotAllowed
COMMENT $0DBC "create" (or rather get) new object
FORCE_SYMBOL $0DBC newObject
COMMENT $0DBF if positve - there is no object left, jump out
COMMENT $0DC3 pointer to new object now in X also
FORCE_NO_SYMBOL $0DC3
COMMENT $0DC5 play a sound for out new spawn - OOPS forgotten to do a special Starlet sound!
FORCE_SYMBOL $0DC5 SpawnStar_Sound
FORCE_SYMBOL $0DC8 play_sfx
COMMENT_LINE $0DCB copy and initialze new enemy
FORCE_SYMBOL $0DCB starletBehaviour
FORCE_SYMBOL $0DCE BEHAVIOUR
COMMENT $0DD0 vectorlist
FORCE_SYMBOL $0DD0 StarletList_0
FORCE_SYMBOL $0DD3 CURRENT_LIST
COMMENT $0DD5 anim reset
FORCE_SYMBOL $0DD5 STARLET_ANIM_DELAY
FORCE_SYMBOL $0DD7 ANIM_COUNTER
FORCE_SYMBOL $0DD9 STAR_SCALE
COMMENT $0DDB start with max scale (for xEnemy)
FORCE_SYMBOL $0DDB SCALE
COMMENT $0DDD delay between score spawns
FORCE_SYMBOL $0DDD STARLET_SCORE_DELAY
COMMENT $0DDF to the counter
FORCE_SYMBOL $0DDF SCORE_COUNTER
COMMENT $0DE1 initial score to spawn (6 I think)
FORCE_SYMBOL $0DE1 STARLET_START_SCORE
FORCE_SYMBOL $0DE3 SCORE_COUNT
COMMENT_LINE $0DE5 the three stars are realized as objects, but are still "individuals"
COMMENT_LINE $0DE5 store the individual ID in the starlet struct
COMMENT_LINE $0DE5 and initialize our "place" - starlets have "fixed" scales
COMMENT $0DE5 bit 0-2 are set for starlets active 1 2 or 3
FORCE_SYMBOL $0DE5 star_active_flag
FORCE_NO_SYMBOL $0DE8
FORCE_NO_SYMBOL $0DEC
FORCE_NO_SYMBOL $0DF0
FORCE_SYMBOL $0DF2 star_active_flag
FORCE_SYMBOL $0DF5 SCALE
FORCE_SYMBOL $0DF9 SCALE
FORCE_NO_SYMBOL $0DFB
FORCE_SYMBOL $0DFD I_AM_STAR_NO
FORCE_NO_SYMBOL $0E01
FORCE_SYMBOL $0E03 star_active_flag
FORCE_SYMBOL $0E06 SCALE
FORCE_NO_SYMBOL $0E08
FORCE_SYMBOL $0E0A SCALE
FORCE_NO_SYMBOL $0E0C
FORCE_SYMBOL $0E0E I_AM_STAR_NO
FORCE_NO_SYMBOL $0E12
FORCE_SYMBOL $0E14 star_active_flag
FORCE_NO_SYMBOL $0E17
FORCE_SYMBOL $0E19 I_AM_STAR_NO
COMMENT_LINE $0E1B in a my star count. flags should be set
COMMENT_LINE $0E1B redundant test
COMMENT_LINE $0E1B slightly random angle +- (0-31)
FORCE_SYMBOL $0E1B my_random2
FORCE_NO_SYMBOL $0E24
FORCE_NO_SYMBOL $0E28
FORCE_NO_SYMBOL $0E2C
COMMENT $0E2F angle from 00 to 720
FORCE_NO_SYMBOL $0E33
COMMENT $0E3D store current angle of object
FORCE_SYMBOL $0E3D ANGLE
COMMENT $0E3F rotation done by main() in opposite direction than base
FORCE_SYMBOL $0E3F starletAngle
FORCE_NO_SYMBOL $0E44
FORCE_SYMBOL $0E4E circle
COMMENT $0E53 save start pos
FORCE_SYMBOL $0E53 Y_POS
FORCE_SYMBOL $0E55 X_POS
COMMENT_LINE $0E57 reset quick score math
FORCE_SYMBOL $0E57 I_AM_STAR_NO
COMMENT $0E5A times 4
FORCE_SYMBOL $0E5B star_0_score
FORCE_NO_SYMBOL $0E60
FORCE_SYMBOL $0E65 STARLET_START_SCORE
FORCE_NO_SYMBOL $0E67
FORCE_SYMBOL $0E69 starletCount
COMMENT_LINE $0E6D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0E6D do the scaling
COMMENT $0E6D also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $0E6D VIA_t1_cnt_lo
COMMENT_LINE $0E71 start the move to
COMMENT_LINE $0E71 following calcs can be done within that move
COMMENT $0E71 Store Y in D/A register
FORCE_SYMBOL $0E71 VIA_port_a
COMMENT $0E73 Blank low, zero high?
FORCE_NO_SYMBOL $0E73
FORCE_SYMBOL $0E75 VIA_cntl
COMMENT $0E78 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0E78 VIA_port_b
COMMENT $0E7A Clear shift regigster
FORCE_SYMBOL $0E7A VIA_shift_reg
COMMENT $0E7C Disable mux
FORCE_SYMBOL $0E7C VIA_port_b
COMMENT $0E7E Store X in D/A register
FORCE_SYMBOL $0E7E VIA_port_a
COMMENT $0E80 enable timer
FORCE_SYMBOL $0E80 VIA_t1_cnt_hi
COMMENT_LINE $0E82 calculate scale, angle and POS and wiggle anew each round
COMMENT_LINE $0E82 since parent might have changed something, which effects us
COMMENT $0E82 y is offset of out parent, we assume parent is not dead, otherwise we would be a free child
COMMENT $0E85 get the scale of the parent
FORCE_SYMBOL $0E85 SCALE
COMMENT $0E87 and addd our own offset
COMMENT $0E8B from child
COMMENT $0E8D from dragon
FORCE_SYMBOL $0E8D ANGLE
FORCE_NO_SYMBOL $0E91
COMMENT $0E94 store angle and calculate the actual new position
FORCE_SYMBOL $0E96 circle
COMMENT $0E9C save start pos
COMMENT $0E9E save start pos
COMMENT_LINE $0EA0 calculate the wiggle offset,
COMMENT_LINE $0EA0 leaves the calculation with actual current offset in b
COMMENT_LINE $0EA0 wiggle is allways +-4 in "one" steps
COMMENT_LINE $0EA0 the direction + or . is given by WIGGLE_DIRECTION
FORCE_NO_SYMBOL $0EA9
COMMENT_LINE $0EBA wiggle calc finished
COMMENT $0EBA no apply the wiggle to the actual scale
COMMENT $0EBC and store it (for next round)
FORCE_NO_SYMBOL $0EBE
COMMENT $0EC1 to timer t1 (lo=
FORCE_SYMBOL $0EC1 VIA_t1_cnt_lo
COMMENT $0EC3 preload next user stack
FORCE_SYMBOL $0EC5 Dragonchild_List
COMMENT $0EC8 end a move to
FORCE_NO_SYMBOL $0EC8
FORCE_SYMBOL $0ECA VIA_int_flags
COMMENT $0ECE Store intensity in D/A
FORCE_SYMBOL $0ECE VIA_port_a
COMMENT $0ED0 mux disabled channel 2
FORCE_NO_SYMBOL $0ED0
FORCE_SYMBOL $0ED3 VIA_port_b
COMMENT $0ED5 mux enabled channel 2
FORCE_SYMBOL $0ED5 VIA_port_b
COMMENT $0ED7 turn off mux
FORCE_SYMBOL $0ED7 VIA_port_b
COMMENT $0ED9 draw the list
FORCE_SYMBOL $0ED9 myDraw_VL_mode_direct
COMMENT_LINE $0EDC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0EDC do the scaling
COMMENT $0EDC also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $0EDC VIA_t1_cnt_lo
COMMENT_LINE $0EE0 start the move to
COMMENT_LINE $0EE0 following calcs can be done within that move
COMMENT $0EE0 Store Y in D/A register
FORCE_SYMBOL $0EE0 VIA_port_a
COMMENT $0EE2 Blank low, zero high?
FORCE_NO_SYMBOL $0EE2
FORCE_SYMBOL $0EE4 VIA_cntl
COMMENT $0EE7 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $0EE7 VIA_port_b
COMMENT $0EE9 Clear shift regigster
FORCE_SYMBOL $0EE9 VIA_shift_reg
COMMENT $0EEB Disable mux
FORCE_SYMBOL $0EEB VIA_port_b
COMMENT $0EED Store X in D/A register
FORCE_SYMBOL $0EED VIA_port_a
COMMENT $0EEF enable timer
FORCE_SYMBOL $0EEF VIA_t1_cnt_hi
COMMENT $0EF1 load current scale to a - for later calcs
COMMENT $0EF3 and actually decrease the scale with the "decrease" value
FORCE_SYMBOL $0EF3 dragonchild_addi
COMMENT $0EF6 if below zero, than base reaches
COMMENT $0EF8 if lower base scale, than also dead
COMMENT_LINE $0EFC if we reached the base -
COMMENT_LINE $0EFC a) moveto was SMALL - finished anyway
COMMENT_LINE $0EFC b) not interested in move - nothing will be drawn anymore!
COMMENT_LINE $0EFC MY_MOVE_TO_B_END
COMMENT_LINE $0EFC cancle move
COMMENT $0EFC if base was hit -> game over
FORCE_SYMBOL $0EFC gameOver
COMMENT $0EFF store the calculated scale (used next round)
COMMENT $0F01 preload next user stack
FORCE_SYMBOL $0F03 Dragonchild_List
FORCE_NO_SYMBOL $0F06
COMMENT $0F09 to timer t1 (lo=
FORCE_SYMBOL $0F09 VIA_t1_cnt_lo
COMMENT $0F0B end a move to
FORCE_NO_SYMBOL $0F0B
FORCE_SYMBOL $0F0D VIA_int_flags
COMMENT $0F11 Store intensity in D/A
FORCE_SYMBOL $0F11 VIA_port_a
COMMENT $0F13 mux disabled channel 2
FORCE_NO_SYMBOL $0F13
FORCE_SYMBOL $0F16 VIA_port_b
COMMENT $0F18 mux enabled channel 2
FORCE_SYMBOL $0F18 VIA_port_b
COMMENT $0F1A turn off mux
FORCE_SYMBOL $0F1A VIA_port_b
COMMENT $0F1C draw the list
FORCE_SYMBOL $0F1C myDraw_VL_mode_direct
COMMENT_LINE $0F1F *****************************
COMMENT_LINE $0F1F **** OBJECT BOMBER **********
COMMENT_LINE $0F1F *****************************
COMMENT_LINE $0F1F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0F1F Bomber SPAWN
COMMENT_LINE $0F1F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0F1F in x pointer to new object structure that should be filled with object
COMMENT_LINE $0F1F data
COMMENT $0F1F first check if allowed to spawn
FORCE_SYMBOL $0F1F ALLOW_BOMBER
COMMENT $0F21 if so -> jumo
COMMENT $0F23 if not make sure to check spawn next round again
FORCE_SYMBOL $0F23 spawn_timer
COMMENT $0F26 and jump back (to the only location we can be called from)
FORCE_SYMBOL $0F26 returnSpawnNotAllowed
COMMENT $0F29 "create" (or rather get) new object
FORCE_SYMBOL $0F29 newObject
COMMENT $0F2C if positve - there is no object left, jump out
COMMENT $0F30 pointer to new object now in X also
FORCE_NO_SYMBOL $0F30
COMMENT $0F32 play a sound for out new spawn
FORCE_SYMBOL $0F32 SpawnBomber_Sound
FORCE_SYMBOL $0F35 play_sfx
COMMENT_LINE $0F38 copy and initialze new enemy
COMMENT $0F38 delay between two scale changes (speed of object)
FORCE_SYMBOL $0F38 Bomber_add_delay
FORCE_SYMBOL $0F3B ANGLE_TICK_COUNTER
COMMENT $0F3D strength of scale change once we actually do it
FORCE_SYMBOL $0F3D Bomber_addi
FORCE_SYMBOL $0F40 ANGLE_DELTA
FORCE_SYMBOL $0F42 bomberBehaviour
FORCE_SYMBOL $0F45 BEHAVIOUR
COMMENT $0F47 anim reset
FORCE_SYMBOL $0F47 BOMBER_ANIM_DELAY
FORCE_SYMBOL $0F49 ANIM_COUNTER
FORCE_SYMBOL $0F4B BomberList_0
FORCE_SYMBOL $0F4E CURRENT_LIST
FORCE_SYMBOL $0F50 bomber_delay_start
FORCE_SYMBOL $0F53 SHOT_COUNTER_RESET
FORCE_SYMBOL $0F55 SHOT_COUNTER
FORCE_SYMBOL $0F57 my_random2
COMMENT $0F5A max 31
FORCE_NO_SYMBOL $0F5A
COMMENT $0F5C +4
FORCE_NO_SYMBOL $0F5C
COMMENT_LINE $0F5E spawn between scale 63 - 127
FORCE_SYMBOL $0F5E SCALE
COMMENT_LINE $0F60 generate another random
FORCE_SYMBOL $0F60 my_random
FORCE_SYMBOL $0F67 my_random2
FORCE_SYMBOL $0F6A my_random2
FORCE_SYMBOL $0F6D RecalCounterLow
FORCE_NO_SYMBOL $0F70
COMMENT_LINE $0F72 in a random number between 0 - 127
COMMENT $0F73 double it
COMMENT $0F79 in u 0-254 times 3 -> 0 - 762
COMMENT $0F7B store current angle of object
FORCE_SYMBOL $0F7B ANGLE
FORCE_SYMBOL $0F7D circle
COMMENT $0F82 save start pos
FORCE_SYMBOL $0F82 Y_POS
FORCE_SYMBOL $0F84 X_POS
COMMENT_LINE $0F87 *****************************
COMMENT_LINE $0F87 **** OBJECT DRAGON **********
COMMENT_LINE $0F87 *****************************
COMMENT_LINE $0F87 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0F87 Dragon SPAWN
COMMENT_LINE $0F87 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $0F87 in x pointer to new object structure that should be filled with object
COMMENT_LINE $0F87 data
COMMENT $0F87 first check if allowed to spawn
FORCE_SYMBOL $0F87 ALLOW_DRAGON
COMMENT $0F89 if so -> jump
COMMENT $0F8B if not make sure to check spawn next round again
FORCE_SYMBOL $0F8B spawn_timer
COMMENT $0F8E and jump back (to the only location we can be called from)
FORCE_SYMBOL $0F8E returnSpawnNotAllowed
COMMENT $0F91 "create" (or rather get) new object
FORCE_SYMBOL $0F91 newObject
COMMENT $0F94 if positve - there is no object left, jump out
COMMENT $0F98 pointer to new object now in X also
FORCE_NO_SYMBOL $0F98
COMMENT $0F9A play a sound for out new spawn
FORCE_SYMBOL $0F9A SpawnDragon_Sound
FORCE_SYMBOL $0F9D play_sfx
COMMENT_LINE $0FA0 copy and initialze new enemy
COMMENT_LINE $0FA0 lower nibble is counter for scale move (inward)
COMMENT_LINE $0FA0 higher nibble is counter for angle move
COMMENT_LINE $0FA0 Dragon_Angle_delay
COMMENT_LINE $0FA0 Dragon_Scale_delay
COMMENT $0FA0 after how many ticks does an "angle" move occur (circular movement)
FORCE_SYMBOL $0FA0 Dragon_Angle_delay
FORCE_SYMBOL $0FA7 tmp_count2
COMMENT $0FAA after how many ticks does an "scale" move oocur (inward bound)
FORCE_SYMBOL $0FAA Dragon_Scale_delay
FORCE_NO_SYMBOL $0FAD
FORCE_SYMBOL $0FAF tmp_count2
COMMENT $0FB2 combined delay storage
FORCE_SYMBOL $0FB2 DRAGON_COUNTER
FORCE_SYMBOL $0FB4 dragonBehaviour_full
FORCE_SYMBOL $0FB7 BEHAVIOUR
COMMENT $0FB9 vectorlist
FORCE_SYMBOL $0FB9 DragonList_0
FORCE_SYMBOL $0FBC CURRENT_LIST
FORCE_NO_SYMBOL $0FBE
FORCE_SYMBOL $0FC0 my_random2
COMMENT $0FC3 max 35
FORCE_NO_SYMBOL $0FC3
FORCE_NO_SYMBOL $0FC5
COMMENT_LINE $0FC7 spawn between scale 35 - max
FORCE_SYMBOL $0FC7 SCALE
COMMENT_LINE $0FC9 the following generates an angle between 0 - 762 degrees (we have enough angles in out list to support this) angles are "doubles" so the real angle is 0° - 381°
COMMENT $0FC9 make sure this is random2 not just "random", since the random was already used in "creating" the X object, using it again leaves pretty same values for location
FORCE_SYMBOL $0FC9 my_random2
COMMENT $0FCC 0 - 127
FORCE_NO_SYMBOL $0FCC
COMMENT $0FCF double it 0 - 254
COMMENT $0FD5 in u 0-254 times 3 -> 0 - 762
COMMENT $0FD7 store current angle of object
FORCE_SYMBOL $0FD7 ANGLE
COMMENT $0FD9 circle with angle as offset gives us the actual coordinates
FORCE_SYMBOL $0FD9 circle
COMMENT $0FDE save start pos
FORCE_SYMBOL $0FDE Y_POS
COMMENT $0FE0 save start pos
FORCE_SYMBOL $0FE0 X_POS
COMMENT_LINE $0FE2 spawn children
COMMENT $0FE2 vectorlist
FORCE_NO_SYMBOL $0FE2
COMMENT $0FE5 efault 0 - perhpa not enough objects
FORCE_SYMBOL $0FE5 CHILD_1
COMMENT $0FE7 0 means "dead" child
FORCE_SYMBOL $0FE7 CHILD_2
COMMENT $0FE9 y is save in respect to newObject
COMMENT $0FEB build one object to use for child 1
FORCE_SYMBOL $0FEB newObject
COMMENT $0FEE if none left, jump out
COMMENT $0FF2 first child is 20 positions away
COMMENT $0FF5 store child struct
FORCE_SYMBOL $0FF5 CHILD_1
COMMENT $0FF7 and that dragon struct to child, both must know each other!
FORCE_SYMBOL $0FF7 DRAGON
COMMENT $0FFC wiggle +-4
FORCE_NO_SYMBOL $0FFC
FORCE_SYMBOL $0FFF WIGGLE
FORCE_SYMBOL $1001 newObject
COMMENT $1008 first child is 40 positions away
FORCE_SYMBOL $100B CHILD_2
FORCE_SYMBOL $100D DRAGON
COMMENT $1012 wiggle +-4
FORCE_SYMBOL $1015 WIGGLE
COMMENT_LINE $1018 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1018 initializes the dragon child
COMMENT_LINE $1018 in u pointer to child
COMMENT_LINE $1018 in y pointer to dragon
COMMENT_LINE $1018 in a angle offset
COMMENT_LINE $1018 must leave with y intact
COMMENT $1018 use x instead of u
FORCE_NO_SYMBOL $1018
COMMENT $101A this was loaded from caller either -20 or -40, its the offset of the child to the parent
FORCE_SYMBOL $101A ANGLE_OFFSET
COMMENT $101C this is actually a angle - diff - since dif is a negative value
FORCE_SYMBOL $101C ANGLE
COMMENT $101E calc the "real" angle we add the dragon angle to the (negative) offset
COMMENT $1020 and correct it if neccessary
FORCE_NO_SYMBOL $1020
COMMENT $1023 store the thus calculated angle
FORCE_SYMBOL $1023 ANGLE
COMMENT $1025 and get pos from circle
FORCE_SYMBOL $1025 circle
COMMENT $102A save start pos
FORCE_SYMBOL $102A Y_POS
COMMENT $102C save start pos
FORCE_SYMBOL $102C X_POS
FORCE_SYMBOL $102E dragonchildBoundBehaviour
FORCE_SYMBOL $1031 BEHAVIOUR
FORCE_SYMBOL $1033 SCALE
COMMENT $1035 scale offset of child is also calculated from the angle offset
COMMENT $1037 its half the angle offset, but positive (further away)
COMMENT $1039 store the offset
FORCE_SYMBOL $1039 SCALE_OFFSET
COMMENT $103B and calculate the "active" current scale of the child
FORCE_SYMBOL $103B SCALE_OFFSET
FORCE_SYMBOL $103D SCALE
COMMENT_LINE $1040 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1040 behaviours control (action) and draw all objects
COMMENT_LINE $1040 each object type has an individual behaviour
COMMENT_LINE $1040 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1040 values are = from "u" list as:
COMMENT_LINE $1040 pulu     pc,d,x ; (D = y,x, X = vectorlist)
COMMENT_LINE $1040 0c70
COMMENT_LINE $1041 do the scaling
COMMENT $1041 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $1041 VIA_t1_cnt_lo
COMMENT_LINE $1045 start the move to
COMMENT_LINE $1045 following calcs can be done within that move
COMMENT $1045 Store Y in D/A register
FORCE_SYMBOL $1045 VIA_port_a
COMMENT $1047 Blank low, zero high?
FORCE_NO_SYMBOL $1047
FORCE_SYMBOL $1049 VIA_cntl
COMMENT $104C Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $104C VIA_port_b
COMMENT $104E Clear shift regigster
FORCE_SYMBOL $104E VIA_shift_reg
COMMENT $1050 Disable mux
FORCE_SYMBOL $1050 VIA_port_b
COMMENT $1052 Store X in D/A register
FORCE_SYMBOL $1052 VIA_port_a
COMMENT $1054 enable timer
FORCE_SYMBOL $1054 VIA_t1_cnt_hi
COMMENT_LINE $1056 decode the two in nibbles stored delay counter
FORCE_SYMBOL $105D tmp_add
FORCE_SYMBOL $1062 Dragon_Angle_delay
FORCE_SYMBOL $1065 tmp_add
COMMENT $1068 load current scale to a - for later calcs
FORCE_SYMBOL $106A Dragon_Angle_addi
FORCE_NO_SYMBOL $106D
FORCE_NO_SYMBOL $1073
COMMENT $1076 load current scale to a - for later calcs
FORCE_SYMBOL $1078 circle
COMMENT $107E save pos
COMMENT $1080 save pos
FORCE_NO_SYMBOL $1084
FORCE_SYMBOL $1087 tmp_count2
COMMENT $108A if not, scale will not be updated
COMMENT $108C otherwise reset the delay counter for scale update (this is global now, should I use that from the structure?)
FORCE_SYMBOL $108C Dragon_Scale_delay
FORCE_SYMBOL $108F tmp_count2
COMMENT $1092 load current scale to a - for later calcs
COMMENT $1095 store the calculated scale (used next round)
COMMENT $1097 if lower base scale, than also dead
COMMENT_LINE $109B if we reached the base -
COMMENT_LINE $109B a) moveto was SMALL - finished anyway
COMMENT_LINE $109B b) not interested in move - nothing will be drawn anymore!
COMMENT_LINE $109B MY_MOVE_TO_B_END
COMMENT_LINE $109B cancle move
COMMENT_LINE $109B following is not really necessary - since the player is dead anyway
COMMENT_LINE $109B but as long as game over is only a "remove" this makes sense
COMMENT_LINE $109B tell both children, that the parent dragon is dead...
FORCE_SYMBOL $10A1 dragonchildFreeBehaviour
FORCE_SYMBOL $10A4 BEHAVIOUR
FORCE_NO_SYMBOL $10A6
FORCE_SYMBOL $10A9 DRAGON
FORCE_SYMBOL $10AF dragonchildFreeBehaviour
FORCE_SYMBOL $10B2 BEHAVIOUR
FORCE_NO_SYMBOL $10B4
FORCE_SYMBOL $10B7 DRAGON
COMMENT $10BB if base was hit -> game over
FORCE_SYMBOL $10BB gameOver
COMMENT_LINE $10BE store the two delay values in nibbles and store them to the combined DRAGON COUNTER
COMMENT $10BE angle delay
FORCE_SYMBOL $10BE tmp_add
FORCE_NO_SYMBOL $10C5
FORCE_SYMBOL $10C7 tmp_count2
COMMENT_LINE $10CA lower nibble is counter for scale move (inward)
COMMENT_LINE $10CA higher nibble is counter for angle move
COMMENT_LINE $10CA Dragon_Angle_delay
COMMENT_LINE $10CA Dragon_Scale_delay
COMMENT $10CC only every second tick
FORCE_SYMBOL $10CC RecalCounterLow
FORCE_NO_SYMBOL $10CF
FORCE_SYMBOL $10DE DragonList_0
FORCE_NO_SYMBOL $10E3
COMMENT $10E6 to timer t1 (lo=
FORCE_SYMBOL $10E6 VIA_t1_cnt_lo
COMMENT $10E8 type byte tells us, if the dragon has been shot once
COMMENT $10EA and we thus can set the brightness
FORCE_SYMBOL $10EA dragonBehaviour_half
COMMENT $10EE intensity
FORCE_NO_SYMBOL $10EE
COMMENT $10F0 preload next user stack
COMMENT $10F2 load offset of vector list draw
COMMENT $10F9 end a move to
FORCE_NO_SYMBOL $10F9
FORCE_SYMBOL $10FB VIA_int_flags
COMMENT $10FF Store intensity in D/A
FORCE_SYMBOL $10FF VIA_port_a
COMMENT $1101 mux disabled channel 2
FORCE_NO_SYMBOL $1101
FORCE_SYMBOL $1104 VIA_port_b
COMMENT $1106 mux enabled channel 2
FORCE_SYMBOL $1106 VIA_port_b
COMMENT $1108 turn off mux
FORCE_SYMBOL $1108 VIA_port_b
FORCE_SYMBOL $110A entry_optimized_draw_mvlc_unloop
COMMENT_LINE $110D *****************************
COMMENT_LINE $110D **** OBJECT BONUS ***********
COMMENT_LINE $110D *****************************
COMMENT_LINE $110D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $110D Bonus SPAWN
COMMENT_LINE $110D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $110D in x pointer to new object structure that should be filled with object
COMMENT_LINE $110D data
COMMENT $110D first check if allowed to spawn
FORCE_SYMBOL $110D ALLOW_BONUS
COMMENT $110F if so -> jumo
COMMENT $1111 if not make sure to check spawn next round again
FORCE_SYMBOL $1111 spawn_timer
COMMENT $1114 and jump back (to the only location we can be called from)
FORCE_SYMBOL $1114 returnSpawnNotAllowed
COMMENT $1117 "create" (or rather get) new object
FORCE_SYMBOL $1117 newObject
COMMENT $111A if positve - there is no object left, jump out
COMMENT $111E disable other bonus spawns
COMMENT $1121 pointer to new object
FORCE_NO_SYMBOL $1121
COMMENT $1123 play a sound for out new spawn
FORCE_SYMBOL $1123 SpawnBonus_Sound
FORCE_SYMBOL $1126 play_sfx
COMMENT_LINE $1129 copy and initialze new enemy
COMMENT $1129 delay between two scale changes (speed of object)
FORCE_SYMBOL $1129 Bonus_add_delay
FORCE_SYMBOL $112C TICK_COUNTER
COMMENT $112E strength of scale change once we actually do it
FORCE_SYMBOL $112E Bonus_addi
FORCE_SYMBOL $1131 SCALE_DELTA
FORCE_SYMBOL $1133 bonusBehaviour
FORCE_SYMBOL $1136 BEHAVIOUR
COMMENT $1138 anim reset
FORCE_SYMBOL $1138 BONUS_ANIM_DELAY
FORCE_SYMBOL $113A ANIM_COUNTER
COMMENT $113C vectorlist
FORCE_SYMBOL $113C BonusList_0
FORCE_SYMBOL $113F CURRENT_LIST
FORCE_SYMBOL $1141 spawn_max
COMMENT $1144 start with max scale (for xEnemy)
FORCE_SYMBOL $1144 SCALE
COMMENT_LINE $1146 the following generates an angle between 0 - 762 degrees (we have enough angles in out list to support this) angles are "doubles" so the real angle is 0° - 381°
COMMENT $1146 make sure this is random2 not just "random", since the random was already used in "creating" the X object, using it again leaves pretty same values for location
FORCE_SYMBOL $1146 my_random2
COMMENT $1149 0 - 127
FORCE_NO_SYMBOL $1149
COMMENT $114C double it 0 - 254
COMMENT $1152 in u 0-254 times 3 -> 0 - 762
COMMENT $1154 store current angle of object
FORCE_SYMBOL $1154 ANGLE
COMMENT $1156 circle with angle as offset gives us the actual coordinates
FORCE_SYMBOL $1156 circle
COMMENT $115B save start pos
FORCE_SYMBOL $115B Y_POS
COMMENT $115D save start pos
FORCE_SYMBOL $115D X_POS
COMMENT_LINE $1160 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1160 behaviours control (action) and draw all objects
COMMENT_LINE $1160 each object type has an individual behaviour
COMMENT_LINE $1160 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1160 values are = from "u" list as:
COMMENT_LINE $1160 pulu     pc,d,x ; (D = y,x, X = vectorlist)
COMMENT_LINE $1160 0da0
COMMENT_LINE $1160 do the scaling
COMMENT $1160 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $1160 VIA_t1_cnt_lo
COMMENT_LINE $1164 start the move to
COMMENT_LINE $1164 following calcs can be done within that move
COMMENT $1164 Store Y in D/A register
FORCE_SYMBOL $1164 VIA_port_a
COMMENT $1166 Blank low, zero high?
FORCE_NO_SYMBOL $1166
FORCE_SYMBOL $1168 VIA_cntl
COMMENT $116B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $116B VIA_port_b
COMMENT $116D Clear shift regigster
FORCE_SYMBOL $116D VIA_shift_reg
COMMENT $116F Disable mux
FORCE_SYMBOL $116F VIA_port_b
COMMENT $1171 Store X in D/A register
FORCE_SYMBOL $1171 VIA_port_a
COMMENT $1173 enable timer
FORCE_SYMBOL $1173 VIA_t1_cnt_hi
COMMENT $1175 load current scale to a - for later calcs
COMMENT $1177 if scale is rather large, we cen decipher music in that time
FORCE_NO_SYMBOL $1177
COMMENT $117B uncrunch one music "piece"
FORCE_SYMBOL $117B inMovePointer
COMMENT $1181 see if wee need calc at all, compare tick counter with below zero
COMMENT $1183 if not, scale will not be updated
COMMENT $1185 otherwise reset the delay counter for scale update (this is global now, should I use that from the structure?)
FORCE_SYMBOL $1185 X_add_delay
COMMENT $1188 store it
COMMENT $118A and actually descrease the scale with the "decrease" value
COMMENT $118C if below zero, than base reaches
COMMENT $118E if lower base scale, than also dead
COMMENT_LINE $1192 if we reached the base - we collect the bonus
COMMENT $1192 probably not needed here, since we have a realy low scale here
FORCE_NO_SYMBOL $1192
FORCE_SYMBOL $1194 VIA_int_flags
FORCE_NO_SYMBOL $1198
COMMENT $119A /BLANK low and /ZERO low
FORCE_SYMBOL $119A VIA_cntl
COMMENT $119C if base was hit -> init bonus
FORCE_SYMBOL $119C initBonus
COMMENT $119F store the calculated scale (used next round)
COMMENT $11A1 see if wee need calc at all, compare tick counter with below zero
COMMENT $11A3 if not, scale will not be updated
COMMENT $11A5 anim reset
FORCE_SYMBOL $11A5 X_ANIM_DELAY
FORCE_SYMBOL $11B4 BonusList_0
COMMENT $11B9 preload next user stack
FORCE_NO_SYMBOL $11BB
COMMENT $11BE to timer t1 (lo=
FORCE_SYMBOL $11BE VIA_t1_cnt_lo
COMMENT $11C0 end a move to
FORCE_NO_SYMBOL $11C0
FORCE_SYMBOL $11C2 VIA_int_flags
COMMENT $11C6 Store intensity in D/A
FORCE_SYMBOL $11C6 VIA_port_a
COMMENT $11C8 mux disabled channel 2
FORCE_NO_SYMBOL $11C8
FORCE_SYMBOL $11CB VIA_port_b
COMMENT $11CD mux enabled channel 2
FORCE_SYMBOL $11CD VIA_port_b
COMMENT $11CF turn off mux
FORCE_SYMBOL $11CF VIA_port_b
COMMENT $11D1 draw the list
FORCE_SYMBOL $11D1 myDraw_VL_mode_direct
COMMENT_LINE $11D4 *****************************
COMMENT_LINE $11D4 **** STARFIELD **************
COMMENT_LINE $11D4 *****************************
COMMENT_LINE $11D4 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $11D4 Starfield SPAWN
COMMENT_LINE $11D4 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $11D4 in x pointer to new object structure that should be filled with object
COMMENT_LINE $11D4 data
COMMENT $11D4 "create" (or rather get) new object
FORCE_SYMBOL $11D4 newObject
COMMENT $11D7 if positve - there is no object left, jump out
COMMENT $11DB pointer to new object
FORCE_NO_SYMBOL $11DB
COMMENT_LINE $11DD copy and initialze new enemy
COMMENT $11DD remember how many starfields are active
FORCE_SYMBOL $11DD starFieldCounter
FORCE_SYMBOL $11E0 IS_NEW_STARFIELD
FORCE_SYMBOL $11E2 starfieldBehaviour
FORCE_SYMBOL $11E5 BEHAVIOUR
COMMENT $11E7 internal indicator for new starfield, the initialization of positions is done ofer time, when the "counters" have run out
FORCE_NO_SYMBOL $11E7
COMMENT $11E9 store neg pos as indicator, that nothing is displayed
FORCE_SYMBOL $11E9 POS_1
COMMENT $11EB store neg pos as indicator, that nothing is displayed
FORCE_SYMBOL $11EB POS_2
COMMENT $11ED store neg pos as indicator, that nothing is displayed
FORCE_SYMBOL $11ED POS_3
COMMENT $11EF store neg pos as indicator, that nothing is displayed
FORCE_SYMBOL $11EF POS_4
COMMENT $11F1 scale value in initialization of stars are "delay" factors for spawning a "real" star
FORCE_SYMBOL $11F1 my_random2
FORCE_NO_SYMBOL $11F4
COMMENT $11F6 in init - wait for star spawn at 0
FORCE_SYMBOL $11F6 SCALE_1
COMMENT_LINE $11F8 generate another random
FORCE_SYMBOL $11F8 my_random
FORCE_SYMBOL $11FC my_random2
FORCE_SYMBOL $11FF my_random2
FORCE_SYMBOL $1202 RecalCounterLow
FORCE_SYMBOL $1205 my_random2
FORCE_NO_SYMBOL $1208
COMMENT $120A in init - wait for star spawn at 0
FORCE_SYMBOL $120A SCALE_2
FORCE_SYMBOL $120C my_random
FORCE_SYMBOL $1210 my_random2
FORCE_SYMBOL $1213 my_random2
FORCE_SYMBOL $1216 RecalCounterLow
FORCE_SYMBOL $1219 my_random2
FORCE_NO_SYMBOL $121C
COMMENT $121E in init - wait for star spawn at 0
FORCE_SYMBOL $121E SCALE_3
FORCE_SYMBOL $1220 my_random
FORCE_SYMBOL $1224 my_random2
FORCE_SYMBOL $1227 my_random2
FORCE_SYMBOL $122A RecalCounterLow
FORCE_SYMBOL $122D my_random2
FORCE_NO_SYMBOL $1230
COMMENT $1232 in init - wait for star spawn at 0
FORCE_SYMBOL $1232 SCALE_4
COMMENT_LINE $1235 *****************************
COMMENT_LINE $1235 **** OBJECT Letter **********
COMMENT_LINE $1235 *****************************
COMMENT_LINE $1235 One letter from the title screen that "circles"
COMMENT_LINE $1235 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1235 X Letter
COMMENT_LINE $1235 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1235 in a letter that should be built
COMMENT $1235 exit with status 0
FORCE_NO_SYMBOL $1235
COMMENT $123B save out letter
COMMENT $123D "create" (or rather get) new object
FORCE_SYMBOL $123D newObject
COMMENT $1240 if positve - there is no object left, jump out
COMMENT $1242 pointer to new object now in X also
FORCE_NO_SYMBOL $1242
COMMENT_LINE $1244 copy and initialze new enemy
COMMENT $1244 in b out current letter
COMMENT $1246 subtract smallest letter, so A has 0 offset
COMMENT $1248 multiply by two, since addresses are 16 bit
COMMENT $1249 and add the abc (table of vector list address of the alphabet's letters)
FORCE_SYMBOL $1249 _abc
COMMENT $124C in x now address of letter vectorlist
FORCE_SYMBOL $124E CURRENT_LIST
FORCE_SYMBOL $1250 letterBehaviour
FORCE_SYMBOL $1253 BEHAVIOUR
FORCE_SYMBOL $1255 vector_move_scale
COMMENT $1258 start with max scale (for xEnemy)
FORCE_SYMBOL $1258 SCALE
COMMENT_LINE $125B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $125B behaviours control (action) and draw all objects
COMMENT_LINE $125B each object type has an individual behaviour
COMMENT_LINE $125B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $125B values are = from "u" list as:
COMMENT_LINE $125B pulu     pc,d,x ; (D = y,x, X = vectorlist)
COMMENT_LINE $125B 0746
COMMENT_LINE $125B do the scaling
COMMENT $125B also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $125B VIA_t1_cnt_lo
COMMENT_LINE $125F start the move to
COMMENT_LINE $125F following calcs can be done within that move
COMMENT $125F Store Y in D/A register
FORCE_SYMBOL $125F VIA_port_a
COMMENT $1261 Blank low, zero high?
FORCE_NO_SYMBOL $1261
FORCE_SYMBOL $1263 VIA_cntl
COMMENT $1266 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1266 VIA_port_b
COMMENT $1268 Clear shift regigster
FORCE_SYMBOL $1268 VIA_shift_reg
COMMENT $126A Disable mux
FORCE_SYMBOL $126A VIA_port_b
COMMENT $126C Store X in D/A register
FORCE_SYMBOL $126C VIA_port_a
COMMENT $126E enable timer
FORCE_SYMBOL $126E VIA_t1_cnt_hi
COMMENT $1270 see if wee need calc at all, compare tick counter with below zero
COMMENT $1272 if not, scale will not be updated
COMMENT $1274 otherwise reset the delay counter for scale update (this is global now, should I use that from the structure?)
FORCE_SYMBOL $1274 Bomber_add_delay
COMMENT $1277 store it
COMMENT $1279 load current scale to a - for later calcs
FORCE_NO_SYMBOL $127B
COMMENT $127E if below zero, than base reaches
FORCE_NO_SYMBOL $1280
COMMENT $1283 load current scale to a - for later calcs
FORCE_SYMBOL $1285 circle
COMMENT $128B save start pos
COMMENT $128D save start pos
COMMENT_LINE $128F check anim
COMMENT $128F see if wee need calc at all, compare tick counter with below zero
COMMENT $1291 if not, scale will not be updated
COMMENT $1293 anim reset
FORCE_SYMBOL $1293 BOMBER_ANIM_DELAY
FORCE_SYMBOL $12A2 BomberList_0
COMMENT $12A7 decrease shot counter
COMMENT $12A9 if not 0 jump
COMMENT $12AB otherwise restore shot "delay"
COMMENT $12AD and reduce the delay for next shot
FORCE_SYMBOL $12AD BOMB_RELOAD_REDUCTION
COMMENT $12AF if smaller than minimum
FORCE_SYMBOL $12AF minimum_bomb_reload
COMMENT $12B4 load the minimum
FORCE_SYMBOL $12B4 minimum_bomb_reload
COMMENT $12B7 and store it as next delay counter
COMMENT $12B9 which also is the next reset value
COMMENT_LINE $12BD jsr      buildShot                    ; "spawnShot"
COMMENT_LINE $12BD ;;;;; BUILD shot inlined - only place it is used!
COMMENT $12BD remember parent structure, we need the parent for the shots starting position
COMMENT_LINE $12BF build new object
FORCE_SYMBOL $12BF newObject
COMMENT_LINE $12C4 copy interesting things from y to u
COMMENT $12C4 get position of parent (bomber)
COMMENT $12C6 and remember it in the shot object
FORCE_SYMBOL $12C6 Y_POS
COMMENT $12C8 get position of parent (bomber) b
COMMENT $12CA and remember it in the shot object
FORCE_SYMBOL $12CA X_POS
COMMENT $12CC also the angle
FORCE_SYMBOL $12CE ANGLE
FORCE_SYMBOL $12D2 SCALE
FORCE_SYMBOL $12D4 shotBehaviour
FORCE_SYMBOL $12D7 BEHAVIOUR
FORCE_SYMBOL $12D9 ShotList_0
FORCE_SYMBOL $12DC CURRENT_LIST
FORCE_SYMBOL $12DE shot_add_delay
FORCE_SYMBOL $12E1 TICK_COUNTER
FORCE_SYMBOL $12E3 shot_addi
FORCE_SYMBOL $12E6 SCALE_DELTA
FORCE_SYMBOL $12E8 BomberShot_Sound
FORCE_SYMBOL $12EB play_sfx
COMMENT_LINE $12EE ;;;;; BUILD shot end
COMMENT $12F0 preload next user stack
FORCE_NO_SYMBOL $12F2
COMMENT $12F5 to timer t1 (lo=
FORCE_SYMBOL $12F5 VIA_t1_cnt_lo
COMMENT $12F7 end a move to
FORCE_NO_SYMBOL $12F7
FORCE_SYMBOL $12F9 VIA_int_flags
COMMENT $12FD load offset of vector list draw
COMMENT $1304 Store intensity in D/A
FORCE_SYMBOL $1304 VIA_port_a
COMMENT $1306 mux disabled channel 2
FORCE_NO_SYMBOL $1306
FORCE_SYMBOL $1309 VIA_port_b
COMMENT $130B mux enabled channel 2
FORCE_SYMBOL $130B VIA_port_b
COMMENT $130D turn off mux
FORCE_SYMBOL $130D VIA_port_b
FORCE_SYMBOL $130F entry_optimized_draw_mvlc_unloop
COMMENT $1312 vectrex function includes
COMMENT_LINE $1312 this file is part of Release, written by Malban in 2017
COMMENT_LINE $1312 The draw routines are "special" in the way, that they don't use the
COMMENT_LINE $1312 shift register for switching the light on and off, but rather do
COMMENT_LINE $1312 that manually using the VIA_cntl register
COMMENT_LINE $1312 also the following routines never "WAIT" in a loop for the drawing to be finished.
COMMENT_LINE $1312 the routines are all specialized for a certain scale (range)
COMMENT_LINE $1312 All handling internally is done in respect to the scale that they should be used with
COMMENT_LINE $1312 (if used with another scale the output is not garanteed)
COMMENT_LINE $1312 The higher scale versiona for that purpose MUST contain some sort of wait - here I used NOPs
COMMENT_LINE $1312 The wait is in general so short, that nothingmuch useful could be done.
COMMENT_LINE $1312 Also note some use register Y some register U internally (destroy!).
COMMENT_LINE $1312 It all depended where I used these routines, which register I had to keep save.
COMMENT_LINE $1312 Some functions that are only usied within "object" do not RETURN in the usual way
COMMENT_LINE $1312 but call the next object by pulling the U register with the next object data.
COMMENT_LINE $1312 this file is part of Release, written by Malban in 2017
COMMENT_LINE $1312 size similar to: SCALE_FACTOR_SPRITE 6
COMMENT_LINE $1312 "similar" since the drawing below does not use a shift register,
COMMENT_LINE $1312 so the timings are slightly different
COMMENT_LINE $1312 these routines are manualy tested using different vectrex systems
COMMENT_LINE $1312 they seem to defy cycle counting but work on the real machines rather well
COMMENT_LINE $1312 Emulators don' like it (Vide is ok'ish)
COMMENT_LINE $1312 ParaJVE: displayes only dashed
COMMENT_LINE $1312 Mess doesn't display anything
COMMENT_LINE $1312 one "inner line" of the vectorlist drawing routine
COMMENT_LINE $1312 ***************************************************************************
COMMENT $0000 cycles
COMMENT $0000 #noDoubleWarn
COMMENT $0000 [6] Send X to A/D
COMMENT $0000 [4] enable timer 1
COMMENT_LINE $0000 light on
COMMENT $0000 [4] ZERO disabled, and BLANK disabled
COMMENT $0000 [8] load Y coordinate to A, X coordinate to B
COMMENT $0000 [4] Send Y to A/D
COMMENT $0000 [6]
COMMENT $0000 [2]
COMMENT_LINE $0000 light off
COMMENT $0000 [4] ZERO disabled, and BLANK enabled
COMMENT $0000 [6] Disable mux
COMMENT $0000 #noDoubleWarn
COMMENT $0000 cycles
COMMENT $0000 [6] Send X to A/D
COMMENT_LINE $0000 for EAXCT movement - the following two lines switch places
COMMENT $0000 [4] ZERO disabled, and BLANK disabled
COMMENT $0000 [4] enable timer 1
COMMENT_LINE $0000 light on
COMMENT $0000 [8] load Y coordinate to A, X coordinate to B
COMMENT $0000 [4] Send Y to A/D
COMMENT $0000 [6]
COMMENT $0000 [2]
COMMENT_LINE $0000 light off
COMMENT $0000 [4] ZERO disabled, and BLANK enabled
COMMENT $0000 [6] Disable mux
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 repetition of the above macro
COMMENT_LINE $0000 27 times below
COMMENT_LINE $0000 this is a "counter" to calculate where to jump into the the unlooping!
COMMENT_LINE $1312 length of one of the vector drawing lines in ASM
COMMENT_LINE $1312 definition must come after the above, otherwise calculation would be false
COMMENT_LINE $1312 the callable unloop" macro
COMMENT_LINE $1312 must be followed after 22 cycles with a
COMMENT_LINE $1312 ldb      #$ce
COMMENT_LINE $1312 STB     <VIA_cntl         ;/BLANK low and /ZERO low
COMMENT_LINE $1312 for example look at the subroutine: "move_wait_draw_vlc_unloop" in the main file
COMMENT_LINE $1312 "y" must be = beforehand to the jump "table"
COMMENT_LINE $0000 (x) length in bytes
COMMENT_LINE $0000 [x] duration in cycles
COMMENT_LINE $0000 do one "manual" starter line in advance
COMMENT $0000 get current coordinates
COMMENT $0000 (2) [4] Send Y to A/D
COMMENT $0000 (2) [4] enable mux, thus y integrators are set to Y
COMMENT $0000 [6] Disable mux
COMMENT_LINE $0000 definition must come after the above, otherwise calculation would be false
COMMENT $0000 [6] Send X to A/D
COMMENT_LINE $0000 light on
COMMENT $0000 [4] enable timer 1
COMMENT $0000 ZERO disabled, and BLANK disabled
COMMENT_LINE $0000 light off
COMMENT_LINE $0000 there must the above mentioned "switch the light off"
COMMENT_LINE $0000 after 22 cycles still be manually done
COMMENT_LINE $0000 (but the 22 cycles might be reused otherwise!)
COMMENT_LINE $0000 (x) length in bytes
COMMENT_LINE $0000 [x] duration in cycles
COMMENT_LINE $0000 do one "manual" starter line in advance
COMMENT $0000 get current coordinates
COMMENT $0000 (2) [4] Send Y to A/D
COMMENT $0000 (2) [4] enable mux, thus y integrators are set to Y
COMMENT $0000 [6] Disable mux
COMMENT_LINE $0000 definition must come after the above, otherwise calculation would be false
COMMENT $0000 [6] Send X to A/D
COMMENT_LINE $0000 light on
COMMENT $0000 [4] enable timer 1
COMMENT $0000 ZERO disabled, and BLANK disabled
COMMENT_LINE $0000 light off
COMMENT_LINE $0000 there must the above mentioned "switch the light off"
COMMENT_LINE $0000 after 22 cycles still be manually done
COMMENT_LINE $0000 (but the 22 cycles might be reused otherwise!)
COMMENT_LINE $0000 **********************************************************
COMMENT_LINE $0000 input list in X - scale 6
COMMENT_LINE $0000 0 move
COMMENT_LINE $0000 negative draw
COMMENT_LINE $0000 positive end
FORCE_NO_SYMBOL $1312
COMMENT $1314 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $1314 VIA_aux_cntl
COMMENT_LINE $131C VIA values back to default
COMMENT $131C [6] check
FORCE_NO_SYMBOL $131C
COMMENT $131F [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $131F VIA_aux_cntl
COMMENT $1321 [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $1321 VIA_cntl
COMMENT $1328 [2]
FORCE_NO_SYMBOL $1328
COMMENT $132A [4] ; light OFF, ZERO OFF
FORCE_SYMBOL $132A VIA_cntl
COMMENT $132E (2) [4] Send Y to A/D
FORCE_SYMBOL $132E VIA_port_a
COMMENT $1330 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $1330 VIA_port_b
COMMENT $1332 [6] Disable mux
FORCE_SYMBOL $1332 VIA_port_b
COMMENT $1334 [6] Send X to A/D
FORCE_SYMBOL $1334 VIA_port_a
COMMENT $1336 light ON, ZERO OFF
FORCE_NO_SYMBOL $1336
COMMENT $1338 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $1338 VIA_t1_cnt_hi
COMMENT_LINE $133A light on
COMMENT $133A [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $133A VIA_cntl
COMMENT_LINE $133C 24 cycles -> light off
COMMENT $133C [7]
COMMENT $133E [3]
COMMENT $1340 [3]
COMMENT $1342 [3]
COMMENT $1344 one branch not taken less
COMMENT $1347 [2]
FORCE_NO_SYMBOL $1347
COMMENT $1349 [4] ; light OFF, ZERO OFF
FORCE_SYMBOL $1349 VIA_cntl
COMMENT $134D (2) [4] Send Y to A/D
FORCE_SYMBOL $134D VIA_port_a
COMMENT $134F (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $134F VIA_port_b
COMMENT $1351 [6] Disable mux
FORCE_SYMBOL $1351 VIA_port_b
COMMENT $1353 [6] Send X to A/D
FORCE_SYMBOL $1353 VIA_port_a
COMMENT $1355 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $1355 VIA_t1_cnt_hi
COMMENT_LINE $1357 light on
COMMENT_LINE $1357 stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $1357 24 cycles -> light off
COMMENT $1357 [7]
COMMENT $1359 [3]
COMMENT $135B [3]
COMMENT $135D [3]
COMMENT_LINE $135F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $135F same as above, but does a pull instead of a jump and zero & blanks instead of only blanks
FORCE_NO_SYMBOL $135F
COMMENT $1361 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $1361 VIA_aux_cntl
COMMENT_LINE $1369 VIA values back to default
COMMENT $1369 [6] check
FORCE_NO_SYMBOL $1369
COMMENT $136C [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $136C VIA_aux_cntl
COMMENT $136E [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $136E VIA_cntl
COMMENT $1370 (D = y,x, X = vectorlist)
COMMENT $1376 [2]
FORCE_NO_SYMBOL $1376
COMMENT $1378 [4] ; light OFF, ZERO OFF
FORCE_SYMBOL $1378 VIA_cntl
COMMENT $137C (2) [4] Send Y to A/D
FORCE_SYMBOL $137C VIA_port_a
COMMENT $137E (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $137E VIA_port_b
COMMENT $1380 [6] Disable mux
FORCE_SYMBOL $1380 VIA_port_b
COMMENT $1382 [6] Send X to A/D
FORCE_SYMBOL $1382 VIA_port_a
COMMENT $1384 light ON, ZERO OFF
FORCE_NO_SYMBOL $1384
COMMENT $1386 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $1386 VIA_t1_cnt_hi
COMMENT_LINE $1388 light on
COMMENT $1388 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $1388 VIA_cntl
COMMENT_LINE $138A 24 cycles -> light off
COMMENT $138A [7]
COMMENT $138C [3]
COMMENT $138E [3]
COMMENT $1390 [3]
COMMENT $1392 one branch not taken less
COMMENT $1395 [2]
FORCE_NO_SYMBOL $1395
COMMENT $1397 [4] ; light OFF, ZERO OFF
FORCE_SYMBOL $1397 VIA_cntl
COMMENT $139B (2) [4] Send Y to A/D
FORCE_SYMBOL $139B VIA_port_a
COMMENT $139D (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $139D VIA_port_b
COMMENT $139F [6] Disable mux
FORCE_SYMBOL $139F VIA_port_b
COMMENT $13A1 [6] Send X to A/D
FORCE_SYMBOL $13A1 VIA_port_a
COMMENT $13A3 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $13A3 VIA_t1_cnt_hi
COMMENT_LINE $13A5 light on
COMMENT_LINE $13A5 stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $13A5 24 cycles -> light off
COMMENT $13A5 [7]
COMMENT $13A7 [3]
COMMENT $13A9 [3]
COMMENT $13AB [3]
COMMENT_LINE $13AD **********************************************************
COMMENT_LINE $13AD draw bigger vlists than above one - scale 16
COMMENT_LINE $13AD input list in X
COMMENT_LINE $13AD destroys y
COMMENT_LINE $13AD 0 move
COMMENT_LINE $13AD negative use as shift
COMMENT_LINE $13AD positive end
FORCE_NO_SYMBOL $13AD
COMMENT $13AF Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $13AF VIA_aux_cntl
COMMENT_LINE $13B7 VIA values back to default
COMMENT $13B7 [6] check
FORCE_NO_SYMBOL $13B7
COMMENT $13BE [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $13BE VIA_aux_cntl
COMMENT $13C0 [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $13C0 VIA_cntl
FORCE_NO_SYMBOL $13C5
COMMENT $13C9 (2) [4] Send Y to A/D
FORCE_SYMBOL $13C9 VIA_port_a
FORCE_SYMBOL $13CB VIA_cntl
COMMENT $13CE (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $13CE VIA_port_b
COMMENT $13D0 [6] Disable mux
FORCE_SYMBOL $13D0 VIA_port_b
COMMENT $13D2 [6] Send X to A/D
FORCE_SYMBOL $13D2 VIA_port_a
COMMENT $13D4 light ON, ZERO OFF
FORCE_NO_SYMBOL $13D4
COMMENT $13D6 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $13D6 VIA_t1_cnt_hi
COMMENT_LINE $13D8 light on
COMMENT $13D8 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $13D8 VIA_cntl
COMMENT_LINE $13DA 24 cycles -> light off
COMMENT $13DA [7]
COMMENT $13DC [3]
COMMENT $13DE [3]
COMMENT $13E0 [3]
FORCE_NO_SYMBOL $13E4
COMMENT $13E8 (2) [4] Send Y to A/D
FORCE_SYMBOL $13E8 VIA_port_a
FORCE_SYMBOL $13EA VIA_cntl
COMMENT $13ED (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $13ED VIA_port_b
COMMENT $13EF [6] Disable mux
FORCE_SYMBOL $13EF VIA_port_b
COMMENT $13F1 [6] Send X to A/D
FORCE_SYMBOL $13F1 VIA_port_a
COMMENT $13F3 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $13F3 VIA_t1_cnt_hi
COMMENT_LINE $13F5 light on
COMMENT_LINE $13F5 stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $13F5 24 cycles -> light off
COMMENT $13F5 [7]
COMMENT $13F7 [3]
COMMENT $13F9 [3]
COMMENT $13FB [3]
COMMENT_LINE $13FD **********************************************************
COMMENT_LINE $13FD draw bigger vlists than above one - scale 24
COMMENT_LINE $13FD input list in X
COMMENT_LINE $13FD destroys u
COMMENT_LINE $13FD 0 move
COMMENT_LINE $13FD negative use as shift
COMMENT_LINE $13FD positive end
FORCE_NO_SYMBOL $13FD
COMMENT $13FF Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $13FF VIA_aux_cntl
COMMENT_LINE $1407 VIA values back to default
COMMENT $140F [6] check
FORCE_NO_SYMBOL $140F
COMMENT $1412 [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $1412 VIA_aux_cntl
COMMENT_LINE $1414 nop 2
COMMENT $1414 [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $1414 VIA_cntl
COMMENT $1419 $ce is light off
FORCE_NO_SYMBOL $1419
COMMENT $141C (2) [4] Send Y to A/D
FORCE_SYMBOL $141C VIA_port_a
FORCE_SYMBOL $1422 VIA_cntl
COMMENT $1424 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $1424 VIA_port_b
COMMENT $1426 [6] Disable mux
FORCE_SYMBOL $1426 VIA_port_b
COMMENT $1428 [6] Send X to A/D
FORCE_SYMBOL $1428 VIA_port_a
COMMENT $142A light ON, ZERO OFF
FORCE_NO_SYMBOL $142A
COMMENT $142C [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $142C VIA_t1_cnt_hi
COMMENT_LINE $142E light on
COMMENT $142E [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $142E VIA_cntl
COMMENT_LINE $1430 24 cycles -> light off
COMMENT $1430 [7]
COMMENT $1432 [3]
COMMENT $1434 [3]
COMMENT $1436 [3]
FORCE_NO_SYMBOL $143A
COMMENT $143D (2) [4] Send Y to A/D
FORCE_SYMBOL $143D VIA_port_a
COMMENT_LINE $143F nop 4
FORCE_SYMBOL $1443 VIA_cntl
COMMENT $1445 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $1445 VIA_port_b
COMMENT $1447 [6] Disable mux
FORCE_SYMBOL $1447 VIA_port_b
COMMENT $1449 [6] Send X to A/D
FORCE_SYMBOL $1449 VIA_port_a
COMMENT_LINE $144B nop 4
COMMENT $144B [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $144B VIA_t1_cnt_hi
COMMENT_LINE $144D light on
COMMENT_LINE $1451 stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $1451 24 cycles -> light off
COMMENT $1451 [7]
COMMENT $1453 [3]
COMMENT $1455 [3]
COMMENT $1457 [3]
COMMENT_LINE $1459 **********************************************************
COMMENT_LINE $1459 draw bigger vlists than above one - scale 40
COMMENT_LINE $1459 input list in X
COMMENT_LINE $1459 destroys u
COMMENT_LINE $1459 0 move
COMMENT_LINE $1459 negative use as shift
COMMENT_LINE $1459 positive end
FORCE_NO_SYMBOL $1459
COMMENT $145B Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $145B VIA_aux_cntl
COMMENT_LINE $145D next_line4
COMMENT_LINE $1463 VIA values back to default
COMMENT $1469 [6] check
FORCE_NO_SYMBOL $1469
COMMENT $146C [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $146C VIA_aux_cntl
COMMENT $1470 [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $1470 VIA_cntl
FORCE_NO_SYMBOL $1475
COMMENT $1478 (2) [4] Send Y to A/D
FORCE_SYMBOL $1478 VIA_port_a
FORCE_SYMBOL $147E VIA_cntl
COMMENT $1480 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $1480 VIA_port_b
COMMENT $1482 [6] Disable mux
FORCE_SYMBOL $1482 VIA_port_b
COMMENT $1484 [6] Send X to A/D
FORCE_SYMBOL $1484 VIA_port_a
COMMENT $1486 light ON, ZERO OFF
FORCE_NO_SYMBOL $1486
COMMENT $1488 [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $1488 VIA_t1_cnt_hi
COMMENT_LINE $148A light on
COMMENT $148A [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $148A VIA_cntl
COMMENT_LINE $148C 24 cycles -> light off
COMMENT $148C [7]
COMMENT $148E NEW
COMMENT $1496 [3]
COMMENT $1498 [3]
COMMENT $149A [3]
FORCE_NO_SYMBOL $149E
COMMENT $14A1 (2) [4] Send Y to A/D
FORCE_SYMBOL $14A1 VIA_port_a
FORCE_SYMBOL $14A7 VIA_cntl
COMMENT $14A9 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $14A9 VIA_port_b
COMMENT $14AB [6] Disable mux
FORCE_SYMBOL $14AB VIA_port_b
COMMENT $14AD [6] Send X to A/D
FORCE_SYMBOL $14AD VIA_port_a
COMMENT_LINE $14AF nop 4
COMMENT $14AF [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $14AF VIA_t1_cnt_hi
COMMENT_LINE $14B1 light on
COMMENT_LINE $14B5 stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $14B5 24 cycles -> light off
COMMENT $14B5 [7]
COMMENT $14B7 NEW
COMMENT $14BF [3]
COMMENT $14C1 [3]
COMMENT $14C3 [3]
COMMENT_LINE $14C5 **********************************************************
COMMENT_LINE $14C5 list in x
COMMENT_LINE $14C5 list:
COMMENT_LINE $14C5 counter
COMMENT_LINE $14C5 move y,x
COMMENT_LINE $14C5 draw y,x * (count-1)
COMMENT_LINE $14C5 DUFFY
FORCE_NO_SYMBOL $14C5
COMMENT_LINE $14C8 the following is the position checking loop
COMMENT_LINE $14C8 waiting till an interrupt occurs
COMMENT $14C8 scale for sprite
FORCE_SYMBOL $14C8 VIA_t1_cnt_lo
COMMENT $14CA Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $14CA VIA_aux_cntl
COMMENT_LINE $14CC (x) length in bytes
COMMENT_LINE $14CC [x] duration in cycles
COMMENT_LINE $14CC do one "manual" starter line in advance
COMMENT $14CC get current coordinates
COMMENT $14CE (2) [4] Send Y to A/D
FORCE_SYMBOL $14CE VIA_port_a
COMMENT $14D0 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $14D0 VIA_port_b
COMMENT $14D2 [6] Disable mux
FORCE_SYMBOL $14D2 VIA_port_b
COMMENT $14D4 [6] Send X to A/D
FORCE_SYMBOL $14D4 VIA_port_a
FORCE_NO_SYMBOL $14D6
COMMENT_LINE $14D8 for EAXCT movement - the following two lines switch places
COMMENT $14D8 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $14D8 VIA_cntl
COMMENT $14DA [4] enable timer 1
FORCE_SYMBOL $14DA VIA_t1_cnt_hi
COMMENT_LINE $14DC light on
COMMENT $14DC [8] load Y coordinate to A, X coordinate to B
COMMENT $14DE [4] Send Y to A/D
FORCE_SYMBOL $14DE VIA_port_a
COMMENT $14E0 [6]
FORCE_SYMBOL $14E0 VIA_port_b
COMMENT $14E2 [2]
FORCE_NO_SYMBOL $14E2
COMMENT_LINE $14E4 light off
COMMENT $14E4 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $14E4 VIA_cntl
COMMENT $14E6 [6] Disable mux
FORCE_SYMBOL $14E6 VIA_port_b
FORCE_NO_SYMBOL $14E8
COMMENT_LINE $14EA definition must come after the above, otherwise calculation would be false
COMMENT $14EA [6] Send X to A/D
FORCE_SYMBOL $14EA VIA_port_a
FORCE_NO_SYMBOL $14EC
COMMENT $14EE [4] enable timer 1
FORCE_SYMBOL $14EE VIA_t1_cnt_hi
COMMENT_LINE $14F0 light on
COMMENT $14F0 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $14F0 VIA_cntl
COMMENT $14F2 [8] load Y coordinate to A, X coordinate to B
COMMENT $14F4 [4] Send Y to A/D
FORCE_SYMBOL $14F4 VIA_port_a
COMMENT $14F6 [6]
FORCE_SYMBOL $14F6 VIA_port_b
COMMENT $14F8 [2]
FORCE_NO_SYMBOL $14F8
COMMENT_LINE $14FA light off
COMMENT $14FA [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $14FA VIA_cntl
COMMENT $14FC [6] Disable mux
FORCE_SYMBOL $14FC VIA_port_b
COMMENT $14FE [6] Send X to A/D
FORCE_SYMBOL $14FE VIA_port_a
FORCE_NO_SYMBOL $1500
COMMENT $1502 [4] enable timer 1
FORCE_SYMBOL $1502 VIA_t1_cnt_hi
COMMENT_LINE $1504 light on
COMMENT $1504 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $1504 VIA_cntl
COMMENT $1506 [8] load Y coordinate to A, X coordinate to B
COMMENT $1508 [4] Send Y to A/D
FORCE_SYMBOL $1508 VIA_port_a
COMMENT $150A [6]
FORCE_SYMBOL $150A VIA_port_b
COMMENT $150C [2]
FORCE_NO_SYMBOL $150C
COMMENT_LINE $150E light off
COMMENT $150E [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $150E VIA_cntl
COMMENT $1510 [6] Disable mux
FORCE_SYMBOL $1510 VIA_port_b
COMMENT $1512 [6] Send X to A/D
FORCE_SYMBOL $1512 VIA_port_a
FORCE_NO_SYMBOL $1514
COMMENT $1516 [4] enable timer 1
FORCE_SYMBOL $1516 VIA_t1_cnt_hi
COMMENT_LINE $1518 light on
COMMENT $1518 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $1518 VIA_cntl
COMMENT $151A [8] load Y coordinate to A, X coordinate to B
COMMENT $151C [4] Send Y to A/D
FORCE_SYMBOL $151C VIA_port_a
COMMENT $151E [6]
FORCE_SYMBOL $151E VIA_port_b
COMMENT $1520 [2]
FORCE_NO_SYMBOL $1520
COMMENT_LINE $1522 light off
COMMENT $1522 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $1522 VIA_cntl
COMMENT $1524 [6] Disable mux
FORCE_SYMBOL $1524 VIA_port_b
COMMENT $1526 [6] Send X to A/D
FORCE_SYMBOL $1526 VIA_port_a
FORCE_NO_SYMBOL $1528
COMMENT $152A [4] enable timer 1
FORCE_SYMBOL $152A VIA_t1_cnt_hi
COMMENT_LINE $152C light on
COMMENT $152C [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $152C VIA_cntl
COMMENT $152E [8] load Y coordinate to A, X coordinate to B
COMMENT $1530 [4] Send Y to A/D
FORCE_SYMBOL $1530 VIA_port_a
COMMENT $1532 [6]
FORCE_SYMBOL $1532 VIA_port_b
COMMENT $1534 [2]
FORCE_NO_SYMBOL $1534
COMMENT_LINE $1536 light off
COMMENT $1536 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $1536 VIA_cntl
COMMENT $1538 [6] Disable mux
FORCE_SYMBOL $1538 VIA_port_b
COMMENT $153A [6] Send X to A/D
FORCE_SYMBOL $153A VIA_port_a
FORCE_NO_SYMBOL $153C
COMMENT $153E [4] enable timer 1
FORCE_SYMBOL $153E VIA_t1_cnt_hi
COMMENT_LINE $1540 light on
COMMENT $1540 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $1540 VIA_cntl
COMMENT $1542 [8] load Y coordinate to A, X coordinate to B
COMMENT $1544 [4] Send Y to A/D
FORCE_SYMBOL $1544 VIA_port_a
COMMENT $1546 [6]
FORCE_SYMBOL $1546 VIA_port_b
COMMENT $1548 [2]
FORCE_NO_SYMBOL $1548
COMMENT_LINE $154A light off
COMMENT $154A [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $154A VIA_cntl
COMMENT $154C [6] Disable mux
FORCE_SYMBOL $154C VIA_port_b
COMMENT $154E [6] Send X to A/D
FORCE_SYMBOL $154E VIA_port_a
FORCE_NO_SYMBOL $1550
COMMENT $1552 [4] enable timer 1
FORCE_SYMBOL $1552 VIA_t1_cnt_hi
COMMENT_LINE $1554 light on
COMMENT $1554 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $1554 VIA_cntl
COMMENT $1556 [8] load Y coordinate to A, X coordinate to B
COMMENT $1558 [4] Send Y to A/D
FORCE_SYMBOL $1558 VIA_port_a
COMMENT $155A [6]
FORCE_SYMBOL $155A VIA_port_b
COMMENT $155C [2]
FORCE_NO_SYMBOL $155C
COMMENT_LINE $155E light off
COMMENT $155E [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $155E VIA_cntl
COMMENT $1560 [6] Disable mux
FORCE_SYMBOL $1560 VIA_port_b
COMMENT $1562 [6] Send X to A/D
FORCE_SYMBOL $1562 VIA_port_a
FORCE_NO_SYMBOL $1564
COMMENT $1566 [4] enable timer 1
FORCE_SYMBOL $1566 VIA_t1_cnt_hi
COMMENT_LINE $1568 light on
COMMENT $1568 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $1568 VIA_cntl
COMMENT $156A [8] load Y coordinate to A, X coordinate to B
COMMENT $156C [4] Send Y to A/D
FORCE_SYMBOL $156C VIA_port_a
COMMENT $156E [6]
FORCE_SYMBOL $156E VIA_port_b
COMMENT $1570 [2]
FORCE_NO_SYMBOL $1570
COMMENT_LINE $1572 light off
COMMENT $1572 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $1572 VIA_cntl
COMMENT $1574 [6] Disable mux
FORCE_SYMBOL $1574 VIA_port_b
COMMENT $1576 [6] Send X to A/D
FORCE_SYMBOL $1576 VIA_port_a
FORCE_NO_SYMBOL $1578
COMMENT $157A [4] enable timer 1
FORCE_SYMBOL $157A VIA_t1_cnt_hi
COMMENT_LINE $157C light on
COMMENT $157C [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $157C VIA_cntl
COMMENT $157E [8] load Y coordinate to A, X coordinate to B
COMMENT $1580 [4] Send Y to A/D
FORCE_SYMBOL $1580 VIA_port_a
COMMENT $1582 [6]
FORCE_SYMBOL $1582 VIA_port_b
COMMENT $1584 [2]
FORCE_NO_SYMBOL $1584
COMMENT_LINE $1586 light off
COMMENT $1586 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $1586 VIA_cntl
COMMENT $1588 [6] Disable mux
FORCE_SYMBOL $1588 VIA_port_b
COMMENT $158A [6] Send X to A/D
FORCE_SYMBOL $158A VIA_port_a
FORCE_NO_SYMBOL $158C
COMMENT $158E [4] enable timer 1
FORCE_SYMBOL $158E VIA_t1_cnt_hi
COMMENT_LINE $1590 light on
COMMENT $1590 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $1590 VIA_cntl
COMMENT $1592 [8] load Y coordinate to A, X coordinate to B
COMMENT $1594 [4] Send Y to A/D
FORCE_SYMBOL $1594 VIA_port_a
COMMENT $1596 [6]
FORCE_SYMBOL $1596 VIA_port_b
COMMENT $1598 [2]
FORCE_NO_SYMBOL $1598
COMMENT_LINE $159A light off
COMMENT $159A [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $159A VIA_cntl
COMMENT $159C [6] Disable mux
FORCE_SYMBOL $159C VIA_port_b
COMMENT $159E [6] Send X to A/D
FORCE_SYMBOL $159E VIA_port_a
FORCE_NO_SYMBOL $15A0
COMMENT $15A2 [4] enable timer 1
FORCE_SYMBOL $15A2 VIA_t1_cnt_hi
COMMENT_LINE $15A4 light on
COMMENT $15A4 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $15A4 VIA_cntl
COMMENT $15A6 [8] load Y coordinate to A, X coordinate to B
COMMENT $15A8 [4] Send Y to A/D
FORCE_SYMBOL $15A8 VIA_port_a
COMMENT $15AA [6]
FORCE_SYMBOL $15AA VIA_port_b
COMMENT $15AC [2]
FORCE_NO_SYMBOL $15AC
COMMENT_LINE $15AE light off
COMMENT $15AE [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $15AE VIA_cntl
COMMENT $15B0 [6] Disable mux
FORCE_SYMBOL $15B0 VIA_port_b
COMMENT $15B2 [6] Send X to A/D
FORCE_SYMBOL $15B2 VIA_port_a
COMMENT_LINE $15B4 light on
FORCE_NO_SYMBOL $15B4
COMMENT $15B6 [4] enable timer 1
FORCE_SYMBOL $15B6 VIA_t1_cnt_hi
COMMENT $15B8 ZERO disabled, and BLANK disabled
FORCE_SYMBOL $15B8 VIA_cntl
COMMENT_LINE $15BA light off
COMMENT_LINE $15BA there must the above mentioned "switch the light off"
COMMENT_LINE $15BA after 22 cycles still be manually done
COMMENT_LINE $15BA (but the 22 cycles might be reused otherwise!)
FORCE_NO_SYMBOL $15C2
COMMENT $15C5 22 cycles from switch on ZERO disabled, and BLANK enabled
FORCE_SYMBOL $15C5 VIA_cntl
FORCE_SYMBOL $15C7 VIA_aux_cntl
COMMENT $15C9 (D = y,x, X = vectorlist)
COMMENT_LINE $15CB **********************************************************
COMMENT_LINE $15CB list in x
COMMENT_LINE $15CB list:
COMMENT_LINE $15CB counter
COMMENT_LINE $15CB draw y,x * count
COMMENT_LINE $15CB DIFFY
FORCE_NO_SYMBOL $15CB
COMMENT $15CD Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $15CD VIA_aux_cntl
COMMENT_LINE $15CF unloop_start_addressSub_2:
COMMENT $15CF get current coordinates
COMMENT $15D1 (2) [4] Send Y to A/D
FORCE_SYMBOL $15D1 VIA_port_a
COMMENT $15D3 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $15D3 VIA_port_b
COMMENT $15D5 [6] Disable mux
FORCE_SYMBOL $15D5 VIA_port_b
COMMENT $15D7 [6] Send X to A/D
FORCE_SYMBOL $15D7 VIA_port_a
FORCE_NO_SYMBOL $15D9
COMMENT $15DB [4] enable timer 1
FORCE_SYMBOL $15DB VIA_t1_cnt_hi
COMMENT_LINE $15DD light on
COMMENT $15DD [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $15DD VIA_cntl
COMMENT $15DF [8] load Y coordinate to A, X coordinate to B
COMMENT $15E1 [4] Send Y to A/D
FORCE_SYMBOL $15E1 VIA_port_a
COMMENT $15E3 [6]
FORCE_SYMBOL $15E3 VIA_port_b
COMMENT $15E5 [2]
FORCE_NO_SYMBOL $15E5
COMMENT_LINE $15E7 light off
COMMENT $15E7 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $15E7 VIA_cntl
COMMENT $15E9 [6] Disable mux
FORCE_SYMBOL $15E9 VIA_port_b
FORCE_NO_SYMBOL $15EB
COMMENT_LINE $15ED ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $15ED construct new shield from current player base
COMMENT $15ED the relevant "measure" shield is the outer shield wall
FORCE_SYMBOL $15ED SHIELD_START_SCALE
COMMENT $15EF this is our reference "start" value
FORCE_SYMBOL $15EF shieldStart
COMMENT $15F2 both oscillator drawing start from the outer rim
FORCE_SYMBOL $15F2 osc_forth
FORCE_SYMBOL $15F5 osc_back
COMMENT $15F8 the speed of oscillators differs while still growing
FORCE_SYMBOL $15F8 shieldSpeed
COMMENT $15FC going forth is double the shield speed
FORCE_SYMBOL $15FC current_forth_dif
COMMENT $1601 going back is half the shield speed
FORCE_SYMBOL $1601 current_back_dif
COMMENT_LINE $1604 init a new shield with default values
COMMENT $1604 for a new shield initialize the width to
FORCE_SYMBOL $1604 SHIELD_START_WIDTH
COMMENT $1606 the default width
FORCE_SYMBOL $1606 shieldWidth
FORCE_SYMBOL $1609 shieldWidthGrowth
FORCE_SYMBOL $160C shieldWidthCounter
COMMENT $160F once the shield reaches maximum ($ff) stop growing - here, allow it
FORCE_SYMBOL $160F noShieldGrowthVar
COMMENT_LINE $1612 each single button press (== new shield)
COMMENT_LINE $1612 the side of the base (and shield) is
COMMENT_LINE $1612 increased up 8 sides
FORCE_SYMBOL $1612 sided
FORCE_NO_SYMBOL $1616
FORCE_NO_SYMBOL $161A
FORCE_SYMBOL $161C sided
COMMENT_LINE $161F = the current maximum of possible offset values
COMMENT_LINE $161F for the n sided polygon
COMMENT_LINE $161F used in first stage shield bound-check
FORCE_NO_SYMBOL $161F
FORCE_SYMBOL $1621 maxOffsetValues
FORCE_SYMBOL $1626 currentMaxOffset
COMMENT_LINE $1629 shield scale starts of with base scale + shield width
COMMENT_LINE $1629 each round the size of the
COMMENT_LINE $1629 shield increases
COMMENT $1629 for a certain time (shield_delay tick) no further shield can be initiated after a shield collaps
FORCE_SYMBOL $1629 shield_delay
COMMENT_LINE $162C that way we can prevent the player from just shield spamming and doing nothing else
FORCE_NO_SYMBOL $1630
FORCE_SYMBOL $1632 shieldActive
COMMENT $1635 do not grow if max width is acchieved
FORCE_SYMBOL $1635 noShieldGrowthVar
COMMENT $163A growth only happens each "x" rounds (kept in shieldWidthCounter)
FORCE_SYMBOL $163A shieldWidthCounter
COMMENT $163D jump if that counter is not belwo zero
COMMENT $163F restore current growth rate to counter
FORCE_SYMBOL $163F shieldWidthGrowth
FORCE_SYMBOL $1642 shieldWidthCounter
COMMENT_LINE $1645 shieldWidth growth influences the width of the shield,
COMMENT_LINE $1645 NOT the position!
COMMENT_LINE $1645 inc shieldWidth ; increase the width of the shield
FORCE_SYMBOL $1645 shieldWidth
FORCE_SYMBOL $1648 shield_width_adder
FORCE_SYMBOL $164B shieldWidth
COMMENT_LINE $164E no the position of the shield is updated
FORCE_SYMBOL $164E shieldStart
FORCE_SYMBOL $1651 shieldSpeed
COMMENT_LINE $1654 minor increase is not
COMMENT_LINE $1654 taken into account with oscillators
COMMENT_LINE $1654 minor increase should always be lower than major increase!
COMMENT_LINE $1654 otherwise on displaying the shield
COMMENT_LINE $1654 the inner osciallator can never catch up and the shield appears to
COMMENT_LINE $1654 be greater than it actually is!
FORCE_SYMBOL $1654 shieldMinorIncreaseCounter
FORCE_SYMBOL $1659 shieldMinorIncreaseCounterReset
FORCE_SYMBOL $165C shieldMinorIncreaseCounter
FORCE_SYMBOL $165F shieldMinorIncrease
FORCE_SYMBOL $1662 shield_max
COMMENT $1665 $SHIELD_MAX_SCALE is max, if carry is set, than we have an overflow to our max,
COMMENT_LINE $1667 if outer shield stops growing we have to fix the oscilator speed
COMMENT_LINE $1667 oscillator speed is now dependend on
COMMENT_LINE $1667 a) width of shield
COMMENT_LINE $1667 b) speed of growth
FORCE_SYMBOL $1667 shieldSpeed
FORCE_SYMBOL $166A current_forth_dif
FORCE_SYMBOL $166D current_back_dif
FORCE_SYMBOL $1670 shieldWidth
FORCE_NO_SYMBOL $1673
FORCE_SYMBOL $167A current_forth_dif
FORCE_SYMBOL $167D current_back_dif
COMMENT_LINE $1680 also reduce the max to (unsigned) 255
COMMENT $1680 max the shields outer rim
FORCE_SYMBOL $1680 shield_max
FORCE_SYMBOL $1683 shieldStart
COMMENT_LINE $1686 insure width is not to big!
FORCE_SYMBOL $1686 shieldWidth
FORCE_SYMBOL $168C shieldWidth
COMMENT_LINE $168F and draw the complete shield
FORCE_SYMBOL $168F drawShield
COMMENT_LINE $1692 check all objects if they are destroyed by shield vanishing
COMMENT_LINE $1692 ..............
COMMENT $1692 when shield explodes do no auto timer adjustment!
FORCE_SYMBOL $1692 noTimerCheck
FORCE_SYMBOL $1695 SHIELD_DELAY_TICKS
FORCE_SYMBOL $1697 shield_delay
FORCE_SYMBOL $169A shieldActive
FORCE_SYMBOL $169D deadEnemies
FORCE_SYMBOL $16A0 shieldStart
COMMENT $16A3 if shield end is TO near to our base - nothing happens!
FORCE_NO_SYMBOL $16A3
COMMENT $16A5 no collision if shield is "in base"
COMMENT $16A9 load x with correct correction pointer
FORCE_SYMBOL $16A9 polygon_5_div_correction
COMMENT_LINE $16AC ldx #polygon_5_correction
FORCE_SYMBOL $16AC sided
FORCE_NO_SYMBOL $16AF
FORCE_NO_SYMBOL $16B6
FORCE_NO_SYMBOL $16BD
COMMENT_LINE $16C4 stx tmp_offset
FORCE_SYMBOL $16C4 list_objects_head
FORCE_SYMBOL $16CB onShield
COMMENT $16CF branch if a (shield inner wall) is higher or same than pos (scale) of object
FORCE_SYMBOL $16D1 NEXT_OBJECT
FORCE_SYMBOL $16D3 tmp_lastpos
FORCE_SYMBOL $16D6 exchangeToExplosion
COMMENT_LINE $16D9 ldd NEXT_OBJECT,u
COMMENT_LINE $16D9 bmi do_next_shield_check
COMMENT_LINE $16D9 jmp no_playerAction
FORCE_SYMBOL $16D9 NEXT_OBJECT
COMMENT_LINE $16DD ..............
FORCE_SYMBOL $16DD no_playerAction
COMMENT_LINE $16E0 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $16E0 u pointer to object being tested
COMMENT_LINE $16E0 relevant data in u, SCALE
COMMENT_LINE $16E0 routine tests if object hits the shield
COMMENT_LINE $16E0 return a = 0 -> no
COMMENT_LINE $16E0 return a = 1 -> yes
COMMENT_LINE $16E0 u is preserved
COMMENT_LINE $16E0 expects polygon correction table of the current shield polygon = to X
COMMENT_LINE $16E0 trying to figure out whether the current object
COMMENT_LINE $16E0 mathematically lies on the area of the shield is
COMMENT_LINE $16E0 quite bothersome - so I take a shortcut here
COMMENT_LINE $16E0 since I know the current angle of the base and the "angle" of the object
COMMENT_LINE $16E0 I can calculate the difference in angle
COMMENT_LINE $16E0 both objects are drawn with the same scale
COMMENT_LINE $16E0 knowing that the scale is actual the radius of a circle they are drawn
COMMENT_LINE $16E0 around the middle point, I only have to check whether
COMMENT_LINE $16E0 the object lies within the inner radius (scale) and the outer radius
COMMENT_LINE $16E0 (scale) of the shield
COMMENT_LINE $16E0 using a perfect circle while drawing a 5 sided polygon is
COMMENT_LINE $16E0 error prone, but since I know the angle between the objects
COMMENT_LINE $16E0 I can do some error correction to "circle" coordinates
COMMENT_LINE $16E0 to simulate a n sided polygon
COMMENT_LINE $16E0 for each sided x sided polygon slightly  different error corrections
COMMENT_LINE $16E0 are used
COMMENT_LINE $16E0 using the radius and a polygon correction I ONLY
COMMENT_LINE $16E0 have to check the scale value not even a single coordinate!
COMMENT_LINE $16E0 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $16E0 n correction values
COMMENT $16E0 this should be scale related, e.g. instead of 21 it should be ~ 1/5 of scale
COMMENT_LINE $17CB first look if current object and shield are completely out of bounds
COMMENT $17CB negative objects do not get hit by the shield
FORCE_SYMBOL $17CB TYPE
FORCE_SYMBOL $17CD TYPE_BOUNDARY
COMMENT $17D1 outer shield border
FORCE_SYMBOL $17D1 shieldStart
FORCE_NO_SYMBOL $17D4
COMMENT $17D8 a little bit wider
FORCE_SYMBOL $17D8 SHIELD_VARIANCE
COMMENT $17DA compare outer border with object position
FORCE_SYMBOL $17DA SCALE
FORCE_SYMBOL $17DC tmp_count2
COMMENT $17DF compare outer border with object position
FORCE_SYMBOL $17DF tmp_count2
COMMENT $17E2 branch if a (shield outer wall) is lower or same than pos (scale) of object
FORCE_SYMBOL $17E4 shieldWidth
COMMENT $17E7 wider (to compensate size of object and irregulatity to circle coords)
FORCE_SYMBOL $17E9 currentMaxOffset
COMMENT_LINE $17EF todo - check if below zero
COMMENT $17EF compare outer border with object position
FORCE_SYMBOL $17EF tmp_count2
COMMENT $17F2 branch if a (shield inner wall) is higher or same than pos (scale) of object
COMMENT_LINE $17F4 real checking!
COMMENT_LINE $17F4 now a more thorough check is needed
COMMENT_LINE $17F4 if the shield were a perfect circle the above should be enough
COMMENT $17F4 angle of object
FORCE_SYMBOL $17F4 ANGLE
COMMENT $17F6 angle diff = object angle - base angle
FORCE_SYMBOL $17F6 base_angle
FORCE_NO_SYMBOL $17FB
COMMENT $17FE half it (value now 0 - 360 )
COMMENT $1802 load polygone "divider" to d (72, 60, 52 or 45)
FORCE_SYMBOL $1802 sided
FORCE_NO_SYMBOL $1805
FORCE_SYMBOL $1809 FIVE_ADD
FORCE_NO_SYMBOL $180E
FORCE_SYMBOL $1812 SIX_ADD
FORCE_NO_SYMBOL $1817
FORCE_SYMBOL $181B SEVEN_ADD
FORCE_SYMBOL $1820 EIGHT_ADD
COMMENT_LINE $1825 the following does a
COMMENT_LINE $1825 angle % poly divider
COMMENT_LINE $1825 (gets the angle modulo the polygon angle)
COMMENT $1827 lea does not influence carry :-(
FORCE_NO_SYMBOL $1827
COMMENT_LINE $1830 mod done
COMMENT_LINE $1834 now in y
COMMENT_LINE $1834 is the pointer to the correction table, for circle position correction of
COMMENT_LINE $1834 our object in relation to the shield polygon
COMMENT_LINE $1834 do the above check AGAIN now with correction values present
COMMENT $1834 outer shield border
FORCE_SYMBOL $1834 shieldStart
FORCE_NO_SYMBOL $1837
COMMENT $183B a little bit wider
FORCE_SYMBOL $183B SHIELD_VARIANCE
FORCE_NO_SYMBOL $1842
FORCE_SYMBOL $1847 divi_list
COMMENT $184E compare outer border with object position
FORCE_SYMBOL $184E tmp_count2
COMMENT $1851 branch if a (shield outer wall) is lower or same than pos (scale) of object
COMMENT $1853 outer shield border
FORCE_SYMBOL $1853 shieldStart
FORCE_SYMBOL $1856 shieldWidth
COMMENT $1859 wider
FORCE_SYMBOL $1859 SHIELD_VARIANCE
COMMENT $185D wider
FORCE_SYMBOL $185D SHIELD_VARIANCE
FORCE_NO_SYMBOL $1862
FORCE_SYMBOL $1867 divi_list
COMMENT $186E compare outer border with object position
FORCE_SYMBOL $186E tmp_count2
COMMENT $1871 branch if a (shield inner wall) is higher or same than pos (scale) of object
FORCE_NO_SYMBOL $1873
COMMENT_LINE $187C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $187C draw player "home"
FORCE_SYMBOL $187C BASE_SCALE
COMMENT $187E to timer t1 (lo=
FORCE_SYMBOL $187E VIA_t1_cnt_lo
FORCE_SYMBOL $1880 buildRotatedNSidedFigure
FORCE_SYMBOL $1886 sided
FORCE_NO_SYMBOL $1889
FORCE_NO_SYMBOL $188D
FORCE_NO_SYMBOL $1891
COMMENT $18AF prepare for a simulated pulu d,x,pc
FORCE_NO_SYMBOL $18B1
FORCE_SYMBOL $18B3 entry_optimized_draw_mvlc_unloop
COMMENT_LINE $18B6 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $18B6 outer shield wall
FORCE_SYMBOL $18B6 shieldStart
COMMENT $18B9 to timer t1
FORCE_SYMBOL $18B9 VIA_t1_cnt_lo
COMMENT_LINE $18BB jsr      drawRotated
COMMENT_LINE $18BB ;;;;;;;;;;;;;;;; one draw rotated start
FORCE_SYMBOL $18BB rotList
FORCE_NO_SYMBOL $18BE
COMMENT $18C0 Store Y in D/A register
FORCE_SYMBOL $18C0 VIA_port_a
COMMENT $18C2 Blank low, zero high?
FORCE_NO_SYMBOL $18C2
FORCE_SYMBOL $18C4 VIA_cntl
COMMENT $18C7 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $18C7 VIA_port_b
COMMENT $18C9 Clear shift regigster
FORCE_SYMBOL $18C9 VIA_shift_reg
COMMENT $18CB Disable mux
FORCE_SYMBOL $18CB VIA_port_b
COMMENT $18CD Store X in D/A register
FORCE_SYMBOL $18CD VIA_port_a
COMMENT $18CF enable timer
FORCE_SYMBOL $18CF VIA_t1_cnt_hi
COMMENT $18D1 get count of vectors
FORCE_NO_SYMBOL $18D1
FORCE_SYMBOL $18D3 tmp_count2
FORCE_NO_SYMBOL $18D6
COMMENT_LINE $18D8 IN MOVE FROM DRAW START
COMMENT_LINE $18D8 inner shield wall (calc by width)
FORCE_SYMBOL $18D8 shieldStart
FORCE_SYMBOL $18DB shieldWidth
FORCE_SYMBOL $18DE shieldStart
FORCE_SYMBOL $18E1 shield_max
FORCE_NO_SYMBOL $18E6
FORCE_NO_SYMBOL $18EA
FORCE_SYMBOL $18EC innerShield
FORCE_SYMBOL $18EF shieldStart
FORCE_NO_SYMBOL $18F2
FORCE_SYMBOL $18F4 shieldWidth
FORCE_SYMBOL $18F7 innerShield
COMMENT_LINE $18FA IN MOVE FROM DRAW END
FORCE_NO_SYMBOL $18FB
FORCE_SYMBOL $18FD VIA_int_flags
COMMENT $1901 Clear shift register (blank output)
FORCE_SYMBOL $1901 VIA_shift_reg
FORCE_NO_SYMBOL $1903
COMMENT $1905 Send Y to A/D
FORCE_SYMBOL $1905 VIA_port_a
COMMENT $1907 Enable mux
FORCE_SYMBOL $1907 VIA_port_b
COMMENT $1909 Disable mux
FORCE_SYMBOL $1909 VIA_port_b
COMMENT $190B Send X to A/D
FORCE_SYMBOL $190B VIA_port_a
COMMENT $190D Shift reg=$FF (solid line), T1H=0
FORCE_NO_SYMBOL $190D
COMMENT $1910 Put pattern in shift register
FORCE_SYMBOL $1910 VIA_shift_reg
COMMENT $1912 Set T1H (scale factor?)
FORCE_SYMBOL $1912 VIA_t1_cnt_hi
COMMENT $1914 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $1914
COMMENT $1916 Point to next coordinate pair
FORCE_NO_SYMBOL $1916
COMMENT $1918 Wait for T1 to time out
FORCE_SYMBOL $1918 VIA_int_flags
COMMENT $191C Decrement line count
FORCE_SYMBOL $191C tmp_count2
COMMENT $191F Go back for more points
COMMENT $1921 Clear shift register (blank output)
FORCE_SYMBOL $1921 VIA_shift_reg
COMMENT_LINE $1923 ;;;;;;;;;;;;;;;; one draw rotated end
FORCE_NO_SYMBOL $1923
COMMENT $1925 /BLANK low and /ZERO low
FORCE_SYMBOL $1925 VIA_cntl
FORCE_SYMBOL $1927 innerShield
COMMENT $192A to timer t1
FORCE_SYMBOL $192A VIA_t1_cnt_lo
FORCE_SYMBOL $192C rotList
COMMENT_LINE $192F following lines moved out of "in move"
COMMENT_LINE $192F since zeroing for full shield was not finished!
COMMENT $192F get count of vectors
FORCE_NO_SYMBOL $192F
FORCE_SYMBOL $1931 tmp_count2
COMMENT_LINE $1934 jsr      drawRotated
COMMENT_LINE $1934 ;;;;;;;;;;;;;;;; one draw rotated start
FORCE_NO_SYMBOL $1934
COMMENT $1936 Store Y in D/A register
FORCE_SYMBOL $1936 VIA_port_a
COMMENT $1938 Blank low, zero high?
FORCE_NO_SYMBOL $1938
FORCE_SYMBOL $193A VIA_cntl
COMMENT $193D Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $193D VIA_port_b
COMMENT $193F Clear shift regigster
FORCE_SYMBOL $193F VIA_shift_reg
COMMENT $1941 Disable mux
FORCE_SYMBOL $1941 VIA_port_b
COMMENT $1943 Store X in D/A register
FORCE_SYMBOL $1943 VIA_port_a
COMMENT $1945 enable timer
FORCE_SYMBOL $1945 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $1947
COMMENT_LINE $1949 IN MOVE FROM DRAW START
COMMENT_LINE $1949 forth
FORCE_SYMBOL $1949 osc_forth
FORCE_SYMBOL $194C current_forth_dif
FORCE_SYMBOL $194F osc_forth
COMMENT_LINE $1952 does not effect carry
FORCE_SYMBOL $1954 shieldStart
FORCE_SYMBOL $1959 shieldStart
FORCE_SYMBOL $195C shieldWidth
FORCE_NO_SYMBOL $195F
FORCE_SYMBOL $1964 osc_forth
COMMENT_LINE $1967 does not effect carry
COMMENT_LINE $1967 IN MOVE FROM DRAW END
COMMENT_LINE $1967 ldb innerShield
COMMENT_LINE $1967 cmpb #1
COMMENT_LINE $1967 beq no_innerShield
FORCE_NO_SYMBOL $1968
FORCE_SYMBOL $196A VIA_int_flags
COMMENT $196E Clear shift register (blank output)
FORCE_SYMBOL $196E VIA_shift_reg
FORCE_NO_SYMBOL $1970
COMMENT $1972 Send Y to A/D
FORCE_SYMBOL $1972 VIA_port_a
COMMENT $1974 Enable mux
FORCE_SYMBOL $1974 VIA_port_b
COMMENT $1976 Disable mux
FORCE_SYMBOL $1976 VIA_port_b
COMMENT $1978 Send X to A/D
FORCE_SYMBOL $1978 VIA_port_a
COMMENT $197A Shift reg=$FF (solid line), T1H=0
FORCE_NO_SYMBOL $197A
COMMENT $197D Put pattern in shift register
FORCE_SYMBOL $197D VIA_shift_reg
COMMENT $197F Set T1H (scale factor?)
FORCE_SYMBOL $197F VIA_t1_cnt_hi
COMMENT $1981 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $1981
COMMENT $1983 Point to next coordinate pair
FORCE_NO_SYMBOL $1983
COMMENT $1985 Wait for T1 to time out
FORCE_SYMBOL $1985 VIA_int_flags
COMMENT $1989 Decrement line count
FORCE_SYMBOL $1989 tmp_count2
COMMENT $198C Go back for more points
COMMENT_LINE $198E ;;;;;;;;;;;;;;;; one draw rotated end
COMMENT_LINE $198E draw oscillators
COMMENT $198E Clear shift register (blank output)
FORCE_SYMBOL $198E VIA_shift_reg
FORCE_NO_SYMBOL $1990
COMMENT $1992 /BLANK low and /ZERO low
FORCE_SYMBOL $1992 VIA_cntl
COMMENT $1994 load current scale (of index)
FORCE_SYMBOL $1994 osc_forth
COMMENT $1997 to timer t1
FORCE_SYMBOL $1997 VIA_t1_cnt_lo
FORCE_SYMBOL $1999 rotList
COMMENT_LINE $199C following lines moved out of "in move"
COMMENT_LINE $199C since zeroing for full shield was not finished!
COMMENT $199C get count of vectors
FORCE_NO_SYMBOL $199C
FORCE_SYMBOL $199E tmp_count2
COMMENT_LINE $19A1 jsr      drawRotated
COMMENT_LINE $19A1 ;;;;;;;;;;;;;;;; one draw rotated start
FORCE_NO_SYMBOL $19A1
COMMENT $19A3 Store Y in D/A register
FORCE_SYMBOL $19A3 VIA_port_a
COMMENT $19A5 Blank low, zero high?
FORCE_NO_SYMBOL $19A5
FORCE_SYMBOL $19A7 VIA_cntl
COMMENT $19AA Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $19AA VIA_port_b
COMMENT $19AC Clear shift regigster
FORCE_SYMBOL $19AC VIA_shift_reg
COMMENT $19AE Disable mux
FORCE_SYMBOL $19AE VIA_port_b
COMMENT $19B0 Store X in D/A register
FORCE_SYMBOL $19B0 VIA_port_a
COMMENT $19B2 enable timer
FORCE_SYMBOL $19B2 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $19B4
COMMENT_LINE $19B6 IN MOVE FROM DRAW START
COMMENT_LINE $19B6 back
FORCE_SYMBOL $19B6 osc_back
FORCE_SYMBOL $19B9 current_back_dif
FORCE_SYMBOL $19BF osc_back
FORCE_SYMBOL $19C2 innerShield
FORCE_SYMBOL $19C7 shieldStart
FORCE_SYMBOL $19CA osc_back
COMMENT_LINE $19CD IN MOVE FROM DRAW END
FORCE_NO_SYMBOL $19CE
FORCE_SYMBOL $19D0 VIA_int_flags
COMMENT $19D4 Clear shift register (blank output)
FORCE_SYMBOL $19D4 VIA_shift_reg
FORCE_NO_SYMBOL $19D6
COMMENT $19D8 Send Y to A/D
FORCE_SYMBOL $19D8 VIA_port_a
COMMENT $19DA Enable mux
FORCE_SYMBOL $19DA VIA_port_b
COMMENT $19DC Disable mux
FORCE_SYMBOL $19DC VIA_port_b
COMMENT $19DE Send X to A/D
FORCE_SYMBOL $19DE VIA_port_a
COMMENT $19E0 Shift reg=$FF (solid line), T1H=0
FORCE_NO_SYMBOL $19E0
COMMENT $19E3 Put pattern in shift register
FORCE_SYMBOL $19E3 VIA_shift_reg
COMMENT $19E5 Set T1H (scale factor?)
FORCE_SYMBOL $19E5 VIA_t1_cnt_hi
COMMENT $19E7 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $19E7
COMMENT $19E9 Point to next coordinate pair
FORCE_NO_SYMBOL $19E9
COMMENT $19EB Wait for T1 to time out
FORCE_SYMBOL $19EB VIA_int_flags
COMMENT $19EF Decrement line count
FORCE_SYMBOL $19EF tmp_count2
COMMENT $19F2 Go back for more points
COMMENT_LINE $19F4 ;;;;;;;;;;;;;;;; one draw rotated end
COMMENT $19F4 Clear shift register (blank output)
FORCE_SYMBOL $19F4 VIA_shift_reg
FORCE_NO_SYMBOL $19F6
COMMENT $19F8 /BLANK low and /ZERO low
FORCE_SYMBOL $19F8 VIA_cntl
FORCE_SYMBOL $19FA osc_back
COMMENT_LINE $19FD load current scale (of index)
COMMENT $19FD to timer t1
FORCE_SYMBOL $19FD VIA_t1_cnt_lo
FORCE_SYMBOL $19FF rotList
FORCE_NO_SYMBOL $1A02
COMMENT $1A04 Store Y in D/A register
FORCE_SYMBOL $1A04 VIA_port_a
COMMENT $1A06 Blank low, zero high?
FORCE_NO_SYMBOL $1A06
FORCE_SYMBOL $1A08 VIA_cntl
COMMENT $1A0B Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $1A0B VIA_port_b
COMMENT $1A0D Clear shift regigster
FORCE_SYMBOL $1A0D VIA_shift_reg
COMMENT $1A0F Disable mux
FORCE_SYMBOL $1A0F VIA_port_b
COMMENT $1A11 Store X in D/A register
FORCE_SYMBOL $1A11 VIA_port_a
COMMENT $1A13 enable timer
FORCE_SYMBOL $1A13 VIA_t1_cnt_hi
COMMENT $1A15 get count of vectors
FORCE_NO_SYMBOL $1A15
FORCE_SYMBOL $1A17 tmp_count2
FORCE_NO_SYMBOL $1A1A
FORCE_NO_SYMBOL $1A1C
FORCE_SYMBOL $1A1E VIA_int_flags
FORCE_NO_SYMBOL $1A22
COMMENT $1A24 Send Y to A/D
FORCE_SYMBOL $1A24 VIA_port_a
COMMENT $1A26 Enable mux
FORCE_SYMBOL $1A26 VIA_port_b
COMMENT $1A28 Disable mux
FORCE_SYMBOL $1A28 VIA_port_b
COMMENT $1A2A Send X to A/D
FORCE_SYMBOL $1A2A VIA_port_a
COMMENT $1A2C Shift reg=$FF (solid line), T1H=0
FORCE_NO_SYMBOL $1A2C
COMMENT $1A2F Put pattern in shift register
FORCE_SYMBOL $1A2F VIA_shift_reg
COMMENT $1A31 Set T1H (scale factor?)
FORCE_SYMBOL $1A31 VIA_t1_cnt_hi
COMMENT $1A33 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $1A33
COMMENT $1A35 Point to next coordinate pair
FORCE_NO_SYMBOL $1A35
COMMENT $1A37 Wait for T1 to time out
FORCE_SYMBOL $1A37 VIA_int_flags
COMMENT $1A3B Clear shift register (blank output)
FORCE_SYMBOL $1A3B VIA_shift_reg
COMMENT $1A3D Decrement line count
FORCE_SYMBOL $1A3D tmp_count2
COMMENT $1A40 Go back for more points
FORCE_SYMBOL $1A42 no_playerAction
COMMENT_LINE $1A45 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1A45 builds to rotList
COMMENT_LINE $1A45 in "base_angle" the angle to "rotate" (from 0 to 720 = 2 *360) since it is a 16 bit pointer angle!
COMMENT_LINE $1A45 in "sided" the number of sides of the figure (regular figure, can be build by regular offsets in circle list)
COMMENT_LINE $1A45 move coordinate is angle in circle list
COMMENT_LINE $1A45 second and each following coordinate (n sided "add" in circle list)
COMMENT_LINE $1A45 Ydrawvector = y2-y1
COMMENT_LINE $1A45 Xdrawvector = x2-x1
COMMENT_LINE $1A45 list generated will be format:
COMMENT_LINE $1A45 db count
COMMENT_LINE $1A45 db move y,x
COMMENT_LINE $1A45 db draw y,x
COMMENT_LINE $1A45 ...
COMMENT_LINE $1A45 db draw y,x
COMMENT_LINE $1A45 times two, since angle is a "list" of 16 bit values
FORCE_SYMBOL $1A45 rotList
FORCE_SYMBOL $1A48 sided
FORCE_SYMBOL $1A4C tmp_count
COMMENT $1A4F one less, since I plan to use the last vector pos = first vector pos
FORCE_SYMBOL $1A4F tmp_count
COMMENT $1A52 count
COMMENT_LINE $1A54 seek sidedness
FORCE_NO_SYMBOL $1A54
FORCE_SYMBOL $1A58 FIVE_ADD
FORCE_NO_SYMBOL $1A5D
FORCE_SYMBOL $1A61 SIX_ADD
FORCE_NO_SYMBOL $1A66
FORCE_SYMBOL $1A6A SEVEN_ADD
FORCE_SYMBOL $1A6F EIGHT_ADD
COMMENT $1A72 add to angle for n sided polygon
FORCE_SYMBOL $1A72 tmp_add
FORCE_SYMBOL $1A75 base_angle
FORCE_SYMBOL $1A78 tmp_angle
FORCE_SYMBOL $1A7B circle
COMMENT $1A80 move
FORCE_SYMBOL $1A82 tmp_first_vector
FORCE_SYMBOL $1A85 tmp_lastpos
COMMENT_LINE $1A88 now the sided
FORCE_SYMBOL $1A88 tmp_angle
FORCE_SYMBOL $1A8B tmp_add
FORCE_SYMBOL $1A97 tmp_angle
COMMENT $1A9A a = y2, b = x2
COMMENT_LINE $1A9E now we must build the y2-y1 etc part
COMMENT $1A9E y2-y1
FORCE_SYMBOL $1A9E tmp_lastpos
COMMENT $1AA1 store y move
COMMENT $1AA3 x2-x1
COMMENT $1AA6 store x move
FORCE_SYMBOL $1AA8 tmp_lastpos
FORCE_SYMBOL $1AAC tmp_count
COMMENT_LINE $1AB1 ; ensure last vector = first vector
COMMENT $1AB1 a = y2, b = x2
FORCE_SYMBOL $1AB1 tmp_first_vector
COMMENT_LINE $1AB6 now we must build the y2-y1 etc part
COMMENT $1AB6 y2-y1
FORCE_SYMBOL $1AB6 tmp_lastpos
COMMENT $1AB9 store y move
COMMENT $1ABB x2-x1
COMMENT $1ABE store x move
COMMENT_LINE $1AC1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1AC1 exchange the object structure pointed to by U register
COMMENT_LINE $1AC1 with a new "explosion" type object
COMMENT_LINE $1AC1 expects U register to point to
COMMENT_LINE $1AC1 self and the next_object to be still relevant
COMMENT_LINE $1AC1 in general this function is "to death with you - scum"
FORCE_SYMBOL $1AC3 BEHAVIOUR
COMMENT $1AC5 check if we hit a "full life" dragon
FORCE_SYMBOL $1AC5 dragonBehaviour_full
FORCE_SYMBOL $1ACB dragonBehaviour_half
FORCE_SYMBOL $1ACE BEHAVIOUR
COMMENT $1AD0 do a first hit sound
FORCE_SYMBOL $1AD0 DragonFirstHit_Sound
FORCE_SYMBOL $1AD3 play_sfx
COMMENT $1AD8 and go out
COMMENT_LINE $1AD9 check a type "bonus" was destroyed
FORCE_SYMBOL $1AD9 TYPE_BONUS
COMMENT $1ADD if bonus was destroyed, set the counter to 0, if it is != 0 than no bonus can spawn
FORCE_NO_SYMBOL $1ADD
COMMENT $1AE0 the counter is also a flag whether a new bonus can spawn
FORCE_SYMBOL $1AE0 bonusCounter
FORCE_SYMBOL $1AE3 bonusDestroyedCounter
FORCE_SYMBOL $1AE6 csa_buf
FORCE_NO_SYMBOL $1AE9
FORCE_NO_SYMBOL $1AEC
FORCE_NO_SYMBOL $1AEE
FORCE_SYMBOL $1AF0 bonusDestroyedCounter
FORCE_SYMBOL $1AF3 tmp_count
FORCE_SYMBOL $1AF6 add_score_x
FORCE_SYMBOL $1AF9 tmp_count
FORCE_SYMBOL $1AFE bonusDestroyedCounter
FORCE_NO_SYMBOL $1B01
FORCE_NO_SYMBOL $1B05
FORCE_NO_SYMBOL $1B09
FORCE_NO_SYMBOL $1B0F
FORCE_NO_SYMBOL $1B15
FORCE_SYMBOL $1B1B Explosion_Sound
FORCE_SYMBOL $1B1E play_sfx
COMMENT $1B23 explosopn type bonus
FORCE_NO_SYMBOL $1B23
FORCE_SYMBOL $1B25 entry_otherexplosion_type
COMMENT_LINE $1B28 jmp continue_ete ;bonusDestroyed_ete
COMMENT_LINE $1B28 check a type "starlet" was destroed
FORCE_SYMBOL $1B28 TYPE_STARLET
COMMENT_LINE $1B2C if so - the starlets must be cleaned up
COMMENT_LINE $1B2C which one was destroyed there are actually 3 "different"
FORCE_SYMBOL $1B2C starletCount
FORCE_SYMBOL $1B2F I_AM_STAR_NO
FORCE_NO_SYMBOL $1B33
FORCE_SYMBOL $1B37 star_active_flag
FORCE_SYMBOL $1B3C star_active_flag
FORCE_SYMBOL $1B3F was_star_ete
FORCE_SYMBOL $1B42 star_active_flag
FORCE_SYMBOL $1B47 star_active_flag
FORCE_SYMBOL $1B4A was_star_ete
FORCE_SYMBOL $1B4D star_active_flag
FORCE_SYMBOL $1B52 star_active_flag
FORCE_SYMBOL $1B55 was_star_ete
COMMENT_LINE $1B58 each enemy has potentialy a "different" explosion type
COMMENT_LINE $1B58 that was never realized, but each enemy has different scores
COMMENT_LINE $1B58 so - there - we can still habe different explode subs :-)
FORCE_SYMBOL $1B58 TYPE_DRAGONCHILD
FORCE_SYMBOL $1B5E TYPE_DRAGON
FORCE_SYMBOL $1B62 TYPE_BOMBER
FORCE_SYMBOL $1B66 TYPE_HIDDEN_X
FORCE_SYMBOL $1B6C TYPE_HUNTER
FORCE_SYMBOL $1B70 TYPE_X
FORCE_SYMBOL $1B74 TYPE_SHOT
FORCE_SYMBOL $1B78 buildscore10
FORCE_SYMBOL $1B7B continue_ete
FORCE_SYMBOL $1B7E buildscore10
FORCE_SYMBOL $1B81 Explosion_Sound
FORCE_SYMBOL $1B84 play_sfx
FORCE_NO_SYMBOL $1B89
FORCE_SYMBOL $1B8B EXPLOSION_INTENSITY
COMMENT $1B8D explosion type shot
FORCE_NO_SYMBOL $1B8D
FORCE_SYMBOL $1B8F EXPLOSION_DATA
FORCE_SYMBOL $1B91 entry_otherexplosion_type
FORCE_SYMBOL $1B94 buildscore10
FORCE_SYMBOL $1B97 Explosion_Sound
FORCE_SYMBOL $1B9A play_sfx
COMMENT $1B9F explosion type X
FORCE_NO_SYMBOL $1B9F
FORCE_SYMBOL $1BA1 EXPLOSION_DATA
FORCE_SYMBOL $1BA5 buildscore18
FORCE_SYMBOL $1BA8 Explosion_Sound
FORCE_SYMBOL $1BAB play_sfx
COMMENT $1BB0 explosopn type bomber
FORCE_NO_SYMBOL $1BB0
COMMENT_LINE $1BB4 if a dragon is destroyed - he must tell its children
FORCE_SYMBOL $1BB4 CHILD_1
COMMENT $1BB6 0 means child is dead already - jump
FORCE_SYMBOL $1BB8 dragonchildFreeBehaviour
FORCE_SYMBOL $1BBB BEHAVIOUR
FORCE_NO_SYMBOL $1BBD
FORCE_SYMBOL $1BC0 DRAGON
COMMENT $1BC2 ame for second child
FORCE_SYMBOL $1BC2 CHILD_2
FORCE_SYMBOL $1BC6 dragonchildFreeBehaviour
FORCE_SYMBOL $1BC9 BEHAVIOUR
FORCE_NO_SYMBOL $1BCB
FORCE_SYMBOL $1BCE DRAGON
FORCE_SYMBOL $1BD0 buildscore18
FORCE_SYMBOL $1BD3 Explosion_Sound
FORCE_SYMBOL $1BD6 play_sfx
COMMENT $1BDB explosopn type dragon
FORCE_NO_SYMBOL $1BDB
FORCE_SYMBOL $1BE1 Explosion_Sound
FORCE_SYMBOL $1BE4 play_sfx
COMMENT $1BE9 explosopn type hunter
FORCE_NO_SYMBOL $1BE9
FORCE_SYMBOL $1BEF Explosion_Sound
FORCE_SYMBOL $1BF2 play_sfx
COMMENT_LINE $1BF7 dragon children must tell their parent that they were destroyed (pointer to 0)
COMMENT_LINE $1BF7 freeParent
FORCE_NO_SYMBOL $1BF7
FORCE_SYMBOL $1BFA DRAGON
COMMENT $1BFC if parent is already 0 - han we don't tell anyone we are dead - we just ARE
COMMENT $1BFE check - am I child 1
FORCE_SYMBOL $1BFE CHILD_1
COMMENT $1C01 if not jump - I am obviously child 2 :-)
FORCE_SYMBOL $1C03 CHILD_1
FORCE_SYMBOL $1C07 CHILD_2
FORCE_SYMBOL $1C09 buildscore10
COMMENT $1C0E remember how many enemies died, we use thhis for score multiplication (up to 3 times)
FORCE_SYMBOL $1C0E deadEnemies
COMMENT_LINE $1C11 now start the actual explosion
FORCE_SYMBOL $1C11 Explosion_Sound
FORCE_SYMBOL $1C14 play_sfx
FORCE_NO_SYMBOL $1C19
COMMENT $1C1B remember how many enemies died, we use thhis for score multiplication (up to 3 times)
FORCE_SYMBOL $1C1B deadEnemies
FORCE_SYMBOL $1C1E explosionBehaviour
FORCE_SYMBOL $1C22 BEHAVIOUR
FORCE_SYMBOL $1C25 EXPLOSION_TYPE
COMMENT_LINE $1C27 check how many objects are left
COMMENT_LINE $1C27 if not many objects left - check how many explosions are active
COMMENT_LINE $1C27 if the first is low and the second hi
COMMENT_LINE $1C27 we do not show more explosions - saving some objects
COMMENT_LINE $1C27 to display scores instead of explosions
FORCE_SYMBOL $1C27 object_count
COMMENT $1C2A object count high?
FORCE_SYMBOL $1C2E explosionActiveCounter
COMMENT $1C31 explosions high?
FORCE_NO_SYMBOL $1C31
COMMENT $1C37 no we remove the explosins befor its starts - and save space for scores
FORCE_SYMBOL $1C37 removeObject_rts
FORCE_NO_SYMBOL $1C3C
FORCE_NO_SYMBOL $1C3E
COMMENT $1C42 go back to the shield "check"
FORCE_SYMBOL $1C42 backfromExplosionRemove
FORCE_SYMBOL $1C45 Explosion_Sound
FORCE_SYMBOL $1C48 play_sfx
COMMENT $1C4D explosion star type
FORCE_NO_SYMBOL $1C4D
COMMENT_LINE $1C51 explosion is really defenitly ok now
COMMENT_LINE $1C51 so exchange the object with an explosion object
COMMENT_LINE $1C51 reuse of the object that just got killed
FORCE_SYMBOL $1C51 EXPLOSION_SCALE
FORCE_SYMBOL $1C53 explosionActiveCounter
COMMENT_LINE $1C57 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1C57 scores are built in respect to their names
COMMENT_LINE $1C57 it is taken into account the count of enemies destroyed by the shield
COMMENT_LINE $1C57 the score gets multiplied by 1, 2 or 3 accordingly (not more tho)
COMMENT_LINE $1C57 score vectorlists of dead ships are explicit vectorlists
COMMENT_LINE $1C57 in opposite to the scores generated by the starlets
COMMENT_LINE $1C57 #score15
FORCE_SYMBOL $1C57 deadEnemies
FORCE_NO_SYMBOL $1C5C
FORCE_SYMBOL $1C60 score_buf
FORCE_NO_SYMBOL $1C63
FORCE_NO_SYMBOL $1C66
FORCE_NO_SYMBOL $1C68
FORCE_NO_SYMBOL $1C6A
FORCE_SYMBOL $1C6C add_score_x
FORCE_SYMBOL $1C6F score45
FORCE_SYMBOL $1C76 score_buf
FORCE_NO_SYMBOL $1C79
FORCE_NO_SYMBOL $1C7C
FORCE_NO_SYMBOL $1C7E
FORCE_SYMBOL $1C80 add_score_x
FORCE_SYMBOL $1C83 score30
FORCE_SYMBOL $1C8A score_buf
FORCE_NO_SYMBOL $1C8D
FORCE_NO_SYMBOL $1C90
FORCE_NO_SYMBOL $1C92
FORCE_NO_SYMBOL $1C94
FORCE_SYMBOL $1C96 add_score_x
FORCE_SYMBOL $1C99 score15
COMMENT_LINE $1CA0 #score10
FORCE_SYMBOL $1CA0 deadEnemies
FORCE_NO_SYMBOL $1CA5
FORCE_SYMBOL $1CA9 score_buf
FORCE_NO_SYMBOL $1CAC
FORCE_NO_SYMBOL $1CAF
FORCE_NO_SYMBOL $1CB1
FORCE_SYMBOL $1CB3 add_score_x
FORCE_SYMBOL $1CB6 score30
FORCE_SYMBOL $1CBD score_buf
FORCE_NO_SYMBOL $1CC0
FORCE_NO_SYMBOL $1CC3
FORCE_NO_SYMBOL $1CC5
FORCE_SYMBOL $1CC7 add_score_x
FORCE_SYMBOL $1CCA score20
FORCE_SYMBOL $1CD1 score_buf
FORCE_NO_SYMBOL $1CD4
FORCE_NO_SYMBOL $1CD7
FORCE_NO_SYMBOL $1CD9
FORCE_SYMBOL $1CDB add_score_x
FORCE_SYMBOL $1CDE score10
FORCE_SYMBOL $1CE5 newObject
FORCE_SYMBOL $1CEC CURRENT_LIST
COMMENT_LINE $1CEE copy interesting things from y to u
FORCE_SYMBOL $1CEE Y_POS
FORCE_SYMBOL $1CF0 Y_POS
FORCE_SYMBOL $1CF2 X_POS
FORCE_SYMBOL $1CF4 X_POS
FORCE_SYMBOL $1CF6 ANGLE
FORCE_SYMBOL $1CF8 ANGLE
FORCE_SYMBOL $1CFA SCALE
FORCE_SYMBOL $1CFC SCALE
FORCE_SYMBOL $1CFE scoreBehaviour
FORCE_SYMBOL $1D01 BEHAVIOUR
FORCE_SYMBOL $1D03 SCORE_COUNTDOWN
FORCE_NO_SYMBOL $1D06
COMMENT_LINE $1D09 #score18
FORCE_SYMBOL $1D09 deadEnemies
FORCE_NO_SYMBOL $1D0E
FORCE_SYMBOL $1D12 score_buf
FORCE_NO_SYMBOL $1D15
FORCE_NO_SYMBOL $1D18
FORCE_NO_SYMBOL $1D1A
FORCE_NO_SYMBOL $1D1C
FORCE_SYMBOL $1D1E add_score_x
FORCE_SYMBOL $1D21 score54
FORCE_SYMBOL $1D28 score_buf
FORCE_NO_SYMBOL $1D2B
FORCE_NO_SYMBOL $1D2E
FORCE_NO_SYMBOL $1D30
FORCE_NO_SYMBOL $1D32
FORCE_SYMBOL $1D34 add_score_x
FORCE_SYMBOL $1D37 score36
FORCE_SYMBOL $1D3E score_buf
FORCE_NO_SYMBOL $1D41
FORCE_NO_SYMBOL $1D44
FORCE_NO_SYMBOL $1D46
FORCE_NO_SYMBOL $1D48
FORCE_SYMBOL $1D4A add_score_x
FORCE_SYMBOL $1D4D score18
COMMENT_LINE $1D54 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1D54 score x builds the score from the starlets
COMMENT_LINE $1D54 this scores are represented by the digits which are displayed
COMMENT_LINE $1D54 seperately, the csa scores are used to build those vectorlists
COMMENT_LINE $1D54 each starlet has its own (csa) score RAM
COMMENT $0000 times 4
COMMENT $0000 add the csa score starting RAM address
COMMENT $0000 and put the sum to x
COMMENT_LINE $1D56 first calculate the csa score position for this star
COMMENT_LINE $1D56 check which star is "active"
COMMENT_LINE $1D56 for easier math the csa score occupies 4 digits instead of the needed 3
COMMENT_LINE $1D56 the vectorlists (0 skips a digit) to the three digits are determined below and stored in the
COMMENT_LINE $1D56 scoreX object structure for direct access
COMMENT_LINE $1D56 during the object behaviour
COMMENT $1D59 times 4
COMMENT $1D5A add the csa score starting RAM address
FORCE_SYMBOL $1D5A star_0_score
COMMENT $1D5D and put the sum to x
COMMENT $1D5F and add the (csa) score that is referenced from X to the players score
FORCE_SYMBOL $1D5F add_score_x
COMMENT_LINE $1D62 build new object
COMMENT $1D64 destroys u
FORCE_SYMBOL $1D64 newObject
COMMENT_LINE $1D69 copy interesting things from y to u
FORCE_SYMBOL $1D6B Y_POS
FORCE_SYMBOL $1D6F X_POS
FORCE_SYMBOL $1D73 ANGLE
FORCE_SYMBOL $1D77 SCALE
COMMENT $1D7C times 4
COMMENT $1D7D add the csa score starting RAM address
FORCE_SYMBOL $1D7D star_0_score
COMMENT $1D80 and put the sum to x
COMMENT $1D82 list of pointers to number vectorlists
FORCE_SYMBOL $1D82 NumberList
COMMENT_LINE $1D86 in x now pointer to lowest csa score
COMMENT $1D86 get current csa score digit
COMMENT $1D88 times two, since vectorlist pointer is WORD not BYTE
COMMENT $1D89 if its a zero skip it (leading zero of 3 digits is always skipped)
COMMENT $1D8B get the digit vectorlist
COMMENT $1D8F skipping means 0
FORCE_NO_SYMBOL $1D8F
COMMENT $1D92 and store as vectorlist of 3rd digit
FORCE_SYMBOL $1D92 SCORE_POINTER_3
COMMENT $1D94 get current csa score digit
COMMENT $1D96 times two, since vectorlist pointer is WORD not BYTE
COMMENT_LINE $1D97 draw 0 tens when a hundred is drawn!
COMMENT $1D97 if != 0 than draw defenitly
COMMENT $1D99 if 0 we test if the 3rd digits was also 3, in that case we have two leading zeros - only one digit must be displayed
COMMENT $1D9B if zero - than jump
COMMENT $1D9D get the digit vectorlist
COMMENT $1DA1 skipping means 0
FORCE_NO_SYMBOL $1DA1
COMMENT $1DA4 and store as vectorlist of 2rd digit
FORCE_SYMBOL $1DA4 SCORE_POINTER_2
COMMENT $1DA6 get current csa score digit
COMMENT $1DA8 times two, since vectorlist pointer is WORD not BYTE
COMMENT $1DA9 lowest digit is always displayed - no further testing
COMMENT $1DAB and store as vectorlist of 1st digit
FORCE_SYMBOL $1DAB SCORE_POINTER_1
FORCE_SYMBOL $1DAD scoreXBehaviour
FORCE_SYMBOL $1DB0 BEHAVIOUR
COMMENT $1DB2 countdown set to zero - if countdown reaches "max" than the score stops being displayed
FORCE_SYMBOL $1DB2 SCORE_COUNTDOWN
COMMENT_LINE $1DB5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1DB5 initialize all game vars with sensible dfault values
COMMENT_LINE $1DB5 this can probably be optimized... no further comments tho
FORCE_NO_SYMBOL $1DB5
FORCE_SYMBOL $1DB8 phase_count
FORCE_SYMBOL $1DBB star_swirl
FORCE_SYMBOL $1DBE currentScroller
FORCE_SYMBOL $1DC1 starFieldCounter
FORCE_SYMBOL $1DC4 nextMusic
FORCE_SYMBOL $1DC7 object_count
FORCE_SYMBOL $1DCA bonusCounter
FORCE_SYMBOL $1DCD explosionActiveCounter
FORCE_SYMBOL $1DD0 spawn_count
FORCE_SYMBOL $1DD3 shield_delay
FORCE_SYMBOL $1DD6 RecalCounter
FORCE_SYMBOL $1DD9 star_active_flag
FORCE_SYMBOL $1DDC player_score_5
FORCE_SYMBOL $1DDF player_score_3
FORCE_SYMBOL $1DE2 player_score_1
FORCE_SYMBOL $1DE8 starletCount
FORCE_SYMBOL $1DEB base_angle
FORCE_SYMBOL $1DEE currentSFX_3
FORCE_SYMBOL $1DF1 currentSFX_2
FORCE_SYMBOL $1DF4 currentSFX_1
FORCE_SYMBOL $1DF7 sfx_pointer_3
FORCE_SYMBOL $1DFA sfx_pointer_2
FORCE_SYMBOL $1DFD sfx_pointer_1
FORCE_SYMBOL $1E00 sfx_status_3
FORCE_SYMBOL $1E03 sfx_status_1
FORCE_SYMBOL $1E06 bonusDestroyedCounter
COMMENT $1E09 store a known current button state
FORCE_SYMBOL $1E09 current_button_state
FORCE_SYMBOL $1E0C last_button_state
FORCE_SYMBOL $1E0F bonusActiveType
FORCE_SYMBOL $1E13 bonusIconMoveScale
FORCE_NO_SYMBOL $1E16
FORCE_SYMBOL $1E19 scrollBlinkAdd
FORCE_SYMBOL $1E1C sided
FORCE_SYMBOL $1E1F SPAWN_MAX_SCALE_INIT
FORCE_SYMBOL $1E21 spawn_max
FORCE_SYMBOL $1E24 SHIELD_MAX_SCALE_INIT
FORCE_SYMBOL $1E26 shield_max
FORCE_SYMBOL $1E29 INITIAL_EXPLOSION_MAX
FORCE_SYMBOL $1E2B explosionMax
FORCE_SYMBOL $1E2E INITIAL_SCORE_DISPLAY_TIME
FORCE_SYMBOL $1E30 score_display_time
FORCE_SYMBOL $1E33 FASTEST_SPAWN_RATE
FORCE_SYMBOL $1E35 min_spawn_reset
FORCE_SYMBOL $1E38 MAXIMUM_RESET_INCREASE_SLOWDOWN
FORCE_SYMBOL $1E3A max_spawn_increase_delay
FORCE_SYMBOL $1E3D INITIAL_STARFIELD_MAX
FORCE_SYMBOL $1E3F starfield_max
FORCE_NO_SYMBOL $1E42
FORCE_SYMBOL $1E45 demo_blink_Counter
FORCE_SYMBOL $1E48 scrollBlink
FORCE_SYMBOL $1E4B scrollIntensity
FORCE_SYMBOL $1E4E demo_Intensity
FORCE_SYMBOL $1E51 emptyStreamInMove
FORCE_SYMBOL $1E54 inMovePointer
COMMENT $1E57 spawn timer
FORCE_SYMBOL $1E57 INITIAL_SPAWN_RESET_TIMER
FORCE_SYMBOL $1E59 spawn_reset
FORCE_SYMBOL $1E5C spawn_timer
FORCE_SYMBOL $1E5F INITIAL_SPAWN_INCREASE_DELAY
FORCE_SYMBOL $1E61 spawnRest_Counter
FORCE_SYMBOL $1E64 spawn_increase_delay
FORCE_SYMBOL $1E67 spawn_increase_delay
COMMENT_LINE $1E6A initialize the empty object list
COMMENT_LINE $1E6A depending on what "phase" we initialize for (title, score or game) - the return address of our
COMMENT_LINE $1E6A object list is set
FORCE_SYMBOL $1E6A phaseList
FORCE_SYMBOL $1E6D initialPhase
FORCE_NO_SYMBOL $1E73
FORCE_SYMBOL $1E76 phase_count
FORCE_SYMBOL $1E7B initialPhase
FORCE_NO_SYMBOL $1E7E
FORCE_SYMBOL $1E80 initPhase
FORCE_SYMBOL $1E83 MAX_OBJECTS
FORCE_SYMBOL $1E85 object_list
FORCE_SYMBOL $1E88 list_empty_head
COMMENT $1E8B one less?
FORCE_SYMBOL $1E8B PC_MAIN
FORCE_SYMBOL $1E8F return_state
COMMENT $1E94 one less?
FORCE_SYMBOL $1E94 PC_TITLE
FORCE_NO_SYMBOL $1E98
COMMENT $1E9C one less?
FORCE_SYMBOL $1E9C PC_SCORE
FORCE_SYMBOL $1EA0 ObjectStruct
FORCE_SYMBOL $1EA3 NEXT_OBJECT
FORCE_NO_SYMBOL $1EA5
FORCE_SYMBOL $1EAA NEXT_OBJECT
FORCE_SYMBOL $1EAD list_objects_head
FORCE_SYMBOL $1EB1 list_objects_tail
COMMENT_LINE $1EB6 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1EB6 Button 1-4
COMMENT_LINE $1EB6 returns in B the current button state in relation to last button state
COMMENT_LINE $1EB6 bit 0 represents current button state
COMMENT_LINE $1EB6 bit 1 last button state
COMMENT_LINE $1EB6 1 = pressed
COMMENT_LINE $1EB6 0 = not pressed
COMMENT_LINE $1EB6 in a state of current button 1-4
COMMENT_LINE $1EB6 bit == 0 = pressed
COMMENT_LINE $1EB6 bit == 1 = not pressed
COMMENT_LINE $1EB6 a = xxxx 0000
COMMENT_LINE $1EB6 4321 - buttons
COMMENT_LINE $1EB6 save last states, and shift the old current one bit
COMMENT_LINE $1EB6 query buttons from psg
COMMENT_LINE $1EB6 do an own "Random"
COMMENT_LINE $1EB6 some stupd calcs...
COMMENT_LINE $1EB6 everything is faster than "jsr random"
COMMENT $1EB6 counter that gets increased every "round" in wait recal
FORCE_SYMBOL $1EB6 RecalCounterLow
FORCE_SYMBOL $1EB9 RecalCounterLow
FORCE_NO_SYMBOL $1EBC
FORCE_SYMBOL $1EC0 RecalCounterHi
FORCE_SYMBOL $1EC3 current_button_state
FORCE_SYMBOL $1EC6 my_random
FORCE_SYMBOL $1ECA my_random
FORCE_SYMBOL $1ECF RecalCounterHi
FORCE_SYMBOL $1ED2 current_button_state
FORCE_SYMBOL $1ED5 my_random2
FORCE_SYMBOL $1ED9 my_random2
COMMENT_LINE $1EDC random done
COMMENT $1EDC Sound chip register 0E to port A
FORCE_NO_SYMBOL $1EDC
FORCE_SYMBOL $1EDE VIA_port_a
COMMENT $1EE0 sound BDIR on, BC1 on, mux off
FORCE_NO_SYMBOL $1EE0
COMMENT $1EE3 VIA Port B = 99, mux disabled, RAMP disabled, BC1/BDIR = 11 (Latch address)
FORCE_SYMBOL $1EE3 VIA_port_b
COMMENT $1EE5 pause
COMMENT $1EE6 VIA Port B = 81, mux disabled, RAMP disabled, BC1/BDIR = 00 (PSG inactive)
FORCE_SYMBOL $1EE6 VIA_port_b
COMMENT $1EE8 DDR A to input
FORCE_SYMBOL $1EE8 VIA_DDR_a
COMMENT $1EEA sound BDIR off, BC1 on, mux off
FORCE_NO_SYMBOL $1EEA
COMMENT $1EED VIA Port B = 89, mux disabled, RAMP disabled, BC1/BDIR = 01 (PSG Read)
FORCE_SYMBOL $1EED VIA_port_b
COMMENT $1EEF pause
COMMENT $1EF0 Read buttons
FORCE_SYMBOL $1EF0 VIA_port_a
COMMENT $1EF2 VIA Port B = 81, mux disabled, RAMP disabled, BC1/BDIR = 00 (PSG inactive)
FORCE_SYMBOL $1EF2 VIA_port_b
FORCE_NO_SYMBOL $1EF4
COMMENT $1EF6 DDR A to output
FORCE_SYMBOL $1EF6 VIA_DDR_a
COMMENT_LINE $1EF8 query done, in A current button state directly from psg
FORCE_SYMBOL $1EF8 current_button_state
FORCE_SYMBOL $1EFB last_button_state
COMMENT $1EFF only joystick 1
FORCE_NO_SYMBOL $1EFF
FORCE_NO_SYMBOL $1F01
FORCE_SYMBOL $1F06 current_button_state
FORCE_NO_SYMBOL $1F09
COMMENT_LINE $1F0C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $1F0C bonus time of current level (phase)
FORCE_SYMBOL $1F0C bonusActiveTime
FORCE_SYMBOL $1F0F bonusDestroyedCounter
FORCE_NO_SYMBOL $1F12
COMMENT $1F15 clear csa counter (which is displayed via vectorlist digits)
FORCE_SYMBOL $1F15 bonus_time_1
COMMENT_LINE $1F18 loop thru all "seconds"
COMMENT_LINE $1F18 the counter will be active
COMMENT_LINE $1F18 to = the round counter correctly
COMMENT_LINE $1F18 and the csa "score" digits of the timer that is displayed in the middle of our home
COMMENT $1F18 50 = 1 second - this will be the "round" tick countdown
FORCE_NO_SYMBOL $1F18
COMMENT $1F1B this is the actual "seconds" csa counter (see above), lower digit
FORCE_SYMBOL $1F1B bonus_time_0
FORCE_SYMBOL $1F1E bonus_time_0
COMMENT $1F21 if digit rollover
FORCE_NO_SYMBOL $1F21
COMMENT $1F25 on rollover - set to 0
FORCE_SYMBOL $1F25 bonus_time_0
COMMENT $1F28 increase 2nd digit of seconds counter (csa)
FORCE_SYMBOL $1F28 bonus_time_1
COMMENT $1F2C loop
COMMENT $1F2E actual round "ticks" collected 50 * seconds
FORCE_SYMBOL $1F2E bonusCounter
COMMENT_LINE $1F31 actually initialize bonus, first what bonus to chose?
COMMENT_LINE $1F31 random number 0-4; numbers represent the actual bonus, 0 is shield - shield is twice as often as other bonus
FORCE_SYMBOL $1F31 my_random2
FORCE_NO_SYMBOL $1F34
FORCE_NO_SYMBOL $1F37
FORCE_SYMBOL $1F3B BONUS_TYPE_SHIELD
FORCE_SYMBOL $1F3D bonusActiveType
FORCE_SYMBOL $1F40 BONUS_TYPE_FASTER
FORCE_SYMBOL $1F44 BONUS_TYPE_EXPAND
FORCE_SYMBOL $1F48 BONUS_TYPE_SHIELD
COMMENT_LINE $1F4C below tweak according to bonus the
COMMENT_LINE $1F4C paremeters of shield generation (or "blocking")
FORCE_NO_SYMBOL $1F4C
FORCE_SYMBOL $1F4E bonusIconMoveScale
FORCE_SYMBOL $1F51 BonusShieldList
FORCE_SYMBOL $1F54 bonusIconList
COMMENT $1F59 more with each adder
FORCE_SYMBOL $1F59 shieldSpeed
COMMENT_LINE $1F5C we also enlargen the width adder, otherwise the width would (alltogether) be smaller
COMMENT $1F5C more with each adder
FORCE_SYMBOL $1F5C shield_width_adder
COMMENT_LINE $1F5F 2,x db       SHIELD_DEFAULT_SPEED ;2 shield major speed ; update every tick, must be in sum greater than minor increase
FORCE_NO_SYMBOL $1F5F
FORCE_SYMBOL $1F61 bonusIconMoveScale
FORCE_SYMBOL $1F64 BonusFasterList
FORCE_SYMBOL $1F67 bonusIconList
COMMENT_LINE $1F6C 1,x shieldWidthGrowth SHIELD_WIDTH_GROWTH_DEFAULT  =  4                         ; 2 up ; grow shield width every x ticks with speed (counter)
COMMENT_LINE $1F6C 5,x shield_width_adder INITIAL_SHIELD_WIDTH_ADDER  =  1                          ; 1-4 WIDTH OF SHIELD increase (strength)
COMMENT_LINE $1F6C lsr      shieldWidthGrowth            ; faster width change
COMMENT_LINE $1F6C lsl      shield_width_adder           ; more with each adder
FORCE_NO_SYMBOL $1F6C
FORCE_SYMBOL $1F6E shieldWidthGrowth
FORCE_SYMBOL $1F71 shieldSpeed
COMMENT $1F74 more with each adder
FORCE_SYMBOL $1F74 shield_width_adder
COMMENT_LINE $1F77 ldb #1
FORCE_SYMBOL $1F77 bonusIconMoveScale
FORCE_SYMBOL $1F7A BonusExpandList
FORCE_SYMBOL $1F7D bonusIconList
COMMENT_LINE $1F82 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1F82 exchanges the "?" that was coming our way - to the actual "timer" object displayed inside our base
FORCE_SYMBOL $1F82 timerObject
FORCE_NO_SYMBOL $1F85
FORCE_SYMBOL $1F87 SCALE
FORCE_SYMBOL $1F89 bonus_time_1
COMMENT $1F8E y,x pos 2 number timer
FORCE_NO_SYMBOL $1F8E
COMMENT $1F93 y,x pos 1 number timer
FORCE_NO_SYMBOL $1F93
FORCE_SYMBOL $1F96 Y_POS
FORCE_SYMBOL $1F98 X_POS
FORCE_NO_SYMBOL $1F9A
FORCE_SYMBOL $1F9C SECOND_COUNTER
FORCE_SYMBOL $1F9E timerBehaviour
FORCE_SYMBOL $1FA1 BEHAVIOUR
COMMENT_LINE $1FA3 in case bonus is below 10 s, than init the vectorlist from here
COMMENT $1FA3 list of pointers to number vectorlists
FORCE_SYMBOL $1FA3 NumberList
FORCE_SYMBOL $1FA7 bonus_time_0
COMMENT $1FAA times two
FORCE_SYMBOL $1FAD CURRENT_LIST
FORCE_SYMBOL $1FAF BonusGot_Sound
FORCE_SYMBOL $1FB2 play_sfx
COMMENT_LINE $1FB5 ldu u_offset1+NEXT_OBJECT,u ; preload next user stack
FORCE_SYMBOL $1FB5 removeObject
COMMENT $1FB8 list of pointers to number vectorlists
FORCE_SYMBOL $1FB8 PacmanSmall_0
COMMENT $1FBC 1 = PACMAN
FORCE_NO_SYMBOL $1FBC
FORCE_NO_SYMBOL $1FBE
COMMENT $1FC3 list of pointers to number vectorlists
FORCE_SYMBOL $1FC3 WormSmall_0
COMMENT $1FC7 2 = WORM
FORCE_NO_SYMBOL $1FC7
FORCE_NO_SYMBOL $1FC9
COMMENT $1FCE list of pointers to number vectorlists
FORCE_SYMBOL $1FCE GhostSmall_0
COMMENT $1FD2 3 = GHOST
FORCE_NO_SYMBOL $1FD2
FORCE_NO_SYMBOL $1FD4
FORCE_SYMBOL $1FD7 timerObject
COMMENT $1FDA type of bonus
COMMENT $1FDC anim countdown
FORCE_NO_SYMBOL $1FDC
FORCE_NO_SYMBOL $1FE4
FORCE_SYMBOL $1FE6 SCALE
COMMENT_LINE $1FEA ldd      #$e0e0                       ; y,x pos 1 number timer
FORCE_SYMBOL $1FEA Y_POS
FORCE_SYMBOL $1FEC X_POS
FORCE_SYMBOL $1FEE gimmikBehaviour
FORCE_SYMBOL $1FF1 BEHAVIOUR
FORCE_NO_SYMBOL $1FF3
FORCE_SYMBOL $1FF5 SECOND_COUNTER
FORCE_SYMBOL $1FF7 continue_ete
COMMENT_LINE $1FFA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $1FFA for now this is only reached when an object "hits" the base
COMMENT $1FFA is there an active shield?
FORCE_SYMBOL $1FFA bonusActiveType
FORCE_SYMBOL $1FFD BONUS_TYPE_SHIELD
COMMENT $1FFF if so jump to not game over
COMMENT $2001 are we actually in "demo" mode?
FORCE_SYMBOL $2001 demo_mode
COMMENT $2004 if so we are also not dead
COMMENT $2006 we just remove the object - and carry on
FORCE_SYMBOL $2006 removeObject
COMMENT $2009 same if invincible
COMMENT $2009 make sure ramping is disabled
FORCE_NO_SYMBOL $2009
COMMENT $200C disable ramping
FORCE_SYMBOL $200C VIA_t1_cnt_lo
COMMENT $200E and we go to zero
FORCE_NO_SYMBOL $200E
COMMENT $2010 /BLANK low and /ZERO low
FORCE_SYMBOL $2010 VIA_cntl
COMMENT $2012 display game over animation
FORCE_SYMBOL $2012 doGameOver
COMMENT_LINE $2015 test for hight score
COMMENT_LINE $2015 high score tabel
COMMENT_LINE $2015 etc
COMMENT $2015 test highscore
FORCE_SYMBOL $2015 test_highscore
COMMENT $2018 result in a
COMMENT $2019 if negative - no score
COMMENT $201B if positive in a place we acchieved - go to the hs editor
FORCE_SYMBOL $201B edit_highscore
FORCE_SYMBOL $2021 highScoreBlock
FORCE_SYMBOL $2024 current_eprom_blocksize
COMMENT $2027 and save the newly claimed highscore to eprom / VecFever
FORCE_SYMBOL $2027 eeprom_save_highscore
COMMENT $202A set state of object generator to 1 (title)
FORCE_NO_SYMBOL $202A
FORCE_SYMBOL $202C return_state
COMMENT $202F init that
FORCE_SYMBOL $202F initGame
COMMENT $2032 set a button status - so that a possible pressed button does not DIRECTLY start a new game
FORCE_NO_SYMBOL $2032
FORCE_SYMBOL $2034 last_button_state
FORCE_SYMBOL $2037 current_button_state
COMMENT $203A and go back
FORCE_SYMBOL $203A backFromDemo
COMMENT $203D remove shield active flag
FORCE_SYMBOL $203D bonusActiveType
COMMENT $2040 next round bonus gets deecreased to 0 - and a new bonus can spawen again
FORCE_NO_SYMBOL $2040
FORCE_SYMBOL $2043 bonusCounter
COMMENT $2046 remove the enemy that hit us - and "jump" back
FORCE_SYMBOL $2046 removeObject
COMMENT_LINE $2049 ***************************************************************************
COMMENT_LINE $2049 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $2049 this file is part of Release, written by Malban in 2017
COMMENT_LINE $2049 ***************************************************************************
COMMENT_LINE $2049 DATA SECTION
COMMENT_LINE $2049 ***************************************************************************
COMMENT_LINE $2049 VLMode Lists
COMMENT $2049 mode, y, x
COMMENT $204C mode, y, x
COMMENT $204F mode, y, x
COMMENT $2052 mode, y, x
COMMENT $2055 mode, y, x
COMMENT $2058 mode, y, x
COMMENT $205B mode, y, x
COMMENT $205E mode, y, x
COMMENT $2061 mode, y, x
COMMENT $2064 mode, y, x
COMMENT $2067 mode, y, x
COMMENT $206A mode, y, x
COMMENT $206D endmarker (1)
COMMENT $206E mode, y, x
COMMENT $2071 mode, y, x
COMMENT $2074 mode, y, x
COMMENT $2077 mode, y, x
COMMENT $207A mode, y, x
COMMENT $207D mode, y, x
COMMENT $2080 mode, y, x
COMMENT $2083 mode, y, x
COMMENT $2086 endmarker (1)
COMMENT $2087 mode, y, x
COMMENT $208A mode, y, x
COMMENT $208D mode, y, x
COMMENT $2090 mode, y, x
COMMENT $2093 mode, y, x
COMMENT $2096 mode, y, x
COMMENT $2099 endmarker (1)
COMMENT $209A mode, y, x
COMMENT $209D mode, y, x
COMMENT $20A0 mode, y, x
COMMENT $20A3 mode, y, x
COMMENT $20A6 endmarker (1)
COMMENT $20A7 mode, y, x
COMMENT $20AA mode, y, x
COMMENT $20AD mode, y, x
COMMENT $20B0 mode, y, x
COMMENT $20B3 endmarker (1)
COMMENT $20B4 mode, y, x
COMMENT $20B7 mode, y, x
COMMENT $20BA mode, y, x
COMMENT $20BD mode, y, x
COMMENT $20C0 endmarker (1)
COMMENT $20C1 mode, y, x
COMMENT $20C4 mode, y, x
COMMENT $20C7 mode, y, x
COMMENT $20CA mode, y, x
COMMENT $20CD endmarker (1)
COMMENT $20CE mode, y, x
COMMENT $20D1 mode, y, x
COMMENT $20D4 mode, y, x
COMMENT $20D7 mode, y, x
COMMENT $20DA endmarker (1)
COMMENT $20DB mode, y, x
COMMENT $20DE mode, y, x
COMMENT $20E1 mode, y, x
COMMENT $20E4 mode, y, x
COMMENT $20E7 mode, y, x
COMMENT $20EA mode, y, x
COMMENT $20ED mode, y, x
COMMENT $20F0 endmarker (1)
COMMENT $20F1 mode, y, x
COMMENT $20F4 mode, y, x
COMMENT $20F7 mode, y, x
COMMENT $20FA mode, y, x
COMMENT $20FD mode, y, x
COMMENT $2100 mode, y, x
COMMENT $2103 mode, y, x
COMMENT $2106 endmarker (1)
COMMENT $2107 mode, y, x
COMMENT $210A mode, y, x
COMMENT $210D mode, y, x
COMMENT $2110 mode, y, x
COMMENT $2113 mode, y, x
COMMENT $2116 mode, y, x
COMMENT $2119 endmarker (1)
COMMENT $211A mode, y, x
COMMENT $211D mode, y, x
COMMENT $2120 mode, y, x
COMMENT $2123 mode, y, x
COMMENT $2126 mode, y, x
COMMENT $2129 mode, y, x
COMMENT $212C mode, y, x
COMMENT $212F mode, y, x
COMMENT $2132 endmarker (1)
COMMENT $2133 mode, y, x
COMMENT $2136 mode, y, x
COMMENT $2139 mode, y, x
COMMENT $213C mode, y, x
COMMENT $213F mode, y, x
COMMENT $2142 mode, y, x
COMMENT $2145 mode, y, x
COMMENT $2148 mode, y, x
COMMENT $214B mode, y, x
COMMENT $214E endmarker (1)
COMMENT $214F mode, y, x
COMMENT $2152 mode, y, x
COMMENT $2155 mode, y, x
COMMENT $2158 mode, y, x
COMMENT $215B mode, y, x
COMMENT $215E mode, y, x
COMMENT $2161 mode, y, x
COMMENT $2164 mode, y, x
COMMENT $2167 mode, y, x
COMMENT $216A mode, y, x
COMMENT $216D endmarker (1)
COMMENT $216E mode, y, x
COMMENT $2171 mode, y, x
COMMENT $2174 mode, y, x
COMMENT $2177 mode, y, x
COMMENT $217A mode, y, x
COMMENT $217D mode, y, x
COMMENT $2180 mode, y, x
COMMENT $2183 mode, y, x
COMMENT $2186 mode, y, x
COMMENT $2189 endmarker (1)
COMMENT $218A mode, y, x
COMMENT $218D mode, y, x
COMMENT $2190 mode, y, x
COMMENT $2193 mode, y, x
COMMENT $2196 mode, y, x
COMMENT $2199 mode, y, x
COMMENT $219C mode, y, x
COMMENT $219F mode, y, x
COMMENT $21A2 mode, y, x
COMMENT $21A5 mode, y, x
COMMENT $21A8 endmarker (1)
COMMENT $21A9 mode, y, x
COMMENT $21AC mode, y, x
COMMENT $21AF mode, y, x
COMMENT $21B2 mode, y, x
COMMENT $21B5 mode, y, x
COMMENT $21B8 mode, y, x
COMMENT $21BB mode, y, x
COMMENT $21BE mode, y, x
COMMENT $21C1 mode, y, x
COMMENT $21C4 mode, y, x
COMMENT $21C7 endmarker (1)
COMMENT $21C8 list of all single vectorlists in this
COMMENT $21DC mode, y, x
COMMENT $21DF mode, y, x
COMMENT $21E2 mode, y, x
COMMENT $21E5 mode, y, x
COMMENT $21E8 mode, y, x
COMMENT $21EB endmarker (1)
COMMENT $21EC +$4C ; mode, y, x
COMMENT $21EF mode, y, x
COMMENT $21F2 +$33 ; mode, y, x
COMMENT $21F5 endmarker (1)
COMMENT $21F6 mode, y, x
COMMENT $21F9 mode, y, x
COMMENT $21FC mode, y, x
COMMENT $21FF mode, y, x
COMMENT $2202 mode, y, x
COMMENT $2205 endmarker (1)
COMMENT $2206 mode, y, x
COMMENT $2209 mode, y, x
COMMENT $220C mode, y, x
COMMENT $220F mode, y, x
COMMENT $2212 mode, y, x
COMMENT $2215 endmarker (1)
COMMENT $2216 move to y, x
COMMENT $2219 mode, y, x
COMMENT $221C mode, y, x
COMMENT $221F mode, y, x
COMMENT $2222 mode, y, x
COMMENT $2225 mode, y, x
COMMENT $2228 endmarker (1)
COMMENT $2229 mode, y, x
COMMENT $222C mode, y, x
COMMENT $222F mode, y, x
COMMENT $2232 mode, y, x
COMMENT $2235 mode, y, x
COMMENT $2238 mode, y, x
COMMENT $223B endmarker (1)
COMMENT $223C mode, y, x
COMMENT $223F mode, y, x
COMMENT $2242 mode, y, x
COMMENT $2245 mode, y, x
COMMENT $2248 mode, y, x
COMMENT $224B mode, y, x
COMMENT $224E endmarker (1)
COMMENT $224F mode, y, x
COMMENT $2252 mode, y, x
COMMENT $2255 mode, y, x
COMMENT $2258 endmarker (1)
COMMENT $2259 mode, y, x
COMMENT $225C mode, y, x
COMMENT $225F mode, y, x
COMMENT $2262 mode, y, x
COMMENT $2265 mode, y, x
COMMENT $2268 endmarker (1)
COMMENT $2269 mode, y, x
COMMENT $226C mode, y, x
COMMENT $226F mode, y, x
COMMENT $2272 mode, y, x
COMMENT $2275 mode, y, x
COMMENT $2278 mode, y, x
COMMENT $227B endmarker (1)
COMMENT $227C list of all single vectorlists in this
COMMENT $22AE draw to y, x
COMMENT $22B0 draw to y, x
COMMENT $22B2 draw to y, x
COMMENT $22B4 draw to y, x
COMMENT $22B8 draw to y, x
COMMENT $22BA draw to y, x
COMMENT $22BC draw to y, x
COMMENT $22BE draw to y, x
COMMENT $22C2 draw to y, x
COMMENT $22C4 draw to y, x
COMMENT $22C6 draw to y, x
COMMENT $22C8 draw to y, x
COMMENT $22CC draw to y, x
COMMENT $22CE draw to y, x
COMMENT $22D0 draw to y, x
COMMENT $22D2 draw to y, x
COMMENT $22D6 draw to y, x
COMMENT $22D8 draw to y, x
COMMENT $22DA draw to y, x
COMMENT $22DC draw to y, x
COMMENT $22E0 draw to y, x
COMMENT $22E2 draw to y, x
COMMENT $22E4 draw to y, x
COMMENT $22E6 draw to y, x
COMMENT $22EA draw to y, x
COMMENT $22EC draw to y, x
COMMENT $22EE draw to y, x
COMMENT $22F0 draw to y, x
COMMENT $22F4 draw to y, x
COMMENT $22F6 draw to y, x
COMMENT $22F8 draw to y, x
COMMENT $22FA draw to y, x
COMMENT $22FE draw to y, x
COMMENT $2300 draw to y, x
COMMENT $2302 draw to y, x
COMMENT $2304 draw to y, x
COMMENT $2308 draw to y, x
COMMENT $230A draw to y, x
COMMENT $230C draw to y, x
COMMENT $230E draw to y, x
COMMENT $2312 draw to y, x
COMMENT $2314 draw to y, x
COMMENT $2316 draw to y, x
COMMENT $2318 draw to y, x
COMMENT $231C draw to y, x
COMMENT $231E draw to y, x
COMMENT $2320 draw to y, x
COMMENT $2322 draw to y, x
COMMENT $2326 draw to y, x
COMMENT $2328 draw to y, x
COMMENT $232A draw to y, x
COMMENT $232C draw to y, x
COMMENT $2330 draw to y, x
COMMENT $2332 draw to y, x
COMMENT $2334 draw to y, x
COMMENT $2336 draw to y, x
COMMENT $233A draw to y, x
COMMENT $233C draw to y, x
COMMENT $233E draw to y, x
COMMENT $2340 draw to y, x
COMMENT $2344 draw to y, x
COMMENT $2346 draw to y, x
COMMENT $2348 draw to y, x
COMMENT $234A draw to y, x
COMMENT $234E draw to y, x
COMMENT $2350 draw to y, x
COMMENT $2352 draw to y, x
COMMENT $2354 draw to y, x
COMMENT $2358 draw to y, x
COMMENT $235A draw to y, x
COMMENT $235C draw to y, x
COMMENT $235E draw to y, x
COMMENT $2362 draw to y, x
COMMENT $2364 draw to y, x
COMMENT $2366 draw to y, x
COMMENT $2368 draw to y, x
COMMENT $236C draw to y, x
COMMENT $236E draw to y, x
COMMENT $2370 draw to y, x
COMMENT $2372 draw to y, x
COMMENT $2376 draw to y, x
COMMENT $2378 draw to y, x
COMMENT $237A draw to y, x
COMMENT $237C draw to y, x
COMMENT $2380 draw to y, x
COMMENT $2382 draw to y, x
COMMENT $2384 draw to y, x
COMMENT $2386 draw to y, x
COMMENT $238A draw to y, x
COMMENT $238C draw to y, x
COMMENT $238E draw to y, x
COMMENT $2390 draw to y, x
COMMENT $2394 draw to y, x
COMMENT $2396 draw to y, x
COMMENT $2398 draw to y, x
COMMENT $239A draw to y, x
COMMENT_LINE $239C Starlet list
COMMENT_LINE $239C count
COMMENT_LINE $239C move y,x
COMMENT_LINE $239C data y,x ...
COMMENT $239C list of all single vectorlists in this
COMMENT $23A6 draw to y, x
COMMENT $23A8 draw to y, x
COMMENT $23AA draw to y, x
COMMENT $23AC draw to y, x
COMMENT $23AE draw to y, x
COMMENT $23B2 draw to y, x
COMMENT $23B4 draw to y, x
COMMENT $23B6 draw to y, x
COMMENT $23B8 draw to y, x
COMMENT $23BA draw to y, x
COMMENT $23BE draw to y, x
COMMENT $23C0 draw to y, x
COMMENT $23C2 draw to y, x
COMMENT $23C4 draw to y, x
COMMENT $23C6 draw to y, x
COMMENT $23CA draw to y, x
COMMENT $23CC draw to y, x
COMMENT $23CE draw to y, x
COMMENT $23D0 draw to y, x
COMMENT $23D2 draw to y, x
COMMENT_LINE $23D4 Starlet list
COMMENT_LINE $23D4 count
COMMENT_LINE $23D4 move y,x
COMMENT_LINE $23D4 data y,x ...
COMMENT $23D4 list of all single vectorlists in this
COMMENT $23EC draw to y, x
COMMENT $23EE draw to y, x
COMMENT $23F0 draw to y, x
COMMENT $23F2 draw to y, x
COMMENT $23F4 draw to y, x
COMMENT $23F6 draw to y, x
COMMENT $23F8 draw to y, x
COMMENT $23FA draw to y, x
COMMENT $23FC draw to y, x
COMMENT $23FE draw to y, x
COMMENT $2400 draw to y, x
COMMENT $2404 draw to y, x
COMMENT $2406 draw to y, x
COMMENT $2408 draw to y, x
COMMENT $240A draw to y, x
COMMENT $240C draw to y, x
COMMENT $240E draw to y, x
COMMENT $2410 draw to y, x
COMMENT $2412 draw to y, x
COMMENT $2414 draw to y, x
COMMENT $2416 draw to y, x
COMMENT $2418 draw to y, x
COMMENT $241C draw to y, x
COMMENT $241E draw to y, x
COMMENT $2420 draw to y, x
COMMENT $2422 draw to y, x
COMMENT $2424 draw to y, x
COMMENT $2426 draw to y, x
COMMENT $2428 draw to y, x
COMMENT $242A draw to y, x
COMMENT $242C draw to y, x
COMMENT $242E draw to y, x
COMMENT $2430 draw to y, x
COMMENT $2434 draw to y, x
COMMENT $2436 draw to y, x
COMMENT $2438 draw to y, x
COMMENT $243A draw to y, x
COMMENT $243C draw to y, x
COMMENT $243E draw to y, x
COMMENT $2440 draw to y, x
COMMENT $2442 draw to y, x
COMMENT $2444 draw to y, x
COMMENT $2446 draw to y, x
COMMENT $2448 draw to y, x
COMMENT $244C draw to y, x
COMMENT $244E draw to y, x
COMMENT $2450 draw to y, x
COMMENT $2452 draw to y, x
COMMENT $2454 draw to y, x
COMMENT $2456 draw to y, x
COMMENT $2458 draw to y, x
COMMENT $245A draw to y, x
COMMENT $245C draw to y, x
COMMENT $245E draw to y, x
COMMENT $2460 draw to y, x
COMMENT $2464 draw to y, x
COMMENT $2466 draw to y, x
COMMENT $2468 draw to y, x
COMMENT $246A draw to y, x
COMMENT $246C draw to y, x
COMMENT $246E draw to y, x
COMMENT $2470 draw to y, x
COMMENT $2472 draw to y, x
COMMENT $2474 draw to y, x
COMMENT $2476 draw to y, x
COMMENT $2478 draw to y, x
COMMENT $247C draw to y, x
COMMENT $247E draw to y, x
COMMENT $2480 draw to y, x
COMMENT $2482 draw to y, x
COMMENT $2484 draw to y, x
COMMENT $2486 draw to y, x
COMMENT $2488 draw to y, x
COMMENT $248A draw to y, x
COMMENT $248C draw to y, x
COMMENT $248E draw to y, x
COMMENT $2490 draw to y, x
COMMENT $2494 draw to y, x
COMMENT $2496 draw to y, x
COMMENT $2498 draw to y, x
COMMENT $249A draw to y, x
COMMENT $249C draw to y, x
COMMENT $249E draw to y, x
COMMENT $24A0 draw to y, x
COMMENT $24A2 draw to y, x
COMMENT $24A4 draw to y, x
COMMENT $24A6 draw to y, x
COMMENT $24A8 draw to y, x
COMMENT $24AC draw to y, x
COMMENT $24AE draw to y, x
COMMENT $24B0 draw to y, x
COMMENT $24B2 draw to y, x
COMMENT $24B4 draw to y, x
COMMENT $24B6 draw to y, x
COMMENT $24B8 draw to y, x
COMMENT $24BA draw to y, x
COMMENT $24BC draw to y, x
COMMENT $24BE draw to y, x
COMMENT $24C0 draw to y, x
COMMENT $24C4 draw to y, x
COMMENT $24C6 draw to y, x
COMMENT $24C8 draw to y, x
COMMENT $24CA draw to y, x
COMMENT $24CC draw to y, x
COMMENT $24CE draw to y, x
COMMENT $24D0 draw to y, x
COMMENT $24D2 draw to y, x
COMMENT $24D4 draw to y, x
COMMENT $24D6 draw to y, x
COMMENT $24D8 draw to y, x
COMMENT $24DC draw to y, x
COMMENT $24DE draw to y, x
COMMENT $24E0 draw to y, x
COMMENT $24E2 draw to y, x
COMMENT $24E4 draw to y, x
COMMENT $24E6 draw to y, x
COMMENT $24E8 draw to y, x
COMMENT $24EA draw to y, x
COMMENT $24EC draw to y, x
COMMENT $24EE draw to y, x
COMMENT $24F0 draw to y, x
COMMENT $24F2 list of all single vectorlists in this
COMMENT $2506 draw to y, x
COMMENT $2508 draw to y, x
COMMENT $250A draw to y, x
COMMENT $250C draw to y, x
COMMENT $250E draw to y, x
COMMENT $2510 draw to y, x
COMMENT $2512 draw to y, x
COMMENT $2514 draw to y, x
COMMENT $2516 draw to y, x
COMMENT $251A draw to y, x
COMMENT $251C draw to y, x
COMMENT $251E draw to y, x
COMMENT $2520 draw to y, x
COMMENT $2522 draw to y, x
COMMENT $2524 draw to y, x
COMMENT $2526 draw to y, x
COMMENT $2528 draw to y, x
COMMENT $252A draw to y, x
COMMENT $252E draw to y, x
COMMENT $2530 draw to y, x
COMMENT $2532 draw to y, x
COMMENT $2534 draw to y, x
COMMENT $2536 draw to y, x
COMMENT $2538 draw to y, x
COMMENT $253A draw to y, x
COMMENT $253C draw to y, x
COMMENT $253E draw to y, x
COMMENT $2542 draw to y, x
COMMENT $2544 draw to y, x
COMMENT $2546 draw to y, x
COMMENT $2548 draw to y, x
COMMENT $254A draw to y, x
COMMENT $254C draw to y, x
COMMENT $254E draw to y, x
COMMENT $2550 draw to y, x
COMMENT $2552 draw to y, x
COMMENT $2556 draw to y, x
COMMENT $2558 draw to y, x
COMMENT $255A draw to y, x
COMMENT $255C draw to y, x
COMMENT $255E draw to y, x
COMMENT $2560 draw to y, x
COMMENT $2562 draw to y, x
COMMENT $2564 draw to y, x
COMMENT $2566 draw to y, x
COMMENT $256A draw to y, x
COMMENT $256C draw to y, x
COMMENT $256E draw to y, x
COMMENT $2570 draw to y, x
COMMENT $2572 draw to y, x
COMMENT $2574 draw to y, x
COMMENT $2576 draw to y, x
COMMENT $2578 draw to y, x
COMMENT $257A draw to y, x
COMMENT $257E draw to y, x
COMMENT $2580 draw to y, x
COMMENT $2582 draw to y, x
COMMENT $2584 draw to y, x
COMMENT $2586 draw to y, x
COMMENT $2588 draw to y, x
COMMENT $258A draw to y, x
COMMENT $258C draw to y, x
COMMENT $258E draw to y, x
COMMENT $2592 draw to y, x
COMMENT $2594 draw to y, x
COMMENT $2596 draw to y, x
COMMENT $2598 draw to y, x
COMMENT $259A draw to y, x
COMMENT $259C draw to y, x
COMMENT $259E draw to y, x
COMMENT $25A0 draw to y, x
COMMENT $25A2 draw to y, x
COMMENT $25A6 draw to y, x
COMMENT $25A8 draw to y, x
COMMENT $25AA draw to y, x
COMMENT $25AC draw to y, x
COMMENT $25AE draw to y, x
COMMENT $25B0 draw to y, x
COMMENT $25B2 draw to y, x
COMMENT $25B4 draw to y, x
COMMENT $25B6 draw to y, x
COMMENT $25BA draw to y, x
COMMENT $25BC draw to y, x
COMMENT $25BE draw to y, x
COMMENT $25C0 draw to y, x
COMMENT $25C2 list of all single vectorlists in this
COMMENT $25E4 mode, y, x
COMMENT $25E7 mode, y, x
COMMENT $25EA mode, y, x
COMMENT $25ED mode, y, x
COMMENT $25F0 mode, y, x
COMMENT $25F3 mode, y, x
COMMENT $25F6 mode, y, x
COMMENT $25F9 endmarker (1)
COMMENT $25FA mode, y, x
COMMENT $25FD mode, y, x
COMMENT $2600 mode, y, x
COMMENT $2603 mode, y, x
COMMENT $2606 mode, y, x
COMMENT $2609 mode, y, x
COMMENT $260C mode, y, x
COMMENT $260F endmarker (1)
COMMENT $2610 mode, y, x
COMMENT $2613 mode, y, x
COMMENT $2616 mode, y, x
COMMENT $2619 mode, y, x
COMMENT $261C mode, y, x
COMMENT $261F mode, y, x
COMMENT $2622 mode, y, x
COMMENT $2625 endmarker (1)
COMMENT $2626 mode, y, x
COMMENT $2629 mode, y, x
COMMENT $262C mode, y, x
COMMENT $262F mode, y, x
COMMENT $2632 mode, y, x
COMMENT $2635 mode, y, x
COMMENT $2638 mode, y, x
COMMENT $263B endmarker (1)
COMMENT $263C mode, y, x
COMMENT $263F mode, y, x
COMMENT $2642 mode, y, x
COMMENT $2645 mode, y, x
COMMENT $2648 mode, y, x
COMMENT $264B mode, y, x
COMMENT $264E mode, y, x
COMMENT $2651 endmarker (1)
COMMENT $2652 mode, y, x
COMMENT $2655 mode, y, x
COMMENT $2658 mode, y, x
COMMENT $265B mode, y, x
COMMENT $265E mode, y, x
COMMENT $2661 mode, y, x
COMMENT $2664 mode, y, x
COMMENT $2667 endmarker (1)
COMMENT $2668 mode, y, x
COMMENT $266B mode, y, x
COMMENT $266E mode, y, x
COMMENT $2671 mode, y, x
COMMENT $2674 mode, y, x
COMMENT $2677 mode, y, x
COMMENT $267A mode, y, x
COMMENT $267D endmarker (1)
COMMENT $267E mode, y, x
COMMENT $2681 mode, y, x
COMMENT $2684 mode, y, x
COMMENT $2687 mode, y, x
COMMENT $268A mode, y, x
COMMENT $268D mode, y, x
COMMENT $2690 mode, y, x
COMMENT $2693 endmarker (1)
COMMENT $2694 mode, y, x
COMMENT $2697 mode, y, x
COMMENT $269A mode, y, x
COMMENT $269D mode, y, x
COMMENT $26A0 mode, y, x
COMMENT $26A3 mode, y, x
COMMENT $26A6 mode, y, x
COMMENT $26A9 endmarker (1)
COMMENT $26AA mode, y, x
COMMENT $26AD mode, y, x
COMMENT $26B0 mode, y, x
COMMENT $26B3 mode, y, x
COMMENT $26B6 mode, y, x
COMMENT $26B9 mode, y, x
COMMENT $26BC mode, y, x
COMMENT $26BF endmarker (1)
COMMENT $26C0 mode, y, x
COMMENT $26C3 mode, y, x
COMMENT $26C6 mode, y, x
COMMENT $26C9 mode, y, x
COMMENT $26CC mode, y, x
COMMENT $26CF mode, y, x
COMMENT $26D2 mode, y, x
COMMENT $26D5 endmarker (1)
COMMENT $26D6 mode, y, x
COMMENT $26D9 mode, y, x
COMMENT $26DC mode, y, x
COMMENT $26DF mode, y, x
COMMENT $26E2 mode, y, x
COMMENT $26E5 mode, y, x
COMMENT $26E8 mode, y, x
COMMENT $26EB endmarker (1)
COMMENT $26EC mode, y, x
COMMENT $26EF mode, y, x
COMMENT $26F2 mode, y, x
COMMENT $26F5 mode, y, x
COMMENT $26F8 mode, y, x
COMMENT $26FB mode, y, x
COMMENT $26FE mode, y, x
COMMENT $2701 endmarker (1)
COMMENT $2702 mode, y, x
COMMENT $2705 mode, y, x
COMMENT $2708 mode, y, x
COMMENT $270B mode, y, x
COMMENT $270E mode, y, x
COMMENT $2711 mode, y, x
COMMENT $2714 mode, y, x
COMMENT $2717 endmarker (1)
COMMENT $2718 mode, y, x
COMMENT $271B mode, y, x
COMMENT $271E mode, y, x
COMMENT $2721 mode, y, x
COMMENT $2724 mode, y, x
COMMENT $2727 mode, y, x
COMMENT $272A mode, y, x
COMMENT $272D endmarker (1)
COMMENT $272E mode, y, x
COMMENT $2731 mode, y, x
COMMENT $2734 mode, y, x
COMMENT $2737 mode, y, x
COMMENT $273A mode, y, x
COMMENT $273D mode, y, x
COMMENT $2740 mode, y, x
COMMENT $2743 endmarker (1)
COMMENT $2744 mode, y, x
COMMENT $2747 mode, y, x
COMMENT $274A mode, y, x
COMMENT $274D mode, y, x
COMMENT $2750 mode, y, x
COMMENT $2753 mode, y, x
COMMENT $2756 mode, y, x
COMMENT $2759 endmarker (1)
COMMENT_LINE $275A ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $275A circle generated 0°-360° in 360 steps (cos, -sin), radius: 108
COMMENT_LINE $275A if radius is greater a 5 sided polygon has sides longer than 127!
COMMENT $275A degrees: 0°
COMMENT $275C degrees: 1°
COMMENT $275E degrees: 2°
COMMENT $2760 degrees: 3°
COMMENT $2762 degrees: 4°
COMMENT $2764 degrees: 5°
COMMENT $2766 degrees: 6°
COMMENT $2768 degrees: 7°
COMMENT $276A degrees: 8°
COMMENT $276C degrees: 9°
COMMENT $276E degrees: 10°
COMMENT $2770 degrees: 11°
COMMENT $2772 degrees: 12°
COMMENT $2774 degrees: 13°
COMMENT $2776 degrees: 14°
COMMENT $2778 degrees: 15°
COMMENT $277A degrees: 16°
COMMENT $277C degrees: 17°
COMMENT $277E degrees: 18°
COMMENT $2780 degrees: 19°
COMMENT $2782 degrees: 20°
COMMENT $2784 degrees: 21°
COMMENT $2786 degrees: 22°
COMMENT $2788 degrees: 23°
COMMENT $278A degrees: 24°
COMMENT $278C degrees: 25°
COMMENT $278E degrees: 26°
COMMENT $2790 degrees: 27°
COMMENT $2792 degrees: 28°
COMMENT $2794 degrees: 29°
COMMENT $2796 degrees: 30°
COMMENT $2798 degrees: 31°
COMMENT $279A degrees: 32°
COMMENT $279C degrees: 33°
COMMENT $279E degrees: 34°
COMMENT $27A0 degrees: 35°
COMMENT $27A2 degrees: 36°
COMMENT $27A4 degrees: 37°
COMMENT $27A6 degrees: 38°
COMMENT $27A8 degrees: 39°
COMMENT $27AA degrees: 40°
COMMENT $27AC degrees: 41°
COMMENT $27AE degrees: 42°
COMMENT $27B0 degrees: 43°
COMMENT $27B2 degrees: 44°
COMMENT $27B4 degrees: 45°
COMMENT $27B6 degrees: 46°
COMMENT $27B8 degrees: 47°
COMMENT $27BA degrees: 48°
COMMENT $27BC degrees: 49°
COMMENT $27BE degrees: 50°
COMMENT $27C0 degrees: 51°
COMMENT $27C2 degrees: 52°
COMMENT $27C4 degrees: 53°
COMMENT $27C6 degrees: 54°
COMMENT $27C8 degrees: 55°
COMMENT $27CA degrees: 56°
COMMENT $27CC degrees: 57°
COMMENT $27CE degrees: 58°
COMMENT $27D0 degrees: 59°
COMMENT $27D2 degrees: 60°
COMMENT $27D4 degrees: 61°
COMMENT $27D6 degrees: 62°
COMMENT $27D8 degrees: 63°
COMMENT $27DA degrees: 64°
COMMENT $27DC degrees: 65°
COMMENT $27DE degrees: 66°
COMMENT $27E0 degrees: 67°
COMMENT $27E2 degrees: 68°
COMMENT $27E4 degrees: 69°
COMMENT $27E6 degrees: 70°
COMMENT $27E8 degrees: 71°
COMMENT $27EA degrees: 72°
COMMENT $27EC degrees: 73°
COMMENT $27EE degrees: 74°
COMMENT $27F0 degrees: 75°
COMMENT $27F2 degrees: 76°
COMMENT $27F4 degrees: 77°
COMMENT $27F6 degrees: 78°
COMMENT $27F8 degrees: 79°
COMMENT $27FA degrees: 80°
COMMENT $27FC degrees: 81°
COMMENT $27FE degrees: 82°
COMMENT $2800 degrees: 83°
COMMENT $2802 degrees: 84°
COMMENT $2804 degrees: 85°
COMMENT $2806 degrees: 86°
COMMENT $2808 degrees: 87°
COMMENT $280A degrees: 88°
COMMENT $280C degrees: 89°
COMMENT $280E degrees: 90°
COMMENT $2810 degrees: 91°
COMMENT $2812 degrees: 92°
COMMENT $2814 degrees: 93°
COMMENT $2816 degrees: 94°
COMMENT $2818 degrees: 95°
COMMENT $281A degrees: 96°
COMMENT $281C degrees: 97°
COMMENT $281E degrees: 98°
COMMENT $2820 degrees: 99°
COMMENT $2822 degrees: 100°
COMMENT $2824 degrees: 101°
COMMENT $2826 degrees: 102°
COMMENT $2828 degrees: 103°
COMMENT $282A degrees: 104°
COMMENT $282C degrees: 105°
COMMENT $282E degrees: 106°
COMMENT $2830 degrees: 107°
COMMENT $2832 degrees: 108°
COMMENT $2834 degrees: 109°
COMMENT $2836 degrees: 110°
COMMENT $2838 degrees: 111°
COMMENT $283A degrees: 112°
COMMENT $283C degrees: 113°
COMMENT $283E degrees: 114°
COMMENT $2840 degrees: 115°
COMMENT $2842 degrees: 116°
COMMENT $2844 degrees: 117°
COMMENT $2846 degrees: 118°
COMMENT $2848 degrees: 119°
COMMENT $284A degrees: 120°
COMMENT $284C degrees: 121°
COMMENT $284E degrees: 122°
COMMENT $2850 degrees: 123°
COMMENT $2852 degrees: 124°
COMMENT $2854 degrees: 125°
COMMENT $2856 degrees: 126°
COMMENT $2858 degrees: 127°
COMMENT $285A degrees: 128°
COMMENT $285C degrees: 129°
COMMENT $285E degrees: 130°
COMMENT $2860 degrees: 131°
COMMENT $2862 degrees: 132°
COMMENT $2864 degrees: 133°
COMMENT $2866 degrees: 134°
COMMENT $2868 degrees: 135°
COMMENT $286A degrees: 136°
COMMENT $286C degrees: 137°
COMMENT $286E degrees: 138°
COMMENT $2870 degrees: 139°
COMMENT $2872 degrees: 140°
COMMENT $2874 degrees: 141°
COMMENT $2876 degrees: 142°
COMMENT $2878 degrees: 143°
COMMENT $287A degrees: 144°
COMMENT $287C degrees: 145°
COMMENT $287E degrees: 146°
COMMENT $2880 degrees: 147°
COMMENT $2882 degrees: 148°
COMMENT $2884 degrees: 149°
COMMENT $2886 degrees: 150°
COMMENT $2888 degrees: 151°
COMMENT $288A degrees: 152°
COMMENT $288C degrees: 153°
COMMENT $288E degrees: 154°
COMMENT $2890 degrees: 155°
COMMENT $2892 degrees: 156°
COMMENT $2894 degrees: 157°
COMMENT $2896 degrees: 158°
COMMENT $2898 degrees: 159°
COMMENT $289A degrees: 160°
COMMENT $289C degrees: 161°
COMMENT $289E degrees: 162°
COMMENT $28A0 degrees: 163°
COMMENT $28A2 degrees: 164°
COMMENT $28A4 degrees: 165°
COMMENT $28A6 degrees: 166°
COMMENT $28A8 degrees: 167°
COMMENT $28AA degrees: 168°
COMMENT $28AC degrees: 169°
COMMENT $28AE degrees: 170°
COMMENT $28B0 degrees: 171°
COMMENT $28B2 degrees: 172°
COMMENT $28B4 degrees: 173°
COMMENT $28B6 degrees: 174°
COMMENT $28B8 degrees: 175°
COMMENT $28BA degrees: 176°
COMMENT $28BC degrees: 177°
COMMENT $28BE degrees: 178°
COMMENT $28C0 degrees: 179°
COMMENT $28C2 degrees: 180°
COMMENT $28C4 degrees: 181°
COMMENT $28C6 degrees: 182°
COMMENT $28C8 degrees: 183°
COMMENT $28CA degrees: 184°
COMMENT $28CC degrees: 185°
COMMENT $28CE degrees: 186°
COMMENT $28D0 degrees: 187°
COMMENT $28D2 degrees: 188°
COMMENT $28D4 degrees: 189°
COMMENT $28D6 degrees: 190°
COMMENT $28D8 degrees: 191°
COMMENT $28DA degrees: 192°
COMMENT $28DC degrees: 193°
COMMENT $28DE degrees: 194°
COMMENT $28E0 degrees: 195°
COMMENT $28E2 degrees: 196°
COMMENT $28E4 degrees: 197°
COMMENT $28E6 degrees: 198°
COMMENT $28E8 degrees: 199°
COMMENT $28EA degrees: 200°
COMMENT $28EC degrees: 201°
COMMENT $28EE degrees: 202°
COMMENT $28F0 degrees: 203°
COMMENT $28F2 degrees: 204°
COMMENT $28F4 degrees: 205°
COMMENT $28F6 degrees: 206°
COMMENT $28F8 degrees: 207°
COMMENT $28FA degrees: 208°
COMMENT $28FC degrees: 209°
COMMENT $28FE degrees: 210°
COMMENT $2900 degrees: 211°
COMMENT $2902 degrees: 212°
COMMENT $2904 degrees: 213°
COMMENT $2906 degrees: 214°
COMMENT $2908 degrees: 215°
COMMENT $290A degrees: 216°
COMMENT $290C degrees: 217°
COMMENT $290E degrees: 218°
COMMENT $2910 degrees: 219°
COMMENT $2912 degrees: 220°
COMMENT $2914 degrees: 221°
COMMENT $2916 degrees: 222°
COMMENT $2918 degrees: 223°
COMMENT $291A degrees: 224°
COMMENT $291C degrees: 225°
COMMENT $291E degrees: 226°
COMMENT $2920 degrees: 227°
COMMENT $2922 degrees: 228°
COMMENT $2924 degrees: 229°
COMMENT $2926 degrees: 230°
COMMENT $2928 degrees: 231°
COMMENT $292A degrees: 232°
COMMENT $292C degrees: 233°
COMMENT $292E degrees: 234°
COMMENT $2930 degrees: 235°
COMMENT $2932 degrees: 236°
COMMENT $2934 degrees: 237°
COMMENT $2936 degrees: 238°
COMMENT $2938 degrees: 239°
COMMENT $293A degrees: 240°
COMMENT $293C degrees: 241°
COMMENT $293E degrees: 242°
COMMENT $2940 degrees: 243°
COMMENT $2942 degrees: 244°
COMMENT $2944 degrees: 245°
COMMENT $2946 degrees: 246°
COMMENT $2948 degrees: 247°
COMMENT $294A degrees: 248°
COMMENT $294C degrees: 249°
COMMENT $294E degrees: 250°
COMMENT $2950 degrees: 251°
COMMENT $2952 degrees: 252°
COMMENT $2954 degrees: 253°
COMMENT $2956 degrees: 254°
COMMENT $2958 degrees: 255°
COMMENT $295A degrees: 256°
COMMENT $295C degrees: 257°
COMMENT $295E degrees: 258°
COMMENT $2960 degrees: 259°
COMMENT $2962 degrees: 260°
COMMENT $2964 degrees: 261°
COMMENT $2966 degrees: 262°
COMMENT $2968 degrees: 263°
COMMENT $296A degrees: 264°
COMMENT $296C degrees: 265°
COMMENT $296E degrees: 266°
COMMENT $2970 degrees: 267°
COMMENT $2972 degrees: 268°
COMMENT $2974 degrees: 269°
COMMENT $2976 degrees: 270°
COMMENT $2978 degrees: 271°
COMMENT $297A degrees: 272°
COMMENT $297C degrees: 273°
COMMENT $297E degrees: 274°
COMMENT $2980 degrees: 275°
COMMENT $2982 degrees: 276°
COMMENT $2984 degrees: 277°
COMMENT $2986 degrees: 278°
COMMENT $2988 degrees: 279°
COMMENT $298A degrees: 280°
COMMENT $298C degrees: 281°
COMMENT $298E degrees: 282°
COMMENT $2990 degrees: 283°
COMMENT $2992 degrees: 284°
COMMENT $2994 degrees: 285°
COMMENT $2996 degrees: 286°
COMMENT $2998 degrees: 287°
COMMENT $299A degrees: 288°
COMMENT $299C degrees: 289°
COMMENT $299E degrees: 290°
COMMENT $29A0 degrees: 291°
COMMENT $29A2 degrees: 292°
COMMENT $29A4 degrees: 293°
COMMENT $29A6 degrees: 294°
COMMENT $29A8 degrees: 295°
COMMENT $29AA degrees: 296°
COMMENT $29AC degrees: 297°
COMMENT $29AE degrees: 298°
COMMENT $29B0 degrees: 299°
COMMENT $29B2 degrees: 300°
COMMENT $29B4 degrees: 301°
COMMENT $29B6 degrees: 302°
COMMENT $29B8 degrees: 303°
COMMENT $29BA degrees: 304°
COMMENT $29BC degrees: 305°
COMMENT $29BE degrees: 306°
COMMENT $29C0 degrees: 307°
COMMENT $29C2 degrees: 308°
COMMENT $29C4 degrees: 309°
COMMENT $29C6 degrees: 310°
COMMENT $29C8 degrees: 311°
COMMENT $29CA degrees: 312°
COMMENT $29CC degrees: 313°
COMMENT $29CE degrees: 314°
COMMENT $29D0 degrees: 315°
COMMENT $29D2 degrees: 316°
COMMENT $29D4 degrees: 317°
COMMENT $29D6 degrees: 318°
COMMENT $29D8 degrees: 319°
COMMENT $29DA degrees: 320°
COMMENT $29DC degrees: 321°
COMMENT $29DE degrees: 322°
COMMENT $29E0 degrees: 323°
COMMENT $29E2 degrees: 324°
COMMENT $29E4 degrees: 325°
COMMENT $29E6 degrees: 326°
COMMENT $29E8 degrees: 327°
COMMENT $29EA degrees: 328°
COMMENT $29EC degrees: 329°
COMMENT $29EE degrees: 330°
COMMENT $29F0 degrees: 331°
COMMENT $29F2 degrees: 332°
COMMENT $29F4 degrees: 333°
COMMENT $29F6 degrees: 334°
COMMENT $29F8 degrees: 335°
COMMENT $29FA degrees: 336°
COMMENT $29FC degrees: 337°
COMMENT $29FE degrees: 338°
COMMENT $2A00 degrees: 339°
COMMENT $2A02 degrees: 340°
COMMENT $2A04 degrees: 341°
COMMENT $2A06 degrees: 342°
COMMENT $2A08 degrees: 343°
COMMENT $2A0A degrees: 344°
COMMENT $2A0C degrees: 345°
COMMENT $2A0E degrees: 346°
COMMENT $2A10 degrees: 347°
COMMENT $2A12 degrees: 348°
COMMENT $2A14 degrees: 349°
COMMENT $2A16 degrees: 350°
COMMENT $2A18 degrees: 351°
COMMENT $2A1A degrees: 352°
COMMENT $2A1C degrees: 353°
COMMENT $2A1E degrees: 354°
COMMENT $2A20 degrees: 355°
COMMENT $2A22 degrees: 356°
COMMENT $2A24 degrees: 357°
COMMENT $2A26 degrees: 358°
COMMENT $2A28 degrees: 359°
COMMENT_LINE $2A2A some overflow angles
COMMENT_LINE $2A2A since random does 0-127 instead of 0-120
COMMENT $2A2A degrees: 0°
COMMENT $2A2C degrees: 1°
COMMENT $2A2E degrees: 2°
COMMENT $2A30 degrees: 3°
COMMENT $2A32 degrees: 4°
COMMENT $2A34 degrees: 5°
COMMENT $2A36 degrees: 6°
COMMENT $2A38 degrees: 7°
COMMENT $2A3A degrees: 8°
COMMENT $2A3C degrees: 9°
COMMENT $2A3E degrees: 10°
COMMENT $2A40 degrees: 11°
COMMENT $2A42 degrees: 12°
COMMENT $2A44 degrees: 13°
COMMENT $2A46 degrees: 14°
COMMENT $2A48 degrees: 15°
COMMENT $2A4A degrees: 16°
COMMENT $2A4C degrees: 17°
COMMENT $2A4E degrees: 18°
COMMENT $2A50 degrees: 19°
COMMENT $2A52 degrees: 20°
COMMENT $2A54 degrees: 21°
COMMENT $2A56 degrees: 22°
COMMENT_LINE $2A58 Following are the 3 gimmick definitions
COMMENT_LINE $2A58 Gimmick - a sprite is displayed in places "just for fun"
COMMENT_LINE $2A58 there is a Pacman, a ghost and a little worm crawling
COMMENT_LINE $2A58 below are nearly 1500 byte!!!
COMMENT $2A5A draw to y, x
COMMENT $2A5C draw to y, x
COMMENT $2A5E draw to y, x
COMMENT $2A60 draw to y, x
COMMENT $2A62 draw to y, x
COMMENT $2A64 draw to y, x
COMMENT $2A66 draw to y, x
COMMENT $2A68 draw to y, x
COMMENT $2A6A draw to y, x
COMMENT $2A6E draw to y, x
COMMENT $2A70 draw to y, x
COMMENT $2A72 draw to y, x
COMMENT $2A74 draw to y, x
COMMENT $2A76 draw to y, x
COMMENT $2A78 draw to y, x
COMMENT $2A7A draw to y, x
COMMENT $2A7C draw to y, x
COMMENT $2A7E draw to y, x
COMMENT $2A82 draw to y, x
COMMENT $2A84 draw to y, x
COMMENT $2A86 draw to y, x
COMMENT $2A88 draw to y, x
COMMENT $2A8A draw to y, x
COMMENT $2A8C draw to y, x
COMMENT $2A8E draw to y, x
COMMENT $2A90 draw to y, x
COMMENT $2A92 draw to y, x
COMMENT $2A96 draw to y, x
COMMENT $2A98 draw to y, x
COMMENT $2A9A draw to y, x
COMMENT $2A9C draw to y, x
COMMENT $2A9E draw to y, x
COMMENT $2AA0 draw to y, x
COMMENT $2AA2 draw to y, x
COMMENT $2AA4 draw to y, x
COMMENT $2AA6 draw to y, x
COMMENT $2AAA draw to y, x
COMMENT $2AAC draw to y, x
COMMENT $2AAE draw to y, x
COMMENT $2AB0 draw to y, x
COMMENT $2AB2 draw to y, x
COMMENT $2AB4 draw to y, x
COMMENT $2AB6 draw to y, x
COMMENT $2AB8 draw to y, x
COMMENT $2ABA draw to y, x
COMMENT $2ABC draw to y, x
COMMENT $2AC0 draw to y, x
COMMENT $2AC2 draw to y, x
COMMENT $2AC4 draw to y, x
COMMENT $2AC6 draw to y, x
COMMENT $2AC8 draw to y, x
COMMENT $2ACA draw to y, x
COMMENT $2ACC draw to y, x
COMMENT $2ACE draw to y, x
COMMENT $2AD0 draw to y, x
COMMENT $2AD2 draw to y, x
COMMENT $2AD6 draw to y, x
COMMENT $2AD8 draw to y, x
COMMENT $2ADA draw to y, x
COMMENT $2ADC draw to y, x
COMMENT $2ADE draw to y, x
COMMENT $2AE0 draw to y, x
COMMENT $2AE2 draw to y, x
COMMENT $2AE4 draw to y, x
COMMENT $2AE6 draw to y, x
COMMENT $2AE8 draw to y, x
COMMENT $2AEC draw to y, x
COMMENT $2AEE draw to y, x
COMMENT $2AF0 draw to y, x
COMMENT $2AF2 draw to y, x
COMMENT $2AF4 draw to y, x
COMMENT $2AF6 draw to y, x
COMMENT $2AFA draw to y, x
COMMENT $2AFC draw to y, x
COMMENT $2AFE draw to y, x
COMMENT $2B00 draw to y, x
COMMENT $2B02 draw to y, x
COMMENT $2B04 draw to y, x
COMMENT $2B08 draw to y, x
COMMENT $2B0A draw to y, x
COMMENT $2B0C draw to y, x
COMMENT $2B0E draw to y, x
COMMENT $2B10 draw to y, x
COMMENT $2B12 draw to y, x
COMMENT $2B16 draw to y, x
COMMENT $2B18 draw to y, x
COMMENT $2B1A draw to y, x
COMMENT $2B1C draw to y, x
COMMENT $2B1E draw to y, x
COMMENT $2B20 draw to y, x
COMMENT $2B24 draw to y, x
COMMENT $2B26 draw to y, x
COMMENT $2B28 draw to y, x
COMMENT $2B2A draw to y, x
COMMENT $2B2C draw to y, x
COMMENT $2B2E draw to y, x
COMMENT $2B32 draw to y, x
COMMENT $2B34 draw to y, x
COMMENT $2B36 draw to y, x
COMMENT $2B38 draw to y, x
COMMENT $2B3A draw to y, x
COMMENT $2B3C draw to y, x
COMMENT $2B40 draw to y, x
COMMENT $2B42 draw to y, x
COMMENT $2B44 draw to y, x
COMMENT $2B46 draw to y, x
COMMENT $2B48 draw to y, x
COMMENT $2B4A draw to y, x
COMMENT_LINE $2B4C this file is part of Release, written by Malban in 2017
COMMENT_LINE $2B4C ***************************************************************************
COMMENT $0000 a = reg, b = data
COMMENT $0000 store register select byte
COMMENT $0000 sound BDIR on, BC1 on, mux off _ LATCH
COMMENT $0000 sound BDIR off, BC1 off, mux off - INACTIVE
COMMENT $0000 read sound chip status (?)
COMMENT $0000 store data byte
COMMENT $0000 sound BDIR on, BC1 off, mux off - WRITE
COMMENT $0000 sound BDIR off, BC1 off, mux off - INACTIVE
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 store data in reg a in an
COMMENT_LINE $0000 appropriate way to PSG register (here: BIOS working buffer)
COMMENT_LINE $0000 ***************************************************************************
FORCE_SYMBOL $2B4C sfxOption
FORCE_SYMBOL $2B51 sfx_doframe_intern_3
FORCE_SYMBOL $2B54 sfx_doframe_intern_2
FORCE_SYMBOL $2B57 sfx_doframe_intern_1
COMMENT_LINE $2B5A copy all shadows
COMMENT $2B5A number of regs to copy (+1)
FORCE_NO_SYMBOL $2B5A
COMMENT $2B5C music players write here
FORCE_SYMBOL $2B5C Vec_Music_Work
COMMENT $2B5F shadow of actual PSG
FORCE_SYMBOL $2B5F Vec_Snd_Shadow
COMMENT_LINE $2B68 no put to psg
COMMENT $2B68 ensure shadow has copy
COMMENT_LINE $2B6A a = register
COMMENT_LINE $2B6A b = value
FORCE_SYMBOL $2B6A halfnoise
COMMENT $2B6F only half noise in game
FORCE_SYMBOL $2B6F return_state
FORCE_SYMBOL $2B74 musicOption
FORCE_NO_SYMBOL $2B79
FORCE_NO_SYMBOL $2B7D
FORCE_NO_SYMBOL $2B81
COMMENT $2B89 3/4
COMMENT $2B8B store register select byte
FORCE_SYMBOL $2B8B VIA_port_a
COMMENT $2B8D sound BDIR on, BC1 on, mux off _ LATCH
FORCE_NO_SYMBOL $2B8D
FORCE_SYMBOL $2B8F VIA_port_b
COMMENT $2B91 sound BDIR off, BC1 off, mux off - INACTIVE
FORCE_NO_SYMBOL $2B91
FORCE_SYMBOL $2B93 VIA_port_b
COMMENT $2B95 read sound chip status (?)
FORCE_SYMBOL $2B95 VIA_port_a
COMMENT $2B97 store data byte
FORCE_SYMBOL $2B97 VIA_port_a
COMMENT $2B99 sound BDIR on, BC1 off, mux off - WRITE
FORCE_NO_SYMBOL $2B99
FORCE_SYMBOL $2B9B VIA_port_b
COMMENT $2B9D sound BDIR off, BC1 off, mux off - INACTIVE
FORCE_NO_SYMBOL $2B9D
FORCE_SYMBOL $2B9F VIA_port_b
COMMENT_LINE $2BA5 ***************************************************************************
COMMENT_LINE $2BA5 destroys D X U
COMMENT_LINE $2BA5 play the given SFX, but only if nothing else is played (regardless of prio)
COMMENT $2BA5 load current sfx
FORCE_SYMBOL $2BA5 currentSFX_3
COMMENT $2BA8 if none playing - jump
COMMENT $2BAA load current prio to a
FORCE_NO_SYMBOL $2BAA
COMMENT $2BAC compare to prio of new sfx
FORCE_NO_SYMBOL $2BAC
COMMENT $2BAE if old prio is higher than go out
COMMENT $2BB0 so we store it as current sfx
FORCE_SYMBOL $2BB0 currentSFX_3
COMMENT $2BB3 and the actual sfx data store to our sfx player vars
FORCE_NO_SYMBOL $2BB3
FORCE_SYMBOL $2BB5 sfx_pointer_3
COMMENT $2BB8 tell the player, that it should play!
FORCE_NO_SYMBOL $2BB8
FORCE_SYMBOL $2BBA sfx_status_3
COMMENT_LINE $2BBE ***************************************************************************
COMMENT $2BBE load current sfx
FORCE_SYMBOL $2BBE currentSFX_2
COMMENT $2BC1 if none playing - jump
COMMENT $2BC3 load current prio to a
FORCE_NO_SYMBOL $2BC3
COMMENT $2BC5 compare to prio of new sfx
FORCE_NO_SYMBOL $2BC5
COMMENT $2BC7 if old prio is higher than go out
COMMENT $2BC9 so we store it as current sfx
FORCE_SYMBOL $2BC9 currentSFX_2
COMMENT $2BCC and the actual sfx data store to our sfx player vars
FORCE_NO_SYMBOL $2BCC
FORCE_SYMBOL $2BCE sfx_pointer_2
COMMENT $2BD1 tell the player, that it should play!
FORCE_NO_SYMBOL $2BD1
FORCE_SYMBOL $2BD3 sfx_status_2
COMMENT_LINE $2BD7 ***************************************************************************
COMMENT $2BD7 load current sfx
FORCE_SYMBOL $2BD7 currentSFX_1
COMMENT $2BDA if none playing - jump
COMMENT $2BDC load current prio to a
FORCE_NO_SYMBOL $2BDC
COMMENT $2BDE compare to prio of new sfx
FORCE_NO_SYMBOL $2BDE
COMMENT $2BE0 if old prio is higher than go out
COMMENT $2BE2 so we store it as current sfx
FORCE_SYMBOL $2BE2 currentSFX_1
COMMENT $2BE5 and the actual sfx data store to our sfx player vars
FORCE_NO_SYMBOL $2BE5
FORCE_SYMBOL $2BE7 sfx_pointer_1
COMMENT $2BEA tell the player, that it should play!
FORCE_NO_SYMBOL $2BEA
FORCE_SYMBOL $2BEC sfx_status_1
COMMENT_LINE $2BF0 ***************** AYFX Structures
COMMENT_LINE $2BF0 priority the higher the more priority!
COMMENT_LINE $2BF0 *** AYFX following
COMMENT $2BF2 priority 2 = low
COMMENT $2BF5 priority 2 = low
COMMENT $2BF8 priority 2 = low
COMMENT $2BFB priority 2 = low
COMMENT $2BFE priority 2 = low
COMMENT $2C01 priority 2 = low
COMMENT $2C04 priority 2 = low
COMMENT $2C07 priority 2 = low
COMMENT $2C0A priority 2 = low
COMMENT $2C0D priority 2 = low
COMMENT $2C10 priority 2 = low
COMMENT $2C13 priority 2 = low
COMMENT $2C16 priority 2 = low
COMMENT $2C19 priority 2 = low
COMMENT $2C1C priority 2 = low
COMMENT $2C1F priority 2 = low
COMMENT $2C22 priority 2 = low
COMMENT $2C25 priority 2 = low
COMMENT $36BB music to play
COMMENT $36BD next music piece
COMMENT $36BF music to play
COMMENT $36C1 next music piece
COMMENT $36C3 music to play
COMMENT $36C5 next music piece
COMMENT $36C7 music to play
COMMENT $36C9 next music piece
COMMENT_LINE $36CB this file is part of Release, written by Malban in 2017
COMMENT_LINE $36CB This file was build using VIDE - Vectrex Integrated Development Environment
COMMENT_LINE $36CB Original bin file was: projects/ArkosPlayer/rel2.bin
COMMENT_LINE $36CB offset for AKS file assumed: $0000 guessed by accessing byte data[13] * 256)
COMMENT_LINE $36CB not used by vectrex player and therefor omitted:
COMMENT_LINE $36CB DB "AT10" ; Signature of Arkos Tracker files
COMMENT_LINE $36CB DB $01 ; sample channel
COMMENT_LINE $36CB DB $40, 42, 0f ; YM custom frequence - little endian
COMMENT_LINE $36CB DB $02 ; Replay frequency (0=13hz,1=25hz,2=50hz,3=100hz,4=150hz,5=300hz)
COMMENT $36CB $0009: default speed
COMMENT $36CC $000A: size of instrument table (without this word pointer)
COMMENT $36CE $000C: [$0026] pointer to instrument 0
COMMENT $36D0 $000E: [$002F] pointer to instrument 1
COMMENT $36D2 $0010: [$0037] pointer to instrument 2
COMMENT $36D4 $0012: [$004F] pointer to instrument 3
COMMENT $36D6 $0014: [$005A] pointer to instrument 4
COMMENT $36D8 $0016: [$0064] pointer to instrument 5
COMMENT $36DA $0018: [$007B] pointer to instrument 6
COMMENT $36DC $001A: [$008C] pointer to instrument 7
COMMENT $36DE $001C: [$009A] pointer to instrument 8
COMMENT $36E0 $001E: [$00A6] pointer to instrument 9
COMMENT $36E2 $0020: [$00BC] pointer to instrument 10
COMMENT $36E4 $0022: [$00C9] pointer to instrument 11
COMMENT $36E6 $0024: [$00F2] pointer to instrument 12
COMMENT $36E8 $0026: speed
COMMENT $36E9 $0027: retrig
COMMENT $36EA $0028: dataColumn_0 (non hard)
COMMENT $36EB $0029: dataColumn_0 (non hard)
COMMENT $36EC $002A: dataColumn_0 (non hard)
COMMENT $36ED $002B: dataColumn_0 (non hard)
COMMENT $36EE $002C: dataColumn_0 (hard)
COMMENT $36EF $002D: [$0028] loop
COMMENT $36F1 $002F: speed
COMMENT $36F2 $0030: retrig
COMMENT $36F3 $0031: dataColumn_0 (non hard)
COMMENT $36F4 $0032: dataColumn_0 (non hard)
COMMENT $36F5 $0033: arpegio
COMMENT $36F6 $0034: dataColumn_0 (hard)
COMMENT $36F7 $0035: [$0031] loop
COMMENT $36F9 $0037: speed
COMMENT $36FA $0038: retrig
COMMENT $36FB $0039: dataColumn_0 (non hard)
COMMENT $36FC $003A: arpegio
COMMENT $36FD $003B: dataColumn_0 (non hard)
COMMENT $36FE $003C: arpegio
COMMENT $36FF $003D: dataColumn_0 (non hard)
COMMENT $3700 $003E: arpegio
COMMENT $3701 $003F: dataColumn_0 (non hard)
COMMENT $3702 $0040: arpegio
COMMENT $3703 $0041: dataColumn_0 (non hard)
COMMENT $3704 $0042: dataColumn_0 (non hard)
COMMENT $3705 $0043: arpegio
COMMENT $3706 $0044: dataColumn_0 (non hard)
COMMENT $3707 $0045: arpegio
COMMENT $3708 $0046: dataColumn_0 (non hard)
COMMENT $3709 $0047: dataColumn_1
COMMENT $370A $0048: dataColumn_0 (non hard)
COMMENT $370B $0049: dataColumn_1
COMMENT $370C $004A: dataColumn_0 (non hard)
COMMENT $370D $004B: dataColumn_1
COMMENT $370E $004C: dataColumn_0 (hard)
COMMENT $370F $004D: [$0028] loop
COMMENT $3711 $004F: speed
COMMENT $3712 $0050: retrig
COMMENT $3713 $0051: dataColumn_0 (non hard)
COMMENT $3714 $0052: arpegio
COMMENT $3715 $0053: dataColumn_0 (non hard)
COMMENT $3716 $0054: arpegio
COMMENT $3717 $0055: dataColumn_0 (non hard)
COMMENT $3718 $0056: arpegio
COMMENT $3719 $0057: dataColumn_0 (hard)
COMMENT $371A $0058: [$0028] loop
COMMENT $371C $005A: speed
COMMENT $371D $005B: retrig
COMMENT $371E $005C: dataColumn_0 (non hard)
COMMENT $371F $005D: dataColumn_0 (non hard)
COMMENT $3720 $005E: dataColumn_0 (non hard)
COMMENT $3721 $005F: arpegio
COMMENT $3722 $0060: dataColumn_0 (non hard)
COMMENT $3723 $0061: dataColumn_0 (hard)
COMMENT $3724 $0062: [$0028] loop
COMMENT $3726 $0064: speed
COMMENT $3727 $0065: retrig
COMMENT $3728 $0066: dataColumn_0 (non hard)
COMMENT $3729 $0067: arpegio
COMMENT $372A $0068: dataColumn_0 (non hard)
COMMENT $372B $0069: arpegio
COMMENT $372C $006A: dataColumn_0 (non hard)
COMMENT $372D $006B: arpegio
COMMENT $372E $006C: dataColumn_0 (non hard)
COMMENT $372F $006D: arpegio
COMMENT $3730 $006E: dataColumn_0 (non hard)
COMMENT $3731 $006F: arpegio
COMMENT $3732 $0070: dataColumn_0 (non hard)
COMMENT $3733 $0071: arpegio
COMMENT $3734 $0072: dataColumn_0 (non hard)
COMMENT $3735 $0073: arpegio
COMMENT $3736 $0074: dataColumn_0 (non hard)
COMMENT $3737 $0075: arpegio
COMMENT $3738 $0076: dataColumn_0 (non hard)
COMMENT $3739 $0077: arpegio
COMMENT $373A $0078: dataColumn_0 (hard)
COMMENT $373B $0079: [$0028] loop
COMMENT $373D $007B: speed
COMMENT $373E $007C: retrig
COMMENT $373F $007D: dataColumn_0 (non hard)
COMMENT $3740 $007E: dataColumn_0 (non hard)
COMMENT $3741 $007F: arpegio
COMMENT $3742 $0080: dataColumn_0 (non hard)
COMMENT $3743 $0081: dataColumn_0 (non hard)
COMMENT $3744 $0082: arpegio
COMMENT $3745 $0083: dataColumn_0 (non hard)
COMMENT $3746 $0084: dataColumn_0 (non hard)
COMMENT $3747 $0085: arpegio
COMMENT $3748 $0086: dataColumn_0 (non hard)
COMMENT $3749 $0087: dataColumn_0 (non hard)
COMMENT $374A $0088: arpegio
COMMENT $374B $0089: dataColumn_0 (hard)
COMMENT $374C $008A: [$0028] loop
COMMENT $374E $008C: speed
COMMENT $374F $008D: retrig
COMMENT $3750 $008E: dataColumn_0 (non hard)
COMMENT $3751 $008F: arpegio
COMMENT $3752 $0090: dataColumn_0 (non hard)
COMMENT $3753 $0091: arpegio
COMMENT $3754 $0092: dataColumn_0 (non hard)
COMMENT $3755 $0093: arpegio
COMMENT $3756 $0094: dataColumn_0 (non hard)
COMMENT $3757 $0095: arpegio
COMMENT $3758 $0096: dataColumn_0 (non hard)
COMMENT $3759 $0097: dataColumn_0 (hard)
COMMENT $375A $0098: [$0028] loop
COMMENT $375C $009A: speed
COMMENT $375D $009B: retrig
COMMENT $375E $009C: dataColumn_0 (non hard)
COMMENT $375F $009D: dataColumn_0 (non hard)
COMMENT $3760 $009E: arpegio
COMMENT $3761 $009F: dataColumn_0 (non hard)
COMMENT $3762 $00A0: dataColumn_0 (non hard)
COMMENT $3763 $00A1: arpegio
COMMENT $3764 $00A2: dataColumn_0 (non hard)
COMMENT $3765 $00A3: dataColumn_0 (hard)
COMMENT $3766 $00A4: [$0028] loop
COMMENT $3768 $00A6: speed
COMMENT $3769 $00A7: retrig
COMMENT $376A $00A8: dataColumn_0 (non hard)
COMMENT $376B $00A9: arpegio
COMMENT $376C $00AA: dataColumn_0 (non hard)
COMMENT $376D $00AB: arpegio
COMMENT $376E $00AC: dataColumn_0 (non hard)
COMMENT $376F $00AD: arpegio
COMMENT $3770 $00AE: dataColumn_0 (non hard)
COMMENT $3771 $00AF: dataColumn_0 (non hard)
COMMENT $3772 $00B0: arpegio
COMMENT $3773 $00B1: dataColumn_0 (non hard)
COMMENT $3774 $00B2: arpegio
COMMENT $3775 $00B3: dataColumn_0 (non hard)
COMMENT $3776 $00B4: arpegio
COMMENT $3777 $00B5: dataColumn_0 (non hard)
COMMENT $3778 $00B6: arpegio
COMMENT $3779 $00B7: dataColumn_0 (non hard)
COMMENT $377A $00B8: arpegio
COMMENT $377B $00B9: dataColumn_0 (hard)
COMMENT $377C $00BA: [$0028] loop
COMMENT $377E $00BC: speed
COMMENT $377F $00BD: retrig
COMMENT $3780 $00BE: dataColumn_0 (non hard)
COMMENT $3781 $00BF: arpegio
COMMENT $3782 $00C0: dataColumn_0 (non hard)
COMMENT $3783 $00C1: arpegio
COMMENT $3784 $00C2: dataColumn_0 (non hard)
COMMENT $3785 $00C3: arpegio
COMMENT $3786 $00C4: dataColumn_0 (non hard)
COMMENT $3787 $00C5: arpegio
COMMENT $3788 $00C6: dataColumn_0 (hard)
COMMENT $3789 $00C7: [$00C0] loop
COMMENT $378B $00C9: speed
COMMENT $378C $00CA: retrig
COMMENT $378D $00CB: dataColumn_0 (non hard)
COMMENT $378E $00CC: arpegio
COMMENT $378F $00CD: dataColumn_0 (non hard)
COMMENT $3790 $00CE: arpegio
COMMENT $3791 $00CF: dataColumn_0 (non hard)
COMMENT $3792 $00D0: arpegio
COMMENT $3793 $00D1: dataColumn_0 (non hard)
COMMENT $3794 $00D2: arpegio
COMMENT $3795 $00D3: dataColumn_0 (non hard)
COMMENT $3796 $00D4: arpegio
COMMENT $3797 $00D5: dataColumn_0 (non hard)
COMMENT $3798 $00D6: arpegio
COMMENT $3799 $00D7: dataColumn_0 (non hard)
COMMENT $379A $00D8: arpegio
COMMENT $379B $00D9: dataColumn_0 (non hard)
COMMENT $379C $00DA: arpegio
COMMENT $379D $00DB: dataColumn_0 (non hard)
COMMENT $379E $00DC: arpegio
COMMENT $379F $00DD: dataColumn_0 (non hard)
COMMENT $37A0 $00DE: arpegio
COMMENT $37A1 $00DF: dataColumn_0 (non hard)
COMMENT $37A2 $00E0: arpegio
COMMENT $37A3 $00E1: dataColumn_0 (non hard)
COMMENT $37A4 $00E2: arpegio
COMMENT $37A5 $00E3: dataColumn_0 (non hard)
COMMENT $37A6 $00E4: arpegio
COMMENT $37A7 $00E5: dataColumn_0 (non hard)
COMMENT $37A8 $00E6: arpegio
COMMENT $37A9 $00E7: dataColumn_0 (non hard)
COMMENT $37AA $00E8: arpegio
COMMENT $37AB $00E9: dataColumn_0 (non hard)
COMMENT $37AC $00EA: arpegio
COMMENT $37AD $00EB: dataColumn_0 (non hard)
COMMENT $37AE $00EC: arpegio
COMMENT $37AF $00ED: dataColumn_0 (non hard)
COMMENT $37B0 $00EE: arpegio
COMMENT $37B1 $00EF: dataColumn_0 (hard)
COMMENT $37B2 $00F0: [$0028] loop
COMMENT $37B4 $00F2: speed
COMMENT $37B5 $00F3: retrig
COMMENT $37B6 $00F4: dataColumn_0 (non hard)
COMMENT $37B7 $00F5: arpegio
COMMENT $37B8 $00F6: dataColumn_0 (non hard)
COMMENT $37B9 $00F7: dataColumn_0 (non hard)
COMMENT $37BA $00F8: dataColumn_1
COMMENT $37BB $00F9: dataColumn_0 (non hard)
COMMENT $37BC $00FA: dataColumn_1
COMMENT $37BD $00FB: dataColumn_0 (non hard)
COMMENT $37BE $00FC: dataColumn_1
COMMENT $37BF $00FD: dataColumn_0 (non hard)
COMMENT $37C0 $00FE: arpegio
COMMENT $37C1 $00FF: dataColumn_0 (non hard)
COMMENT $37C2 $0100: dataColumn_0 (hard)
COMMENT $37C3 $0101: [$0028] loop
COMMENT_LINE $37C5 start of linker definition
COMMENT $37C5 $0103: first height
COMMENT $37C6 $0104: transposition1
COMMENT $37C7 $0105: transposition2
COMMENT $37C8 $0106: transposition3
COMMENT $37C9 $0107: [$05CD] specialTrack
COMMENT $37CB $0109: pattern 0 state
COMMENT $37CC $010A: [$05F2] pattern 0, track 1
COMMENT $37CE $010C: [$05CF] pattern 0, track 2
COMMENT $37D0 $010E: [$05CF] pattern 0, track 3
COMMENT $37D2 $0110: new height
COMMENT $37D3 $0111: pattern 1 state
COMMENT $37D4 $0112: [$0637] pattern 1, track 1
COMMENT $37D6 $0114: [$05CF] pattern 1, track 2
COMMENT $37D8 $0116: [$05CF] pattern 1, track 3
COMMENT $37DA $0118: new height
COMMENT $37DB $0119: pattern 2 state
COMMENT $37DC $011A: [$065A] pattern 2, track 1
COMMENT $37DE $011C: [$05CF] pattern 2, track 2
COMMENT $37E0 $011E: [$05CF] pattern 2, track 3
COMMENT $37E2 $0120: new height
COMMENT $37E3 $0121: pattern 3 state
COMMENT $37E4 $0122: [$065A] pattern 3, track 1
COMMENT $37E6 $0124: [$05CF] pattern 3, track 2
COMMENT $37E8 $0126: [$05CF] pattern 3, track 3
COMMENT $37EA $0128: pattern 4 state
COMMENT $37EB $0129: [$065A] pattern 4, track 1
COMMENT $37ED $012B: [$05CF] pattern 4, track 2
COMMENT $37EF $012D: [$05CF] pattern 4, track 3
COMMENT $37F1 $012F: pattern 5 state
COMMENT $37F2 $0130: [$065A] pattern 5, track 1
COMMENT $37F4 $0132: [$05CF] pattern 5, track 2
COMMENT $37F6 $0134: [$05CF] pattern 5, track 3
COMMENT $37F8 $0136: pattern 6 state
COMMENT $37F9 $0137: [$065A] pattern 6, track 1
COMMENT $37FB $0139: [$05CF] pattern 6, track 2
COMMENT $37FD $013B: [$05CF] pattern 6, track 3
COMMENT $37FF $013D: pattern 7 state
COMMENT $3800 $013E: [$065A] pattern 7, track 1
COMMENT $3802 $0140: [$05CF] pattern 7, track 2
COMMENT $3804 $0142: [$05CF] pattern 7, track 3
COMMENT $3806 $0144: pattern 8 state
COMMENT $3807 $0145: [$066A] pattern 8, track 1
COMMENT $3809 $0147: [$05CF] pattern 8, track 2
COMMENT $380B $0149: [$05CF] pattern 8, track 3
COMMENT $380D $014B: pattern 9 state
COMMENT $380E $014C: [$066A] pattern 9, track 1
COMMENT $3810 $014E: [$05CF] pattern 9, track 2
COMMENT $3812 $0150: [$05CF] pattern 9, track 3
COMMENT $3814 $0152: pattern 10 state
COMMENT $3815 $0153: [$066A] pattern 10, track 1
COMMENT $3817 $0155: [$05CF] pattern 10, track 2
COMMENT $3819 $0157: [$05CF] pattern 10, track 3
COMMENT $381B $0159: pattern 11 state
COMMENT $381C $015A: [$066A] pattern 11, track 1
COMMENT $381E $015C: [$05CF] pattern 11, track 2
COMMENT $3820 $015E: [$05CF] pattern 11, track 3
COMMENT $3822 $0160: pattern 12 state
COMMENT $3823 $0161: [$066A] pattern 12, track 1
COMMENT $3825 $0163: [$05CF] pattern 12, track 2
COMMENT $3827 $0165: [$05CF] pattern 12, track 3
COMMENT $3829 $0167: pattern 13 state
COMMENT $382A $0168: [$066A] pattern 13, track 1
COMMENT $382C $016A: [$05CF] pattern 13, track 2
COMMENT $382E $016C: [$05CF] pattern 13, track 3
COMMENT $3830 $016E: pattern 14 state
COMMENT $3831 $016F: [$066A] pattern 14, track 1
COMMENT $3833 $0171: [$05CF] pattern 14, track 2
COMMENT $3835 $0173: [$05CF] pattern 14, track 3
COMMENT $3837 $0175: pattern 15 state
COMMENT $3838 $0176: [$066A] pattern 15, track 1
COMMENT $383A $0178: [$05CF] pattern 15, track 2
COMMENT $383C $017A: [$05CF] pattern 15, track 3
COMMENT $383E $017C: pattern 16 state
COMMENT $383F $017D: [$067B] pattern 16, track 1
COMMENT $3841 $017F: [$05CF] pattern 16, track 2
COMMENT $3843 $0181: [$05CF] pattern 16, track 3
COMMENT $3845 $0183: pattern 17 state
COMMENT $3846 $0184: [$067B] pattern 17, track 1
COMMENT $3848 $0186: [$05CF] pattern 17, track 2
COMMENT $384A $0188: [$05CF] pattern 17, track 3
COMMENT $384C $018A: pattern 18 state
COMMENT $384D $018B: [$067B] pattern 18, track 1
COMMENT $384F $018D: [$05CF] pattern 18, track 2
COMMENT $3851 $018F: [$05CF] pattern 18, track 3
COMMENT $3853 $0191: pattern 19 state
COMMENT $3854 $0192: [$067B] pattern 19, track 1
COMMENT $3856 $0194: [$05CF] pattern 19, track 2
COMMENT $3858 $0196: [$05CF] pattern 19, track 3
COMMENT $385A $0198: pattern 20 state
COMMENT $385B $0199: [$067B] pattern 20, track 1
COMMENT $385D $019B: [$05CF] pattern 20, track 2
COMMENT $385F $019D: [$05CF] pattern 20, track 3
COMMENT $3861 $019F: pattern 21 state
COMMENT $3862 $01A0: [$067B] pattern 21, track 1
COMMENT $3864 $01A2: [$05CF] pattern 21, track 2
COMMENT $3866 $01A4: [$05CF] pattern 21, track 3
COMMENT $3868 $01A6: pattern 22 state
COMMENT $3869 $01A7: [$067B] pattern 22, track 1
COMMENT $386B $01A9: [$05CF] pattern 22, track 2
COMMENT $386D $01AB: [$05CF] pattern 22, track 3
COMMENT $386F $01AD: pattern 23 state
COMMENT $3870 $01AE: [$067B] pattern 23, track 1
COMMENT $3872 $01B0: [$05CF] pattern 23, track 2
COMMENT $3874 $01B2: [$05CF] pattern 23, track 3
COMMENT $3876 $01B4: pattern 24 state
COMMENT $3877 $01B5: [$0692] pattern 24, track 1
COMMENT $3879 $01B7: [$05CF] pattern 24, track 2
COMMENT $387B $01B9: [$05CF] pattern 24, track 3
COMMENT $387D $01BB: pattern 25 state
COMMENT $387E $01BC: [$06AA] pattern 25, track 1
COMMENT $3880 $01BE: [$05CF] pattern 25, track 2
COMMENT $3882 $01C0: [$05CF] pattern 25, track 3
COMMENT $3884 $01C2: pattern 26 state
COMMENT $3885 $01C3: [$0692] pattern 26, track 1
COMMENT $3887 $01C5: [$05CF] pattern 26, track 2
COMMENT $3889 $01C7: [$05CF] pattern 26, track 3
COMMENT $388B $01C9: pattern 27 state
COMMENT $388C $01CA: [$06AA] pattern 27, track 1
COMMENT $388E $01CC: [$05CF] pattern 27, track 2
COMMENT $3890 $01CE: [$05CF] pattern 27, track 3
COMMENT $3892 $01D0: pattern 28 state
COMMENT $3893 $01D1: [$0692] pattern 28, track 1
COMMENT $3895 $01D3: [$05CF] pattern 28, track 2
COMMENT $3897 $01D5: [$05CF] pattern 28, track 3
COMMENT $3899 $01D7: pattern 29 state
COMMENT $389A $01D8: [$06AA] pattern 29, track 1
COMMENT $389C $01DA: [$05CF] pattern 29, track 2
COMMENT $389E $01DC: [$05CF] pattern 29, track 3
COMMENT $38A0 $01DE: pattern 30 state
COMMENT $38A1 $01DF: [$0692] pattern 30, track 1
COMMENT $38A3 $01E1: [$05CF] pattern 30, track 2
COMMENT $38A5 $01E3: [$05CF] pattern 30, track 3
COMMENT $38A7 $01E5: pattern 31 state
COMMENT $38A8 $01E6: [$06AA] pattern 31, track 1
COMMENT $38AA $01E8: [$05CF] pattern 31, track 2
COMMENT $38AC $01EA: [$05CF] pattern 31, track 3
COMMENT $38AE $01EC: pattern 32 state
COMMENT $38AF $01ED: [$06C1] pattern 32, track 1
COMMENT $38B1 $01EF: [$05CF] pattern 32, track 2
COMMENT $38B3 $01F1: [$05CF] pattern 32, track 3
COMMENT $38B5 $01F3: pattern 33 state
COMMENT $38B6 $01F4: [$06DB] pattern 33, track 1
COMMENT $38B8 $01F6: [$05CF] pattern 33, track 2
COMMENT $38BA $01F8: [$05CF] pattern 33, track 3
COMMENT $38BC $01FA: pattern 34 state
COMMENT $38BD $01FB: [$06C1] pattern 34, track 1
COMMENT $38BF $01FD: [$05CF] pattern 34, track 2
COMMENT $38C1 $01FF: [$05CF] pattern 34, track 3
COMMENT $38C3 $0201: pattern 35 state
COMMENT $38C4 $0202: [$06F3] pattern 35, track 1
COMMENT $38C6 $0204: [$05CF] pattern 35, track 2
COMMENT $38C8 $0206: [$05CF] pattern 35, track 3
COMMENT $38CA $0208: pattern 36 state
COMMENT $38CB $0209: [$06C1] pattern 36, track 1
COMMENT $38CD $020B: [$05CF] pattern 36, track 2
COMMENT $38CF $020D: [$05CF] pattern 36, track 3
COMMENT $38D1 $020F: pattern 37 state
COMMENT $38D2 $0210: [$06DB] pattern 37, track 1
COMMENT $38D4 $0212: [$05CF] pattern 37, track 2
COMMENT $38D6 $0214: [$05CF] pattern 37, track 3
COMMENT $38D8 $0216: pattern 38 state
COMMENT $38D9 $0217: [$06C1] pattern 38, track 1
COMMENT $38DB $0219: [$05CF] pattern 38, track 2
COMMENT $38DD $021B: [$05CF] pattern 38, track 3
COMMENT $38DF $021D: pattern 39 state
COMMENT $38E0 $021E: [$070D] pattern 39, track 1
COMMENT $38E2 $0220: [$05CF] pattern 39, track 2
COMMENT $38E4 $0222: [$05CF] pattern 39, track 3
COMMENT $38E6 $0224: pattern 40 state
COMMENT $38E7 $0225: [$06C1] pattern 40, track 1
COMMENT $38E9 $0227: [$05CF] pattern 40, track 2
COMMENT $38EB $0229: [$05CF] pattern 40, track 3
COMMENT $38ED $022B: pattern 41 state
COMMENT $38EE $022C: [$06DB] pattern 41, track 1
COMMENT $38F0 $022E: [$05CF] pattern 41, track 2
COMMENT $38F2 $0230: [$05CF] pattern 41, track 3
COMMENT $38F4 $0232: pattern 42 state
COMMENT $38F5 $0233: [$06C1] pattern 42, track 1
COMMENT $38F7 $0235: [$05CF] pattern 42, track 2
COMMENT $38F9 $0237: [$05CF] pattern 42, track 3
COMMENT $38FB $0239: pattern 43 state
COMMENT $38FC $023A: [$06F3] pattern 43, track 1
COMMENT $38FE $023C: [$05CF] pattern 43, track 2
COMMENT $3900 $023E: [$05CF] pattern 43, track 3
COMMENT $3902 $0240: pattern 44 state
COMMENT $3903 $0241: [$06C1] pattern 44, track 1
COMMENT $3905 $0243: [$05CF] pattern 44, track 2
COMMENT $3907 $0245: [$05CF] pattern 44, track 3
COMMENT $3909 $0247: pattern 45 state
COMMENT $390A $0248: [$06DB] pattern 45, track 1
COMMENT $390C $024A: [$05CF] pattern 45, track 2
COMMENT $390E $024C: [$05CF] pattern 45, track 3
COMMENT $3910 $024E: pattern 46 state
COMMENT $3911 $024F: [$06C1] pattern 46, track 1
COMMENT $3913 $0251: [$05CF] pattern 46, track 2
COMMENT $3915 $0253: [$05CF] pattern 46, track 3
COMMENT $3917 $0255: pattern 47 state
COMMENT $3918 $0256: [$070D] pattern 47, track 1
COMMENT $391A $0258: [$05CF] pattern 47, track 2
COMMENT $391C $025A: [$05CF] pattern 47, track 3
COMMENT $391E $025C: pattern 48 state
COMMENT $391F $025D: [$05F2] pattern 48, track 1
COMMENT $3921 $025F: [$05CF] pattern 48, track 2
COMMENT $3923 $0261: [$05CF] pattern 48, track 3
COMMENT $3925 $0263: new height
COMMENT $3926 $0264: pattern 49 state
COMMENT $3927 $0265: [$078A] pattern 49, track 1
COMMENT $3929 $0267: [$05CF] pattern 49, track 2
COMMENT $392B $0269: [$05CF] pattern 49, track 3
COMMENT $392D $026B: new height
COMMENT $392E $026C: pattern 50 state
COMMENT $392F $026D: [$07F8] pattern 50, track 1
COMMENT $3931 $026F: [$05CF] pattern 50, track 2
COMMENT $3933 $0271: [$05CF] pattern 50, track 3
COMMENT $3935 $0273: new height
COMMENT $3936 $0274: pattern 51 state
COMMENT $3937 $0275: [$0836] pattern 51, track 1
COMMENT $3939 $0277: [$05CF] pattern 51, track 2
COMMENT $393B $0279: [$05CF] pattern 51, track 3
COMMENT $393D $027B: new height
COMMENT $393E $027C: pattern 52 state
COMMENT $393F $027D: [$07F8] pattern 52, track 1
COMMENT $3941 $027F: [$05CF] pattern 52, track 2
COMMENT $3943 $0281: [$05CF] pattern 52, track 3
COMMENT $3945 $0283: new height
COMMENT $3946 $0284: pattern 53 state
COMMENT $3947 $0285: [$085B] pattern 53, track 1
COMMENT $3949 $0287: [$05CF] pattern 53, track 2
COMMENT $394B $0289: [$05CF] pattern 53, track 3
COMMENT $394D $028B: new height
COMMENT $394E $028C: pattern 54 state
COMMENT $394F $028D: [$07F8] pattern 54, track 1
COMMENT $3951 $028F: [$05CF] pattern 54, track 2
COMMENT $3953 $0291: [$05CF] pattern 54, track 3
COMMENT $3955 $0293: new height
COMMENT $3956 $0294: pattern 55 state
COMMENT $3957 $0295: [$0836] pattern 55, track 1
COMMENT $3959 $0297: [$05CF] pattern 55, track 2
COMMENT $395B $0299: [$05CF] pattern 55, track 3
COMMENT $395D $029B: new height
COMMENT $395E $029C: pattern 56 state
COMMENT $395F $029D: [$07F8] pattern 56, track 1
COMMENT $3961 $029F: [$05CF] pattern 56, track 2
COMMENT $3963 $02A1: [$05CF] pattern 56, track 3
COMMENT $3965 $02A3: new height
COMMENT $3966 $02A4: pattern 57 state
COMMENT $3967 $02A5: [$085B] pattern 57, track 1
COMMENT $3969 $02A7: [$05CF] pattern 57, track 2
COMMENT $396B $02A9: [$05CF] pattern 57, track 3
COMMENT $396D $02AB: new height
COMMENT $396E $02AC: pattern 58 state
COMMENT $396F $02AD: [$0727] pattern 58, track 1
COMMENT $3971 $02AF: [$05CF] pattern 58, track 2
COMMENT $3973 $02B1: [$05CF] pattern 58, track 3
COMMENT $3975 $02B3: new height
COMMENT $3976 $02B4: pattern 59 state
COMMENT $3977 $02B5: [$0770] pattern 59, track 1
COMMENT $3979 $02B7: [$05CF] pattern 59, track 2
COMMENT $397B $02B9: [$05CF] pattern 59, track 3
COMMENT $397D $02BB: new height
COMMENT $397E $02BC: pattern 60 state
COMMENT $397F $02BD: [$0727] pattern 60, track 1
COMMENT $3981 $02BF: [$05CF] pattern 60, track 2
COMMENT $3983 $02C1: [$05CF] pattern 60, track 3
COMMENT $3985 $02C3: new height
COMMENT $3986 $02C4: pattern 61 state
COMMENT $3987 $02C5: [$079A] pattern 61, track 1
COMMENT $3989 $02C7: [$05CF] pattern 61, track 2
COMMENT $398B $02C9: [$05CF] pattern 61, track 3
COMMENT $398D $02CB: new height
COMMENT $398E $02CC: pattern 62 state
COMMENT $398F $02CD: [$0727] pattern 62, track 1
COMMENT $3991 $02CF: [$05CF] pattern 62, track 2
COMMENT $3993 $02D1: [$05CF] pattern 62, track 3
COMMENT $3995 $02D3: new height
COMMENT $3996 $02D4: pattern 63 state
COMMENT $3997 $02D5: [$0770] pattern 63, track 1
COMMENT $3999 $02D7: [$05CF] pattern 63, track 2
COMMENT $399B $02D9: [$05CF] pattern 63, track 3
COMMENT $399D $02DB: new height
COMMENT $399E $02DC: pattern 64 state
COMMENT $399F $02DD: [$0727] pattern 64, track 1
COMMENT $39A1 $02DF: [$05CF] pattern 64, track 2
COMMENT $39A3 $02E1: [$05CF] pattern 64, track 3
COMMENT $39A5 $02E3: new height
COMMENT $39A6 $02E4: pattern 65 state
COMMENT $39A7 $02E5: [$079A] pattern 65, track 1
COMMENT $39A9 $02E7: [$05CF] pattern 65, track 2
COMMENT $39AB $02E9: [$05CF] pattern 65, track 3
COMMENT $39AD $02EB: new height
COMMENT $39AE $02EC: pattern 66 state
COMMENT $39AF $02ED: [$07B4] pattern 66, track 1
COMMENT $39B1 $02EF: [$05CF] pattern 66, track 2
COMMENT $39B3 $02F1: [$05CF] pattern 66, track 3
COMMENT $39B5 $02F3: pattern 67 state
COMMENT $39B6 $02F4: [$07CD] pattern 67, track 1
COMMENT $39B8 $02F6: [$05CF] pattern 67, track 2
COMMENT $39BA $02F8: [$05CF] pattern 67, track 3
COMMENT $39BC $02FA: pattern 68 state
COMMENT $39BD $02FB: [$07B4] pattern 68, track 1
COMMENT $39BF $02FD: [$05CF] pattern 68, track 2
COMMENT $39C1 $02FF: [$05CF] pattern 68, track 3
COMMENT $39C3 $0301: pattern 69 state
COMMENT $39C4 $0302: [$07E2] pattern 69, track 1
COMMENT $39C6 $0304: [$05CF] pattern 69, track 2
COMMENT $39C8 $0306: [$05CF] pattern 69, track 3
COMMENT $39CA $0308: pattern 70 state
COMMENT $39CB $0309: [$07B4] pattern 70, track 1
COMMENT $39CD $030B: [$05CF] pattern 70, track 2
COMMENT $39CF $030D: [$05CF] pattern 70, track 3
COMMENT $39D1 $030F: pattern 71 state
COMMENT $39D2 $0310: [$07CD] pattern 71, track 1
COMMENT $39D4 $0312: [$05CF] pattern 71, track 2
COMMENT $39D6 $0314: [$05CF] pattern 71, track 3
COMMENT $39D8 $0316: pattern 72 state
COMMENT $39D9 $0317: [$07B4] pattern 72, track 1
COMMENT $39DB $0319: [$05CF] pattern 72, track 2
COMMENT $39DD $031B: [$05CF] pattern 72, track 3
COMMENT $39DF $031D: pattern 73 state
COMMENT $39E0 $031E: [$07E2] pattern 73, track 1
COMMENT $39E2 $0320: [$05CF] pattern 73, track 2
COMMENT $39E4 $0322: [$05CF] pattern 73, track 3
COMMENT $39E6 $0324: pattern 74 state
COMMENT $39E7 $0325: [$07B4] pattern 74, track 1
COMMENT $39E9 $0327: [$05CF] pattern 74, track 2
COMMENT $39EB $0329: [$05CF] pattern 74, track 3
COMMENT $39ED $032B: pattern 75 state
COMMENT $39EE $032C: [$07CD] pattern 75, track 1
COMMENT $39F0 $032E: [$05CF] pattern 75, track 2
COMMENT $39F2 $0330: [$05CF] pattern 75, track 3
COMMENT $39F4 $0332: pattern 76 state
COMMENT $39F5 $0333: [$07B4] pattern 76, track 1
COMMENT $39F7 $0335: [$05CF] pattern 76, track 2
COMMENT $39F9 $0337: [$05CF] pattern 76, track 3
COMMENT $39FB $0339: pattern 77 state
COMMENT $39FC $033A: [$07E2] pattern 77, track 1
COMMENT $39FE $033C: [$05CF] pattern 77, track 2
COMMENT $3A00 $033E: [$05CF] pattern 77, track 3
COMMENT $3A02 $0340: pattern 78 state
COMMENT $3A03 $0341: [$07B4] pattern 78, track 1
COMMENT $3A05 $0343: [$05CF] pattern 78, track 2
COMMENT $3A07 $0345: [$05CF] pattern 78, track 3
COMMENT $3A09 $0347: pattern 79 state
COMMENT $3A0A $0348: [$07CD] pattern 79, track 1
COMMENT $3A0C $034A: [$05CF] pattern 79, track 2
COMMENT $3A0E $034C: [$05CF] pattern 79, track 3
COMMENT $3A10 $034E: pattern 80 state
COMMENT $3A11 $034F: [$07B4] pattern 80, track 1
COMMENT $3A13 $0351: [$05CF] pattern 80, track 2
COMMENT $3A15 $0353: [$05CF] pattern 80, track 3
COMMENT $3A17 $0355: pattern 81 state
COMMENT $3A18 $0356: [$07E2] pattern 81, track 1
COMMENT $3A1A $0358: [$05CF] pattern 81, track 2
COMMENT $3A1C $035A: [$05CF] pattern 81, track 3
COMMENT $3A1E $035C: pattern 82 state
COMMENT $3A1F $035D: [$0880] pattern 82, track 1
COMMENT $3A21 $035F: [$05CF] pattern 82, track 2
COMMENT $3A23 $0361: [$05CF] pattern 82, track 3
COMMENT $3A25 $0363: new height
COMMENT $3A26 $0364: pattern 83 state
COMMENT $3A27 $0365: [$0919] pattern 83, track 1
COMMENT $3A29 $0367: [$05CF] pattern 83, track 2
COMMENT $3A2B $0369: [$05CF] pattern 83, track 3
COMMENT $3A2D $036B: new height
COMMENT $3A2E $036C: pattern 84 state
COMMENT $3A2F $036D: [$0919] pattern 84, track 1
COMMENT $3A31 $036F: [$05CF] pattern 84, track 2
COMMENT $3A33 $0371: [$05CF] pattern 84, track 3
COMMENT $3A35 $0373: pattern 85 state
COMMENT $3A36 $0374: [$0919] pattern 85, track 1
COMMENT $3A38 $0376: [$05CF] pattern 85, track 2
COMMENT $3A3A $0378: [$05CF] pattern 85, track 3
COMMENT $3A3C $037A: pattern 86 state
COMMENT $3A3D $037B: [$0919] pattern 86, track 1
COMMENT $3A3F $037D: [$05CF] pattern 86, track 2
COMMENT $3A41 $037F: [$05CF] pattern 86, track 3
COMMENT $3A43 $0381: pattern 87 state
COMMENT $3A44 $0382: [$0919] pattern 87, track 1
COMMENT $3A46 $0384: [$05CF] pattern 87, track 2
COMMENT $3A48 $0386: [$05CF] pattern 87, track 3
COMMENT $3A4A $0388: pattern 88 state
COMMENT $3A4B $0389: [$0919] pattern 88, track 1
COMMENT $3A4D $038B: [$05CF] pattern 88, track 2
COMMENT $3A4F $038D: [$05CF] pattern 88, track 3
COMMENT $3A51 $038F: pattern 89 state
COMMENT $3A52 $0390: [$0919] pattern 89, track 1
COMMENT $3A54 $0392: [$05CF] pattern 89, track 2
COMMENT $3A56 $0394: [$05CF] pattern 89, track 3
COMMENT $3A58 $0396: pattern 90 state
COMMENT $3A59 $0397: [$0919] pattern 90, track 1
COMMENT $3A5B $0399: [$05CF] pattern 90, track 2
COMMENT $3A5D $039B: [$05CF] pattern 90, track 3
COMMENT $3A5F $039D: pattern 91 state
COMMENT $3A60 $039E: [$0919] pattern 91, track 1
COMMENT $3A62 $03A0: [$05CF] pattern 91, track 2
COMMENT $3A64 $03A2: [$05CF] pattern 91, track 3
COMMENT $3A66 $03A4: pattern 92 state
COMMENT $3A67 $03A5: [$0919] pattern 92, track 1
COMMENT $3A69 $03A7: [$05CF] pattern 92, track 2
COMMENT $3A6B $03A9: [$05CF] pattern 92, track 3
COMMENT $3A6D $03AB: pattern 93 state
COMMENT $3A6E $03AC: [$0919] pattern 93, track 1
COMMENT $3A70 $03AE: [$05CF] pattern 93, track 2
COMMENT $3A72 $03B0: [$05CF] pattern 93, track 3
COMMENT $3A74 $03B2: pattern 94 state
COMMENT $3A75 $03B3: [$0919] pattern 94, track 1
COMMENT $3A77 $03B5: [$05CF] pattern 94, track 2
COMMENT $3A79 $03B7: [$05CF] pattern 94, track 3
COMMENT $3A7B $03B9: pattern 95 state
COMMENT $3A7C $03BA: [$0919] pattern 95, track 1
COMMENT $3A7E $03BC: [$05CF] pattern 95, track 2
COMMENT $3A80 $03BE: [$05CF] pattern 95, track 3
COMMENT $3A82 $03C0: pattern 96 state
COMMENT $3A83 $03C1: [$0919] pattern 96, track 1
COMMENT $3A85 $03C3: [$05CF] pattern 96, track 2
COMMENT $3A87 $03C5: [$05CF] pattern 96, track 3
COMMENT $3A89 $03C7: pattern 97 state
COMMENT $3A8A $03C8: [$0919] pattern 97, track 1
COMMENT $3A8C $03CA: [$05CF] pattern 97, track 2
COMMENT $3A8E $03CC: [$05CF] pattern 97, track 3
COMMENT $3A90 $03CE: pattern 98 state
COMMENT $3A91 $03CF: [$0919] pattern 98, track 1
COMMENT $3A93 $03D1: [$05CF] pattern 98, track 2
COMMENT $3A95 $03D3: [$05CF] pattern 98, track 3
COMMENT $3A97 $03D5: new height
COMMENT $3A98 $03D6: pattern 99 state
COMMENT $3A99 $03D7: [$0895] pattern 99, track 1
COMMENT $3A9B $03D9: [$05CF] pattern 99, track 2
COMMENT $3A9D $03DB: [$05CF] pattern 99, track 3
COMMENT $3A9F $03DD: pattern 100 state
COMMENT $3AA0 $03DE: [$0887] pattern 100, track 1
COMMENT $3AA2 $03E0: [$05CF] pattern 100, track 2
COMMENT $3AA4 $03E2: [$05CF] pattern 100, track 3
COMMENT $3AA6 $03E4: new height
COMMENT $3AA7 $03E5: pattern 101 state
COMMENT $3AA8 $03E6: [$0887] pattern 101, track 1
COMMENT $3AAA $03E8: [$05CF] pattern 101, track 2
COMMENT $3AAC $03EA: [$05CF] pattern 101, track 3
COMMENT $3AAE $03EC: new height
COMMENT $3AAF $03ED: pattern 102 state
COMMENT $3AB0 $03EE: [$089C] pattern 102, track 1
COMMENT $3AB2 $03F0: [$05CF] pattern 102, track 2
COMMENT $3AB4 $03F2: [$05CF] pattern 102, track 3
COMMENT $3AB6 $03F4: pattern 103 state
COMMENT $3AB7 $03F5: [$0887] pattern 103, track 1
COMMENT $3AB9 $03F7: [$05CF] pattern 103, track 2
COMMENT $3ABB $03F9: [$05CF] pattern 103, track 3
COMMENT $3ABD $03FB: new height
COMMENT $3ABE $03FC: pattern 104 state
COMMENT $3ABF $03FD: [$0887] pattern 104, track 1
COMMENT $3AC1 $03FF: [$05CF] pattern 104, track 2
COMMENT $3AC3 $0401: [$05CF] pattern 104, track 3
COMMENT $3AC5 $0403: new height
COMMENT $3AC6 $0404: pattern 105 state
COMMENT $3AC7 $0405: [$08A3] pattern 105, track 1
COMMENT $3AC9 $0407: [$05CF] pattern 105, track 2
COMMENT $3ACB $0409: [$05CF] pattern 105, track 3
COMMENT $3ACD $040B: pattern 106 state
COMMENT $3ACE $040C: [$0887] pattern 106, track 1
COMMENT $3AD0 $040E: [$05CF] pattern 106, track 2
COMMENT $3AD2 $0410: [$05CF] pattern 106, track 3
COMMENT $3AD4 $0412: new height
COMMENT $3AD5 $0413: pattern 107 state
COMMENT $3AD6 $0414: [$0887] pattern 107, track 1
COMMENT $3AD8 $0416: [$05CF] pattern 107, track 2
COMMENT $3ADA $0418: [$05CF] pattern 107, track 3
COMMENT $3ADC $041A: pattern 108 state
COMMENT $3ADD $041B: [$0887] pattern 108, track 1
COMMENT $3ADF $041D: [$05CF] pattern 108, track 2
COMMENT $3AE1 $041F: [$05CF] pattern 108, track 3
COMMENT $3AE3 $0421: pattern 109 state
COMMENT $3AE4 $0422: [$0887] pattern 109, track 1
COMMENT $3AE6 $0424: [$05CF] pattern 109, track 2
COMMENT $3AE8 $0426: [$05CF] pattern 109, track 3
COMMENT $3AEA $0428: new height
COMMENT $3AEB $0429: pattern 110 state
COMMENT $3AEC $042A: [$0895] pattern 110, track 1
COMMENT $3AEE $042C: [$05CF] pattern 110, track 2
COMMENT $3AF0 $042E: [$05CF] pattern 110, track 3
COMMENT $3AF2 $0430: pattern 111 state
COMMENT $3AF3 $0431: [$0887] pattern 111, track 1
COMMENT $3AF5 $0433: [$05CF] pattern 111, track 2
COMMENT $3AF7 $0435: [$05CF] pattern 111, track 3
COMMENT $3AF9 $0437: new height
COMMENT $3AFA $0438: pattern 112 state
COMMENT $3AFB $0439: [$0887] pattern 112, track 1
COMMENT $3AFD $043B: [$05CF] pattern 112, track 2
COMMENT $3AFF $043D: [$05CF] pattern 112, track 3
COMMENT $3B01 $043F: new height
COMMENT $3B02 $0440: pattern 113 state
COMMENT $3B03 $0441: [$089C] pattern 113, track 1
COMMENT $3B05 $0443: [$05CF] pattern 113, track 2
COMMENT $3B07 $0445: [$05CF] pattern 113, track 3
COMMENT $3B09 $0447: pattern 114 state
COMMENT $3B0A $0448: [$0887] pattern 114, track 1
COMMENT $3B0C $044A: [$05CF] pattern 114, track 2
COMMENT $3B0E $044C: [$05CF] pattern 114, track 3
COMMENT $3B10 $044E: new height
COMMENT $3B11 $044F: pattern 115 state
COMMENT $3B12 $0450: [$0887] pattern 115, track 1
COMMENT $3B14 $0452: [$05CF] pattern 115, track 2
COMMENT $3B16 $0454: [$05CF] pattern 115, track 3
COMMENT $3B18 $0456: new height
COMMENT $3B19 $0457: pattern 116 state
COMMENT $3B1A $0458: [$08A3] pattern 116, track 1
COMMENT $3B1C $045A: [$05CF] pattern 116, track 2
COMMENT $3B1E $045C: [$05CF] pattern 116, track 3
COMMENT $3B20 $045E: pattern 117 state
COMMENT $3B21 $045F: [$0887] pattern 117, track 1
COMMENT $3B23 $0461: [$05CF] pattern 117, track 2
COMMENT $3B25 $0463: [$05CF] pattern 117, track 3
COMMENT $3B27 $0465: new height
COMMENT $3B28 $0466: pattern 118 state
COMMENT $3B29 $0467: [$0887] pattern 118, track 1
COMMENT $3B2B $0469: [$05CF] pattern 118, track 2
COMMENT $3B2D $046B: [$05CF] pattern 118, track 3
COMMENT $3B2F $046D: pattern 119 state
COMMENT $3B30 $046E: [$0887] pattern 119, track 1
COMMENT $3B32 $0470: [$05CF] pattern 119, track 2
COMMENT $3B34 $0472: [$05CF] pattern 119, track 3
COMMENT $3B36 $0474: pattern 120 state
COMMENT $3B37 $0475: [$0887] pattern 120, track 1
COMMENT $3B39 $0477: [$05CF] pattern 120, track 2
COMMENT $3B3B $0479: [$05CF] pattern 120, track 3
COMMENT $3B3D $047B: new height
COMMENT $3B3E $047C: pattern 121 state
COMMENT $3B3F $047D: [$0895] pattern 121, track 1
COMMENT $3B41 $047F: [$05CF] pattern 121, track 2
COMMENT $3B43 $0481: [$05CF] pattern 121, track 3
COMMENT $3B45 $0483: pattern 122 state
COMMENT $3B46 $0484: [$0887] pattern 122, track 1
COMMENT $3B48 $0486: [$05CF] pattern 122, track 2
COMMENT $3B4A $0488: [$05CF] pattern 122, track 3
COMMENT $3B4C $048A: pattern 123 state
COMMENT $3B4D $048B: [$08AA] pattern 123, track 1
COMMENT $3B4F $048D: [$05CF] pattern 123, track 2
COMMENT $3B51 $048F: [$05CF] pattern 123, track 3
COMMENT $3B53 $0491: new height
COMMENT $3B54 $0492: pattern 124 state
COMMENT $3B55 $0493: [$089C] pattern 124, track 1
COMMENT $3B57 $0495: [$05CF] pattern 124, track 2
COMMENT $3B59 $0497: [$05CF] pattern 124, track 3
COMMENT $3B5B $0499: new height
COMMENT $3B5C $049A: pattern 125 state
COMMENT $3B5D $049B: [$0887] pattern 125, track 1
COMMENT $3B5F $049D: [$05CF] pattern 125, track 2
COMMENT $3B61 $049F: [$05CF] pattern 125, track 3
COMMENT $3B63 $04A1: pattern 126 state
COMMENT $3B64 $04A2: [$0887] pattern 126, track 1
COMMENT $3B66 $04A4: [$05CF] pattern 126, track 2
COMMENT $3B68 $04A6: [$05CF] pattern 126, track 3
COMMENT $3B6A $04A8: pattern 127 state
COMMENT $3B6B $04A9: [$0887] pattern 127, track 1
COMMENT $3B6D $04AB: [$05CF] pattern 127, track 2
COMMENT $3B6F $04AD: [$05CF] pattern 127, track 3
COMMENT $3B71 $04AF: pattern 128 state
COMMENT $3B72 $04B0: [$08A3] pattern 128, track 1
COMMENT $3B74 $04B2: [$05CF] pattern 128, track 2
COMMENT $3B76 $04B4: [$05CF] pattern 128, track 3
COMMENT $3B78 $04B6: pattern 129 state
COMMENT $3B79 $04B7: [$0887] pattern 129, track 1
COMMENT $3B7B $04B9: [$05CF] pattern 129, track 2
COMMENT $3B7D $04BB: [$05CF] pattern 129, track 3
COMMENT $3B7F $04BD: pattern 130 state
COMMENT $3B80 $04BE: [$0887] pattern 130, track 1
COMMENT $3B82 $04C0: [$05CF] pattern 130, track 2
COMMENT $3B84 $04C2: [$05CF] pattern 130, track 3
COMMENT $3B86 $04C4: pattern 131 state
COMMENT $3B87 $04C5: [$0887] pattern 131, track 1
COMMENT $3B89 $04C7: [$05CF] pattern 131, track 2
COMMENT $3B8B $04C9: [$05CF] pattern 131, track 3
COMMENT $3B8D $04CB: pattern 132 state
COMMENT $3B8E $04CC: [$0887] pattern 132, track 1
COMMENT $3B90 $04CE: [$05CF] pattern 132, track 2
COMMENT $3B92 $04D0: [$05CF] pattern 132, track 3
COMMENT $3B94 $04D2: pattern 133 state
COMMENT $3B95 $04D3: [$0887] pattern 133, track 1
COMMENT $3B97 $04D5: [$05CF] pattern 133, track 2
COMMENT $3B99 $04D7: [$05CF] pattern 133, track 3
COMMENT $3B9B $04D9: new height
COMMENT $3B9C $04DA: pattern 134 state
COMMENT $3B9D $04DB: [$0887] pattern 134, track 1
COMMENT $3B9F $04DD: [$05CF] pattern 134, track 2
COMMENT $3BA1 $04DF: [$05CF] pattern 134, track 3
COMMENT $3BA3 $04E1: pattern 135 state
COMMENT $3BA4 $04E2: [$0887] pattern 135, track 1
COMMENT $3BA6 $04E4: [$05CF] pattern 135, track 2
COMMENT $3BA8 $04E6: [$05CF] pattern 135, track 3
COMMENT $3BAA $04E8: pattern 136 state
COMMENT $3BAB $04E9: [$0887] pattern 136, track 1
COMMENT $3BAD $04EB: [$05CF] pattern 136, track 2
COMMENT $3BAF $04ED: [$05CF] pattern 136, track 3
COMMENT $3BB1 $04EF: pattern 137 state
COMMENT $3BB2 $04F0: [$0887] pattern 137, track 1
COMMENT $3BB4 $04F2: [$05CF] pattern 137, track 2
COMMENT $3BB6 $04F4: [$05CF] pattern 137, track 3
COMMENT $3BB8 $04F6: pattern 138 state
COMMENT $3BB9 $04F7: [$05CF] pattern 138, track 1
COMMENT $3BBB $04F9: [$05CF] pattern 138, track 2
COMMENT $3BBD $04FB: [$05CF] pattern 138, track 3
COMMENT $3BBF $04FD: pattern 139 state
COMMENT $3BC0 $04FE: [$0895] pattern 139, track 1
COMMENT $3BC2 $0500: [$05CF] pattern 139, track 2
COMMENT $3BC4 $0502: [$05CF] pattern 139, track 3
COMMENT $3BC6 $0504: new height
COMMENT $3BC7 $0505: pattern 140 state
COMMENT $3BC8 $0506: [$0887] pattern 140, track 1
COMMENT $3BCA $0508: [$05CF] pattern 140, track 2
COMMENT $3BCC $050A: [$05CF] pattern 140, track 3
COMMENT $3BCE $050C: pattern 141 state
COMMENT $3BCF $050D: [$0887] pattern 141, track 1
COMMENT $3BD1 $050F: [$05CF] pattern 141, track 2
COMMENT $3BD3 $0511: [$05CF] pattern 141, track 3
COMMENT $3BD5 $0513: pattern 142 state
COMMENT $3BD6 $0514: [$0887] pattern 142, track 1
COMMENT $3BD8 $0516: [$05CF] pattern 142, track 2
COMMENT $3BDA $0518: [$05CF] pattern 142, track 3
COMMENT $3BDC $051A: pattern 143 state
COMMENT $3BDD $051B: [$089C] pattern 143, track 1
COMMENT $3BDF $051D: [$05CF] pattern 143, track 2
COMMENT $3BE1 $051F: [$05CF] pattern 143, track 3
COMMENT $3BE3 $0521: pattern 144 state
COMMENT $3BE4 $0522: [$0887] pattern 144, track 1
COMMENT $3BE6 $0524: [$05CF] pattern 144, track 2
COMMENT $3BE8 $0526: [$05CF] pattern 144, track 3
COMMENT $3BEA $0528: pattern 145 state
COMMENT $3BEB $0529: [$0887] pattern 145, track 1
COMMENT $3BED $052B: [$05CF] pattern 145, track 2
COMMENT $3BEF $052D: [$05CF] pattern 145, track 3
COMMENT $3BF1 $052F: pattern 146 state
COMMENT $3BF2 $0530: [$0887] pattern 146, track 1
COMMENT $3BF4 $0532: [$05CF] pattern 146, track 2
COMMENT $3BF6 $0534: [$05CF] pattern 146, track 3
COMMENT $3BF8 $0536: pattern 147 state
COMMENT $3BF9 $0537: [$08A3] pattern 147, track 1
COMMENT $3BFB $0539: [$05CF] pattern 147, track 2
COMMENT $3BFD $053B: [$05CF] pattern 147, track 3
COMMENT $3BFF $053D: pattern 148 state
COMMENT $3C00 $053E: [$0887] pattern 148, track 1
COMMENT $3C02 $0540: [$05CF] pattern 148, track 2
COMMENT $3C04 $0542: [$05CF] pattern 148, track 3
COMMENT $3C06 $0544: pattern 149 state
COMMENT $3C07 $0545: [$0887] pattern 149, track 1
COMMENT $3C09 $0547: [$05CF] pattern 149, track 2
COMMENT $3C0B $0549: [$05CF] pattern 149, track 3
COMMENT $3C0D $054B: pattern 150 state
COMMENT $3C0E $054C: [$0887] pattern 150, track 1
COMMENT $3C10 $054E: [$05CF] pattern 150, track 2
COMMENT $3C12 $0550: [$05CF] pattern 150, track 3
COMMENT $3C14 $0552: pattern 151 state
COMMENT $3C15 $0553: [$0887] pattern 151, track 1
COMMENT $3C17 $0555: [$05CF] pattern 151, track 2
COMMENT $3C19 $0557: [$05CF] pattern 151, track 3
COMMENT $3C1B $0559: new height
COMMENT $3C1C $055A: pattern 152 state
COMMENT $3C1D $055B: [$08B6] pattern 152, track 1
COMMENT $3C1F $055D: [$05CF] pattern 152, track 2
COMMENT $3C21 $055F: [$05CF] pattern 152, track 3
COMMENT $3C23 $0561: pattern 153 state
COMMENT $3C24 $0562: [$08CE] pattern 153, track 1
COMMENT $3C26 $0564: [$05CF] pattern 153, track 2
COMMENT $3C28 $0566: [$05CF] pattern 153, track 3
COMMENT $3C2A $0568: pattern 154 state
COMMENT $3C2B $0569: [$08E6] pattern 154, track 1
COMMENT $3C2D $056B: [$05CF] pattern 154, track 2
COMMENT $3C2F $056D: [$05CF] pattern 154, track 3
COMMENT $3C31 $056F: pattern 155 state
COMMENT $3C32 $0570: [$08E6] pattern 155, track 1
COMMENT $3C34 $0572: [$05CF] pattern 155, track 2
COMMENT $3C36 $0574: [$05CF] pattern 155, track 3
COMMENT $3C38 $0576: pattern 156 state
COMMENT $3C39 $0577: [$08B6] pattern 156, track 1
COMMENT $3C3B $0579: [$05CF] pattern 156, track 2
COMMENT $3C3D $057B: [$05CF] pattern 156, track 3
COMMENT $3C3F $057D: pattern 157 state
COMMENT $3C40 $057E: [$08CE] pattern 157, track 1
COMMENT $3C42 $0580: [$05CF] pattern 157, track 2
COMMENT $3C44 $0582: [$05CF] pattern 157, track 3
COMMENT $3C46 $0584: pattern 158 state
COMMENT $3C47 $0585: [$08E6] pattern 158, track 1
COMMENT $3C49 $0587: [$05CF] pattern 158, track 2
COMMENT $3C4B $0589: [$05CF] pattern 158, track 3
COMMENT $3C4D $058B: pattern 159 state
COMMENT $3C4E $058C: [$08E6] pattern 159, track 1
COMMENT $3C50 $058E: [$05CF] pattern 159, track 2
COMMENT $3C52 $0590: [$05CF] pattern 159, track 3
COMMENT $3C54 $0592: pattern 160 state
COMMENT $3C55 $0593: [$08B6] pattern 160, track 1
COMMENT $3C57 $0595: [$05CF] pattern 160, track 2
COMMENT $3C59 $0597: [$05CF] pattern 160, track 3
COMMENT $3C5B $0599: pattern 161 state
COMMENT $3C5C $059A: [$08CE] pattern 161, track 1
COMMENT $3C5E $059C: [$05CF] pattern 161, track 2
COMMENT $3C60 $059E: [$05CF] pattern 161, track 3
COMMENT $3C62 $05A0: pattern 162 state
COMMENT $3C63 $05A1: [$08E6] pattern 162, track 1
COMMENT $3C65 $05A3: [$05CF] pattern 162, track 2
COMMENT $3C67 $05A5: [$05CF] pattern 162, track 3
COMMENT $3C69 $05A7: pattern 163 state
COMMENT $3C6A $05A8: [$08E6] pattern 163, track 1
COMMENT $3C6C $05AA: [$05CF] pattern 163, track 2
COMMENT $3C6E $05AC: [$05CF] pattern 163, track 3
COMMENT $3C70 $05AE: pattern 164 state
COMMENT $3C71 $05AF: [$08B6] pattern 164, track 1
COMMENT $3C73 $05B1: [$05CF] pattern 164, track 2
COMMENT $3C75 $05B3: [$05CF] pattern 164, track 3
COMMENT $3C77 $05B5: pattern 165 state
COMMENT $3C78 $05B6: [$08CE] pattern 165, track 1
COMMENT $3C7A $05B8: [$05CF] pattern 165, track 2
COMMENT $3C7C $05BA: [$05CF] pattern 165, track 3
COMMENT $3C7E $05BC: pattern 166 state
COMMENT $3C7F $05BD: [$08E6] pattern 166, track 1
COMMENT $3C81 $05BF: [$05CF] pattern 166, track 2
COMMENT $3C83 $05C1: [$05CF] pattern 166, track 3
COMMENT $3C85 $05C3: pattern 167 state
COMMENT $3C86 $05C4: [$08FE] pattern 167, track 1
COMMENT $3C88 $05C6: [$05CF] pattern 167, track 2
COMMENT $3C8A $05C8: [$05CF] pattern 167, track 3
COMMENT $3C8C $05CA: pattern 168 state
COMMENT $3C8D $05CB: [$0109] song restart address
COMMENT $3C8F $05CD: data, speed 8
COMMENT $3C90 $05CE: wait 128
COMMENT $3C91 $05CF: normal track data,  note: C0
COMMENT $3C92 $05D0: vol off
COMMENT $3C93 $05D1: pitch
COMMENT $3C95 $05D3: normal track data,  note: C0
COMMENT $3C96 $05D4: vol off
COMMENT $3C97 $05D5: normal track data,  note: C0
COMMENT $3C98 $05D6: vol off
COMMENT $3C99 $05D7: normal track data,  note: C0
COMMENT $3C9A $05D8: vol off
COMMENT $3C9B $05D9: normal track data,  note: C0
COMMENT $3C9C $05DA: vol off
COMMENT $3C9D $05DB: normal track data,  note: C0
COMMENT $3C9E $05DC: vol off
COMMENT $3C9F $05DD: normal track data,  note: C0
COMMENT $3CA0 $05DE: vol off
COMMENT $3CA1 $05DF: normal track data,  note: C0
COMMENT $3CA2 $05E0: vol off
COMMENT $3CA3 $05E1: normal track data,  note: C0
COMMENT $3CA4 $05E2: vol off
COMMENT $3CA5 $05E3: normal track data,  note: C0
COMMENT $3CA6 $05E4: vol off
COMMENT $3CA7 $05E5: normal track data,  note: C0
COMMENT $3CA8 $05E6: vol off
COMMENT $3CA9 $05E7: normal track data,  note: C0
COMMENT $3CAA $05E8: vol off
COMMENT $3CAB $05E9: normal track data,  wait 11
COMMENT $3CAC $05EA: normal track data,  note: C0
COMMENT $3CAD $05EB: vol off
COMMENT $3CAE $05EC: normal track data,  note: C0
COMMENT $3CAF $05ED: vol off
COMMENT $3CB0 $05EE: normal track data,  wait 0
COMMENT $3CB1 $05EF: normal track data,  note: C0
COMMENT $3CB2 $05F0: vol off
COMMENT $3CB3 $05F1: track end signature found
COMMENT $3CB4 $05F2: normal track data,  note: G1
COMMENT $3CB5 $05F3: vol = $F (inverted)
COMMENT $3CB6 $05F4: pitch
COMMENT $3CB8 $05F6: instrument
COMMENT $3CB9 $05F7: normal track data,  note: C0
COMMENT $3CBA $05F8: vol off
COMMENT $3CBB $05F9: pitch
COMMENT $3CBD $05FB: normal track data,  note: C0
COMMENT $3CBE $05FC: vol off
COMMENT $3CBF $05FD: normal track data,  note: C0
COMMENT $3CC0 $05FE: vol off
COMMENT $3CC1 $05FF: normal track data,  note: C0
COMMENT $3CC2 $0600: vol off
COMMENT $3CC3 $0601: normal track data,  note: C0
COMMENT $3CC4 $0602: vol = $E (inverted)
COMMENT $3CC5 $0603: normal track data,  note: C0
COMMENT $3CC6 $0604: vol off
COMMENT $3CC7 $0605: normal track data,  note: C0
COMMENT $3CC8 $0606: vol off
COMMENT $3CC9 $0607: normal track data,  note: C0
COMMENT $3CCA $0608: vol off
COMMENT $3CCB $0609: normal track data,  note: C0
COMMENT $3CCC $060A: vol off
COMMENT $3CCD $060B: normal track data,  note: C0
COMMENT $3CCE $060C: vol = $D (inverted)
COMMENT $3CCF $060D: normal track data,  note: C0
COMMENT $3CD0 $060E: vol off
COMMENT $3CD1 $060F: normal track data,  note: C0
COMMENT $3CD2 $0610: vol off
COMMENT $3CD3 $0611: normal track data,  note: C0
COMMENT $3CD4 $0612: vol off
COMMENT $3CD5 $0613: normal track data,  note: C0
COMMENT $3CD6 $0614: vol off
COMMENT $3CD7 $0615: normal track data,  note: C0
COMMENT $3CD8 $0616: vol = $C (inverted)
COMMENT $3CD9 $0617: normal track data,  note: C0
COMMENT $3CDA $0618: vol off
COMMENT $3CDB $0619: normal track data,  note: C0
COMMENT $3CDC $061A: vol off
COMMENT $3CDD $061B: normal track data,  note: C0
COMMENT $3CDE $061C: vol off
COMMENT $3CDF $061D: normal track data,  note: C0
COMMENT $3CE0 $061E: vol off
COMMENT $3CE1 $061F: normal track data,  note: C0
COMMENT $3CE2 $0620: vol = $B (inverted)
COMMENT $3CE3 $0621: normal track data,  note: C0
COMMENT $3CE4 $0622: vol off
COMMENT $3CE5 $0623: normal track data,  note: C0
COMMENT $3CE6 $0624: vol off
COMMENT $3CE7 $0625: normal track data,  note: C0
COMMENT $3CE8 $0626: vol off
COMMENT $3CE9 $0627: normal track data,  note: C0
COMMENT $3CEA $0628: vol off
COMMENT $3CEB $0629: normal track data,  note: C0
COMMENT $3CEC $062A: vol = $A (inverted)
COMMENT $3CED $062B: normal track data,  note: C0
COMMENT $3CEE $062C: vol off
COMMENT $3CEF $062D: normal track data,  note: C0
COMMENT $3CF0 $062E: vol = $9 (inverted)
COMMENT $3CF1 $062F: normal track data,  note: C0
COMMENT $3CF2 $0630: vol = $8 (inverted)
COMMENT $3CF3 $0631: normal track data,  note: C0
COMMENT $3CF4 $0632: vol = $7 (inverted)
COMMENT $3CF5 $0633: normal track data,  note: C0
COMMENT $3CF6 $0634: vol = $6 (inverted)
COMMENT $3CF7 $0635: normal track data,  note: C0
COMMENT $3CF8 $0636: vol = $5 (inverted)
COMMENT $3CF9 $0637: normal track data,  note: C5
COMMENT $3CFA $0638: vol = $6 (inverted)
COMMENT $3CFB $0639: pitch
COMMENT $3CFD $063B: instrument
COMMENT $3CFE $063C: normal track data,  wait 0
COMMENT $3CFF $063D: normal track data,  note: C5
COMMENT $3D00 $063E: vol = $7 (inverted)
COMMENT $3D01 $063F: instrument
COMMENT $3D02 $0640: normal track data,  note: C5
COMMENT $3D03 $0641: vol = $8 (inverted)
COMMENT $3D04 $0642: normal track data,  note: C5
COMMENT $3D05 $0643: vol = $9 (inverted)
COMMENT $3D06 $0644: normal track data,  note: C5
COMMENT $3D07 $0645: vol = $A (inverted)
COMMENT $3D08 $0646: normal track data,  note: C5
COMMENT $3D09 $0647: vol = $B (inverted)
COMMENT $3D0A $0648: normal track data,  note: C5
COMMENT $3D0B $0649: vol = $5 (inverted)
COMMENT $3D0C $064A: normal track data,  note: C5
COMMENT $3D0D $064B: vol = $C (inverted)
COMMENT $3D0E $064C: instrument
COMMENT $3D0F $064D: normal track data,  note: C5
COMMENT $3D10 $064E: vol = $7 (inverted)
COMMENT $3D11 $064F: normal track data,  note: C5
COMMENT $3D12 $0650: vol = $D (inverted)
COMMENT $3D13 $0651: instrument
COMMENT $3D14 $0652: normal track data,  note: C5
COMMENT $3D15 $0653: vol = $E (inverted)
COMMENT $3D16 $0654: normal track data,  note: C5
COMMENT $3D17 $0655: vol = $F (inverted)
COMMENT $3D18 $0656: full optimization, no escape: C5
COMMENT $3D19 $0657: full optimization, no escape: C5
COMMENT $3D1A $0658: normal track data,  note: C5
COMMENT $3D1B $0659: vol = $9 (inverted)
COMMENT $3D1C $065A: normal track data,  note: C5
COMMENT $3D1D $065B: vol = $F (inverted)
COMMENT $3D1E $065C: pitch
COMMENT $3D20 $065E: instrument
COMMENT $3D21 $065F: normal track data,  note: C5
COMMENT $3D22 $0660: vol = $9 (inverted)
COMMENT $3D23 $0661: normal track data,  note: C5
COMMENT $3D24 $0662: vol = $F (inverted)
COMMENT $3D25 $0663: instrument
COMMENT $3D26 $0664: full optimization, no escape: C5
COMMENT $3D27 $0665: full optimization, no escape: C5
COMMENT $3D28 $0666: full optimization, no escape: C5
COMMENT $3D29 $0667: full optimization, no escape: C5
COMMENT $3D2A $0668: normal track data,  note: C5
COMMENT $3D2B $0669: vol = $9 (inverted)
COMMENT $3D2C $066A: normal track data,  note: A#1
COMMENT $3D2D $066B: vol = $F (inverted)
COMMENT $3D2E $066C: pitch
COMMENT $3D30 $066E: instrument
COMMENT $3D31 $066F: full optimization, no escape: C2
COMMENT $3D32 $0670: normal track data,  note: C5
COMMENT $3D33 $0671: vol off
COMMENT $3D34 $0672: instrument
COMMENT $3D35 $0673: full optimization, no escape: C5
COMMENT $3D36 $0674: full optimization, no escape: C5
COMMENT $3D37 $0675: full optimization, no escape: C5
COMMENT $3D38 $0676: normal track data,  note: C5
COMMENT $3D39 $0677: vol off
COMMENT $3D3A $0678: instrument
COMMENT $3D3B $0679: normal track data,  note: C5
COMMENT $3D3C $067A: vol = $9 (inverted)
COMMENT $3D3D $067B: normal track data,  note: A#1
COMMENT $3D3E $067C: vol = $F (inverted)
COMMENT $3D3F $067D: pitch
COMMENT $3D41 $067F: instrument
COMMENT $3D42 $0680: full optimization, no escape: C2
COMMENT $3D43 $0681: normal track data,  note: C2
COMMENT $3D44 $0682: vol off
COMMENT $3D45 $0683: instrument
COMMENT $3D46 $0684: normal track data,  note: C5
COMMENT $3D47 $0685: vol off
COMMENT $3D48 $0686: instrument
COMMENT $3D49 $0687: normal track data,  note: C5
COMMENT $3D4A $0688: vol off
COMMENT $3D4B $0689: instrument
COMMENT $3D4C $068A: normal track data,  note: C5
COMMENT $3D4D $068B: vol off
COMMENT $3D4E $068C: instrument
COMMENT $3D4F $068D: normal track data,  note: C2
COMMENT $3D50 $068E: vol off
COMMENT $3D51 $068F: instrument
COMMENT $3D52 $0690: normal track data,  note: C2
COMMENT $3D53 $0691: vol = $8 (inverted)
COMMENT $3D54 $0692: normal track data,  note: A#1
COMMENT $3D55 $0693: vol = $F (inverted)
COMMENT $3D56 $0694: pitch
COMMENT $3D58 $0696: instrument
COMMENT $3D59 $0697: full optimization, no escape: C2
COMMENT $3D5A $0698: normal track data,  note: C2
COMMENT $3D5B $0699: vol off
COMMENT $3D5C $069A: instrument
COMMENT $3D5D $069B: normal track data,  note: C5
COMMENT $3D5E $069C: vol off
COMMENT $3D5F $069D: instrument
COMMENT $3D60 $069E: normal track data,  note: C4
COMMENT $3D61 $069F: vol off
COMMENT $3D62 $06A0: instrument
COMMENT $3D63 $06A1: normal track data,  note: C5
COMMENT $3D64 $06A2: vol off
COMMENT $3D65 $06A3: instrument
COMMENT $3D66 $06A4: normal track data,  note: C2
COMMENT $3D67 $06A5: vol off
COMMENT $3D68 $06A6: instrument
COMMENT $3D69 $06A7: normal track data,  note: C5
COMMENT $3D6A $06A8: vol off
COMMENT $3D6B $06A9: instrument
COMMENT $3D6C $06AA: normal track data,  note: A#1
COMMENT $3D6D $06AB: vol off
COMMENT $3D6E $06AC: pitch
COMMENT $3D70 $06AE: instrument
COMMENT $3D71 $06AF: full optimization, no escape: C2
COMMENT $3D72 $06B0: normal track data,  note: C2
COMMENT $3D73 $06B1: vol off
COMMENT $3D74 $06B2: instrument
COMMENT $3D75 $06B3: normal track data,  note: C5
COMMENT $3D76 $06B4: vol off
COMMENT $3D77 $06B5: instrument
COMMENT $3D78 $06B6: normal track data,  note: C5
COMMENT $3D79 $06B7: vol off
COMMENT $3D7A $06B8: instrument
COMMENT $3D7B $06B9: normal track data,  note: C5
COMMENT $3D7C $06BA: vol off
COMMENT $3D7D $06BB: instrument
COMMENT $3D7E $06BC: normal track data,  note: C2
COMMENT $3D7F $06BD: vol off
COMMENT $3D80 $06BE: instrument
COMMENT $3D81 $06BF: normal track data,  note: C2
COMMENT $3D82 $06C0: vol = $8 (inverted)
COMMENT $3D83 $06C1: normal track data,  note: G1
COMMENT $3D84 $06C2: vol = $F (inverted)
COMMENT $3D85 $06C3: pitch
COMMENT $3D87 $06C5: instrument
COMMENT $3D88 $06C6: normal track data,  note: C2
COMMENT $3D89 $06C7: vol off
COMMENT $3D8A $06C8: instrument
COMMENT $3D8B $06C9: normal track data,  note: C2
COMMENT $3D8C $06CA: vol off
COMMENT $3D8D $06CB: instrument
COMMENT $3D8E $06CC: normal track data,  note: C5
COMMENT $3D8F $06CD: vol off
COMMENT $3D90 $06CE: instrument
COMMENT $3D91 $06CF: normal track data,  note: C4
COMMENT $3D92 $06D0: vol off
COMMENT $3D93 $06D1: instrument
COMMENT $3D94 $06D2: normal track data,  note: C5
COMMENT $3D95 $06D3: vol off
COMMENT $3D96 $06D4: instrument
COMMENT $3D97 $06D5: normal track data,  note: C2
COMMENT $3D98 $06D6: vol off
COMMENT $3D99 $06D7: instrument
COMMENT $3D9A $06D8: normal track data,  note: C5
COMMENT $3D9B $06D9: vol off
COMMENT $3D9C $06DA: instrument
COMMENT $3D9D $06DB: normal track data,  note: G1
COMMENT $3D9E $06DC: vol off
COMMENT $3D9F $06DD: pitch
COMMENT $3DA1 $06DF: instrument
COMMENT $3DA2 $06E0: normal track data,  note: C2
COMMENT $3DA3 $06E1: vol off
COMMENT $3DA4 $06E2: instrument
COMMENT $3DA5 $06E3: normal track data,  note: C2
COMMENT $3DA6 $06E4: vol off
COMMENT $3DA7 $06E5: instrument
COMMENT $3DA8 $06E6: normal track data,  note: G1
COMMENT $3DA9 $06E7: vol off
COMMENT $3DAA $06E8: instrument
COMMENT $3DAB $06E9: normal track data,  note: A#5
COMMENT $3DAC $06EA: vol = $E (inverted)
COMMENT $3DAD $06EB: instrument
COMMENT $3DAE $06EC: full optimization, no escape: C6
COMMENT $3DAF $06ED: normal track data,  note: C2
COMMENT $3DB0 $06EE: vol = $F (inverted)
COMMENT $3DB1 $06EF: instrument
COMMENT $3DB2 $06F0: normal track data,  note: C5
COMMENT $3DB3 $06F1: vol off
COMMENT $3DB4 $06F2: instrument
COMMENT $3DB5 $06F3: normal track data,  note: G1
COMMENT $3DB6 $06F4: vol off
COMMENT $3DB7 $06F5: pitch
COMMENT $3DB9 $06F7: instrument
COMMENT $3DBA $06F8: normal track data,  note: C2
COMMENT $3DBB $06F9: vol off
COMMENT $3DBC $06FA: instrument
COMMENT $3DBD $06FB: normal track data,  note: C2
COMMENT $3DBE $06FC: vol off
COMMENT $3DBF $06FD: instrument
COMMENT $3DC0 $06FE: normal track data,  note: C5
COMMENT $3DC1 $06FF: vol off
COMMENT $3DC2 $0700: instrument
COMMENT $3DC3 $0701: normal track data,  note: C5
COMMENT $3DC4 $0702: vol off
COMMENT $3DC5 $0703: instrument
COMMENT $3DC6 $0704: normal track data,  note: C5
COMMENT $3DC7 $0705: vol off
COMMENT $3DC8 $0706: instrument
COMMENT $3DC9 $0707: normal track data,  note: C2
COMMENT $3DCA $0708: vol off
COMMENT $3DCB $0709: instrument
COMMENT $3DCC $070A: normal track data,  note: C5
COMMENT $3DCD $070B: vol off
COMMENT $3DCE $070C: instrument
COMMENT $3DCF $070D: normal track data,  note: G1
COMMENT $3DD0 $070E: vol off
COMMENT $3DD1 $070F: pitch
COMMENT $3DD3 $0711: instrument
COMMENT $3DD4 $0712: normal track data,  note: C2
COMMENT $3DD5 $0713: vol off
COMMENT $3DD6 $0714: instrument
COMMENT $3DD7 $0715: normal track data,  note: C2
COMMENT $3DD8 $0716: vol off
COMMENT $3DD9 $0717: instrument
COMMENT $3DDA $0718: normal track data,  note: C5
COMMENT $3DDB $0719: vol off
COMMENT $3DDC $071A: instrument
COMMENT $3DDD $071B: normal track data,  note: C5
COMMENT $3DDE $071C: vol off
COMMENT $3DDF $071D: instrument
COMMENT $3DE0 $071E: normal track data,  note: C5
COMMENT $3DE1 $071F: vol off
COMMENT $3DE2 $0720: instrument
COMMENT $3DE3 $0721: normal track data,  note: C2
COMMENT $3DE4 $0722: vol off
COMMENT $3DE5 $0723: instrument
COMMENT $3DE6 $0724: normal track data,  note: A#5
COMMENT $3DE7 $0725: vol off
COMMENT $3DE8 $0726: instrument
COMMENT $3DE9 $0727: normal track data,  note: G1
COMMENT $3DEA $0728: vol off
COMMENT $3DEB $0729: pitch
COMMENT $3DED $072B: instrument
COMMENT $3DEE $072C: normal track data,  note: C5
COMMENT $3DEF $072D: vol off
COMMENT $3DF0 $072E: instrument
COMMENT $3DF1 $072F: normal track data,  note: C2
COMMENT $3DF2 $0730: vol off
COMMENT $3DF3 $0731: instrument
COMMENT $3DF4 $0732: normal track data,  note: C5
COMMENT $3DF5 $0733: vol off
COMMENT $3DF6 $0734: instrument
COMMENT $3DF7 $0735: normal track data,  note: C5
COMMENT $3DF8 $0736: vol = $D (inverted)
COMMENT $3DF9 $0737: instrument
COMMENT $3DFA $0738: normal track data,  note: F#2
COMMENT $3DFB $0739: vol = $F (inverted)
COMMENT $3DFC $073A: instrument
COMMENT $3DFD $073B: normal track data,  note: C2
COMMENT $3DFE $073C: vol off
COMMENT $3DFF $073D: instrument
COMMENT $3E00 $073E: normal track data,  note: F#3
COMMENT $3E01 $073F: vol off
COMMENT $3E02 $0740: instrument
COMMENT $3E03 $0741: normal track data,  note: G1
COMMENT $3E04 $0742: vol off
COMMENT $3E05 $0743: instrument
COMMENT $3E06 $0744: normal track data,  note: F#3
COMMENT $3E07 $0745: vol = $A (inverted)
COMMENT $3E08 $0746: instrument
COMMENT $3E09 $0747: normal track data,  note: C2
COMMENT $3E0A $0748: vol = $F (inverted)
COMMENT $3E0B $0749: instrument
COMMENT $3E0C $074A: normal track data,  note: C5
COMMENT $3E0D $074B: vol off
COMMENT $3E0E $074C: instrument
COMMENT $3E0F $074D: normal track data,  note: C5
COMMENT $3E10 $074E: vol off
COMMENT $3E11 $074F: instrument
COMMENT $3E12 $0750: normal track data,  note: F#2
COMMENT $3E13 $0751: vol off
COMMENT $3E14 $0752: instrument
COMMENT $3E15 $0753: normal track data,  note: C2
COMMENT $3E16 $0754: vol off
COMMENT $3E17 $0755: instrument
COMMENT $3E18 $0756: normal track data,  note: C3
COMMENT $3E19 $0757: vol off
COMMENT $3E1A $0758: instrument
COMMENT $3E1B $0759: normal track data,  note: G1
COMMENT $3E1C $075A: vol off
COMMENT $3E1D $075B: instrument
COMMENT $3E1E $075C: normal track data,  note: C3
COMMENT $3E1F $075D: vol = $A (inverted)
COMMENT $3E20 $075E: instrument
COMMENT $3E21 $075F: normal track data,  note: C2
COMMENT $3E22 $0760: vol = $F (inverted)
COMMENT $3E23 $0761: instrument
COMMENT $3E24 $0762: normal track data,  note: C5
COMMENT $3E25 $0763: vol off
COMMENT $3E26 $0764: instrument
COMMENT $3E27 $0765: normal track data,  note: C5
COMMENT $3E28 $0766: vol = $E (inverted)
COMMENT $3E29 $0767: instrument
COMMENT $3E2A $0768: normal track data,  note: C5
COMMENT $3E2B $0769: vol = $D (inverted)
COMMENT $3E2C $076A: instrument
COMMENT $3E2D $076B: normal track data,  note: C2
COMMENT $3E2E $076C: vol = $F (inverted)
COMMENT $3E2F $076D: instrument
COMMENT $3E30 $076E: normal track data,  note: C2
COMMENT $3E31 $076F: vol = $C (inverted)
COMMENT $3E32 $0770: normal track data,  note: G1
COMMENT $3E33 $0771: vol = $F (inverted)
COMMENT $3E34 $0772: pitch
COMMENT $3E36 $0774: instrument
COMMENT $3E37 $0775: normal track data,  note: C5
COMMENT $3E38 $0776: vol off
COMMENT $3E39 $0777: instrument
COMMENT $3E3A $0778: normal track data,  note: C2
COMMENT $3E3B $0779: vol off
COMMENT $3E3C $077A: instrument
COMMENT $3E3D $077B: normal track data,  note: C5
COMMENT $3E3E $077C: vol off
COMMENT $3E3F $077D: instrument
COMMENT $3E40 $077E: normal track data,  note: C5
COMMENT $3E41 $077F: vol = $D (inverted)
COMMENT $3E42 $0780: instrument
COMMENT $3E43 $0781: normal track data,  note: G1
COMMENT $3E44 $0782: vol = $F (inverted)
COMMENT $3E45 $0783: instrument
COMMENT $3E46 $0784: normal track data,  note: C2
COMMENT $3E47 $0785: vol off
COMMENT $3E48 $0786: instrument
COMMENT $3E49 $0787: normal track data,  note: C5
COMMENT $3E4A $0788: vol off
COMMENT $3E4B $0789: instrument
COMMENT $3E4C $078A: normal track data,  note: C0
COMMENT $3E4D $078B: vol = $4 (inverted)
COMMENT $3E4E $078C: pitch
COMMENT $3E50 $078E: normal track data,  note: C0
COMMENT $3E51 $078F: vol = $3 (inverted)
COMMENT $3E52 $0790: normal track data,  note: C0
COMMENT $3E53 $0791: vol = $2 (inverted)
COMMENT $3E54 $0792: normal track data,  note: C0
COMMENT $3E55 $0793: vol = $1 (inverted)
COMMENT $3E56 $0794: normal track data,  note: C0
COMMENT $3E57 $0795: vol = $0 (inverted)
COMMENT $3E58 $0796: normal track data,  note: C0
COMMENT $3E59 $0797: vol off
COMMENT $3E5A $0798: pitch
COMMENT $3E5C $079A: normal track data,  note: G1
COMMENT $3E5D $079B: vol = $F (inverted)
COMMENT $3E5E $079C: pitch
COMMENT $3E60 $079E: instrument
COMMENT $3E61 $079F: normal track data,  note: D3
COMMENT $3E62 $07A0: vol off
COMMENT $3E63 $07A1: instrument
COMMENT $3E64 $07A2: normal track data,  note: C2
COMMENT $3E65 $07A3: vol off
COMMENT $3E66 $07A4: instrument
COMMENT $3E67 $07A5: normal track data,  note: D#3
COMMENT $3E68 $07A6: vol off
COMMENT $3E69 $07A7: instrument
COMMENT $3E6A $07A8: normal track data,  note: C5
COMMENT $3E6B $07A9: vol off
COMMENT $3E6C $07AA: instrument
COMMENT $3E6D $07AB: normal track data,  note: E3
COMMENT $3E6E $07AC: vol off
COMMENT $3E6F $07AD: instrument
COMMENT $3E70 $07AE: normal track data,  note: C2
COMMENT $3E71 $07AF: vol off
COMMENT $3E72 $07B0: instrument
COMMENT $3E73 $07B1: normal track data,  note: G1
COMMENT $3E74 $07B2: vol off
COMMENT $3E75 $07B3: instrument
COMMENT $3E76 $07B4: normal track data,  note: G1
COMMENT $3E77 $07B5: vol off
COMMENT $3E78 $07B6: pitch
COMMENT $3E7A $07B8: instrument
COMMENT $3E7B $07B9: normal track data,  note: C5
COMMENT $3E7C $07BA: vol off
COMMENT $3E7D $07BB: instrument
COMMENT $3E7E $07BC: normal track data,  note: C2
COMMENT $3E7F $07BD: vol off
COMMENT $3E80 $07BE: instrument
COMMENT $3E81 $07BF: normal track data,  note: C2
COMMENT $3E82 $07C0: vol = $8 (inverted)
COMMENT $3E83 $07C1: normal track data,  note: C5
COMMENT $3E84 $07C2: vol = $F (inverted)
COMMENT $3E85 $07C3: instrument
COMMENT $3E86 $07C4: normal track data,  note: C5
COMMENT $3E87 $07C5: vol = $B (inverted)
COMMENT $3E88 $07C6: instrument
COMMENT $3E89 $07C7: normal track data,  note: C2
COMMENT $3E8A $07C8: vol = $F (inverted)
COMMENT $3E8B $07C9: instrument
COMMENT $3E8C $07CA: normal track data,  note: C5
COMMENT $3E8D $07CB: vol off
COMMENT $3E8E $07CC: instrument
COMMENT $3E8F $07CD: normal track data,  note: C4
COMMENT $3E90 $07CE: vol off
COMMENT $3E91 $07CF: pitch
COMMENT $3E93 $07D1: instrument
COMMENT $3E94 $07D2: normal track data,  note: C5
COMMENT $3E95 $07D3: vol off
COMMENT $3E96 $07D4: instrument
COMMENT $3E97 $07D5: normal track data,  note: C2
COMMENT $3E98 $07D6: vol off
COMMENT $3E99 $07D7: instrument
COMMENT $3E9A $07D8: full optimization, no escape: C2
COMMENT $3E9B $07D9: normal track data,  note: C2
COMMENT $3E9C $07DA: vol = $B (inverted)
COMMENT $3E9D $07DB: normal track data,  note: C2
COMMENT $3E9E $07DC: vol = $8 (inverted)
COMMENT $3E9F $07DD: normal track data,  note: C2
COMMENT $3EA0 $07DE: vol = $F (inverted)
COMMENT $3EA1 $07DF: normal track data,  note: C5
COMMENT $3EA2 $07E0: vol off
COMMENT $3EA3 $07E1: instrument
COMMENT $3EA4 $07E2: normal track data,  note: C4
COMMENT $3EA5 $07E3: vol off
COMMENT $3EA6 $07E4: pitch
COMMENT $3EA8 $07E6: instrument
COMMENT $3EA9 $07E7: normal track data,  note: C5
COMMENT $3EAA $07E8: vol off
COMMENT $3EAB $07E9: instrument
COMMENT $3EAC $07EA: normal track data,  note: C2
COMMENT $3EAD $07EB: vol off
COMMENT $3EAE $07EC: instrument
COMMENT $3EAF $07ED: normal track data,  note: C4
COMMENT $3EB0 $07EE: vol = $E (inverted)
COMMENT $3EB1 $07EF: instrument
COMMENT $3EB2 $07F0: normal track data,  note: C4
COMMENT $3EB3 $07F1: vol = $8 (inverted)
COMMENT $3EB4 $07F2: normal track data,  note: C2
COMMENT $3EB5 $07F3: vol = $E (inverted)
COMMENT $3EB6 $07F4: instrument
COMMENT $3EB7 $07F5: full optimization, no escape: C2
COMMENT $3EB8 $07F6: normal track data,  note: C2
COMMENT $3EB9 $07F7: vol = $F (inverted)
COMMENT $3EBA $07F8: normal track data,  note: G1
COMMENT $3EBB $07F9: vol = $F (inverted)
COMMENT $3EBC $07FA: pitch
COMMENT $3EBE $07FC: instrument
COMMENT $3EBF $07FD: normal track data,  note: C5
COMMENT $3EC0 $07FE: vol off
COMMENT $3EC1 $07FF: instrument
COMMENT $3EC2 $0800: normal track data,  note: C2
COMMENT $3EC3 $0801: vol off
COMMENT $3EC4 $0802: instrument
COMMENT $3EC5 $0803: normal track data,  note: C5
COMMENT $3EC6 $0804: vol off
COMMENT $3EC7 $0805: instrument
COMMENT $3EC8 $0806: normal track data,  note: C5
COMMENT $3EC9 $0807: vol = $E (inverted)
COMMENT $3ECA $0808: instrument
COMMENT $3ECB $0809: normal track data,  note: F#1
COMMENT $3ECC $080A: vol = $F (inverted)
COMMENT $3ECD $080B: instrument
COMMENT $3ECE $080C: normal track data,  note: C2
COMMENT $3ECF $080D: vol off
COMMENT $3ED0 $080E: instrument
COMMENT $3ED1 $080F: normal track data,  note: F#2
COMMENT $3ED2 $0810: vol off
COMMENT $3ED3 $0811: instrument
COMMENT $3ED4 $0812: normal track data,  note: G1
COMMENT $3ED5 $0813: vol off
COMMENT $3ED6 $0814: instrument
COMMENT $3ED7 $0815: normal track data,  note: F#2
COMMENT $3ED8 $0816: vol = $9 (inverted)
COMMENT $3ED9 $0817: instrument
COMMENT $3EDA $0818: normal track data,  note: C2
COMMENT $3EDB $0819: vol = $F (inverted)
COMMENT $3EDC $081A: instrument
COMMENT $3EDD $081B: normal track data,  note: C5
COMMENT $3EDE $081C: vol off
COMMENT $3EDF $081D: instrument
COMMENT $3EE0 $081E: normal track data,  note: C5
COMMENT $3EE1 $081F: vol off
COMMENT $3EE2 $0820: instrument
COMMENT $3EE3 $0821: normal track data,  note: F#1
COMMENT $3EE4 $0822: vol off
COMMENT $3EE5 $0823: instrument
COMMENT $3EE6 $0824: normal track data,  note: C2
COMMENT $3EE7 $0825: vol off
COMMENT $3EE8 $0826: instrument
COMMENT $3EE9 $0827: normal track data,  note: C2
COMMENT $3EEA $0828: vol off
COMMENT $3EEB $0829: instrument
COMMENT $3EEC $082A: normal track data,  note: G1
COMMENT $3EED $082B: vol off
COMMENT $3EEE $082C: instrument
COMMENT $3EEF $082D: normal track data,  note: C2
COMMENT $3EF0 $082E: vol = $9 (inverted)
COMMENT $3EF1 $082F: instrument
COMMENT $3EF2 $0830: normal track data,  note: C2
COMMENT $3EF3 $0831: vol = $F (inverted)
COMMENT $3EF4 $0832: instrument
COMMENT $3EF5 $0833: normal track data,  note: C5
COMMENT $3EF6 $0834: vol off
COMMENT $3EF7 $0835: instrument
COMMENT $3EF8 $0836: normal track data,  note: C5
COMMENT $3EF9 $0837: vol = $E (inverted)
COMMENT $3EFA $0838: pitch
COMMENT $3EFC $083A: instrument
COMMENT $3EFD $083B: normal track data,  note: C5
COMMENT $3EFE $083C: vol = $F (inverted)
COMMENT $3EFF $083D: instrument
COMMENT $3F00 $083E: normal track data,  note: C2
COMMENT $3F01 $083F: vol off
COMMENT $3F02 $0840: instrument
COMMENT $3F03 $0841: normal track data,  note: C2
COMMENT $3F04 $0842: vol = $C (inverted)
COMMENT $3F05 $0843: normal track data,  note: G1
COMMENT $3F06 $0844: vol = $F (inverted)
COMMENT $3F07 $0845: instrument
COMMENT $3F08 $0846: normal track data,  note: C5
COMMENT $3F09 $0847: vol off
COMMENT $3F0A $0848: instrument
COMMENT $3F0B $0849: normal track data,  note: C2
COMMENT $3F0C $084A: vol off
COMMENT $3F0D $084B: instrument
COMMENT $3F0E $084C: normal track data,  note: C5
COMMENT $3F0F $084D: vol off
COMMENT $3F10 $084E: instrument
COMMENT $3F11 $084F: normal track data,  note: C5
COMMENT $3F12 $0850: vol = $D (inverted)
COMMENT $3F13 $0851: instrument
COMMENT $3F14 $0852: normal track data,  note: G1
COMMENT $3F15 $0853: vol = $F (inverted)
COMMENT $3F16 $0854: instrument
COMMENT $3F17 $0855: normal track data,  note: C2
COMMENT $3F18 $0856: vol off
COMMENT $3F19 $0857: instrument
COMMENT $3F1A $0858: normal track data,  note: C5
COMMENT $3F1B $0859: vol off
COMMENT $3F1C $085A: instrument
COMMENT $3F1D $085B: normal track data,  note: C5
COMMENT $3F1E $085C: vol = $E (inverted)
COMMENT $3F1F $085D: pitch
COMMENT $3F21 $085F: instrument
COMMENT $3F22 $0860: normal track data,  note: C5
COMMENT $3F23 $0861: vol = $D (inverted)
COMMENT $3F24 $0862: instrument
COMMENT $3F25 $0863: normal track data,  note: C2
COMMENT $3F26 $0864: vol = $F (inverted)
COMMENT $3F27 $0865: instrument
COMMENT $3F28 $0866: normal track data,  note: C2
COMMENT $3F29 $0867: vol = $C (inverted)
COMMENT $3F2A $0868: normal track data,  note: G1
COMMENT $3F2B $0869: vol = $F (inverted)
COMMENT $3F2C $086A: instrument
COMMENT $3F2D $086B: normal track data,  note: D1
COMMENT $3F2E $086C: vol off
COMMENT $3F2F $086D: instrument
COMMENT $3F30 $086E: normal track data,  note: C2
COMMENT $3F31 $086F: vol off
COMMENT $3F32 $0870: instrument
COMMENT $3F33 $0871: normal track data,  note: D#1
COMMENT $3F34 $0872: vol off
COMMENT $3F35 $0873: instrument
COMMENT $3F36 $0874: normal track data,  note: C5
COMMENT $3F37 $0875: vol off
COMMENT $3F38 $0876: instrument
COMMENT $3F39 $0877: normal track data,  note: E1
COMMENT $3F3A $0878: vol off
COMMENT $3F3B $0879: instrument
COMMENT $3F3C $087A: normal track data,  note: C2
COMMENT $3F3D $087B: vol off
COMMENT $3F3E $087C: instrument
COMMENT $3F3F $087D: normal track data,  note: G1
COMMENT $3F40 $087E: vol off
COMMENT $3F41 $087F: instrument
COMMENT $3F42 $0880: normal track data,  note: G1
COMMENT $3F43 $0881: vol off
COMMENT $3F44 $0882: pitch
COMMENT $3F46 $0884: instrument
COMMENT $3F47 $0885: normal track data,  note: G1
COMMENT $3F48 $0886: vol = $6 (inverted)
COMMENT $3F49 $0887: normal track data,  note: C4
COMMENT $3F4A $0888: vol = $F (inverted)
COMMENT $3F4B $0889: pitch
COMMENT $3F4D $088B: instrument
COMMENT $3F4E $088C: normal track data,  wait 1
COMMENT $3F4F $088D: normal track data,  note: C4
COMMENT $3F50 $088E: vol = $8 (inverted)
COMMENT $3F51 $088F: normal track data,  note: C0
COMMENT $3F52 $0890: vol = $B (inverted)
COMMENT $3F53 $0891: normal track data,  wait 0
COMMENT $3F54 $0892: normal track data,  note: C4
COMMENT $3F55 $0893: vol = $5 (inverted)
COMMENT $3F56 $0894: track end signature found
COMMENT $3F57 $0895: normal track data,  note: F#1
COMMENT $3F58 $0896: vol off
COMMENT $3F59 $0897: pitch
COMMENT $3F5B $0899: instrument
COMMENT $3F5C $089A: normal track data,  note: F#1
COMMENT $3F5D $089B: vol = $9 (inverted)
COMMENT $3F5E $089C: normal track data,  note: G1
COMMENT $3F5F $089D: vol = $F (inverted)
COMMENT $3F60 $089E: pitch
COMMENT $3F62 $08A0: instrument
COMMENT $3F63 $08A1: normal track data,  note: G1
COMMENT $3F64 $08A2: vol = $9 (inverted)
COMMENT $3F65 $08A3: normal track data,  note: G#1
COMMENT $3F66 $08A4: vol off
COMMENT $3F67 $08A5: pitch
COMMENT $3F69 $08A7: instrument
COMMENT $3F6A $08A8: normal track data,  note: G#1
COMMENT $3F6B $08A9: vol = $9 (inverted)
COMMENT $3F6C $08AA: normal track data,  note: C4
COMMENT $3F6D $08AB: vol off
COMMENT $3F6E $08AC: pitch
COMMENT $3F70 $08AE: instrument
COMMENT $3F71 $08AF: normal track data,  note: C0
COMMENT $3F72 $08B0: vol off
COMMENT $3F73 $08B1: normal track data,  note: C6
COMMENT $3F74 $08B2: vol off
COMMENT $3F75 $08B3: instrument
COMMENT $3F76 $08B4: normal track data,  note: C6
COMMENT $3F77 $08B5: vol = $A (inverted)
COMMENT $3F78 $08B6: normal track data,  note: G1
COMMENT $3F79 $08B7: vol = $F (inverted)
COMMENT $3F7A $08B8: pitch
COMMENT $3F7C $08BA: instrument
COMMENT $3F7D $08BB: normal track data,  note: C6
COMMENT $3F7E $08BC: vol = $E (inverted)
COMMENT $3F7F $08BD: instrument
COMMENT $3F80 $08BE: normal track data,  note: C2
COMMENT $3F81 $08BF: vol = $F (inverted)
COMMENT $3F82 $08C0: instrument
COMMENT $3F83 $08C1: normal track data,  note: C6
COMMENT $3F84 $08C2: vol = $E (inverted)
COMMENT $3F85 $08C3: instrument
COMMENT $3F86 $08C4: normal track data,  note: E1
COMMENT $3F87 $08C5: vol = $F (inverted)
COMMENT $3F88 $08C6: instrument
COMMENT $3F89 $08C7: full optimization, no escape: F#1
COMMENT $3F8A $08C8: normal track data,  note: C2
COMMENT $3F8B $08C9: vol off
COMMENT $3F8C $08CA: instrument
COMMENT $3F8D $08CB: normal track data,  note: C6
COMMENT $3F8E $08CC: vol = $E (inverted)
COMMENT $3F8F $08CD: instrument
COMMENT $3F90 $08CE: normal track data,  note: G1
COMMENT $3F91 $08CF: vol = $F (inverted)
COMMENT $3F92 $08D0: pitch
COMMENT $3F94 $08D2: instrument
COMMENT $3F95 $08D3: normal track data,  note: C6
COMMENT $3F96 $08D4: vol = $E (inverted)
COMMENT $3F97 $08D5: instrument
COMMENT $3F98 $08D6: normal track data,  note: C2
COMMENT $3F99 $08D7: vol = $F (inverted)
COMMENT $3F9A $08D8: instrument
COMMENT $3F9B $08D9: normal track data,  note: C6
COMMENT $3F9C $08DA: vol = $E (inverted)
COMMENT $3F9D $08DB: instrument
COMMENT $3F9E $08DC: normal track data,  note: F#1
COMMENT $3F9F $08DD: vol = $F (inverted)
COMMENT $3FA0 $08DE: instrument
COMMENT $3FA1 $08DF: full optimization, no escape: G1
COMMENT $3FA2 $08E0: normal track data,  note: C2
COMMENT $3FA3 $08E1: vol off
COMMENT $3FA4 $08E2: instrument
COMMENT $3FA5 $08E3: normal track data,  note: C6
COMMENT $3FA6 $08E4: vol = $E (inverted)
COMMENT $3FA7 $08E5: instrument
COMMENT $3FA8 $08E6: normal track data,  note: G1
COMMENT $3FA9 $08E7: vol = $F (inverted)
COMMENT $3FAA $08E8: pitch
COMMENT $3FAC $08EA: instrument
COMMENT $3FAD $08EB: normal track data,  note: C6
COMMENT $3FAE $08EC: vol = $E (inverted)
COMMENT $3FAF $08ED: instrument
COMMENT $3FB0 $08EE: normal track data,  note: C2
COMMENT $3FB1 $08EF: vol = $F (inverted)
COMMENT $3FB2 $08F0: instrument
COMMENT $3FB3 $08F1: normal track data,  note: C6
COMMENT $3FB4 $08F2: vol = $E (inverted)
COMMENT $3FB5 $08F3: instrument
COMMENT $3FB6 $08F4: normal track data,  note: G1
COMMENT $3FB7 $08F5: vol = $F (inverted)
COMMENT $3FB8 $08F6: instrument
COMMENT $3FB9 $08F7: full optimization, no escape: G#1
COMMENT $3FBA $08F8: normal track data,  note: C2
COMMENT $3FBB $08F9: vol off
COMMENT $3FBC $08FA: instrument
COMMENT $3FBD $08FB: normal track data,  note: C6
COMMENT $3FBE $08FC: vol = $E (inverted)
COMMENT $3FBF $08FD: instrument
COMMENT $3FC0 $08FE: normal track data,  note: G1
COMMENT $3FC1 $08FF: vol = $F (inverted)
COMMENT $3FC2 $0900: pitch
COMMENT $3FC4 $0902: instrument
COMMENT $3FC5 $0903: normal track data,  note: C6
COMMENT $3FC6 $0904: vol = $E (inverted)
COMMENT $3FC7 $0905: instrument
COMMENT $3FC8 $0906: normal track data,  note: C2
COMMENT $3FC9 $0907: vol = $F (inverted)
COMMENT $3FCA $0908: instrument
COMMENT $3FCB $0909: normal track data,  note: C6
COMMENT $3FCC $090A: vol = $E (inverted)
COMMENT $3FCD $090B: instrument
COMMENT $3FCE $090C: normal track data,  note: C1
COMMENT $3FCF $090D: vol off
COMMENT $3FD0 $090E: pitch
COMMENT $3FD2 $0910: instrument
COMMENT $3FD3 $0911: normal track data,  note: C0
COMMENT $3FD4 $0912: vol = $F (inverted)
COMMENT $3FD5 $0913: normal track data,  note: C0
COMMENT $3FD6 $0914: vol off
COMMENT $3FD7 $0915: pitch
COMMENT $3FD9 $0917: normal track data,  note: C0
COMMENT $3FDA $0918: vol off
COMMENT $3FDB $0919: normal track data,  note: C4
COMMENT $3FDC $091A: vol = $F (inverted)
COMMENT $3FDD $091B: pitch
COMMENT $3FDF $091D: instrument
COMMENT $3FE0 $091E: normal track data,  note: C0
COMMENT $3FE1 $091F: vol off
COMMENT $3FE2 $0920: normal track data,  note: C0
COMMENT $3FE3 $0921: vol off
COMMENT $3FE4 $0922: normal track data,  note: C4
COMMENT $3FE5 $0923: vol = $7 (inverted)
COMMENT_LINE $3FE6 this file is part of Release, written by Malban in 2017
COMMENT_LINE $3FE6 This file was build using VIDE - Vectrex Integrated Development Environment
COMMENT_LINE $3FE6 Original bin file was: projects/VRelease/VTK_TitleMusic.bin
COMMENT_LINE $3FE6 offset for AKS file assumed: $0000 guessed by accessing byte data[13] * 256)
COMMENT_LINE $3FE6 not used by vectrex player and therefor omitted:
COMMENT_LINE $3FE6 DB "AT10" ; Signature of Arkos Tracker files
COMMENT_LINE $3FE6 DB $01 ; sample channel
COMMENT_LINE $3FE6 DB $40, 42, 0f ; YM custom frequence - little endian
COMMENT_LINE $3FE6 DB $02 ; Replay frequency (0=13hz,1=25hz,2=50hz,3=100hz,4=150hz,5=300hz)
COMMENT $3FE6 $0009: default speed
COMMENT $3FE7 $000A: size of instrument table (without this word pointer)
COMMENT $3FE9 $000C: [$0032] pointer to instrument 0
COMMENT $3FEB $000E: [$003B] pointer to instrument 1
COMMENT $3FED $0010: [$0043] pointer to instrument 2
COMMENT $3FEF $0012: [$0053] pointer to instrument 3
COMMENT $3FF1 $0014: [$0062] pointer to instrument 4
COMMENT $3FF3 $0016: [$0070] pointer to instrument 5
COMMENT $3FF5 $0018: [$007E] pointer to instrument 6
COMMENT $3FF7 $001A: [$0087] pointer to instrument 7
COMMENT $3FF9 $001C: [$0094] pointer to instrument 8
COMMENT $3FFB $001E: [$009D] pointer to instrument 9
COMMENT $3FFD $0020: [$00B6] pointer to instrument 10
COMMENT $3FFF $0022: [$00C8] pointer to instrument 11
COMMENT $4001 $0024: [$00DD] pointer to instrument 12
COMMENT $4003 $0026: [$00EF] pointer to instrument 13
COMMENT $4005 $0028: [$00F9] pointer to instrument 14
COMMENT $4007 $002A: [$0104] pointer to instrument 15
COMMENT $4009 $002C: [$011D] pointer to instrument 16
COMMENT $400B $002E: [$0142] pointer to instrument 17
COMMENT $400D $0030: [$015B] pointer to instrument 18
COMMENT $400F $0032: speed
COMMENT $4010 $0033: retrig
COMMENT $4011 $0034: dataColumn_0 (non hard), vol=$0
COMMENT $4012 $0035: dataColumn_0 (non hard), vol=$0
COMMENT $4013 $0036: dataColumn_0 (non hard), vol=$0
COMMENT $4014 $0037: dataColumn_0 (non hard), vol=$0
COMMENT $4015 $0038: dataColumn_0 (hard)
COMMENT $4016 $0039: [$0034] loop
COMMENT $4018 $003B: speed
COMMENT $4019 $003C: retrig
COMMENT $401A $003D: dataColumn_0 (non hard), vol=$F
COMMENT $401B $003E: dataColumn_0 (non hard), vol=$F
COMMENT $401C $003F: arpegio
COMMENT $401D $0040: dataColumn_0 (hard)
COMMENT $401E $0041: [$003D] loop
COMMENT $4020 $0043: speed
COMMENT $4021 $0044: retrig
COMMENT $4022 $0045: dataColumn_0 (non hard), vol=$E
COMMENT $4023 $0046: pitch
COMMENT $4025 $0048: dataColumn_0 (non hard), vol=$D
COMMENT $4026 $0049: dataColumn_0 (non hard), vol=$C
COMMENT $4027 $004A: pitch
COMMENT $4029 $004C: dataColumn_0 (non hard), vol=$B
COMMENT $402A $004D: dataColumn_0 (non hard), vol=$B
COMMENT $402B $004E: pitch
COMMENT $402D $0050: dataColumn_0 (hard)
COMMENT $402E $0051: [$0034] loop
COMMENT $4030 $0053: speed
COMMENT $4031 $0054: retrig
COMMENT $4032 $0055: dataColumn_0 (non hard), vol=$A
COMMENT $4033 $0056: dataColumn_0 (non hard), vol=$9
COMMENT $4034 $0057: dataColumn_0 (non hard), vol=$9
COMMENT $4035 $0058: dataColumn_0 (non hard), vol=$8
COMMENT $4036 $0059: dataColumn_0 (non hard), vol=$7
COMMENT $4037 $005A: dataColumn_0 (non hard), vol=$6
COMMENT $4038 $005B: dataColumn_0 (non hard), vol=$5
COMMENT $4039 $005C: dataColumn_0 (non hard), vol=$5
COMMENT $403A $005D: dataColumn_0 (non hard), vol=$5
COMMENT $403B $005E: dataColumn_0 (non hard), vol=$5
COMMENT $403C $005F: dataColumn_0 (hard)
COMMENT $403D $0060: [$005B] loop
COMMENT $403F $0062: speed
COMMENT $4040 $0063: retrig
COMMENT $4041 $0064: dataColumn_0 (non hard), vol=$E
COMMENT $4042 $0065: arpegio
COMMENT $4043 $0066: dataColumn_0 (non hard), vol=$C
COMMENT $4044 $0067: dataColumn_0 (non hard), vol=$A
COMMENT $4045 $0068: dataColumn_0 (non hard), vol=$9
COMMENT $4046 $0069: dataColumn_0 (non hard), vol=$9
COMMENT $4047 $006A: dataColumn_0 (non hard), vol=$8
COMMENT $4048 $006B: dataColumn_0 (non hard), vol=$7
COMMENT $4049 $006C: dataColumn_0 (non hard), vol=$6
COMMENT $404A $006D: dataColumn_0 (hard)
COMMENT $404B $006E: [$0034] loop
COMMENT $404D $0070: speed
COMMENT $404E $0071: retrig
COMMENT $404F $0072: dataColumn_0 (non hard), vol=$F
COMMENT $4050 $0073: dataColumn_1, noise=$0C
COMMENT $4051 $0074: arpegio
COMMENT $4052 $0075: dataColumn_0 (non hard), vol=$E
COMMENT $4053 $0076: arpegio
COMMENT $4054 $0077: dataColumn_0 (non hard), vol=$E
COMMENT $4055 $0078: arpegio
COMMENT $4056 $0079: dataColumn_0 (non hard), vol=$E
COMMENT $4057 $007A: dataColumn_0 (non hard), vol=$E
COMMENT $4058 $007B: dataColumn_0 (hard)
COMMENT $4059 $007C: [$0034] loop
COMMENT $405B $007E: speed
COMMENT $405C $007F: retrig
COMMENT $405D $0080: dataColumn_0 (non hard), vol=$A
COMMENT $405E $0081: dataColumn_1, noise=$01
COMMENT $405F $0082: dataColumn_0 (non hard), vol=$B
COMMENT $4060 $0083: dataColumn_1, noise=$01
COMMENT $4061 $0084: dataColumn_0 (hard)
COMMENT $4062 $0085: [$0034] loop
COMMENT $4064 $0087: speed
COMMENT $4065 $0088: retrig
COMMENT $4066 $0089: dataColumn_0 (non hard), vol=$F
COMMENT $4067 $008A: arpegio
COMMENT $4068 $008B: dataColumn_0 (non hard), vol=$C
COMMENT $4069 $008C: arpegio
COMMENT $406A $008D: dataColumn_0 (non hard), vol=$B
COMMENT $406B $008E: arpegio
COMMENT $406C $008F: dataColumn_0 (non hard), vol=$9
COMMENT $406D $0090: arpegio
COMMENT $406E $0091: dataColumn_0 (hard)
COMMENT $406F $0092: [$0034] loop
COMMENT $4071 $0094: speed
COMMENT $4072 $0095: retrig
COMMENT $4073 $0096: dataColumn_0 (non hard), vol=$A
COMMENT $4074 $0097: dataColumn_1, noise=$03
COMMENT $4075 $0098: dataColumn_0 (non hard), vol=$9
COMMENT $4076 $0099: dataColumn_1, noise=$03
COMMENT $4077 $009A: dataColumn_0 (hard)
COMMENT $4078 $009B: [$0034] loop
COMMENT $407A $009D: speed
COMMENT $407B $009E: retrig
COMMENT $407C $009F: dataColumn_0 (non hard), vol=$C
COMMENT $407D $00A0: dataColumn_0 (non hard), vol=$C
COMMENT $407E $00A1: arpegio
COMMENT $407F $00A2: dataColumn_0 (non hard), vol=$B
COMMENT $4080 $00A3: arpegio
COMMENT $4081 $00A4: dataColumn_0 (non hard), vol=$A
COMMENT $4082 $00A5: dataColumn_0 (non hard), vol=$A
COMMENT $4083 $00A6: arpegio
COMMENT $4084 $00A7: dataColumn_0 (non hard), vol=$9
COMMENT $4085 $00A8: arpegio
COMMENT $4086 $00A9: dataColumn_0 (non hard), vol=$9
COMMENT $4087 $00AA: dataColumn_0 (non hard), vol=$8
COMMENT $4088 $00AB: arpegio
COMMENT $4089 $00AC: dataColumn_0 (non hard), vol=$8
COMMENT $408A $00AD: arpegio
COMMENT $408B $00AE: dataColumn_0 (non hard), vol=$8
COMMENT $408C $00AF: dataColumn_0 (non hard), vol=$6
COMMENT $408D $00B0: arpegio
COMMENT $408E $00B1: dataColumn_0 (non hard), vol=$5
COMMENT $408F $00B2: arpegio
COMMENT $4090 $00B3: dataColumn_0 (hard)
COMMENT $4091 $00B4: [$0034] loop
COMMENT $4093 $00B6: speed
COMMENT $4094 $00B7: retrig
COMMENT $4095 $00B8: dataColumn_0 (non hard), vol=$C
COMMENT $4096 $00B9: dataColumn_0 (non hard), vol=$C
COMMENT $4097 $00BA: arpegio
COMMENT $4098 $00BB: dataColumn_0 (non hard), vol=$B
COMMENT $4099 $00BC: arpegio
COMMENT $409A $00BD: dataColumn_0 (non hard), vol=$8
COMMENT $409B $00BE: dataColumn_0 (non hard), vol=$7
COMMENT $409C $00BF: arpegio
COMMENT $409D $00C0: dataColumn_0 (non hard), vol=$5
COMMENT $409E $00C1: arpegio
COMMENT $409F $00C2: dataColumn_0 (non hard), vol=$4
COMMENT $40A0 $00C3: dataColumn_0 (non hard), vol=$3
COMMENT $40A1 $00C4: arpegio
COMMENT $40A2 $00C5: dataColumn_0 (hard)
COMMENT $40A3 $00C6: [$0034] loop
COMMENT $40A5 $00C8: speed
COMMENT $40A6 $00C9: retrig
COMMENT $40A7 $00CA: dataColumn_0 (non hard), vol=$F
COMMENT $40A8 $00CB: dataColumn_1, noise=$02
COMMENT $40A9 $00CC: arpegio
COMMENT $40AA $00CD: dataColumn_0 (non hard), vol=$F
COMMENT $40AB $00CE: arpegio
COMMENT $40AC $00CF: dataColumn_0 (non hard), vol=$F
COMMENT $40AD $00D0: arpegio
COMMENT $40AE $00D1: dataColumn_0 (non hard), vol=$E
COMMENT $40AF $00D2: dataColumn_1, noise=$03
COMMENT $40B0 $00D3: arpegio
COMMENT $40B1 $00D4: dataColumn_0 (non hard), vol=$D
COMMENT $40B2 $00D5: dataColumn_1, noise=$02
COMMENT $40B3 $00D6: arpegio
COMMENT $40B4 $00D7: dataColumn_0 (non hard), vol=$C
COMMENT $40B5 $00D8: dataColumn_1, noise=$03
COMMENT $40B6 $00D9: arpegio
COMMENT $40B7 $00DA: dataColumn_0 (hard)
COMMENT $40B8 $00DB: [$0034] loop
COMMENT $40BA $00DD: speed
COMMENT $40BB $00DE: retrig
COMMENT $40BC $00DF: dataColumn_0 (non hard), vol=$C
COMMENT $40BD $00E0: dataColumn_0 (non hard), vol=$C
COMMENT $40BE $00E1: arpegio
COMMENT $40BF $00E2: dataColumn_0 (non hard), vol=$B
COMMENT $40C0 $00E3: arpegio
COMMENT $40C1 $00E4: dataColumn_0 (non hard), vol=$8
COMMENT $40C2 $00E5: dataColumn_0 (non hard), vol=$7
COMMENT $40C3 $00E6: arpegio
COMMENT $40C4 $00E7: dataColumn_0 (non hard), vol=$5
COMMENT $40C5 $00E8: arpegio
COMMENT $40C6 $00E9: dataColumn_0 (non hard), vol=$4
COMMENT $40C7 $00EA: dataColumn_0 (non hard), vol=$3
COMMENT $40C8 $00EB: arpegio
COMMENT $40C9 $00EC: dataColumn_0 (hard)
COMMENT $40CA $00ED: [$0034] loop
COMMENT $40CC $00EF: speed
COMMENT $40CD $00F0: retrig
COMMENT $40CE $00F1: dataColumn_0 (non hard), vol=$B
COMMENT $40CF $00F2: arpegio
COMMENT $40D0 $00F3: dataColumn_0 (non hard), vol=$9
COMMENT $40D1 $00F4: dataColumn_0 (non hard), vol=$8
COMMENT $40D2 $00F5: arpegio
COMMENT $40D3 $00F6: dataColumn_0 (hard)
COMMENT $40D4 $00F7: [$0034] loop
COMMENT $40D6 $00F9: speed
COMMENT $40D7 $00FA: retrig
COMMENT $40D8 $00FB: dataColumn_0 (non hard), vol=$B
COMMENT $40D9 $00FC: dataColumn_0 (non hard), vol=$B
COMMENT $40DA $00FD: arpegio
COMMENT $40DB $00FE: dataColumn_0 (non hard), vol=$6
COMMENT $40DC $00FF: dataColumn_0 (non hard), vol=$5
COMMENT $40DD $0100: arpegio
COMMENT $40DE $0101: dataColumn_0 (hard)
COMMENT $40DF $0102: [$0034] loop
COMMENT $40E1 $0104: speed
COMMENT $40E2 $0105: retrig
COMMENT $40E3 $0106: dataColumn_0 (non hard), vol=$C
COMMENT $40E4 $0107: pitch
COMMENT $40E6 $0109: arpegio
COMMENT $40E7 $010A: dataColumn_0 (non hard), vol=$B
COMMENT $40E8 $010B: arpegio
COMMENT $40E9 $010C: dataColumn_0 (non hard), vol=$A
COMMENT $40EA $010D: arpegio
COMMENT $40EB $010E: dataColumn_0 (non hard), vol=$C
COMMENT $40EC $010F: arpegio
COMMENT $40ED $0110: dataColumn_0 (non hard), vol=$A
COMMENT $40EE $0111: arpegio
COMMENT $40EF $0112: dataColumn_0 (non hard), vol=$B
COMMENT $40F0 $0113: pitch
COMMENT $40F2 $0115: arpegio
COMMENT $40F3 $0116: dataColumn_0 (non hard), vol=$A
COMMENT $40F4 $0117: arpegio
COMMENT $40F5 $0118: dataColumn_0 (non hard), vol=$B
COMMENT $40F6 $0119: arpegio
COMMENT $40F7 $011A: dataColumn_0 (hard)
COMMENT $40F8 $011B: [$0106] loop
COMMENT $40FA $011D: speed
COMMENT $40FB $011E: retrig
COMMENT $40FC $011F: dataColumn_0 (non hard), vol=$D
COMMENT $40FD $0120: pitch
COMMENT $40FF $0122: arpegio
COMMENT $4100 $0123: dataColumn_0 (non hard), vol=$D
COMMENT $4101 $0124: pitch
COMMENT $4103 $0126: arpegio
COMMENT $4104 $0127: dataColumn_0 (non hard), vol=$D
COMMENT $4105 $0128: pitch
COMMENT $4107 $012A: arpegio
COMMENT $4108 $012B: dataColumn_0 (non hard), vol=$D
COMMENT $4109 $012C: pitch
COMMENT $410B $012E: arpegio
COMMENT $410C $012F: dataColumn_0 (non hard), vol=$D
COMMENT $410D $0130: pitch
COMMENT $410F $0132: arpegio
COMMENT $4110 $0133: dataColumn_0 (non hard), vol=$D
COMMENT $4111 $0134: pitch
COMMENT $4113 $0136: arpegio
COMMENT $4114 $0137: dataColumn_0 (non hard), vol=$D
COMMENT $4115 $0138: pitch
COMMENT $4117 $013A: arpegio
COMMENT $4118 $013B: dataColumn_0 (non hard), vol=$D
COMMENT $4119 $013C: pitch
COMMENT $411B $013E: arpegio
COMMENT $411C $013F: dataColumn_0 (hard)
COMMENT $411D $0140: [$011F] loop
COMMENT $411F $0142: speed
COMMENT $4120 $0143: retrig
COMMENT $4121 $0144: dataColumn_0 (non hard), vol=$C
COMMENT $4122 $0145: dataColumn_0 (non hard), vol=$C
COMMENT $4123 $0146: arpegio
COMMENT $4124 $0147: dataColumn_0 (non hard), vol=$B
COMMENT $4125 $0148: arpegio
COMMENT $4126 $0149: dataColumn_0 (non hard), vol=$A
COMMENT $4127 $014A: dataColumn_0 (non hard), vol=$A
COMMENT $4128 $014B: arpegio
COMMENT $4129 $014C: dataColumn_0 (non hard), vol=$9
COMMENT $412A $014D: arpegio
COMMENT $412B $014E: dataColumn_0 (non hard), vol=$9
COMMENT $412C $014F: dataColumn_0 (non hard), vol=$8
COMMENT $412D $0150: arpegio
COMMENT $412E $0151: dataColumn_0 (non hard), vol=$8
COMMENT $412F $0152: arpegio
COMMENT $4130 $0153: dataColumn_0 (non hard), vol=$8
COMMENT $4131 $0154: dataColumn_0 (non hard), vol=$6
COMMENT $4132 $0155: arpegio
COMMENT $4133 $0156: dataColumn_0 (non hard), vol=$5
COMMENT $4134 $0157: arpegio
COMMENT $4135 $0158: dataColumn_0 (hard)
COMMENT $4136 $0159: [$0034] loop
COMMENT $4138 $015B: speed
COMMENT $4139 $015C: retrig
COMMENT $413A $015D: dataColumn_0 (non hard), vol=$C
COMMENT $413B $015E: dataColumn_0 (non hard), vol=$C
COMMENT $413C $015F: arpegio
COMMENT $413D $0160: dataColumn_0 (non hard), vol=$B
COMMENT $413E $0161: arpegio
COMMENT $413F $0162: dataColumn_0 (non hard), vol=$A
COMMENT $4140 $0163: dataColumn_0 (non hard), vol=$A
COMMENT $4141 $0164: arpegio
COMMENT $4142 $0165: dataColumn_0 (non hard), vol=$9
COMMENT $4143 $0166: arpegio
COMMENT $4144 $0167: dataColumn_0 (non hard), vol=$9
COMMENT $4145 $0168: dataColumn_0 (non hard), vol=$8
COMMENT $4146 $0169: arpegio
COMMENT $4147 $016A: dataColumn_0 (non hard), vol=$8
COMMENT $4148 $016B: arpegio
COMMENT $4149 $016C: dataColumn_0 (non hard), vol=$8
COMMENT $414A $016D: dataColumn_0 (non hard), vol=$6
COMMENT $414B $016E: arpegio
COMMENT $414C $016F: dataColumn_0 (non hard), vol=$5
COMMENT $414D $0170: arpegio
COMMENT $414E $0171: dataColumn_0 (hard)
COMMENT $414F $0172: [$0034] loop
COMMENT_LINE $4151 start of linker definition
COMMENT $4151 $0174: first height
COMMENT $4152 $0175: transposition1
COMMENT $4153 $0176: transposition2
COMMENT $4154 $0177: transposition3
COMMENT $4155 $0178: [$039B] specialTrack
COMMENT $4157 $017A: pattern 0 state
COMMENT $4158 $017B: [$03A2] pattern 0, track 1
COMMENT $415A $017D: [$039D] pattern 0, track 2
COMMENT $415C $017F: [$039D] pattern 0, track 3
COMMENT $415E $0181: new height
COMMENT $415F $0182: pattern 1 state
COMMENT $4160 $0183: [$03E7] pattern 1, track 1
COMMENT $4162 $0185: [$039D] pattern 1, track 2
COMMENT $4164 $0187: [$039D] pattern 1, track 3
COMMENT $4166 $0189: new height
COMMENT $4167 $018A: pattern 2 state
COMMENT $4168 $018B: [$03F4] pattern 2, track 1
COMMENT $416A $018D: [$0424] pattern 2, track 2
COMMENT $416C $018F: [$0447] pattern 2, track 3
COMMENT $416E $0191: new height
COMMENT $416F $0192: pattern 3 state
COMMENT $4170 $0193: [$0402] pattern 3, track 1
COMMENT $4172 $0195: [$0424] pattern 3, track 2
COMMENT $4174 $0197: [$0447] pattern 3, track 3
COMMENT $4176 $0199: pattern 4 state
COMMENT $4177 $019A: [$040F] pattern 4, track 1
COMMENT $4179 $019C: [$0424] pattern 4, track 2
COMMENT $417B $019E: [$0447] pattern 4, track 3
COMMENT $417D $01A0: pattern 5 state
COMMENT $417E $01A1: [$039D] pattern 5, track 1
COMMENT $4180 $01A3: [$0424] pattern 5, track 2
COMMENT $4182 $01A5: [$0447] pattern 5, track 3
COMMENT $4184 $01A7: pattern 6 state
COMMENT $4185 $01A8: [$039D] pattern 6, track 1
COMMENT $4187 $01AA: [$0424] pattern 6, track 2
COMMENT $4189 $01AC: [$0447] pattern 6, track 3
COMMENT $418B $01AE: pattern 7 state
COMMENT $418C $01AF: [$039D] pattern 7, track 1
COMMENT $418E $01B1: [$0424] pattern 7, track 2
COMMENT $4190 $01B3: [$0447] pattern 7, track 3
COMMENT $4192 $01B5: pattern 8 state
COMMENT $4193 $01B6: [$039D] pattern 8, track 1
COMMENT $4195 $01B8: [$0424] pattern 8, track 2
COMMENT $4197 $01BA: [$0447] pattern 8, track 3
COMMENT $4199 $01BC: pattern 9 state
COMMENT $419A $01BD: [$039D] pattern 9, track 1
COMMENT $419C $01BF: [$0424] pattern 9, track 2
COMMENT $419E $01C1: [$0447] pattern 9, track 3
COMMENT $41A0 $01C3: pattern 10 state
COMMENT $41A1 $01C4: transposition 1
COMMENT $41A2 $01C5: [$046A] pattern 10, track 1
COMMENT $41A4 $01C7: [$0424] pattern 10, track 2
COMMENT $41A6 $01C9: [$0447] pattern 10, track 3
COMMENT $41A8 $01CB: pattern 11 state
COMMENT $41A9 $01CC: [$046A] pattern 11, track 1
COMMENT $41AB $01CE: [$0424] pattern 11, track 2
COMMENT $41AD $01D0: [$0447] pattern 11, track 3
COMMENT $41AF $01D2: pattern 12 state
COMMENT $41B0 $01D3: [$046A] pattern 12, track 1
COMMENT $41B2 $01D5: [$0424] pattern 12, track 2
COMMENT $41B4 $01D7: [$0447] pattern 12, track 3
COMMENT $41B6 $01D9: pattern 13 state
COMMENT $41B7 $01DA: [$046A] pattern 13, track 1
COMMENT $41B9 $01DC: [$0424] pattern 13, track 2
COMMENT $41BB $01DE: [$0447] pattern 13, track 3
COMMENT $41BD $01E0: pattern 14 state
COMMENT $41BE $01E1: transposition 1
COMMENT $41BF $01E2: [$046A] pattern 14, track 1
COMMENT $41C1 $01E4: [$0424] pattern 14, track 2
COMMENT $41C3 $01E6: [$0447] pattern 14, track 3
COMMENT $41C5 $01E8: pattern 15 state
COMMENT $41C6 $01E9: [$046A] pattern 15, track 1
COMMENT $41C8 $01EB: [$0424] pattern 15, track 2
COMMENT $41CA $01ED: [$0447] pattern 15, track 3
COMMENT $41CC $01EF: pattern 16 state
COMMENT $41CD $01F0: [$046A] pattern 16, track 1
COMMENT $41CF $01F2: [$0424] pattern 16, track 2
COMMENT $41D1 $01F4: [$0447] pattern 16, track 3
COMMENT $41D3 $01F6: pattern 17 state
COMMENT $41D4 $01F7: [$046A] pattern 17, track 1
COMMENT $41D6 $01F9: [$0424] pattern 17, track 2
COMMENT $41D8 $01FB: [$0447] pattern 17, track 3
COMMENT $41DA $01FD: pattern 18 state
COMMENT $41DB $01FE: transposition 1
COMMENT $41DC $01FF: [$046A] pattern 18, track 1
COMMENT $41DE $0201: [$0424] pattern 18, track 2
COMMENT $41E0 $0203: [$0447] pattern 18, track 3
COMMENT $41E2 $0205: pattern 19 state
COMMENT $41E3 $0206: [$046A] pattern 19, track 1
COMMENT $41E5 $0208: [$0424] pattern 19, track 2
COMMENT $41E7 $020A: [$0447] pattern 19, track 3
COMMENT $41E9 $020C: pattern 20 state
COMMENT $41EA $020D: [$046A] pattern 20, track 1
COMMENT $41EC $020F: [$0424] pattern 20, track 2
COMMENT $41EE $0211: [$0447] pattern 20, track 3
COMMENT $41F0 $0213: pattern 21 state
COMMENT $41F1 $0214: [$046A] pattern 21, track 1
COMMENT $41F3 $0216: [$0424] pattern 21, track 2
COMMENT $41F5 $0218: [$0447] pattern 21, track 3
COMMENT $41F7 $021A: pattern 22 state
COMMENT $41F8 $021B: transposition 1
COMMENT $41F9 $021C: [$046A] pattern 22, track 1
COMMENT $41FB $021E: [$0424] pattern 22, track 2
COMMENT $41FD $0220: [$0447] pattern 22, track 3
COMMENT $41FF $0222: pattern 23 state
COMMENT $4200 $0223: [$046A] pattern 23, track 1
COMMENT $4202 $0225: [$0424] pattern 23, track 2
COMMENT $4204 $0227: [$0447] pattern 23, track 3
COMMENT $4206 $0229: pattern 24 state
COMMENT $4207 $022A: [$046A] pattern 24, track 1
COMMENT $4209 $022C: [$0424] pattern 24, track 2
COMMENT $420B $022E: [$0447] pattern 24, track 3
COMMENT $420D $0230: pattern 25 state
COMMENT $420E $0231: [$046A] pattern 25, track 1
COMMENT $4210 $0233: [$0424] pattern 25, track 2
COMMENT $4212 $0235: [$0447] pattern 25, track 3
COMMENT $4214 $0237: pattern 26 state
COMMENT $4215 $0238: transposition 1
COMMENT $4216 $0239: [$046A] pattern 26, track 1
COMMENT $4218 $023B: [$0424] pattern 26, track 2
COMMENT $421A $023D: [$0447] pattern 26, track 3
COMMENT $421C $023F: pattern 27 state
COMMENT $421D $0240: [$046A] pattern 27, track 1
COMMENT $421F $0242: [$0424] pattern 27, track 2
COMMENT $4221 $0244: [$0447] pattern 27, track 3
COMMENT $4223 $0246: pattern 28 state
COMMENT $4224 $0247: [$046A] pattern 28, track 1
COMMENT $4226 $0249: [$0424] pattern 28, track 2
COMMENT $4228 $024B: [$0447] pattern 28, track 3
COMMENT $422A $024D: pattern 29 state
COMMENT $422B $024E: [$046A] pattern 29, track 1
COMMENT $422D $0250: [$0424] pattern 29, track 2
COMMENT $422F $0252: [$0447] pattern 29, track 3
COMMENT $4231 $0254: pattern 30 state
COMMENT $4232 $0255: transposition 1
COMMENT $4233 $0256: [$046A] pattern 30, track 1
COMMENT $4235 $0258: [$0424] pattern 30, track 2
COMMENT $4237 $025A: [$0447] pattern 30, track 3
COMMENT $4239 $025C: pattern 31 state
COMMENT $423A $025D: [$046A] pattern 31, track 1
COMMENT $423C $025F: [$0424] pattern 31, track 2
COMMENT $423E $0261: [$0447] pattern 31, track 3
COMMENT $4240 $0263: pattern 32 state
COMMENT $4241 $0264: [$046A] pattern 32, track 1
COMMENT $4243 $0266: [$0424] pattern 32, track 2
COMMENT $4245 $0268: [$0447] pattern 32, track 3
COMMENT $4247 $026A: pattern 33 state
COMMENT $4248 $026B: [$046A] pattern 33, track 1
COMMENT $424A $026D: [$0424] pattern 33, track 2
COMMENT $424C $026F: [$0447] pattern 33, track 3
COMMENT $424E $0271: pattern 34 state
COMMENT $424F $0272: transposition 1
COMMENT $4250 $0273: [$047E] pattern 34, track 1
COMMENT $4252 $0275: [$0424] pattern 34, track 2
COMMENT $4254 $0277: [$04DB] pattern 34, track 3
COMMENT $4256 $0279: pattern 35 state
COMMENT $4257 $027A: [$04AC] pattern 35, track 1
COMMENT $4259 $027C: [$0424] pattern 35, track 2
COMMENT $425B $027E: [$0502] pattern 35, track 3
COMMENT $425D $0280: pattern 36 state
COMMENT $425E $0281: [$047E] pattern 36, track 1
COMMENT $4260 $0283: [$0424] pattern 36, track 2
COMMENT $4262 $0285: [$04DB] pattern 36, track 3
COMMENT $4264 $0287: pattern 37 state
COMMENT $4265 $0288: [$04AC] pattern 37, track 1
COMMENT $4267 $028A: [$0424] pattern 37, track 2
COMMENT $4269 $028C: [$0502] pattern 37, track 3
COMMENT $426B $028E: pattern 38 state
COMMENT $426C $028F: [$047E] pattern 38, track 1
COMMENT $426E $0291: [$0424] pattern 38, track 2
COMMENT $4270 $0293: [$04DB] pattern 38, track 3
COMMENT $4272 $0295: pattern 39 state
COMMENT $4273 $0296: [$04AC] pattern 39, track 1
COMMENT $4275 $0298: [$0424] pattern 39, track 2
COMMENT $4277 $029A: [$0502] pattern 39, track 3
COMMENT $4279 $029C: pattern 40 state
COMMENT $427A $029D: [$047E] pattern 40, track 1
COMMENT $427C $029F: [$0424] pattern 40, track 2
COMMENT $427E $02A1: [$04DB] pattern 40, track 3
COMMENT $4280 $02A3: pattern 41 state
COMMENT $4281 $02A4: [$04AC] pattern 41, track 1
COMMENT $4283 $02A6: [$0424] pattern 41, track 2
COMMENT $4285 $02A8: [$0502] pattern 41, track 3
COMMENT $4287 $02AA: pattern 42 state
COMMENT $4288 $02AB: [$0529] pattern 42, track 1
COMMENT $428A $02AD: [$0581] pattern 42, track 2
COMMENT $428C $02AF: [$0559] pattern 42, track 3
COMMENT $428E $02B1: pattern 43 state
COMMENT $428F $02B2: [$0529] pattern 43, track 1
COMMENT $4291 $02B4: [$05A4] pattern 43, track 2
COMMENT $4293 $02B6: [$0559] pattern 43, track 3
COMMENT $4295 $02B8: pattern 44 state
COMMENT $4296 $02B9: [$0529] pattern 44, track 1
COMMENT $4298 $02BB: [$05A4] pattern 44, track 2
COMMENT $429A $02BD: [$0559] pattern 44, track 3
COMMENT $429C $02BF: pattern 45 state
COMMENT $429D $02C0: [$0529] pattern 45, track 1
COMMENT $429F $02C2: [$05C6] pattern 45, track 2
COMMENT $42A1 $02C4: [$0559] pattern 45, track 3
COMMENT $42A3 $02C6: pattern 46 state
COMMENT $42A4 $02C7: [$05E8] pattern 46, track 1
COMMENT $42A6 $02C9: [$06D5] pattern 46, track 2
COMMENT $42A8 $02CB: [$0618] pattern 46, track 3
COMMENT $42AA $02CD: pattern 47 state
COMMENT $42AB $02CE: [$05E8] pattern 47, track 1
COMMENT $42AD $02D0: [$039D] pattern 47, track 2
COMMENT $42AF $02D2: [$0618] pattern 47, track 3
COMMENT $42B1 $02D4: pattern 48 state
COMMENT $42B2 $02D5: [$05E8] pattern 48, track 1
COMMENT $42B4 $02D7: [$039D] pattern 48, track 2
COMMENT $42B6 $02D9: [$0618] pattern 48, track 3
COMMENT $42B8 $02DB: pattern 49 state
COMMENT $42B9 $02DC: [$05E8] pattern 49, track 1
COMMENT $42BB $02DE: [$039D] pattern 49, track 2
COMMENT $42BD $02E0: [$0618] pattern 49, track 3
COMMENT $42BF $02E2: pattern 50 state
COMMENT $42C0 $02E3: [$0529] pattern 50, track 1
COMMENT $42C2 $02E5: [$0640] pattern 50, track 2
COMMENT $42C4 $02E7: [$0559] pattern 50, track 3
COMMENT $42C6 $02E9: pattern 51 state
COMMENT $42C7 $02EA: [$0529] pattern 51, track 1
COMMENT $42C9 $02EC: [$05A4] pattern 51, track 2
COMMENT $42CB $02EE: [$0559] pattern 51, track 3
COMMENT $42CD $02F0: pattern 52 state
COMMENT $42CE $02F1: [$0529] pattern 52, track 1
COMMENT $42D0 $02F3: [$05A4] pattern 52, track 2
COMMENT $42D2 $02F5: [$0559] pattern 52, track 3
COMMENT $42D4 $02F7: pattern 53 state
COMMENT $42D5 $02F8: [$0529] pattern 53, track 1
COMMENT $42D7 $02FA: [$05C6] pattern 53, track 2
COMMENT $42D9 $02FC: [$0559] pattern 53, track 3
COMMENT $42DB $02FE: pattern 54 state
COMMENT $42DC $02FF: [$05E8] pattern 54, track 1
COMMENT $42DE $0301: [$06D5] pattern 54, track 2
COMMENT $42E0 $0303: [$0618] pattern 54, track 3
COMMENT $42E2 $0305: pattern 55 state
COMMENT $42E3 $0306: [$05E8] pattern 55, track 1
COMMENT $42E5 $0308: [$039D] pattern 55, track 2
COMMENT $42E7 $030A: [$0618] pattern 55, track 3
COMMENT $42E9 $030C: pattern 56 state
COMMENT $42EA $030D: [$05E8] pattern 56, track 1
COMMENT $42EC $030F: [$039D] pattern 56, track 2
COMMENT $42EE $0311: [$0618] pattern 56, track 3
COMMENT $42F0 $0313: pattern 57 state
COMMENT $42F1 $0314: [$05E8] pattern 57, track 1
COMMENT $42F3 $0316: [$039D] pattern 57, track 2
COMMENT $42F5 $0318: [$0663] pattern 57, track 3
COMMENT $42F7 $031A: pattern 58 state
COMMENT $42F8 $031B: [$0529] pattern 58, track 1
COMMENT $42FA $031D: [$0686] pattern 58, track 2
COMMENT $42FC $031F: [$0559] pattern 58, track 3
COMMENT $42FE $0321: pattern 59 state
COMMENT $42FF $0322: [$0529] pattern 59, track 1
COMMENT $4301 $0324: [$069F] pattern 59, track 2
COMMENT $4303 $0326: [$0559] pattern 59, track 3
COMMENT $4305 $0328: pattern 60 state
COMMENT $4306 $0329: [$0529] pattern 60, track 1
COMMENT $4308 $032B: [$0686] pattern 60, track 2
COMMENT $430A $032D: [$0559] pattern 60, track 3
COMMENT $430C $032F: pattern 61 state
COMMENT $430D $0330: [$0529] pattern 61, track 1
COMMENT $430F $0332: [$069F] pattern 61, track 2
COMMENT $4311 $0334: [$0559] pattern 61, track 3
COMMENT $4313 $0336: pattern 62 state
COMMENT $4314 $0337: [$05E8] pattern 62, track 1
COMMENT $4316 $0339: [$0686] pattern 62, track 2
COMMENT $4318 $033B: [$0618] pattern 62, track 3
COMMENT $431A $033D: pattern 63 state
COMMENT $431B $033E: [$05E8] pattern 63, track 1
COMMENT $431D $0340: [$069F] pattern 63, track 2
COMMENT $431F $0342: [$0618] pattern 63, track 3
COMMENT $4321 $0344: pattern 64 state
COMMENT $4322 $0345: [$05E8] pattern 64, track 1
COMMENT $4324 $0347: [$0686] pattern 64, track 2
COMMENT $4326 $0349: [$0618] pattern 64, track 3
COMMENT $4328 $034B: pattern 65 state
COMMENT $4329 $034C: [$05E8] pattern 65, track 1
COMMENT $432B $034E: [$069F] pattern 65, track 2
COMMENT $432D $0350: [$0618] pattern 65, track 3
COMMENT $432F $0352: pattern 66 state
COMMENT $4330 $0353: [$0529] pattern 66, track 1
COMMENT $4332 $0355: [$0686] pattern 66, track 2
COMMENT $4334 $0357: [$0559] pattern 66, track 3
COMMENT $4336 $0359: pattern 67 state
COMMENT $4337 $035A: [$0529] pattern 67, track 1
COMMENT $4339 $035C: [$069F] pattern 67, track 2
COMMENT $433B $035E: [$0559] pattern 67, track 3
COMMENT $433D $0360: pattern 68 state
COMMENT $433E $0361: [$0529] pattern 68, track 1
COMMENT $4340 $0363: [$0686] pattern 68, track 2
COMMENT $4342 $0365: [$0559] pattern 68, track 3
COMMENT $4344 $0367: pattern 69 state
COMMENT $4345 $0368: [$0529] pattern 69, track 1
COMMENT $4347 $036A: [$069F] pattern 69, track 2
COMMENT $4349 $036C: [$0559] pattern 69, track 3
COMMENT $434B $036E: pattern 70 state
COMMENT $434C $036F: [$05E8] pattern 70, track 1
COMMENT $434E $0371: [$0686] pattern 70, track 2
COMMENT $4350 $0373: [$0618] pattern 70, track 3
COMMENT $4352 $0375: pattern 71 state
COMMENT $4353 $0376: [$05E8] pattern 71, track 1
COMMENT $4355 $0378: [$069F] pattern 71, track 2
COMMENT $4357 $037A: [$0618] pattern 71, track 3
COMMENT $4359 $037C: pattern 72 state
COMMENT $435A $037D: [$05E8] pattern 72, track 1
COMMENT $435C $037F: [$0686] pattern 72, track 2
COMMENT $435E $0381: [$0618] pattern 72, track 3
COMMENT $4360 $0383: pattern 73 state
COMMENT $4361 $0384: [$05E8] pattern 73, track 1
COMMENT $4363 $0386: [$069F] pattern 73, track 2
COMMENT $4365 $0388: [$0618] pattern 73, track 3
COMMENT $4367 $038A: pattern 74 state
COMMENT $4368 $038B: [$06C5] pattern 74, track 1
COMMENT $436A $038D: [$06B9] pattern 74, track 2
COMMENT $436C $038F: [$06D0] pattern 74, track 3
COMMENT $436E $0391: pattern 75 state
COMMENT $436F $0392: [$039D] pattern 75, track 1
COMMENT $4371 $0394: [$039D] pattern 75, track 2
COMMENT $4373 $0396: [$039D] pattern 75, track 3
COMMENT $4375 $0398: pattern 76 state
COMMENT $4376 $0399: [$017A] song restart address
COMMENT $4378 $039B: data, speed 5
COMMENT $4379 $039C: wait 128
COMMENT $437A $039D: normal track data
COMMENT $437B $039E: vol off, pitch, no note, no instrument
COMMENT $437C $039F: pitch
COMMENT $437E $03A1: track end signature found
COMMENT $437F $03A2: normal track data
COMMENT $4380 $03A3: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4381 $03A4: pitch
COMMENT $4383 $03A6: instrument
COMMENT $4384 $03A7: normal track data
COMMENT $4385 $03A8: vol off, pitch, no note, no instrument
COMMENT $4386 $03A9: pitch
COMMENT $4388 $03AB: normal track data
COMMENT $4389 $03AC: vol off, no pitch, no note, no instrument
COMMENT $438A $03AD: normal track data
COMMENT $438B $03AE: vol off, no pitch, no note, no instrument
COMMENT $438C $03AF: normal track data
COMMENT $438D $03B0: vol off, no pitch, no note, no instrument
COMMENT $438E $03B1: normal track data
COMMENT $438F $03B2: vol off, no pitch, no note, no instrument
COMMENT $4390 $03B3: normal track data
COMMENT $4391 $03B4: vol off, no pitch, no note, no instrument
COMMENT $4392 $03B5: normal track data
COMMENT $4393 $03B6: vol off, no pitch, no note, no instrument
COMMENT $4394 $03B7: normal track data
COMMENT $4395 $03B8: vol off, no pitch, no note, no instrument
COMMENT $4396 $03B9: normal track data
COMMENT $4397 $03BA: vol off, no pitch, no note, no instrument
COMMENT $4398 $03BB: normal track data
COMMENT $4399 $03BC: vol off, no pitch, no note, no instrument
COMMENT $439A $03BD: normal track data
COMMENT $439B $03BE: vol off, no pitch, no note, no instrument
COMMENT $439C $03BF: normal track data
COMMENT $439D $03C0: vol off, no pitch, no note, no instrument
COMMENT $439E $03C1: normal track data
COMMENT $439F $03C2: vol off, no pitch, no note, no instrument
COMMENT $43A0 $03C3: normal track data
COMMENT $43A1 $03C4: vol off, no pitch, no note, no instrument
COMMENT $43A2 $03C5: normal track data
COMMENT $43A3 $03C6: vol off, no pitch, no note, no instrument
COMMENT $43A4 $03C7: normal track data
COMMENT $43A5 $03C8: vol off, no pitch, no note, no instrument
COMMENT $43A6 $03C9: normal track data
COMMENT $43A7 $03CA: vol off, no pitch, no note, no instrument
COMMENT $43A8 $03CB: normal track data
COMMENT $43A9 $03CC: vol off, no pitch, no note, no instrument
COMMENT $43AA $03CD: normal track data
COMMENT $43AB $03CE: vol off, no pitch, no note, no instrument
COMMENT $43AC $03CF: normal track data
COMMENT $43AD $03D0: vol off, no pitch, no note, no instrument
COMMENT $43AE $03D1: normal track data
COMMENT $43AF $03D2: vol off, no pitch, no note, no instrument
COMMENT $43B0 $03D3: normal track data
COMMENT $43B1 $03D4: vol off, no pitch, no note, no instrument
COMMENT $43B2 $03D5: normal track data
COMMENT $43B3 $03D6: vol off, no pitch, no note, no instrument
COMMENT $43B4 $03D7: normal track data
COMMENT $43B5 $03D8: vol off, no pitch, no note, no instrument
COMMENT $43B6 $03D9: normal track data
COMMENT $43B7 $03DA: vol off, no pitch, no note, no instrument
COMMENT $43B8 $03DB: normal track data
COMMENT $43B9 $03DC: vol off, no pitch, no note, no instrument
COMMENT $43BA $03DD: normal track data
COMMENT $43BB $03DE: vol off, no pitch, no note, no instrument
COMMENT $43BC $03DF: normal track data
COMMENT $43BD $03E0: vol off, no pitch, no note, no instrument
COMMENT $43BE $03E1: normal track data
COMMENT $43BF $03E2: vol off, no pitch, no note, no instrument
COMMENT $43C0 $03E3: normal track data
COMMENT $43C1 $03E4: vol off, no pitch, no note, no instrument
COMMENT $43C2 $03E5: normal track data
COMMENT $43C3 $03E6: vol off, no pitch, no note, no instrument
COMMENT $43C4 $03E7: normal track data
COMMENT $43C5 $03E8: vol off, pitch, no note, no instrument
COMMENT $43C6 $03E9: pitch
COMMENT $43C8 $03EB: normal track data
COMMENT $43C9 $03EC: vol off, no pitch, no note, no instrument
COMMENT $43CA $03ED: normal track data,  wait 2
COMMENT $43CB $03EE: normal track data
COMMENT $43CC $03EF: vol = $E (inverted), no pitch, no note, no instrument
COMMENT $43CD $03F0: normal track data,  wait 3
COMMENT $43CE $03F1: normal track data,  note: C0
COMMENT $43CF $03F2: vol = $D (inverted), no pitch, no note, no instrument
COMMENT $43D0 $03F3: track end signature found
COMMENT $43D1 $03F4: normal track data
COMMENT $43D2 $03F5: vol off, pitch, no note, no instrument
COMMENT $43D3 $03F6: pitch
COMMENT $43D5 $03F8: normal track data,  wait 0
COMMENT $43D6 $03F9: normal track data,  note: C0
COMMENT $43D7 $03FA: vol = $C (inverted), no pitch, no note, no instrument
COMMENT $43D8 $03FB: normal track data,  wait 3
COMMENT $43D9 $03FC: normal track data
COMMENT $43DA $03FD: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $43DB $03FE: normal track data,  wait 3
COMMENT $43DC $03FF: normal track data
COMMENT $43DD $0400: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $43DE $0401: track end signature found
COMMENT $43DF $0402: normal track data
COMMENT $43E0 $0403: vol off, pitch, no note, no instrument
COMMENT $43E1 $0404: pitch
COMMENT $43E3 $0406: normal track data,  note: C0
COMMENT $43E4 $0407: vol = $9 (inverted), no pitch, no note, no instrument
COMMENT $43E5 $0408: normal track data,  wait 3
COMMENT $43E6 $0409: normal track data,  note: C0
COMMENT $43E7 $040A: vol = $8 (inverted), no pitch, no note, no instrument
COMMENT $43E8 $040B: normal track data,  wait 3
COMMENT $43E9 $040C: normal track data
COMMENT $43EA $040D: vol = $7 (inverted), no pitch, no note, no instrument
COMMENT $43EB $040E: track end signature found
COMMENT $43EC $040F: normal track data
COMMENT $43ED $0410: vol = $6 (inverted), no pitch, no note, no instrument
COMMENT $43EE $0411: pitch
COMMENT $43F0 $0413: normal track data,  wait 1
COMMENT $43F1 $0414: normal track data,  note: C0
COMMENT $43F2 $0415: vol = $5 (inverted), no pitch, no note, no instrument
COMMENT $43F3 $0416: normal track data,  wait 1
COMMENT $43F4 $0417: normal track data,  note: C0
COMMENT $43F5 $0418: vol = $4 (inverted), no pitch, no note, no instrument
COMMENT $43F6 $0419: normal track data,  wait 1
COMMENT $43F7 $041A: normal track data
COMMENT $43F8 $041B: vol = $3 (inverted), no pitch, no note, no instrument
COMMENT $43F9 $041C: normal track data,  wait 1
COMMENT $43FA $041D: normal track data
COMMENT $43FB $041E: vol = $2 (inverted), no pitch, no note, no instrument
COMMENT $43FC $041F: normal track data,  wait 0
COMMENT $43FD $0420: normal track data,  note: C0
COMMENT $43FE $0421: vol = $1 (inverted), no pitch, no note, no instrument
COMMENT $43FF $0422: normal track data,  note: C0
COMMENT $4400 $0423: vol = $0 (inverted), no pitch, no note, no instrument
COMMENT $4401 $0424: normal track data
COMMENT $4402 $0425: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4403 $0426: pitch
COMMENT $4405 $0428: instrument
COMMENT $4406 $0429: normal track data
COMMENT $4407 $042A: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4408 $042B: normal track data
COMMENT $4409 $042C: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $440A $042D: normal track data
COMMENT $440B $042E: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $440C $042F: normal track data
COMMENT $440D $0430: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $440E $0431: normal track data
COMMENT $440F $0432: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4410 $0433: normal track data
COMMENT $4411 $0434: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4412 $0435: normal track data
COMMENT $4413 $0436: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4414 $0437: normal track data
COMMENT $4415 $0438: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4416 $0439: normal track data
COMMENT $4417 $043A: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4418 $043B: normal track data
COMMENT $4419 $043C: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $441A $043D: normal track data
COMMENT $441B $043E: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $441C $043F: normal track data
COMMENT $441D $0440: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $441E $0441: normal track data
COMMENT $441F $0442: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4420 $0443: normal track data
COMMENT $4421 $0444: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4422 $0445: normal track data
COMMENT $4423 $0446: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4424 $0447: normal track data
COMMENT $4425 $0448: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4426 $0449: pitch
COMMENT $4428 $044B: instrument
COMMENT $4429 $044C: normal track data
COMMENT $442A $044D: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $442B $044E: normal track data
COMMENT $442C $044F: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $442D $0450: normal track data
COMMENT $442E $0451: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $442F $0452: normal track data
COMMENT $4430 $0453: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4431 $0454: normal track data
COMMENT $4432 $0455: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4433 $0456: normal track data
COMMENT $4434 $0457: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4435 $0458: normal track data
COMMENT $4436 $0459: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4437 $045A: normal track data
COMMENT $4438 $045B: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4439 $045C: normal track data
COMMENT $443A $045D: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $443B $045E: normal track data
COMMENT $443C $045F: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $443D $0460: normal track data
COMMENT $443E $0461: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $443F $0462: normal track data
COMMENT $4440 $0463: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4441 $0464: normal track data
COMMENT $4442 $0465: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4443 $0466: normal track data
COMMENT $4444 $0467: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4445 $0468: normal track data
COMMENT $4446 $0469: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4447 $046A: normal track data
COMMENT $4448 $046B: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4449 $046C: pitch
COMMENT $444B $046E: instrument
COMMENT $444C $046F: normal track data,  wait 0
COMMENT $444D $0470: full optimization, no escape: G#1
COMMENT $444E $0471: normal track data,  wait 0
COMMENT $444F $0472: full optimization, no escape: G#1
COMMENT $4450 $0473: normal track data,  wait 0
COMMENT $4451 $0474: full optimization, no escape: G#1
COMMENT $4452 $0475: normal track data,  wait 0
COMMENT $4453 $0476: full optimization, no escape: G#1
COMMENT $4454 $0477: normal track data,  wait 0
COMMENT $4455 $0478: full optimization, no escape: G#1
COMMENT $4456 $0479: normal track data,  wait 0
COMMENT $4457 $047A: full optimization, no escape: G#1
COMMENT $4458 $047B: normal track data,  wait 0
COMMENT $4459 $047C: full optimization, no escape: G#1
COMMENT $445A $047D: track end signature found
COMMENT $445B $047E: normal track data
COMMENT $445C $047F: vol off, pitch, note, instrument
COMMENT $445D $0480: pitch
COMMENT $445F $0482: instrument
COMMENT $4460 $0483: normal track data
COMMENT $4461 $0484: vol off, no pitch, note, instrument
COMMENT $4462 $0485: instrument
COMMENT $4463 $0486: normal track data
COMMENT $4464 $0487: vol off, no pitch, note, instrument
COMMENT $4465 $0488: instrument
COMMENT $4466 $0489: full optimization, no escape: D#1
COMMENT $4467 $048A: normal track data
COMMENT $4468 $048B: vol off, no pitch, note, instrument
COMMENT $4469 $048C: instrument
COMMENT $446A $048D: normal track data
COMMENT $446B $048E: vol off, no pitch, note, instrument
COMMENT $446C $048F: instrument
COMMENT $446D $0490: normal track data
COMMENT $446E $0491: vol off, no pitch, note, instrument
COMMENT $446F $0492: instrument
COMMENT $4470 $0493: normal track data
COMMENT $4471 $0494: vol off, no pitch, note, instrument
COMMENT $4472 $0495: instrument
COMMENT $4473 $0496: normal track data
COMMENT $4474 $0497: vol off, no pitch, note, instrument
COMMENT $4475 $0498: instrument
COMMENT $4476 $0499: normal track data
COMMENT $4477 $049A: vol off, no pitch, note, instrument
COMMENT $4478 $049B: instrument
COMMENT $4479 $049C: normal track data
COMMENT $447A $049D: vol off, no pitch, note, instrument
COMMENT $447B $049E: instrument
COMMENT $447C $049F: normal track data
COMMENT $447D $04A0: vol off, no pitch, note, instrument
COMMENT $447E $04A1: instrument
COMMENT $447F $04A2: normal track data
COMMENT $4480 $04A3: vol off, no pitch, note, instrument
COMMENT $4481 $04A4: instrument
COMMENT $4482 $04A5: normal track data
COMMENT $4483 $04A6: vol off, no pitch, note, instrument
COMMENT $4484 $04A7: instrument
COMMENT $4485 $04A8: normal track data
COMMENT $4486 $04A9: vol off, no pitch, note, instrument
COMMENT $4487 $04AA: instrument
COMMENT $4488 $04AB: full optimization, no escape: D#1
COMMENT $4489 $04AC: normal track data
COMMENT $448A $04AD: vol off, pitch, note, instrument
COMMENT $448B $04AE: pitch
COMMENT $448D $04B0: instrument
COMMENT $448E $04B1: normal track data
COMMENT $448F $04B2: vol off, no pitch, note, instrument
COMMENT $4490 $04B3: instrument
COMMENT $4491 $04B4: normal track data
COMMENT $4492 $04B5: vol off, no pitch, note, instrument
COMMENT $4493 $04B6: instrument
COMMENT $4494 $04B7: full optimization, no escape: D#1
COMMENT $4495 $04B8: normal track data
COMMENT $4496 $04B9: vol off, no pitch, note, instrument
COMMENT $4497 $04BA: instrument
COMMENT $4498 $04BB: normal track data
COMMENT $4499 $04BC: vol off, no pitch, note, instrument
COMMENT $449A $04BD: instrument
COMMENT $449B $04BE: normal track data
COMMENT $449C $04BF: vol off, no pitch, note, instrument
COMMENT $449D $04C0: instrument
COMMENT $449E $04C1: normal track data
COMMENT $449F $04C2: vol off, no pitch, note, instrument
COMMENT $44A0 $04C3: instrument
COMMENT $44A1 $04C4: normal track data
COMMENT $44A2 $04C5: vol off, no pitch, note, instrument
COMMENT $44A3 $04C6: instrument
COMMENT $44A4 $04C7: normal track data
COMMENT $44A5 $04C8: vol off, no pitch, note, instrument
COMMENT $44A6 $04C9: instrument
COMMENT $44A7 $04CA: normal track data
COMMENT $44A8 $04CB: vol off, no pitch, note, instrument
COMMENT $44A9 $04CC: instrument
COMMENT $44AA $04CD: normal track data
COMMENT $44AB $04CE: vol off, no pitch, note, instrument
COMMENT $44AC $04CF: instrument
COMMENT $44AD $04D0: normal track data
COMMENT $44AE $04D1: vol off, no pitch, note, instrument
COMMENT $44AF $04D2: instrument
COMMENT $44B0 $04D3: normal track data
COMMENT $44B1 $04D4: vol off, no pitch, no note, no instrument
COMMENT $44B2 $04D5: normal track data
COMMENT $44B3 $04D6: vol off, no pitch, note, instrument
COMMENT $44B4 $04D7: instrument
COMMENT $44B5 $04D8: normal track data
COMMENT $44B6 $04D9: vol off, no pitch, note, instrument
COMMENT $44B7 $04DA: instrument
COMMENT $44B8 $04DB: normal track data
COMMENT $44B9 $04DC: vol off, pitch, note, instrument
COMMENT $44BA $04DD: pitch
COMMENT $44BC $04DF: instrument
COMMENT $44BD $04E0: normal track data
COMMENT $44BE $04E1: vol off, no pitch, no note, no instrument
COMMENT $44BF $04E2: normal track data
COMMENT $44C0 $04E3: vol off, no pitch, note, instrument
COMMENT $44C1 $04E4: instrument
COMMENT $44C2 $04E5: normal track data
COMMENT $44C3 $04E6: vol off, no pitch, note, instrument
COMMENT $44C4 $04E7: instrument
COMMENT $44C5 $04E8: normal track data
COMMENT $44C6 $04E9: vol off, no pitch, note, instrument
COMMENT $44C7 $04EA: instrument
COMMENT $44C8 $04EB: normal track data
COMMENT $44C9 $04EC: vol off, no pitch, no note, no instrument
COMMENT $44CA $04ED: normal track data
COMMENT $44CB $04EE: vol off, no pitch, note, instrument
COMMENT $44CC $04EF: instrument
COMMENT $44CD $04F0: full optimization, no escape: F#1
COMMENT $44CE $04F1: normal track data
COMMENT $44CF $04F2: vol off, no pitch, note, instrument
COMMENT $44D0 $04F3: instrument
COMMENT $44D1 $04F4: normal track data,  wait 0
COMMENT $44D2 $04F5: normal track data
COMMENT $44D3 $04F6: vol off, no pitch, note, instrument
COMMENT $44D4 $04F7: instrument
COMMENT $44D5 $04F8: full optimization, no escape: D#1
COMMENT $44D6 $04F9: normal track data
COMMENT $44D7 $04FA: vol off, no pitch, note, instrument
COMMENT $44D8 $04FB: instrument
COMMENT $44D9 $04FC: normal track data,  wait 0
COMMENT $44DA $04FD: normal track data
COMMENT $44DB $04FE: vol off, no pitch, note, instrument
COMMENT $44DC $04FF: instrument
COMMENT $44DD $0500: normal track data
COMMENT $44DE $0501: vol off, no pitch, no note, no instrument
COMMENT $44DF $0502: normal track data
COMMENT $44E0 $0503: vol off, pitch, no note, no instrument
COMMENT $44E1 $0504: pitch
COMMENT $44E3 $0506: normal track data,  wait 0
COMMENT $44E4 $0507: normal track data
COMMENT $44E5 $0508: vol off, no pitch, note, instrument
COMMENT $44E6 $0509: instrument
COMMENT $44E7 $050A: normal track data
COMMENT $44E8 $050B: vol off, no pitch, no note, no instrument
COMMENT $44E9 $050C: normal track data
COMMENT $44EA $050D: vol off, no pitch, note, instrument
COMMENT $44EB $050E: instrument
COMMENT $44EC $050F: normal track data,  wait 0
COMMENT $44ED $0510: normal track data
COMMENT $44EE $0511: vol off, no pitch, note, instrument
COMMENT $44EF $0512: instrument
COMMENT $44F0 $0513: full optimization, no escape: F#1
COMMENT $44F1 $0514: normal track data
COMMENT $44F2 $0515: vol off, no pitch, note, instrument
COMMENT $44F3 $0516: instrument
COMMENT $44F4 $0517: normal track data
COMMENT $44F5 $0518: vol off, no pitch, no note, no instrument
COMMENT $44F6 $0519: normal track data
COMMENT $44F7 $051A: vol off, no pitch, note, instrument
COMMENT $44F8 $051B: instrument
COMMENT $44F9 $051C: full optimization, no escape: D#1
COMMENT $44FA $051D: normal track data
COMMENT $44FB $051E: vol off, no pitch, note, instrument
COMMENT $44FC $051F: instrument
COMMENT $44FD $0520: normal track data
COMMENT $44FE $0521: vol off, no pitch, note, instrument
COMMENT $44FF $0522: instrument
COMMENT $4500 $0523: normal track data
COMMENT $4501 $0524: vol off, no pitch, note, instrument
COMMENT $4502 $0525: instrument
COMMENT $4503 $0526: normal track data
COMMENT $4504 $0527: vol off, no pitch, note, instrument
COMMENT $4505 $0528: instrument
COMMENT $4506 $0529: normal track data
COMMENT $4507 $052A: vol off, pitch, note, instrument
COMMENT $4508 $052B: pitch
COMMENT $450A $052D: instrument
COMMENT $450B $052E: normal track data
COMMENT $450C $052F: vol off, no pitch, note, instrument
COMMENT $450D $0530: instrument
COMMENT $450E $0531: normal track data
COMMENT $450F $0532: vol off, no pitch, note, instrument
COMMENT $4510 $0533: instrument
COMMENT $4511 $0534: normal track data
COMMENT $4512 $0535: vol off, no pitch, note, instrument
COMMENT $4513 $0536: instrument
COMMENT $4514 $0537: normal track data
COMMENT $4515 $0538: vol off, no pitch, note, instrument
COMMENT $4516 $0539: instrument
COMMENT $4517 $053A: normal track data
COMMENT $4518 $053B: vol off, no pitch, note, instrument
COMMENT $4519 $053C: instrument
COMMENT $451A $053D: normal track data
COMMENT $451B $053E: vol off, no pitch, note, instrument
COMMENT $451C $053F: instrument
COMMENT $451D $0540: normal track data
COMMENT $451E $0541: vol off, no pitch, note, instrument
COMMENT $451F $0542: instrument
COMMENT $4520 $0543: normal track data
COMMENT $4521 $0544: vol off, no pitch, note, instrument
COMMENT $4522 $0545: instrument
COMMENT $4523 $0546: normal track data
COMMENT $4524 $0547: vol off, no pitch, note, instrument
COMMENT $4525 $0548: instrument
COMMENT $4526 $0549: normal track data
COMMENT $4527 $054A: vol off, no pitch, note, instrument
COMMENT $4528 $054B: instrument
COMMENT $4529 $054C: normal track data
COMMENT $452A $054D: vol off, no pitch, note, instrument
COMMENT $452B $054E: instrument
COMMENT $452C $054F: normal track data
COMMENT $452D $0550: vol off, no pitch, no note, no instrument
COMMENT $452E $0551: normal track data
COMMENT $452F $0552: vol off, no pitch, no note, no instrument
COMMENT $4530 $0553: normal track data
COMMENT $4531 $0554: vol off, no pitch, note, instrument
COMMENT $4532 $0555: instrument
COMMENT $4533 $0556: normal track data
COMMENT $4534 $0557: vol off, no pitch, note, instrument
COMMENT $4535 $0558: instrument
COMMENT $4536 $0559: normal track data
COMMENT $4537 $055A: vol off, pitch, no note, no instrument
COMMENT $4538 $055B: pitch
COMMENT $453A $055D: normal track data,  wait 0
COMMENT $453B $055E: normal track data
COMMENT $453C $055F: vol off, no pitch, note, instrument
COMMENT $453D $0560: instrument
COMMENT $453E $0561: normal track data
COMMENT $453F $0562: vol off, no pitch, no note, no instrument
COMMENT $4540 $0563: normal track data
COMMENT $4541 $0564: vol off, no pitch, note, instrument
COMMENT $4542 $0565: instrument
COMMENT $4543 $0566: normal track data,  wait 0
COMMENT $4544 $0567: normal track data
COMMENT $4545 $0568: vol off, no pitch, note, instrument
COMMENT $4546 $0569: instrument
COMMENT $4547 $056A: normal track data
COMMENT $4548 $056B: vol off, no pitch, no note, no instrument
COMMENT $4549 $056C: normal track data
COMMENT $454A $056D: vol off, no pitch, note, instrument
COMMENT $454B $056E: instrument
COMMENT $454C $056F: normal track data
COMMENT $454D $0570: vol off, no pitch, no note, no instrument
COMMENT $454E $0571: normal track data
COMMENT $454F $0572: vol off, no pitch, note, instrument
COMMENT $4550 $0573: instrument
COMMENT $4551 $0574: normal track data
COMMENT $4552 $0575: vol off, no pitch, no note, no instrument
COMMENT $4553 $0576: normal track data
COMMENT $4554 $0577: vol off, no pitch, note, instrument
COMMENT $4555 $0578: instrument
COMMENT $4556 $0579: normal track data
COMMENT $4557 $057A: vol off, no pitch, note, instrument
COMMENT $4558 $057B: instrument
COMMENT $4559 $057C: normal track data
COMMENT $455A $057D: vol off, no pitch, note, instrument
COMMENT $455B $057E: instrument
COMMENT $455C $057F: normal track data
COMMENT $455D $0580: vol off, no pitch, no note, no instrument
COMMENT $455E $0581: normal track data
COMMENT $455F $0582: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $4560 $0583: pitch
COMMENT $4562 $0585: instrument
COMMENT $4563 $0586: normal track data
COMMENT $4564 $0587: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4565 $0588: normal track data,  note: C0
COMMENT $4566 $0589: vol = $C (inverted), no pitch, no note, no instrument
COMMENT $4567 $058A: normal track data,  note: C0
COMMENT $4568 $058B: vol = $D (inverted), no pitch, no note, no instrument
COMMENT $4569 $058C: normal track data
COMMENT $456A $058D: vol = $E (inverted), no pitch, no note, no instrument
COMMENT $456B $058E: normal track data
COMMENT $456C $058F: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $456D $0590: normal track data
COMMENT $456E $0591: vol off, no pitch, no note, no instrument
COMMENT $456F $0592: normal track data
COMMENT $4570 $0593: vol off, no pitch, no note, no instrument
COMMENT $4571 $0594: normal track data
COMMENT $4572 $0595: vol off, no pitch, no note, no instrument
COMMENT $4573 $0596: normal track data
COMMENT $4574 $0597: vol off, no pitch, no note, no instrument
COMMENT $4575 $0598: normal track data
COMMENT $4576 $0599: vol off, no pitch, no note, no instrument
COMMENT $4577 $059A: normal track data
COMMENT $4578 $059B: vol off, no pitch, no note, no instrument
COMMENT $4579 $059C: normal track data
COMMENT $457A $059D: vol off, no pitch, no note, no instrument
COMMENT $457B $059E: normal track data
COMMENT $457C $059F: vol off, no pitch, no note, no instrument
COMMENT $457D $05A0: normal track data
COMMENT $457E $05A1: vol off, no pitch, no note, no instrument
COMMENT $457F $05A2: normal track data
COMMENT $4580 $05A3: vol off, no pitch, no note, no instrument
COMMENT $4581 $05A4: normal track data
COMMENT $4582 $05A5: vol off, pitch, no note, no instrument
COMMENT $4583 $05A6: pitch
COMMENT $4585 $05A8: normal track data
COMMENT $4586 $05A9: vol off, no pitch, no note, no instrument
COMMENT $4587 $05AA: normal track data
COMMENT $4588 $05AB: vol off, no pitch, no note, no instrument
COMMENT $4589 $05AC: normal track data
COMMENT $458A $05AD: vol off, no pitch, no note, no instrument
COMMENT $458B $05AE: normal track data
COMMENT $458C $05AF: vol off, no pitch, no note, no instrument
COMMENT $458D $05B0: normal track data
COMMENT $458E $05B1: vol off, no pitch, no note, no instrument
COMMENT $458F $05B2: normal track data
COMMENT $4590 $05B3: vol off, no pitch, no note, no instrument
COMMENT $4591 $05B4: normal track data
COMMENT $4592 $05B5: vol off, no pitch, no note, no instrument
COMMENT $4593 $05B6: normal track data
COMMENT $4594 $05B7: vol off, no pitch, no note, no instrument
COMMENT $4595 $05B8: normal track data
COMMENT $4596 $05B9: vol off, no pitch, no note, no instrument
COMMENT $4597 $05BA: normal track data
COMMENT $4598 $05BB: vol off, no pitch, no note, no instrument
COMMENT $4599 $05BC: normal track data
COMMENT $459A $05BD: vol off, no pitch, no note, no instrument
COMMENT $459B $05BE: normal track data
COMMENT $459C $05BF: vol off, no pitch, no note, no instrument
COMMENT $459D $05C0: normal track data
COMMENT $459E $05C1: vol off, no pitch, no note, no instrument
COMMENT $459F $05C2: normal track data
COMMENT $45A0 $05C3: vol off, no pitch, no note, no instrument
COMMENT $45A1 $05C4: normal track data
COMMENT $45A2 $05C5: vol off, no pitch, no note, no instrument
COMMENT $45A3 $05C6: normal track data
COMMENT $45A4 $05C7: vol off, pitch, no note, no instrument
COMMENT $45A5 $05C8: pitch
COMMENT $45A7 $05CA: normal track data
COMMENT $45A8 $05CB: vol off, no pitch, no note, no instrument
COMMENT $45A9 $05CC: normal track data
COMMENT $45AA $05CD: vol = $E (inverted), no pitch, no note, no instrument
COMMENT $45AB $05CE: normal track data
COMMENT $45AC $05CF: vol off, no pitch, no note, no instrument
COMMENT $45AD $05D0: normal track data
COMMENT $45AE $05D1: vol off, no pitch, no note, no instrument
COMMENT $45AF $05D2: normal track data
COMMENT $45B0 $05D3: vol off, no pitch, no note, no instrument
COMMENT $45B1 $05D4: normal track data,  note: C0
COMMENT $45B2 $05D5: vol = $D (inverted), no pitch, no note, no instrument
COMMENT $45B3 $05D6: normal track data
COMMENT $45B4 $05D7: vol off, no pitch, no note, no instrument
COMMENT $45B5 $05D8: normal track data
COMMENT $45B6 $05D9: vol off, no pitch, no note, no instrument
COMMENT $45B7 $05DA: normal track data
COMMENT $45B8 $05DB: vol off, no pitch, no note, no instrument
COMMENT $45B9 $05DC: normal track data,  note: C0
COMMENT $45BA $05DD: vol = $C (inverted), no pitch, no note, no instrument
COMMENT $45BB $05DE: normal track data
COMMENT $45BC $05DF: vol off, no pitch, no note, no instrument
COMMENT $45BD $05E0: normal track data
COMMENT $45BE $05E1: vol off, no pitch, no note, no instrument
COMMENT $45BF $05E2: normal track data
COMMENT $45C0 $05E3: vol off, no pitch, no note, no instrument
COMMENT $45C1 $05E4: normal track data
COMMENT $45C2 $05E5: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $45C3 $05E6: normal track data
COMMENT $45C4 $05E7: vol off, no pitch, no note, no instrument
COMMENT $45C5 $05E8: normal track data
COMMENT $45C6 $05E9: vol off, pitch, note, instrument
COMMENT $45C7 $05EA: pitch
COMMENT $45C9 $05EC: instrument
COMMENT $45CA $05ED: normal track data
COMMENT $45CB $05EE: vol off, no pitch, note, instrument
COMMENT $45CC $05EF: instrument
COMMENT $45CD $05F0: normal track data
COMMENT $45CE $05F1: vol off, no pitch, note, instrument
COMMENT $45CF $05F2: instrument
COMMENT $45D0 $05F3: normal track data
COMMENT $45D1 $05F4: vol off, no pitch, note, instrument
COMMENT $45D2 $05F5: instrument
COMMENT $45D3 $05F6: normal track data
COMMENT $45D4 $05F7: vol off, no pitch, note, instrument
COMMENT $45D5 $05F8: instrument
COMMENT $45D6 $05F9: normal track data
COMMENT $45D7 $05FA: vol off, no pitch, note, instrument
COMMENT $45D8 $05FB: instrument
COMMENT $45D9 $05FC: normal track data
COMMENT $45DA $05FD: vol off, no pitch, note, instrument
COMMENT $45DB $05FE: instrument
COMMENT $45DC $05FF: normal track data
COMMENT $45DD $0600: vol off, no pitch, note, instrument
COMMENT $45DE $0601: instrument
COMMENT $45DF $0602: normal track data
COMMENT $45E0 $0603: vol off, no pitch, note, instrument
COMMENT $45E1 $0604: instrument
COMMENT $45E2 $0605: normal track data
COMMENT $45E3 $0606: vol off, no pitch, note, instrument
COMMENT $45E4 $0607: instrument
COMMENT $45E5 $0608: normal track data
COMMENT $45E6 $0609: vol off, no pitch, note, instrument
COMMENT $45E7 $060A: instrument
COMMENT $45E8 $060B: normal track data
COMMENT $45E9 $060C: vol off, no pitch, note, instrument
COMMENT $45EA $060D: instrument
COMMENT $45EB $060E: normal track data
COMMENT $45EC $060F: vol off, no pitch, no note, no instrument
COMMENT $45ED $0610: normal track data
COMMENT $45EE $0611: vol off, no pitch, no note, no instrument
COMMENT $45EF $0612: normal track data
COMMENT $45F0 $0613: vol off, no pitch, note, instrument
COMMENT $45F1 $0614: instrument
COMMENT $45F2 $0615: normal track data
COMMENT $45F3 $0616: vol off, no pitch, note, instrument
COMMENT $45F4 $0617: instrument
COMMENT $45F5 $0618: normal track data
COMMENT $45F6 $0619: vol off, pitch, no note, no instrument
COMMENT $45F7 $061A: pitch
COMMENT $45F9 $061C: normal track data,  wait 0
COMMENT $45FA $061D: normal track data
COMMENT $45FB $061E: vol off, no pitch, note, instrument
COMMENT $45FC $061F: instrument
COMMENT $45FD $0620: normal track data
COMMENT $45FE $0621: vol off, no pitch, no note, no instrument
COMMENT $45FF $0622: normal track data
COMMENT $4600 $0623: vol off, no pitch, note, instrument
COMMENT $4601 $0624: instrument
COMMENT $4602 $0625: normal track data,  wait 0
COMMENT $4603 $0626: normal track data
COMMENT $4604 $0627: vol off, no pitch, note, instrument
COMMENT $4605 $0628: instrument
COMMENT $4606 $0629: normal track data
COMMENT $4607 $062A: vol off, no pitch, no note, no instrument
COMMENT $4608 $062B: normal track data
COMMENT $4609 $062C: vol off, no pitch, note, instrument
COMMENT $460A $062D: instrument
COMMENT $460B $062E: normal track data
COMMENT $460C $062F: vol off, no pitch, no note, no instrument
COMMENT $460D $0630: normal track data
COMMENT $460E $0631: vol off, no pitch, note, instrument
COMMENT $460F $0632: instrument
COMMENT $4610 $0633: normal track data
COMMENT $4611 $0634: vol off, no pitch, no note, no instrument
COMMENT $4612 $0635: normal track data
COMMENT $4613 $0636: vol off, no pitch, note, instrument
COMMENT $4614 $0637: instrument
COMMENT $4615 $0638: normal track data
COMMENT $4616 $0639: vol off, no pitch, note, instrument
COMMENT $4617 $063A: instrument
COMMENT $4618 $063B: normal track data
COMMENT $4619 $063C: vol off, no pitch, note, instrument
COMMENT $461A $063D: instrument
COMMENT $461B $063E: normal track data
COMMENT $461C $063F: vol off, no pitch, no note, no instrument
COMMENT $461D $0640: normal track data,  note: F2
COMMENT $461E $0641: vol = $8 (inverted), no pitch, no note, no instrument
COMMENT $461F $0642: pitch
COMMENT $4621 $0644: instrument
COMMENT $4622 $0645: normal track data
COMMENT $4623 $0646: vol off, no pitch, no note, no instrument
COMMENT $4624 $0647: normal track data,  note: C0
COMMENT $4625 $0648: vol = $9 (inverted), no pitch, no note, no instrument
COMMENT $4626 $0649: normal track data
COMMENT $4627 $064A: vol off, no pitch, no note, no instrument
COMMENT $4628 $064B: normal track data
COMMENT $4629 $064C: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $462A $064D: normal track data
COMMENT $462B $064E: vol off, no pitch, no note, no instrument
COMMENT $462C $064F: normal track data
COMMENT $462D $0650: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $462E $0651: normal track data
COMMENT $462F $0652: vol off, no pitch, no note, no instrument
COMMENT $4630 $0653: normal track data,  note: C0
COMMENT $4631 $0654: vol = $C (inverted), no pitch, no note, no instrument
COMMENT $4632 $0655: normal track data
COMMENT $4633 $0656: vol off, no pitch, no note, no instrument
COMMENT $4634 $0657: normal track data,  note: C0
COMMENT $4635 $0658: vol = $D (inverted), no pitch, no note, no instrument
COMMENT $4636 $0659: normal track data
COMMENT $4637 $065A: vol off, no pitch, no note, no instrument
COMMENT $4638 $065B: normal track data
COMMENT $4639 $065C: vol = $E (inverted), no pitch, no note, no instrument
COMMENT $463A $065D: normal track data
COMMENT $463B $065E: vol off, no pitch, no note, no instrument
COMMENT $463C $065F: normal track data
COMMENT $463D $0660: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $463E $0661: normal track data
COMMENT $463F $0662: vol off, no pitch, no note, no instrument
COMMENT $4640 $0663: normal track data
COMMENT $4641 $0664: vol off, pitch, no note, no instrument
COMMENT $4642 $0665: pitch
COMMENT $4644 $0667: normal track data,  wait 0
COMMENT $4645 $0668: normal track data
COMMENT $4646 $0669: vol off, no pitch, note, instrument
COMMENT $4647 $066A: instrument
COMMENT $4648 $066B: normal track data
COMMENT $4649 $066C: vol off, no pitch, no note, no instrument
COMMENT $464A $066D: normal track data
COMMENT $464B $066E: vol off, no pitch, note, instrument
COMMENT $464C $066F: instrument
COMMENT $464D $0670: normal track data,  wait 0
COMMENT $464E $0671: normal track data
COMMENT $464F $0672: vol off, no pitch, note, instrument
COMMENT $4650 $0673: instrument
COMMENT $4651 $0674: normal track data
COMMENT $4652 $0675: vol off, no pitch, no note, no instrument
COMMENT $4653 $0676: normal track data
COMMENT $4654 $0677: vol off, no pitch, note, instrument
COMMENT $4655 $0678: instrument
COMMENT $4656 $0679: normal track data
COMMENT $4657 $067A: vol off, no pitch, no note, no instrument
COMMENT $4658 $067B: normal track data
COMMENT $4659 $067C: vol off, no pitch, note, instrument
COMMENT $465A $067D: instrument
COMMENT $465B $067E: normal track data
COMMENT $465C $067F: vol off, no pitch, no note, no instrument
COMMENT $465D $0680: normal track data
COMMENT $465E $0681: vol off, no pitch, note, instrument
COMMENT $465F $0682: instrument
COMMENT $4660 $0683: full optimization, no escape: C#1
COMMENT $4661 $0684: full optimization, no escape: C#1
COMMENT $4662 $0685: full optimization, no escape: C#1
COMMENT $4663 $0686: normal track data
COMMENT $4664 $0687: vol off, pitch, no note, no instrument
COMMENT $4665 $0688: pitch
COMMENT $4667 $068A: normal track data
COMMENT $4668 $068B: vol off, no pitch, no note, no instrument
COMMENT $4669 $068C: normal track data
COMMENT $466A $068D: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $466B $068E: instrument
COMMENT $466C $068F: normal track data,  wait 2
COMMENT $466D $0690: normal track data
COMMENT $466E $0691: vol off, no pitch, no note, no instrument
COMMENT $466F $0692: normal track data,  wait 0
COMMENT $4670 $0693: full optimization, no escape: D#5
COMMENT $4671 $0694: normal track data,  wait 0
COMMENT $4672 $0695: normal track data
COMMENT $4673 $0696: vol off, no pitch, no note, no instrument
COMMENT $4674 $0697: normal track data,  wait 0
COMMENT $4675 $0698: normal track data
COMMENT $4676 $0699: vol off, no pitch, no note, no instrument
COMMENT $4677 $069A: normal track data,  wait 0
COMMENT $4678 $069B: normal track data
COMMENT $4679 $069C: vol off, no pitch, note, instrument
COMMENT $467A $069D: instrument
COMMENT $467B $069E: track end signature found
COMMENT $467C $069F: normal track data
COMMENT $467D $06A0: vol off, pitch, no note, no instrument
COMMENT $467E $06A1: pitch
COMMENT $4680 $06A3: normal track data,  wait 0
COMMENT $4681 $06A4: normal track data
COMMENT $4682 $06A5: vol off, no pitch, note, instrument
COMMENT $4683 $06A6: instrument
COMMENT $4684 $06A7: normal track data,  wait 0
COMMENT $4685 $06A8: normal track data
COMMENT $4686 $06A9: vol off, no pitch, no note, no instrument
COMMENT $4687 $06AA: normal track data,  wait 0
COMMENT $4688 $06AB: normal track data
COMMENT $4689 $06AC: vol off, no pitch, no note, no instrument
COMMENT $468A $06AD: normal track data,  wait 0
COMMENT $468B $06AE: normal track data
COMMENT $468C $06AF: vol off, no pitch, note, instrument
COMMENT $468D $06B0: instrument
COMMENT $468E $06B1: normal track data,  wait 0
COMMENT $468F $06B2: normal track data
COMMENT $4690 $06B3: vol off, no pitch, no note, no instrument
COMMENT $4691 $06B4: normal track data,  wait 0
COMMENT $4692 $06B5: normal track data
COMMENT $4693 $06B6: vol off, no pitch, note, instrument
COMMENT $4694 $06B7: instrument
COMMENT $4695 $06B8: track end signature found
COMMENT $4696 $06B9: normal track data
COMMENT $4697 $06BA: vol off, pitch, note, instrument
COMMENT $4698 $06BB: pitch
COMMENT $469A $06BD: instrument
COMMENT $469B $06BE: normal track data,  wait 0
COMMENT $469C $06BF: normal track data
COMMENT $469D $06C0: vol off, no pitch, no note, no instrument
COMMENT $469E $06C1: normal track data,  wait 3
COMMENT $469F $06C2: normal track data,  note: D#5
COMMENT $46A0 $06C3: vol = $9 (inverted), no pitch, no note, no instrument
COMMENT $46A1 $06C4: track end signature found
COMMENT $46A2 $06C5: normal track data
COMMENT $46A3 $06C6: vol off, pitch, note, instrument
COMMENT $46A4 $06C7: pitch
COMMENT $46A6 $06C9: instrument
COMMENT $46A7 $06CA: normal track data
COMMENT $46A8 $06CB: vol off, no pitch, note, instrument
COMMENT $46A9 $06CC: instrument
COMMENT $46AA $06CD: normal track data
COMMENT $46AB $06CE: vol off, no pitch, no note, no instrument
COMMENT $46AC $06CF: track end signature found
COMMENT $46AD $06D0: normal track data
COMMENT $46AE $06D1: vol off, pitch, no note, no instrument
COMMENT $46AF $06D2: pitch
COMMENT $46B1 $06D4: track end signature found
COMMENT $46B2 $06D5: normal track data
COMMENT $46B3 $06D6: vol off, pitch, no note, no instrument
COMMENT $46B4 $06D7: pitch
COMMENT $46B6 $06D9: normal track data
COMMENT $46B7 $06DA: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $46B8 $06DB: normal track data
COMMENT $46B9 $06DC: vol off, no pitch, no note, no instrument
COMMENT $46BA $06DD: normal track data
COMMENT $46BB $06DE: vol off, no pitch, no note, no instrument
COMMENT $46BC $06DF: normal track data,  note: C0
COMMENT $46BD $06E0: vol = $9 (inverted), no pitch, no note, no instrument
COMMENT $46BE $06E1: normal track data
COMMENT $46BF $06E2: vol off, no pitch, no note, no instrument
COMMENT $46C0 $06E3: normal track data
COMMENT $46C1 $06E4: vol off, no pitch, no note, no instrument
COMMENT $46C2 $06E5: normal track data,  note: C0
COMMENT $46C3 $06E6: vol = $8 (inverted), no pitch, no note, no instrument
COMMENT $46C4 $06E7: normal track data
COMMENT $46C5 $06E8: vol off, no pitch, no note, no instrument
COMMENT $46C6 $06E9: normal track data
COMMENT $46C7 $06EA: vol = $7 (inverted), no pitch, no note, no instrument
COMMENT $46C8 $06EB: normal track data
COMMENT $46C9 $06EC: vol off, no pitch, no note, no instrument
COMMENT $46CA $06ED: normal track data
COMMENT $46CB $06EE: vol = $6 (inverted), no pitch, no note, no instrument
COMMENT $46CC $06EF: normal track data
COMMENT $46CD $06F0: vol off, no pitch, no note, no instrument
COMMENT $46CE $06F1: normal track data,  note: C0
COMMENT $46CF $06F2: vol = $5 (inverted), no pitch, no note, no instrument
COMMENT $46D0 $06F3: normal track data
COMMENT $46D1 $06F4: vol = $3 (inverted), no pitch, no note, no instrument
COMMENT $46D2 $06F5: normal track data,  note: C0
COMMENT $46D3 $06F6: vol = $0 (inverted), no pitch, no note, no instrument
COMMENT_LINE $46D4 this file is part of Release, written by Malban in 2017
COMMENT_LINE $46D4 This file was build using VIDE - Vectrex Integrated Development Environment
COMMENT_LINE $46D4 Original bin file was: projects/VRelease/VTK_HighscoreMusic.bin
COMMENT_LINE $46D4 offset for AKS file assumed: $0000 guessed by accessing byte data[13] * 256)
COMMENT_LINE $46D4 not used by vectrex player and therefor omitted:
COMMENT_LINE $46D4 DB "AT10" ; Signature of Arkos Tracker files
COMMENT_LINE $46D4 DB $01 ; sample channel
COMMENT_LINE $46D4 DB $40, 42, 0f ; YM custom frequence - little endian
COMMENT_LINE $46D4 DB $02 ; Replay frequency (0=13hz,1=25hz,2=50hz,3=100hz,4=150hz,5=300hz)
COMMENT $46D4 $0009: default speed
COMMENT $46D5 $000A: size of instrument table (without this word pointer)
COMMENT $46D7 $000C: [$001C] pointer to instrument 0
COMMENT $46D9 $000E: [$0025] pointer to instrument 1
COMMENT $46DB $0010: [$0040] pointer to instrument 2
COMMENT $46DD $0012: [$005C] pointer to instrument 3
COMMENT $46DF $0014: [$006E] pointer to instrument 4
COMMENT $46E1 $0016: [$0079] pointer to instrument 5
COMMENT $46E3 $0018: [$009B] pointer to instrument 6
COMMENT $46E5 $001A: [$00A4] pointer to instrument 7
COMMENT $46E7 $001C: speed
COMMENT $46E8 $001D: retrig
COMMENT $46E9 $001E: dataColumn_0 (non hard), vol=$0
COMMENT $46EA $001F: dataColumn_0 (non hard), vol=$0
COMMENT $46EB $0020: dataColumn_0 (non hard), vol=$0
COMMENT $46EC $0021: dataColumn_0 (non hard), vol=$0
COMMENT $46ED $0022: dataColumn_0 (hard)
COMMENT $46EE $0023: [$001E] loop
COMMENT $46F0 $0025: speed
COMMENT $46F1 $0026: retrig
COMMENT $46F2 $0027: dataColumn_0 (non hard), vol=$D
COMMENT $46F3 $0028: dataColumn_0 (non hard), vol=$C
COMMENT $46F4 $0029: pitch
COMMENT $46F6 $002B: dataColumn_0 (non hard), vol=$C
COMMENT $46F7 $002C: dataColumn_0 (non hard), vol=$B
COMMENT $46F8 $002D: pitch
COMMENT $46FA $002F: dataColumn_0 (non hard), vol=$B
COMMENT $46FB $0030: dataColumn_0 (non hard), vol=$A
COMMENT $46FC $0031: pitch
COMMENT $46FE $0033: dataColumn_0 (non hard), vol=$9
COMMENT $46FF $0034: dataColumn_0 (non hard), vol=$8
COMMENT $4700 $0035: pitch
COMMENT $4702 $0037: dataColumn_0 (non hard), vol=$7
COMMENT $4703 $0038: dataColumn_0 (non hard), vol=$6
COMMENT $4704 $0039: pitch
COMMENT $4706 $003B: dataColumn_0 (non hard), vol=$5
COMMENT $4707 $003C: dataColumn_0 (non hard), vol=$4
COMMENT $4708 $003D: dataColumn_0 (hard)
COMMENT $4709 $003E: [$001E] loop
COMMENT $470B $0040: speed
COMMENT $470C $0041: retrig
COMMENT $470D $0042: dataColumn_0 (non hard), vol=$F
COMMENT $470E $0043: pitch
COMMENT $4710 $0045: dataColumn_0 (non hard), vol=$F
COMMENT $4711 $0046: pitch
COMMENT $4713 $0048: dataColumn_0 (non hard), vol=$E
COMMENT $4714 $0049: pitch
COMMENT $4716 $004B: dataColumn_0 (non hard), vol=$D
COMMENT $4717 $004C: dataColumn_0 (non hard), vol=$B
COMMENT $4718 $004D: pitch
COMMENT $471A $004F: dataColumn_0 (non hard), vol=$8
COMMENT $471B $0050: pitch
COMMENT $471D $0052: dataColumn_0 (non hard), vol=$9
COMMENT $471E $0053: pitch
COMMENT $4720 $0055: dataColumn_0 (non hard), vol=$8
COMMENT $4721 $0056: dataColumn_0 (non hard), vol=$7
COMMENT $4722 $0057: pitch
COMMENT $4724 $0059: dataColumn_0 (hard)
COMMENT $4725 $005A: [$001E] loop
COMMENT $4727 $005C: speed
COMMENT $4728 $005D: retrig
COMMENT $4729 $005E: dataColumn_0 (non hard), vol=$F
COMMENT $472A $005F: dataColumn_1, noise=$17
COMMENT $472B $0060: arpegio
COMMENT $472C $0061: dataColumn_0 (non hard), vol=$F
COMMENT $472D $0062: arpegio
COMMENT $472E $0063: dataColumn_0 (non hard), vol=$7
COMMENT $472F $0064: arpegio
COMMENT $4730 $0065: dataColumn_0 (non hard), vol=$E
COMMENT $4731 $0066: arpegio
COMMENT $4732 $0067: dataColumn_0 (non hard), vol=$B
COMMENT $4733 $0068: arpegio
COMMENT $4734 $0069: dataColumn_0 (non hard), vol=$7
COMMENT $4735 $006A: dataColumn_1, noise=$01
COMMENT $4736 $006B: dataColumn_0 (hard)
COMMENT $4737 $006C: [$001E] loop
COMMENT $4739 $006E: speed
COMMENT $473A $006F: retrig
COMMENT $473B $0070: dataColumn_0 (non hard), vol=$5
COMMENT $473C $0071: dataColumn_1, noise=$01
COMMENT $473D $0072: dataColumn_0 (non hard), vol=$A
COMMENT $473E $0073: dataColumn_1, noise=$01
COMMENT $473F $0074: dataColumn_0 (non hard), vol=$0
COMMENT $4740 $0075: dataColumn_1
COMMENT $4741 $0076: dataColumn_0 (hard)
COMMENT $4742 $0077: [$001E] loop
COMMENT $4744 $0079: speed
COMMENT $4745 $007A: retrig
COMMENT $4746 $007B: dataColumn_0 (non hard), vol=$F
COMMENT $4747 $007C: dataColumn_1, noise=$1F
COMMENT $4748 $007D: dataColumn_0 (non hard), vol=$F
COMMENT $4749 $007E: dataColumn_1
COMMENT $474A $007F: dataColumn_0 (non hard), vol=$3
COMMENT $474B $0080: dataColumn_1, noise=$11
COMMENT $474C $0081: dataColumn_0 (non hard), vol=$C
COMMENT $474D $0082: dataColumn_1, noise=$0A
COMMENT $474E $0083: dataColumn_0 (non hard), vol=$4
COMMENT $474F $0084: dataColumn_1, noise=$06
COMMENT $4750 $0085: dataColumn_0 (non hard), vol=$B
COMMENT $4751 $0086: dataColumn_1, noise=$1D
COMMENT $4752 $0087: dataColumn_0 (non hard), vol=$B
COMMENT $4753 $0088: dataColumn_1, noise=$08
COMMENT $4754 $0089: dataColumn_0 (non hard), vol=$7
COMMENT $4755 $008A: dataColumn_1, noise=$09
COMMENT $4756 $008B: dataColumn_0 (non hard), vol=$4
COMMENT $4757 $008C: dataColumn_1, noise=$07
COMMENT $4758 $008D: dataColumn_0 (non hard), vol=$4
COMMENT $4759 $008E: dataColumn_1, noise=$04
COMMENT $475A $008F: arpegio
COMMENT $475B $0090: dataColumn_0 (non hard), vol=$4
COMMENT $475C $0091: dataColumn_1, noise=$01
COMMENT $475D $0092: dataColumn_0 (non hard), vol=$3
COMMENT $475E $0093: arpegio
COMMENT $475F $0094: dataColumn_0 (non hard), vol=$2
COMMENT $4760 $0095: dataColumn_1, noise=$01
COMMENT $4761 $0096: dataColumn_0 (non hard), vol=$2
COMMENT $4762 $0097: arpegio
COMMENT $4763 $0098: dataColumn_0 (hard)
COMMENT $4764 $0099: [$001E] loop
COMMENT $4766 $009B: speed
COMMENT $4767 $009C: retrig
COMMENT $4768 $009D: dataColumn_0 (non hard), vol=$9
COMMENT $4769 $009E: dataColumn_1, noise=$01
COMMENT $476A $009F: dataColumn_0 (non hard), vol=$5
COMMENT $476B $00A0: dataColumn_1, noise=$02
COMMENT $476C $00A1: dataColumn_0 (hard)
COMMENT $476D $00A2: [$001E] loop
COMMENT $476F $00A4: speed
COMMENT $4770 $00A5: retrig
COMMENT $4771 $00A6: dataColumn_0 (non hard), vol=$C
COMMENT $4772 $00A7: pitch
COMMENT $4774 $00A9: arpegio
COMMENT $4775 $00AA: dataColumn_0 (non hard), vol=$B
COMMENT $4776 $00AB: arpegio
COMMENT $4777 $00AC: dataColumn_0 (non hard), vol=$A
COMMENT $4778 $00AD: arpegio
COMMENT $4779 $00AE: dataColumn_0 (non hard), vol=$C
COMMENT $477A $00AF: arpegio
COMMENT $477B $00B0: dataColumn_0 (non hard), vol=$A
COMMENT $477C $00B1: arpegio
COMMENT $477D $00B2: dataColumn_0 (non hard), vol=$B
COMMENT $477E $00B3: pitch
COMMENT $4780 $00B5: arpegio
COMMENT $4781 $00B6: dataColumn_0 (non hard), vol=$A
COMMENT $4782 $00B7: arpegio
COMMENT $4783 $00B8: dataColumn_0 (non hard), vol=$B
COMMENT $4784 $00B9: arpegio
COMMENT $4785 $00BA: dataColumn_0 (hard)
COMMENT $4786 $00BB: [$00A6] loop
COMMENT_LINE $4788 start of linker definition
COMMENT $4788 $00BD: first height
COMMENT $4789 $00BE: transposition1
COMMENT $478A $00BF: transposition2
COMMENT $478B $00C0: transposition3
COMMENT $478C $00C1: [$0136] specialTrack
COMMENT $478E $00C3: pattern 0 state
COMMENT $478F $00C4: [$013D] pattern 0, track 1
COMMENT $4791 $00C6: [$0159] pattern 0, track 2
COMMENT $4793 $00C8: [$017C] pattern 0, track 3
COMMENT $4795 $00CA: pattern 1 state
COMMENT $4796 $00CB: [$013D] pattern 1, track 1
COMMENT $4798 $00CD: [$0159] pattern 1, track 2
COMMENT $479A $00CF: [$017C] pattern 1, track 3
COMMENT $479C $00D1: pattern 2 state
COMMENT $479D $00D2: [$013D] pattern 2, track 1
COMMENT $479F $00D4: [$0159] pattern 2, track 2
COMMENT $47A1 $00D6: [$017C] pattern 2, track 3
COMMENT $47A3 $00D8: pattern 3 state
COMMENT $47A4 $00D9: [$013D] pattern 3, track 1
COMMENT $47A6 $00DB: [$0159] pattern 3, track 2
COMMENT $47A8 $00DD: [$017C] pattern 3, track 3
COMMENT $47AA $00DF: pattern 4 state
COMMENT $47AB $00E0: [$013D] pattern 4, track 1
COMMENT $47AD $00E2: [$0159] pattern 4, track 2
COMMENT $47AF $00E4: [$017C] pattern 4, track 3
COMMENT $47B1 $00E6: pattern 5 state
COMMENT $47B2 $00E7: [$013D] pattern 5, track 1
COMMENT $47B4 $00E9: [$0159] pattern 5, track 2
COMMENT $47B6 $00EB: [$017C] pattern 5, track 3
COMMENT $47B8 $00ED: pattern 6 state
COMMENT $47B9 $00EE: [$013D] pattern 6, track 1
COMMENT $47BB $00F0: [$0159] pattern 6, track 2
COMMENT $47BD $00F2: [$017C] pattern 6, track 3
COMMENT $47BF $00F4: pattern 7 state
COMMENT $47C0 $00F5: [$013D] pattern 7, track 1
COMMENT $47C2 $00F7: [$0159] pattern 7, track 2
COMMENT $47C4 $00F9: [$017C] pattern 7, track 3
COMMENT $47C6 $00FB: pattern 8 state
COMMENT $47C7 $00FC: [$013D] pattern 8, track 1
COMMENT $47C9 $00FE: [$019F] pattern 8, track 2
COMMENT $47CB $0100: [$017C] pattern 8, track 3
COMMENT $47CD $0102: pattern 9 state
COMMENT $47CE $0103: [$013D] pattern 9, track 1
COMMENT $47D0 $0105: [$01C2] pattern 9, track 2
COMMENT $47D2 $0107: [$017C] pattern 9, track 3
COMMENT $47D4 $0109: pattern 10 state
COMMENT $47D5 $010A: [$013D] pattern 10, track 1
COMMENT $47D7 $010C: [$01C2] pattern 10, track 2
COMMENT $47D9 $010E: [$017C] pattern 10, track 3
COMMENT $47DB $0110: pattern 11 state
COMMENT $47DC $0111: [$013D] pattern 11, track 1
COMMENT $47DE $0113: [$01E4] pattern 11, track 2
COMMENT $47E0 $0115: [$017C] pattern 11, track 3
COMMENT $47E2 $0117: pattern 12 state
COMMENT $47E3 $0118: [$013D] pattern 12, track 1
COMMENT $47E5 $011A: [$0138] pattern 12, track 2
COMMENT $47E7 $011C: [$017C] pattern 12, track 3
COMMENT $47E9 $011E: pattern 13 state
COMMENT $47EA $011F: [$013D] pattern 13, track 1
COMMENT $47EC $0121: [$0138] pattern 13, track 2
COMMENT $47EE $0123: [$017C] pattern 13, track 3
COMMENT $47F0 $0125: pattern 14 state
COMMENT $47F1 $0126: [$013D] pattern 14, track 1
COMMENT $47F3 $0128: [$0138] pattern 14, track 2
COMMENT $47F5 $012A: [$017C] pattern 14, track 3
COMMENT $47F7 $012C: pattern 15 state
COMMENT $47F8 $012D: [$013D] pattern 15, track 1
COMMENT $47FA $012F: [$0138] pattern 15, track 2
COMMENT $47FC $0131: [$017C] pattern 15, track 3
COMMENT $47FE $0133: pattern 16 state
COMMENT $47FF $0134: [$00C3] song restart address
COMMENT $4801 $0136: data, speed 7
COMMENT $4802 $0137: wait 128
COMMENT $4803 $0138: normal track data
COMMENT $4804 $0139: vol off, pitch, no note, no instrument
COMMENT $4805 $013A: pitch
COMMENT $4807 $013C: track end signature found
COMMENT $4808 $013D: normal track data
COMMENT $4809 $013E: vol off, pitch, note, instrument
COMMENT $480A $013F: pitch
COMMENT $480C $0141: instrument
COMMENT $480D $0142: normal track data
COMMENT $480E $0143: vol off, no pitch, no note, no instrument
COMMENT $480F $0144: normal track data
COMMENT $4810 $0145: vol off, no pitch, no note, no instrument
COMMENT $4811 $0146: normal track data,  wait 0
COMMENT $4812 $0147: full optimization, no escape: E2
COMMENT $4813 $0148: normal track data,  wait 0
COMMENT $4814 $0149: normal track data
COMMENT $4815 $014A: vol off, no pitch, no note, no instrument
COMMENT $4816 $014B: full optimization, no escape: D2
COMMENT $4817 $014C: normal track data
COMMENT $4818 $014D: vol off, no pitch, no note, no instrument
COMMENT $4819 $014E: normal track data
COMMENT $481A $014F: vol off, no pitch, no note, no instrument
COMMENT $481B $0150: full optimization, no escape: E2
COMMENT $481C $0151: normal track data
COMMENT $481D $0152: vol off, no pitch, no note, no instrument
COMMENT $481E $0153: full optimization, no escape: B1
COMMENT $481F $0154: normal track data
COMMENT $4820 $0155: vol off, no pitch, no note, no instrument
COMMENT $4821 $0156: full optimization, no escape: D2
COMMENT $4822 $0157: normal track data
COMMENT $4823 $0158: vol off, no pitch, no note, no instrument
COMMENT $4824 $0159: normal track data
COMMENT $4825 $015A: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4826 $015B: pitch
COMMENT $4828 $015D: instrument
COMMENT $4829 $015E: normal track data
COMMENT $482A $015F: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $482B $0160: normal track data
COMMENT $482C $0161: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $482D $0162: normal track data
COMMENT $482E $0163: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $482F $0164: normal track data
COMMENT $4830 $0165: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4831 $0166: normal track data
COMMENT $4832 $0167: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $4833 $0168: normal track data
COMMENT $4834 $0169: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4835 $016A: normal track data
COMMENT $4836 $016B: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $4837 $016C: normal track data
COMMENT $4838 $016D: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4839 $016E: normal track data
COMMENT $483A $016F: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $483B $0170: normal track data
COMMENT $483C $0171: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $483D $0172: normal track data
COMMENT $483E $0173: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $483F $0174: normal track data
COMMENT $4840 $0175: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4841 $0176: normal track data
COMMENT $4842 $0177: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $4843 $0178: normal track data
COMMENT $4844 $0179: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4845 $017A: normal track data
COMMENT $4846 $017B: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $4847 $017C: normal track data
COMMENT $4848 $017D: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4849 $017E: pitch
COMMENT $484B $0180: instrument
COMMENT $484C $0181: normal track data,  wait 0
COMMENT $484D $0182: normal track data
COMMENT $484E $0183: vol off, no pitch, note, instrument
COMMENT $484F $0184: instrument
COMMENT $4850 $0185: normal track data,  wait 0
COMMENT $4851 $0186: normal track data
COMMENT $4852 $0187: vol off, no pitch, note, instrument
COMMENT $4853 $0188: instrument
COMMENT $4854 $0189: normal track data,  wait 0
COMMENT $4855 $018A: normal track data
COMMENT $4856 $018B: vol off, no pitch, note, instrument
COMMENT $4857 $018C: instrument
COMMENT $4858 $018D: normal track data
COMMENT $4859 $018E: vol off, no pitch, no note, no instrument
COMMENT $485A $018F: normal track data
COMMENT $485B $0190: vol off, no pitch, note, instrument
COMMENT $485C $0191: instrument
COMMENT $485D $0192: normal track data,  wait 0
COMMENT $485E $0193: normal track data
COMMENT $485F $0194: vol off, no pitch, note, instrument
COMMENT $4860 $0195: instrument
COMMENT $4861 $0196: normal track data,  wait 0
COMMENT $4862 $0197: normal track data
COMMENT $4863 $0198: vol off, no pitch, note, instrument
COMMENT $4864 $0199: instrument
COMMENT $4865 $019A: normal track data,  wait 0
COMMENT $4866 $019B: normal track data
COMMENT $4867 $019C: vol off, no pitch, note, instrument
COMMENT $4868 $019D: instrument
COMMENT $4869 $019E: track end signature found
COMMENT $486A $019F: normal track data,  note: E3
COMMENT $486B $01A0: vol = $C (inverted), no pitch, no note, no instrument
COMMENT $486C $01A1: pitch
COMMENT $486E $01A3: instrument
COMMENT $486F $01A4: normal track data,  note: C0
COMMENT $4870 $01A5: vol = $D (inverted), no pitch, no note, no instrument
COMMENT $4871 $01A6: normal track data
COMMENT $4872 $01A7: vol = $E (inverted), no pitch, no note, no instrument
COMMENT $4873 $01A8: normal track data
COMMENT $4874 $01A9: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4875 $01AA: normal track data
COMMENT $4876 $01AB: vol off, no pitch, no note, no instrument
COMMENT $4877 $01AC: normal track data
COMMENT $4878 $01AD: vol off, no pitch, no note, no instrument
COMMENT $4879 $01AE: normal track data
COMMENT $487A $01AF: vol off, no pitch, no note, no instrument
COMMENT $487B $01B0: normal track data
COMMENT $487C $01B1: vol off, no pitch, no note, no instrument
COMMENT $487D $01B2: normal track data
COMMENT $487E $01B3: vol off, no pitch, no note, no instrument
COMMENT $487F $01B4: normal track data
COMMENT $4880 $01B5: vol off, no pitch, no note, no instrument
COMMENT $4881 $01B6: normal track data
COMMENT $4882 $01B7: vol off, no pitch, no note, no instrument
COMMENT $4883 $01B8: normal track data
COMMENT $4884 $01B9: vol off, no pitch, no note, no instrument
COMMENT $4885 $01BA: normal track data
COMMENT $4886 $01BB: vol off, no pitch, no note, no instrument
COMMENT $4887 $01BC: normal track data
COMMENT $4888 $01BD: vol off, no pitch, no note, no instrument
COMMENT $4889 $01BE: normal track data
COMMENT $488A $01BF: vol off, no pitch, no note, no instrument
COMMENT $488B $01C0: normal track data
COMMENT $488C $01C1: vol off, no pitch, no note, no instrument
COMMENT $488D $01C2: normal track data
COMMENT $488E $01C3: vol off, pitch, no note, no instrument
COMMENT $488F $01C4: pitch
COMMENT $4891 $01C6: normal track data
COMMENT $4892 $01C7: vol off, no pitch, no note, no instrument
COMMENT $4893 $01C8: normal track data
COMMENT $4894 $01C9: vol off, no pitch, no note, no instrument
COMMENT $4895 $01CA: normal track data
COMMENT $4896 $01CB: vol off, no pitch, no note, no instrument
COMMENT $4897 $01CC: normal track data
COMMENT $4898 $01CD: vol off, no pitch, no note, no instrument
COMMENT $4899 $01CE: normal track data
COMMENT $489A $01CF: vol off, no pitch, no note, no instrument
COMMENT $489B $01D0: normal track data
COMMENT $489C $01D1: vol off, no pitch, no note, no instrument
COMMENT $489D $01D2: normal track data
COMMENT $489E $01D3: vol off, no pitch, no note, no instrument
COMMENT $489F $01D4: normal track data
COMMENT $48A0 $01D5: vol off, no pitch, no note, no instrument
COMMENT $48A1 $01D6: normal track data
COMMENT $48A2 $01D7: vol off, no pitch, no note, no instrument
COMMENT $48A3 $01D8: normal track data
COMMENT $48A4 $01D9: vol off, no pitch, no note, no instrument
COMMENT $48A5 $01DA: normal track data
COMMENT $48A6 $01DB: vol off, no pitch, no note, no instrument
COMMENT $48A7 $01DC: normal track data
COMMENT $48A8 $01DD: vol off, no pitch, no note, no instrument
COMMENT $48A9 $01DE: normal track data
COMMENT $48AA $01DF: vol off, no pitch, no note, no instrument
COMMENT $48AB $01E0: normal track data
COMMENT $48AC $01E1: vol off, no pitch, no note, no instrument
COMMENT $48AD $01E2: normal track data
COMMENT $48AE $01E3: vol off, no pitch, no note, no instrument
COMMENT $48AF $01E4: normal track data
COMMENT $48B0 $01E5: vol = $E (inverted), no pitch, no note, no instrument
COMMENT $48B1 $01E6: pitch
COMMENT $48B3 $01E8: normal track data,  note: C0
COMMENT $48B4 $01E9: vol = $D (inverted), no pitch, no note, no instrument
COMMENT $48B5 $01EA: normal track data,  note: C0
COMMENT $48B6 $01EB: vol = $C (inverted), no pitch, no note, no instrument
COMMENT $48B7 $01EC: normal track data,  wait 0
COMMENT $48B8 $01ED: normal track data
COMMENT $48B9 $01EE: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $48BA $01EF: normal track data
COMMENT $48BB $01F0: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $48BC $01F1: normal track data,  note: C0
COMMENT $48BD $01F2: vol = $9 (inverted), no pitch, no note, no instrument
COMMENT $48BE $01F3: normal track data,  wait 0
COMMENT $48BF $01F4: normal track data,  note: C0
COMMENT $48C0 $01F5: vol = $8 (inverted), no pitch, no note, no instrument
COMMENT $48C1 $01F6: normal track data
COMMENT $48C2 $01F7: vol = $7 (inverted), no pitch, no note, no instrument
COMMENT $48C3 $01F8: normal track data
COMMENT $48C4 $01F9: vol = $6 (inverted), no pitch, no note, no instrument
COMMENT $48C5 $01FA: normal track data,  note: C0
COMMENT $48C6 $01FB: vol = $5 (inverted), no pitch, no note, no instrument
COMMENT $48C7 $01FC: normal track data,  note: C0
COMMENT $48C8 $01FD: vol = $4 (inverted), no pitch, no note, no instrument
COMMENT $48C9 $01FE: normal track data
COMMENT $48CA $01FF: vol = $3 (inverted), no pitch, no note, no instrument
COMMENT $48CB $0200: normal track data
COMMENT $48CC $0201: vol = $2 (inverted), no pitch, no note, no instrument
COMMENT $48CD $0202: normal track data,  note: C0
COMMENT $48CE $0203: vol = $0 (inverted), no pitch, no note, no instrument
COMMENT_LINE $48CF this file is part of Release, written by Malban in 2017
COMMENT_LINE $48CF This file was build using VIDE - Vectrex Integrated Development Environment
COMMENT_LINE $48CF Original bin file was: projects/VRelease/VTK_GameOverMusik.bin
COMMENT_LINE $48CF offset for AKS file assumed: $0000 guessed by accessing byte data[13] * 256)
COMMENT_LINE $48CF not used by vectrex player and therefor omitted:
COMMENT_LINE $48CF DB "AT10" ; Signature of Arkos Tracker files
COMMENT_LINE $48CF DB $01 ; sample channel
COMMENT_LINE $48CF DB $40, 42, 0f ; YM custom frequence - little endian
COMMENT_LINE $48CF DB $02 ; Replay frequency (0=13hz,1=25hz,2=50hz,3=100hz,4=150hz,5=300hz)
COMMENT $48CF $0009: default speed
COMMENT $48D0 $000A: size of instrument table (without this word pointer)
COMMENT $48D2 $000C: [$0014] pointer to instrument 0
COMMENT $48D4 $000E: [$001D] pointer to instrument 1
COMMENT $48D6 $0010: [$0057] pointer to instrument 2
COMMENT $48D8 $0012: [$007E] pointer to instrument 3
COMMENT $48DA $0014: speed
COMMENT $48DB $0015: retrig
COMMENT $48DC $0016: dataColumn_0 (non hard), vol=$0
COMMENT $48DD $0017: dataColumn_0 (non hard), vol=$0
COMMENT $48DE $0018: dataColumn_0 (non hard), vol=$0
COMMENT $48DF $0019: dataColumn_0 (non hard), vol=$0
COMMENT $48E0 $001A: dataColumn_0 (hard)
COMMENT $48E1 $001B: [$0016] loop
COMMENT $48E3 $001D: speed
COMMENT $48E4 $001E: retrig
COMMENT $48E5 $001F: dataColumn_0 (non hard), vol=$D
COMMENT $48E6 $0020: dataColumn_0 (non hard), vol=$C
COMMENT $48E7 $0021: pitch
COMMENT $48E9 $0023: dataColumn_0 (non hard), vol=$C
COMMENT $48EA $0024: dataColumn_0 (non hard), vol=$B
COMMENT $48EB $0025: pitch
COMMENT $48ED $0027: dataColumn_0 (non hard), vol=$B
COMMENT $48EE $0028: pitch
COMMENT $48F0 $002A: dataColumn_0 (non hard), vol=$B
COMMENT $48F1 $002B: pitch
COMMENT $48F3 $002D: dataColumn_0 (non hard), vol=$B
COMMENT $48F4 $002E: pitch
COMMENT $48F6 $0030: dataColumn_0 (non hard), vol=$B
COMMENT $48F7 $0031: pitch
COMMENT $48F9 $0033: dataColumn_0 (non hard), vol=$B
COMMENT $48FA $0034: pitch
COMMENT $48FC $0036: dataColumn_0 (non hard), vol=$B
COMMENT $48FD $0037: pitch
COMMENT $48FF $0039: dataColumn_0 (non hard), vol=$B
COMMENT $4900 $003A: dataColumn_0 (non hard), vol=$B
COMMENT $4901 $003B: pitch
COMMENT $4903 $003D: dataColumn_0 (non hard), vol=$B
COMMENT $4904 $003E: dataColumn_0 (non hard), vol=$B
COMMENT $4905 $003F: pitch
COMMENT $4907 $0041: dataColumn_0 (non hard), vol=$B
COMMENT $4908 $0042: pitch
COMMENT $490A $0044: dataColumn_0 (non hard), vol=$B
COMMENT $490B $0045: dataColumn_0 (non hard), vol=$B
COMMENT $490C $0046: pitch
COMMENT $490E $0048: dataColumn_0 (non hard), vol=$B
COMMENT $490F $0049: pitch
COMMENT $4911 $004B: dataColumn_0 (non hard), vol=$B
COMMENT $4912 $004C: dataColumn_0 (non hard), vol=$B
COMMENT $4913 $004D: pitch
COMMENT $4915 $004F: dataColumn_0 (non hard), vol=$B
COMMENT $4916 $0050: dataColumn_0 (non hard), vol=$B
COMMENT $4917 $0051: pitch
COMMENT $4919 $0053: dataColumn_0 (non hard), vol=$B
COMMENT $491A $0054: dataColumn_0 (hard)
COMMENT $491B $0055: [$0024] loop
COMMENT $491D $0057: speed
COMMENT $491E $0058: retrig
COMMENT $491F $0059: dataColumn_0 (non hard), vol=$8
COMMENT $4920 $005A: pitch
COMMENT $4922 $005C: dataColumn_0 (non hard), vol=$A
COMMENT $4923 $005D: arpegio
COMMENT $4924 $005E: dataColumn_0 (non hard), vol=$B
COMMENT $4925 $005F: pitch
COMMENT $4927 $0061: arpegio
COMMENT $4928 $0062: dataColumn_0 (non hard), vol=$A
COMMENT $4929 $0063: arpegio
COMMENT $492A $0064: dataColumn_0 (non hard), vol=$6
COMMENT $492B $0065: pitch
COMMENT $492D $0067: dataColumn_0 (non hard), vol=$A
COMMENT $492E $0068: pitch
COMMENT $4930 $006A: dataColumn_0 (non hard), vol=$7
COMMENT $4931 $006B: arpegio
COMMENT $4932 $006C: dataColumn_0 (non hard), vol=$7
COMMENT $4933 $006D: dataColumn_0 (non hard), vol=$A
COMMENT $4934 $006E: pitch
COMMENT $4936 $0070: arpegio
COMMENT $4937 $0071: dataColumn_0 (non hard), vol=$6
COMMENT $4938 $0072: dataColumn_0 (non hard), vol=$9
COMMENT $4939 $0073: pitch
COMMENT $493B $0075: arpegio
COMMENT $493C $0076: dataColumn_0 (non hard), vol=$9
COMMENT $493D $0077: dataColumn_0 (non hard), vol=$B
COMMENT $493E $0078: pitch
COMMENT $4940 $007A: arpegio
COMMENT $4941 $007B: dataColumn_0 (hard)
COMMENT $4942 $007C: [$005E] loop
COMMENT $4944 $007E: speed
COMMENT $4945 $007F: retrig
COMMENT $4946 $0080: dataColumn_0 (non hard), vol=$C
COMMENT $4947 $0081: pitch
COMMENT $4949 $0083: dataColumn_0 (non hard), vol=$C
COMMENT $494A $0084: dataColumn_0 (non hard), vol=$C
COMMENT $494B $0085: pitch
COMMENT $494D $0087: arpegio
COMMENT $494E $0088: dataColumn_0 (non hard), vol=$C
COMMENT $494F $0089: arpegio
COMMENT $4950 $008A: dataColumn_0 (non hard), vol=$C
COMMENT $4951 $008B: pitch
COMMENT $4953 $008D: dataColumn_0 (non hard), vol=$C
COMMENT $4954 $008E: dataColumn_0 (non hard), vol=$C
COMMENT $4955 $008F: arpegio
COMMENT $4956 $0090: dataColumn_0 (non hard), vol=$C
COMMENT $4957 $0091: dataColumn_0 (non hard), vol=$C
COMMENT $4958 $0092: pitch
COMMENT $495A $0094: dataColumn_0 (non hard), vol=$C
COMMENT $495B $0095: dataColumn_0 (non hard), vol=$C
COMMENT $495C $0096: pitch
COMMENT $495E $0098: arpegio
COMMENT $495F $0099: dataColumn_0 (non hard), vol=$C
COMMENT $4960 $009A: dataColumn_0 (non hard), vol=$C
COMMENT $4961 $009B: pitch
COMMENT $4963 $009D: arpegio
COMMENT $4964 $009E: dataColumn_0 (hard)
COMMENT $4965 $009F: [$0084] loop
COMMENT_LINE $4967 start of linker definition
COMMENT $4967 $00A1: first height
COMMENT $4968 $00A2: transposition1
COMMENT $4969 $00A3: transposition2
COMMENT $496A $00A4: transposition3
COMMENT $496B $00A5: [$00BF] specialTrack
COMMENT $496D $00A7: pattern 0 state
COMMENT $496E $00A8: [$00C1] pattern 0, track 1
COMMENT $4970 $00AA: [$0109] pattern 0, track 2
COMMENT $4972 $00AC: [$00E4] pattern 0, track 3
COMMENT $4974 $00AE: pattern 1 state
COMMENT $4975 $00AF: [$014E] pattern 1, track 1
COMMENT $4977 $00B1: [$012C] pattern 1, track 2
COMMENT $4979 $00B3: [$014E] pattern 1, track 3
COMMENT $497B $00B5: pattern 2 state
COMMENT $497C $00B6: [$0172] pattern 2, track 1
COMMENT $497E $00B8: [$0196] pattern 2, track 2
COMMENT $4980 $00BA: [$0172] pattern 2, track 3
COMMENT $4982 $00BC: pattern 3 state
COMMENT $4983 $00BD: [$00A7] song restart address
COMMENT $4985 $00BF: data, speed 15
COMMENT $4986 $00C0: wait 128
COMMENT $4987 $00C1: normal track data,  note: A2
COMMENT $4988 $00C2: vol = $D (inverted), no pitch, no note, no instrument
COMMENT $4989 $00C3: pitch
COMMENT $498B $00C5: instrument
COMMENT $498C $00C6: normal track data
COMMENT $498D $00C7: vol = $E (inverted), no pitch, no note, no instrument
COMMENT $498E $00C8: normal track data
COMMENT $498F $00C9: vol off, no pitch, no note, no instrument
COMMENT $4990 $00CA: normal track data
COMMENT $4991 $00CB: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $4992 $00CC: normal track data
COMMENT $4993 $00CD: vol off, no pitch, no note, no instrument
COMMENT $4994 $00CE: normal track data
COMMENT $4995 $00CF: vol off, no pitch, no note, no instrument
COMMENT $4996 $00D0: normal track data
COMMENT $4997 $00D1: vol off, no pitch, no note, no instrument
COMMENT $4998 $00D2: normal track data
COMMENT $4999 $00D3: vol off, no pitch, no note, no instrument
COMMENT $499A $00D4: normal track data
COMMENT $499B $00D5: vol off, no pitch, no note, no instrument
COMMENT $499C $00D6: normal track data
COMMENT $499D $00D7: vol off, no pitch, no note, no instrument
COMMENT $499E $00D8: normal track data
COMMENT $499F $00D9: vol off, no pitch, no note, no instrument
COMMENT $49A0 $00DA: normal track data
COMMENT $49A1 $00DB: vol off, no pitch, no note, no instrument
COMMENT $49A2 $00DC: normal track data
COMMENT $49A3 $00DD: vol off, no pitch, no note, no instrument
COMMENT $49A4 $00DE: normal track data
COMMENT $49A5 $00DF: vol off, no pitch, no note, no instrument
COMMENT $49A6 $00E0: normal track data
COMMENT $49A7 $00E1: vol off, no pitch, no note, no instrument
COMMENT $49A8 $00E2: normal track data
COMMENT $49A9 $00E3: vol off, no pitch, no note, no instrument
COMMENT $49AA $00E4: normal track data,  note: A2
COMMENT $49AB $00E5: vol = $C (inverted), no pitch, no note, no instrument
COMMENT $49AC $00E6: pitch
COMMENT $49AE $00E8: instrument
COMMENT $49AF $00E9: normal track data,  note: C0
COMMENT $49B0 $00EA: vol = $D (inverted), no pitch, no note, no instrument
COMMENT $49B1 $00EB: pitch
COMMENT $49B3 $00ED: normal track data
COMMENT $49B4 $00EE: vol = $E (inverted), no pitch, no note, no instrument
COMMENT $49B5 $00EF: normal track data
COMMENT $49B6 $00F0: vol off, no pitch, no note, no instrument
COMMENT $49B7 $00F1: normal track data
COMMENT $49B8 $00F2: vol = $F (inverted), no pitch, no note, no instrument
COMMENT $49B9 $00F3: normal track data
COMMENT $49BA $00F4: vol off, no pitch, no note, no instrument
COMMENT $49BB $00F5: normal track data
COMMENT $49BC $00F6: vol off, no pitch, no note, no instrument
COMMENT $49BD $00F7: normal track data
COMMENT $49BE $00F8: vol off, no pitch, no note, no instrument
COMMENT $49BF $00F9: normal track data
COMMENT $49C0 $00FA: vol off, no pitch, no note, no instrument
COMMENT $49C1 $00FB: normal track data
COMMENT $49C2 $00FC: vol off, no pitch, no note, no instrument
COMMENT $49C3 $00FD: normal track data
COMMENT $49C4 $00FE: vol off, no pitch, no note, no instrument
COMMENT $49C5 $00FF: normal track data
COMMENT $49C6 $0100: vol off, no pitch, no note, no instrument
COMMENT $49C7 $0101: normal track data
COMMENT $49C8 $0102: vol off, no pitch, no note, no instrument
COMMENT $49C9 $0103: normal track data
COMMENT $49CA $0104: vol off, no pitch, no note, no instrument
COMMENT $49CB $0105: normal track data
COMMENT $49CC $0106: vol off, no pitch, no note, no instrument
COMMENT $49CD $0107: normal track data
COMMENT $49CE $0108: vol off, no pitch, no note, no instrument
COMMENT $49CF $0109: normal track data,  note: A4
COMMENT $49D0 $010A: vol = $5 (inverted), no pitch, no note, no instrument
COMMENT $49D1 $010B: pitch
COMMENT $49D3 $010D: instrument
COMMENT $49D4 $010E: normal track data
COMMENT $49D5 $010F: vol off, no pitch, no note, no instrument
COMMENT $49D6 $0110: normal track data
COMMENT $49D7 $0111: vol = $6 (inverted), no pitch, no note, no instrument
COMMENT $49D8 $0112: normal track data
COMMENT $49D9 $0113: vol off, no pitch, no note, no instrument
COMMENT $49DA $0114: normal track data
COMMENT $49DB $0115: vol = $7 (inverted), no pitch, no note, no instrument
COMMENT $49DC $0116: normal track data
COMMENT $49DD $0117: vol off, no pitch, no note, no instrument
COMMENT $49DE $0118: normal track data,  note: C0
COMMENT $49DF $0119: vol = $8 (inverted), no pitch, no note, no instrument
COMMENT $49E0 $011A: normal track data
COMMENT $49E1 $011B: vol off, no pitch, no note, no instrument
COMMENT $49E2 $011C: normal track data,  note: C0
COMMENT $49E3 $011D: vol = $9 (inverted), no pitch, no note, no instrument
COMMENT $49E4 $011E: normal track data
COMMENT $49E5 $011F: vol off, no pitch, no note, no instrument
COMMENT $49E6 $0120: normal track data
COMMENT $49E7 $0121: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $49E8 $0122: normal track data
COMMENT $49E9 $0123: vol off, no pitch, no note, no instrument
COMMENT $49EA $0124: normal track data
COMMENT $49EB $0125: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $49EC $0126: normal track data
COMMENT $49ED $0127: vol off, no pitch, no note, no instrument
COMMENT $49EE $0128: normal track data,  note: C0
COMMENT $49EF $0129: vol = $C (inverted), no pitch, no note, no instrument
COMMENT $49F0 $012A: normal track data
COMMENT $49F1 $012B: vol off, no pitch, no note, no instrument
COMMENT $49F2 $012C: normal track data,  note: C0
COMMENT $49F3 $012D: vol = $D (inverted), no pitch, no note, no instrument
COMMENT $49F4 $012E: pitch
COMMENT $49F6 $0130: normal track data
COMMENT $49F7 $0131: vol off, no pitch, no note, no instrument
COMMENT $49F8 $0132: normal track data
COMMENT $49F9 $0133: vol = $E (inverted), no pitch, no note, no instrument
COMMENT $49FA $0134: normal track data
COMMENT $49FB $0135: vol off, no pitch, no note, no instrument
COMMENT $49FC $0136: normal track data
COMMENT $49FD $0137: vol off, no pitch, no note, no instrument
COMMENT $49FE $0138: normal track data
COMMENT $49FF $0139: vol off, no pitch, no note, no instrument
COMMENT $4A00 $013A: normal track data
COMMENT $4A01 $013B: vol off, no pitch, no note, no instrument
COMMENT $4A02 $013C: normal track data
COMMENT $4A03 $013D: vol off, no pitch, no note, no instrument
COMMENT $4A04 $013E: normal track data
COMMENT $4A05 $013F: vol off, no pitch, no note, no instrument
COMMENT $4A06 $0140: normal track data,  note: C0
COMMENT $4A07 $0141: vol = $D (inverted), no pitch, no note, no instrument
COMMENT $4A08 $0142: normal track data,  note: C0
COMMENT $4A09 $0143: vol = $C (inverted), no pitch, no note, no instrument
COMMENT $4A0A $0144: normal track data
COMMENT $4A0B $0145: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4A0C $0146: normal track data
COMMENT $4A0D $0147: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $4A0E $0148: normal track data,  note: C0
COMMENT $4A0F $0149: vol = $9 (inverted), no pitch, no note, no instrument
COMMENT $4A10 $014A: normal track data,  note: C0
COMMENT $4A11 $014B: vol = $8 (inverted), no pitch, no note, no instrument
COMMENT $4A12 $014C: normal track data
COMMENT $4A13 $014D: vol = $7 (inverted), no pitch, no note, no instrument
COMMENT $4A14 $014E: normal track data
COMMENT $4A15 $014F: vol off, pitch, no note, no instrument
COMMENT $4A16 $0150: pitch
COMMENT $4A18 $0152: normal track data
COMMENT $4A19 $0153: vol off, no pitch, no note, no instrument
COMMENT $4A1A $0154: normal track data
COMMENT $4A1B $0155: vol off, no pitch, no note, no instrument
COMMENT $4A1C $0156: normal track data
COMMENT $4A1D $0157: vol off, no pitch, no note, no instrument
COMMENT $4A1E $0158: normal track data
COMMENT $4A1F $0159: vol off, no pitch, no note, no instrument
COMMENT $4A20 $015A: normal track data
COMMENT $4A21 $015B: vol off, no pitch, no note, no instrument
COMMENT $4A22 $015C: normal track data
COMMENT $4A23 $015D: vol off, no pitch, no note, no instrument
COMMENT $4A24 $015E: normal track data
COMMENT $4A25 $015F: vol off, no pitch, no note, no instrument
COMMENT $4A26 $0160: normal track data
COMMENT $4A27 $0161: vol off, no pitch, no note, no instrument
COMMENT $4A28 $0162: normal track data
COMMENT $4A29 $0163: vol off, no pitch, no note, no instrument
COMMENT $4A2A $0164: normal track data
COMMENT $4A2B $0165: vol off, no pitch, no note, no instrument
COMMENT $4A2C $0166: normal track data
COMMENT $4A2D $0167: vol off, no pitch, no note, no instrument
COMMENT $4A2E $0168: normal track data
COMMENT $4A2F $0169: vol off, no pitch, no note, no instrument
COMMENT $4A30 $016A: normal track data
COMMENT $4A31 $016B: vol off, no pitch, no note, no instrument
COMMENT $4A32 $016C: normal track data
COMMENT $4A33 $016D: vol off, no pitch, no note, no instrument
COMMENT $4A34 $016E: normal track data
COMMENT $4A35 $016F: vol off, pitch, no note, no instrument
COMMENT $4A36 $0170: pitch
COMMENT $4A38 $0172: normal track data
COMMENT $4A39 $0173: vol = $E (inverted), no pitch, no note, no instrument
COMMENT $4A3A $0174: pitch
COMMENT $4A3C $0176: normal track data,  note: C0
COMMENT $4A3D $0177: vol = $D (inverted), no pitch, no note, no instrument
COMMENT $4A3E $0178: normal track data,  note: C0
COMMENT $4A3F $0179: vol = $C (inverted), no pitch, no note, no instrument
COMMENT $4A40 $017A: normal track data
COMMENT $4A41 $017B: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4A42 $017C: normal track data
COMMENT $4A43 $017D: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $4A44 $017E: normal track data,  note: C0
COMMENT $4A45 $017F: vol = $9 (inverted), no pitch, no note, no instrument
COMMENT $4A46 $0180: normal track data
COMMENT $4A47 $0181: vol off, no pitch, no note, no instrument
COMMENT $4A48 $0182: normal track data,  note: C0
COMMENT $4A49 $0183: vol = $8 (inverted), no pitch, no note, no instrument
COMMENT $4A4A $0184: normal track data
COMMENT $4A4B $0185: vol = $7 (inverted), no pitch, no note, no instrument
COMMENT $4A4C $0186: normal track data
COMMENT $4A4D $0187: vol = $6 (inverted), no pitch, no note, no instrument
COMMENT $4A4E $0188: normal track data,  note: C0
COMMENT $4A4F $0189: vol = $5 (inverted), no pitch, no note, no instrument
COMMENT $4A50 $018A: normal track data,  note: C0
COMMENT $4A51 $018B: vol = $4 (inverted), no pitch, no note, no instrument
COMMENT $4A52 $018C: normal track data
COMMENT $4A53 $018D: vol = $3 (inverted), no pitch, no note, no instrument
COMMENT $4A54 $018E: normal track data
COMMENT $4A55 $018F: vol = $2 (inverted), no pitch, no note, no instrument
COMMENT $4A56 $0190: normal track data,  note: C0
COMMENT $4A57 $0191: vol = $1 (inverted), no pitch, no note, no instrument
COMMENT $4A58 $0192: normal track data,  note: C0
COMMENT $4A59 $0193: vol = $0 (inverted), no pitch, no note, no instrument
COMMENT $4A5A $0194: pitch
COMMENT $4A5C $0196: normal track data,  note: C3
COMMENT $4A5D $0197: vol = $8 (inverted), no pitch, no note, no instrument
COMMENT $4A5E $0198: pitch
COMMENT $4A60 $019A: instrument
COMMENT $4A61 $019B: normal track data,  note: C0
COMMENT $4A62 $019C: vol = $9 (inverted), no pitch, no note, no instrument
COMMENT $4A63 $019D: normal track data
COMMENT $4A64 $019E: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $4A65 $019F: normal track data
COMMENT $4A66 $01A0: vol = $B (inverted), no pitch, no note, no instrument
COMMENT $4A67 $01A1: normal track data
COMMENT $4A68 $01A2: vol = $A (inverted), no pitch, no note, no instrument
COMMENT $4A69 $01A3: normal track data,  note: C0
COMMENT $4A6A $01A4: vol = $9 (inverted), no pitch, no note, no instrument
COMMENT $4A6B $01A5: normal track data
COMMENT $4A6C $01A6: vol off, no pitch, no note, no instrument
COMMENT $4A6D $01A7: normal track data
COMMENT $4A6E $01A8: vol off, no pitch, no note, no instrument
COMMENT $4A6F $01A9: normal track data
COMMENT $4A70 $01AA: vol off, no pitch, no note, no instrument
COMMENT $4A71 $01AB: normal track data,  note: C0
COMMENT $4A72 $01AC: vol = $8 (inverted), no pitch, no note, no instrument
COMMENT $4A73 $01AD: normal track data
COMMENT $4A74 $01AE: vol = $7 (inverted), no pitch, no note, no instrument
COMMENT $4A75 $01AF: normal track data
COMMENT $4A76 $01B0: vol = $6 (inverted), no pitch, no note, no instrument
COMMENT $4A77 $01B1: normal track data,  note: C0
COMMENT $4A78 $01B2: vol = $5 (inverted), no pitch, no note, no instrument
COMMENT $4A79 $01B3: normal track data,  note: C0
COMMENT $4A7A $01B4: vol = $4 (inverted), no pitch, no note, no instrument
COMMENT $4A7B $01B5: normal track data
COMMENT $4A7C $01B6: vol = $3 (inverted), no pitch, no note, no instrument
COMMENT $4A7D $01B7: normal track data,  note: C0
COMMENT $4A7E $01B8: vol = $0 (inverted), no pitch, no note, no instrument
COMMENT $4A7F $01B9: pitch
COMMENT_LINE $4A81 this file is part of Release, written by Malban in 2017
COMMENT_LINE $4A81 original vectrex routine were written by Richard Chadd
COMMENT_LINE $4A81 (optimized version!)
COMMENT_LINE $4A81 regs used by below implementation
COMMENT_LINE $4A81 U and D
COMMENT_LINE $4A81 X is also used, but can be spared - see below comments
COMMENT_LINE $4A81 this is only channel 3 is implemented
COMMENT_LINE $4A81 ;;;;;;;;;;;;;;;
COMMENT_LINE $4A81 ;;;;;;;;;;;;;;;
COMMENT_LINE $4A81 set volume off channel 3
COMMENT_LINE $4A81 set reg1sf0
COMMENT_LINE $4A81 Set volume
COMMENT $4A81 reset sfx
FORCE_NO_SYMBOL $4A81
FORCE_SYMBOL $4A87 sfx_pointer_3
FORCE_SYMBOL $4A8A sfx_status_3
FORCE_SYMBOL $4A8D currentSFX_3
COMMENT $4A91 check if sfx to play
FORCE_SYMBOL $4A91 sfx_status_3
COMMENT $4A96 get current frame pointer
FORCE_SYMBOL $4A96 sfx_pointer_3
COMMENT $4A9B check first flag byte D0
FORCE_NO_SYMBOL $4A9B
COMMENT $4A9D no match - continue to process frame
FORCE_NO_SYMBOL $4A9F
COMMENT $4AA1 check second flag byte 20
FORCE_NO_SYMBOL $4AA1
COMMENT $4AA3 match - end of effect found so stop playing
COMMENT $4AA5 if bit 5 of B is set
FORCE_NO_SYMBOL $4AA5
COMMENT $4AA7 skip as no tone freq data
COMMENT $4AA9 alternative to destroying d load any 2 byte reg,
COMMENT $4AAB here I destroy d
COMMENT_LINE $4AAE or if x mus be preserved
COMMENT_LINE $4AAE ldd      ,u++ ; alternative to destroying d load any 2 byte reg,
COMMENT_LINE $4AAE std      SHADOW_BASE+04 ; here I destroy d
COMMENT_LINE $4AAE ldb -3,u ; and load b anew - one instruction to many,
COMMENT $4AAE if bit 6 of B is only set
FORCE_NO_SYMBOL $4AAE
COMMENT $4AB0 skip as no noise freq data
COMMENT $4AB2 get next data byte and copy to noise freq reg
COMMENT $4AB4 set tone freq
COMMENT $4AB9 get volume from bits 0-3
FORCE_NO_SYMBOL $4AB9
COMMENT $4ABB set tone freq
COMMENT $4ABE in the following reg 7 will be altered - load once
COMMENT $4AC1 if bit 4 of B is set disable the tone
FORCE_NO_SYMBOL $4AC1
FORCE_NO_SYMBOL $4AC5
COMMENT $4AC7 if bit7 of B is set disable noise
FORCE_NO_SYMBOL $4AC7
FORCE_NO_SYMBOL $4ACB
COMMENT $4ACD set tone freq
COMMENT $4AD0 update frame pointer to next flag byte in Y
FORCE_SYMBOL $4AD0 sfx_pointer_3
FORCE_NO_SYMBOL $4AD4
COMMENT $4AD6 if bit7 of B is set disable noise
FORCE_NO_SYMBOL $4AD6
FORCE_NO_SYMBOL $4ADA
COMMENT $4ADC set tone freq
COMMENT $4ADF update frame pointer to next flag byte in Y
FORCE_SYMBOL $4ADF sfx_pointer_3
FORCE_NO_SYMBOL $4AE3
COMMENT $4AE5 set tone freq
COMMENT $4AE8 update frame pointer to next flag byte in Y
FORCE_SYMBOL $4AE8 sfx_pointer_3
COMMENT_LINE $4AEC this file is part of Release, written by Malban in 2017
COMMENT_LINE $4AEC original vectrex routine were written by Richard Chadd
COMMENT_LINE $4AEC (optimized version!)
COMMENT_LINE $4AEC regs used by below implementation
COMMENT_LINE $4AEC U and D
COMMENT_LINE $4AEC X is also used, but can be spared - see below comments
COMMENT_LINE $4AEC this is only channel 2 is implemented
COMMENT_LINE $4AEC ;;;;;;;;;;;;;;;
COMMENT_LINE $4AEC ;;;;;;;;;;;;;;;
COMMENT_LINE $4AEC set volume off channel 3
COMMENT_LINE $4AEC set reg1sf0
COMMENT_LINE $4AEC Set volume
COMMENT $4AEC reset sfx
FORCE_NO_SYMBOL $4AEC
FORCE_SYMBOL $4AF2 sfx_pointer_2
FORCE_SYMBOL $4AF5 sfx_status_2
FORCE_SYMBOL $4AF8 currentSFX_2
COMMENT $4AFC check if sfx to play
FORCE_SYMBOL $4AFC sfx_status_2
COMMENT $4B01 get current frame pointer
FORCE_SYMBOL $4B01 sfx_pointer_2
COMMENT $4B06 check first flag byte D0
FORCE_NO_SYMBOL $4B06
COMMENT $4B08 no match - continue to process frame
FORCE_NO_SYMBOL $4B0A
COMMENT $4B0C check second flag byte 20
FORCE_NO_SYMBOL $4B0C
COMMENT $4B0E match - end of effect found so stop playing
COMMENT $4B10 if bit 5 of B is set
FORCE_NO_SYMBOL $4B10
COMMENT $4B12 skip as no tone freq data
COMMENT $4B14 alternative to destroying d load any 2 byte reg,
COMMENT $4B16 here I destroy d
COMMENT_LINE $4B19 or if x mus be preserved
COMMENT_LINE $4B19 ldd      ,u++ ; alternative to destroying d load any 2 byte reg,
COMMENT_LINE $4B19 std      SHADOW_BASE+02 ; here I destroy d
COMMENT_LINE $4B19 ldb -3,u ; and load b anew - one instruction to many,
COMMENT $4B19 if bit 6 of B is only set
FORCE_NO_SYMBOL $4B19
COMMENT $4B1B skip as no noise freq data
COMMENT $4B1D get next data byte and copy to noise freq reg
COMMENT $4B1F set noise freq
COMMENT $4B24 get volume from bits 0-3
FORCE_NO_SYMBOL $4B24
COMMENT $4B26 set tone freq
COMMENT $4B29 in the following reg 7 will be altered - load once
COMMENT $4B2C if bit 4 of B is set disable the tone
FORCE_NO_SYMBOL $4B2C
FORCE_NO_SYMBOL $4B30
COMMENT $4B32 if bit7 of B is set disable noise
FORCE_NO_SYMBOL $4B32
FORCE_NO_SYMBOL $4B36
COMMENT $4B38 set tone freq
COMMENT $4B3B update frame pointer to next flag byte in Y
FORCE_SYMBOL $4B3B sfx_pointer_2
FORCE_NO_SYMBOL $4B3F
COMMENT $4B41 if bit7 of B is set disable noise
FORCE_NO_SYMBOL $4B41
FORCE_NO_SYMBOL $4B45
COMMENT $4B47 set tone freq
COMMENT $4B4A update frame pointer to next flag byte in Y
FORCE_SYMBOL $4B4A sfx_pointer_2
FORCE_NO_SYMBOL $4B4E
COMMENT $4B50 set tone freq
COMMENT $4B53 update frame pointer to next flag byte in Y
FORCE_SYMBOL $4B53 sfx_pointer_2
COMMENT_LINE $4B57 this file is part of Release, written by Malban in 2017
COMMENT_LINE $4B57 original vectrex routine were written by Richard Chadd
COMMENT_LINE $4B57 (optimized version!)
COMMENT_LINE $4B57 regs used by below implementation
COMMENT_LINE $4B57 U and D
COMMENT_LINE $4B57 X is also used, but can be spared - see below comments
COMMENT_LINE $4B57 this is only channel 1 is implemented
COMMENT_LINE $4B57 ;;;;;;;;;;;;;;;
COMMENT_LINE $4B57 ;;;;;;;;;;;;;;;
COMMENT_LINE $4B57 set volume off channel 3
COMMENT_LINE $4B57 set reg1sf0
COMMENT_LINE $4B57 Set volume
COMMENT $4B57 reset sfx
FORCE_NO_SYMBOL $4B57
FORCE_SYMBOL $4B5D sfx_pointer_1
FORCE_SYMBOL $4B60 sfx_status_1
FORCE_SYMBOL $4B63 currentSFX_1
COMMENT $4B67 check if sfx to play
FORCE_SYMBOL $4B67 sfx_status_1
COMMENT $4B6C get current frame pointer
FORCE_SYMBOL $4B6C sfx_pointer_1
COMMENT $4B71 check first flag byte D0
FORCE_NO_SYMBOL $4B71
COMMENT $4B73 no match - continue to process frame
FORCE_NO_SYMBOL $4B75
COMMENT $4B77 check second flag byte 20
FORCE_NO_SYMBOL $4B77
COMMENT $4B79 match - end of effect found so stop playing
COMMENT $4B7B if bit 5 of B is set
FORCE_NO_SYMBOL $4B7B
COMMENT $4B7D skip as no tone freq data
COMMENT $4B7F alternative to destroying d load any 2 byte reg,
COMMENT $4B81 here I destroy d
COMMENT_LINE $4B84 or if x mus be preserved
COMMENT_LINE $4B84 ldd      ,u++ ; alternative to destroying d load any 2 byte reg,
COMMENT_LINE $4B84 std      SHADOW_BASE+00 ; here I destroy d
COMMENT_LINE $4B84 ldb -3,u ; and load b anew - one instruction to many,
COMMENT $4B84 if bit 6 of B is only set
FORCE_NO_SYMBOL $4B84
COMMENT $4B86 skip as no noise freq data
COMMENT $4B88 get next data byte and copy to noise freq reg
COMMENT $4B8A set noise freq
COMMENT $4B8F get volume from bits 0-3
FORCE_NO_SYMBOL $4B8F
COMMENT $4B91 set tone freq
COMMENT $4B94 in the following reg 7 will be altered - load once
COMMENT $4B97 if bit 4 of B is set disable the tone
FORCE_NO_SYMBOL $4B97
FORCE_NO_SYMBOL $4B9B
COMMENT $4B9D if bit7 of B is set disable noise
FORCE_NO_SYMBOL $4B9D
FORCE_NO_SYMBOL $4BA1
COMMENT $4BA3 set tone freq
COMMENT $4BA6 update frame pointer to next flag byte in Y
FORCE_SYMBOL $4BA6 sfx_pointer_1
FORCE_NO_SYMBOL $4BAA
COMMENT $4BAC if bit7 of B is set disable noise
FORCE_NO_SYMBOL $4BAC
FORCE_NO_SYMBOL $4BB0
COMMENT $4BB2 set tone freq
COMMENT $4BB5 update frame pointer to next flag byte in Y
FORCE_SYMBOL $4BB5 sfx_pointer_1
FORCE_NO_SYMBOL $4BB9
COMMENT $4BBB set tone freq
COMMENT $4BBE update frame pointer to next flag byte in Y
FORCE_SYMBOL $4BBE sfx_pointer_1
COMMENT_LINE $4BC2 this file is part of Release, written by Malban in 2017
COMMENT_LINE $4BC2 b = lower part of U
COMMENT_LINE $4BC2 all following "divi" routines
COMMENT_LINE $4BC2 substract from U some fraction
COMMENT_LINE $4BC2 original it was supposed to
COMMENT_LINE $4BC2 substract the name giving divider - but that was cancled
COMMENT_LINE $4BC2 look at the header what fraction is removed
COMMENT_LINE $4BC2 ;;; - 1 / 16 (0,031)
COMMENT $4BC6 b = b/16
COMMENT_LINE $4BCB ;;; - 1 / 16 (0,0625)
COMMENT $4BCE b = b/16
COMMENT_LINE $4BD3 ;;; -1/16-1/64 (0,0781)
COMMENT $4BD6 b = b/16
COMMENT $4BDC b = b/64
COMMENT_LINE $4BE1 ;;; -1/8 + 1/32 (0,1 => 0,93)
COMMENT $4BE3 b = b/8
COMMENT $4BE9 b = b/64
COMMENT_LINE $4BED ;;; -1/8 + 1/64 (0,1 => 0,109)
COMMENT $4BEF b = b/8
COMMENT $4BF6 b = b/64
COMMENT_LINE $4BFA ;;; -1/8 + 1/18 (0,1 => 0,117)
COMMENT $4BFC b = b/8
COMMENT $4C04 b = b/128
COMMENT_LINE $4C08 ;;; -1/8 ( 0,125)
COMMENT $4C0A b = b/8
COMMENT_LINE $4C0F ;;; -1/8 - 1/64 (0,1406)
COMMENT $4C11 b = b/8
COMMENT $4C18 b = b /64
COMMENT_LINE $4C1D ;;; -1/8 - 1/32 ( 0,156)
COMMENT $4C1F b = b/8
COMMENT $4C25 b = b/32
COMMENT_LINE $4C2A ;;; -1/4 + 1/16+1/64 (0,171)
COMMENT $4C2B b = b/4
COMMENT $4C31 b = b/16
COMMENT $4C35 b = b/64
COMMENT_LINE $4C39 ;;; -1/4 + 1/16(0,1875)
COMMENT $4C3A b = b/4
COMMENT $4C40 b = b/16
COMMENT_LINE $4C44 ;;; -1/4 + 1/32 + 1/64(0,2031)
COMMENT $4C45 b = b/4
COMMENT $4C4C b = b/32
COMMENT $4C4F b = b/64
COMMENT_LINE $4C53 ;;; -1/4 + 1/32 (0,218)
COMMENT $4C54 b = b/4
COMMENT $4C5B b = b/32
COMMENT_LINE $4C7B this file is part of Release, written by Malban in 2017
COMMENT_LINE $4C7B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $4C7B demo_mode
FORCE_SYMBOL $4C80 init_objects_a
FORCE_SYMBOL $4C83 spawnStarfield
FORCE_SYMBOL $4C86 PC_SCORE
FORCE_SYMBOL $4C89 NEXT_OBJECT
FORCE_SYMBOL $4C8B spawnStarfield
FORCE_SYMBOL $4C8E PC_SCORE
FORCE_SYMBOL $4C91 NEXT_OBJECT
FORCE_SYMBOL $4C93 spawnStarfield
FORCE_SYMBOL $4C96 PC_SCORE
FORCE_SYMBOL $4C99 NEXT_OBJECT
FORCE_SYMBOL $4C9B spawnStarfield
FORCE_SYMBOL $4C9E PC_SCORE
FORCE_SYMBOL $4CA1 NEXT_OBJECT
FORCE_SYMBOL $4CA3 spawnStarfield
FORCE_SYMBOL $4CA6 PC_SCORE
FORCE_SYMBOL $4CA9 NEXT_OBJECT
COMMENT $4CAB this piece of music
FORCE_SYMBOL $4CAB highscoreMusic
COMMENT $4CAE NOW
FORCE_SYMBOL $4CAE PLY_INIT_ALL
FORCE_SYMBOL $4CB1 PLY_PLAY
FORCE_SYMBOL $4CB4 songOver
FORCE_SYMBOL $4CBB Wait_Recal
COMMENT $4CBE recal counter, about 21 Minutes befor roll over
FORCE_SYMBOL $4CBE RecalCounter
FORCE_NO_SYMBOL $4CC1
FORCE_SYMBOL $4CC3 RecalCounter
COMMENT $4CC6 round_startup_main expects dp set to d0
FORCE_NO_SYMBOL $4CC6
FORCE_SYMBOL $4CCA do_ym_sound2_no_sfx
FORCE_SYMBOL $4CCD Intensity_5F
FORCE_SYMBOL $4CD0 HIGH_SCORE_ZERO_POS
FORCE_SYMBOL $4CD3 tmp1
FORCE_NO_SYMBOL $4CD6
FORCE_SYMBOL $4CD8 tmp_count
FORCE_SYMBOL $4CDB highScoreBlock
FORCE_NO_SYMBOL $4CDF
FORCE_SYMBOL $4CE1 tmp_count2
COMMENT $4CE4 everything we do with "positioning" is scale SCALE_FACTOR_GAME
COMMENT $4CE4 scale for placing first point
FORCE_SYMBOL $4CE4 SCALE_FACTOR_GAME
COMMENT $4CE6 move to time 1 lo, this means scaling
FORCE_SYMBOL $4CE6 VIA_t1_cnt_lo
COMMENT $4CE8 the current move vector
FORCE_SYMBOL $4CE8 tmp1
FORCE_SYMBOL $4CEB VIA_port_a
COMMENT $4CED Blank low, zero high?
FORCE_NO_SYMBOL $4CED
FORCE_SYMBOL $4CEF VIA_cntl
COMMENT $4CF2 Enable mux
FORCE_SYMBOL $4CF2 VIA_port_b
COMMENT $4CF4 Clear shift regigster
FORCE_SYMBOL $4CF4 VIA_shift_reg
COMMENT $4CF6 Disable mux
FORCE_SYMBOL $4CF6 VIA_port_b
COMMENT $4CF8 Store X in D/A register
FORCE_SYMBOL $4CF8 VIA_port_a
COMMENT $4CFA enable timer
FORCE_SYMBOL $4CFA VIA_t1_cnt_hi
COMMENT $4CFC first char of three letter name
COMMENT_LINE $4CFE lets calculate the abc-table offset...
COMMENT $4CFE subtract smallest letter, so A has 0 offset
COMMENT $4D00 multiply by two, since addresses are 16 bit
COMMENT $4D01 and add the abc (table of vector list address of the alphabet's letters)
FORCE_SYMBOL $4D01 _abc
COMMENT $4D04 in x now address of first letter vectorlist
COMMENT $4D06 (SCROLL_SCALE_FACTOR) ; drawing of letters is done in SCROLL_SCALE_FACTOR
COMMENT $4D06 scale for placing first point
FORCE_NO_SYMBOL $4D06
COMMENT $4D08 move to time 1 lo, this means scaling
FORCE_SYMBOL $4D08 VIA_t1_cnt_lo
FORCE_SYMBOL $4D0A mov_x
FORCE_SYMBOL $4D0D X_STEP_LETTERS
FORCE_SYMBOL $4D0F mov_x
FORCE_NO_SYMBOL $4D12
FORCE_SYMBOL $4D14 VIA_int_flags
FORCE_SYMBOL $4D18 myDraw_VL_mode3
COMMENT $4D1B draw each letter with a move from zero, more stable
FORCE_NO_SYMBOL $4D1B
COMMENT $4D1D /BLANK low and /ZERO low
FORCE_SYMBOL $4D1D VIA_cntl
FORCE_SYMBOL $4D1F tmp_count2
FORCE_SYMBOL $4D24 mov_x
FORCE_SYMBOL $4D29 mov_x
COMMENT $4D2C everything we do with "positioning" is scale SCALE_FACTOR_GAME
COMMENT $4D2C scale for placing first point
FORCE_SYMBOL $4D2C SCALE_FACTOR_GAME
COMMENT $4D2E move to time 1 lo, this means scaling
FORCE_SYMBOL $4D2E VIA_t1_cnt_lo
COMMENT_LINE $4D30 put to be displayed bcd score as csa score into player score
COMMENT_LINE $4D30 player_score
COMMENT $4D30 the current move vector
FORCE_SYMBOL $4D30 tmp1
COMMENT $4D33 Store Y in D/A register
FORCE_SYMBOL $4D33 VIA_port_a
COMMENT $4D35 Blank low, zero high?
FORCE_NO_SYMBOL $4D35
FORCE_SYMBOL $4D37 VIA_cntl
COMMENT $4D3A Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $4D3A VIA_port_b
COMMENT $4D3C Clear shift regigster
FORCE_SYMBOL $4D3C VIA_shift_reg
COMMENT $4D3E Disable mux
FORCE_SYMBOL $4D3E VIA_port_b
COMMENT $4D40 Store X in D/A register
FORCE_SYMBOL $4D40 VIA_port_a
COMMENT $4D42 enable timer
FORCE_SYMBOL $4D42 VIA_t1_cnt_hi
FORCE_NO_SYMBOL $4D44
FORCE_NO_SYMBOL $4D46
FORCE_SYMBOL $4D48 player_score
FORCE_SYMBOL $4D4B bcd_to_csa
FORCE_SYMBOL $4D50 mov_y
FORCE_NO_SYMBOL $4D53
FORCE_SYMBOL $4D55 mov_y
FORCE_NO_SYMBOL $4D58
FORCE_SYMBOL $4D5A mov_x
COMMENT $4D5D #isfunction
FORCE_SYMBOL $4D5D in_game_score
FORCE_SYMBOL $4D62 tmp_count
COMMENT $4D69 is a button pressed?
FORCE_SYMBOL $4D69 getButtonState
COMMENT $4D6E same aslast state
FORCE_NO_SYMBOL $4D6E
COMMENT $4D72 as released - possibly from highscore return
FORCE_NO_SYMBOL $4D72
FORCE_NO_SYMBOL $4D76
FORCE_SYMBOL $4D78 init_objects_a
FORCE_NO_SYMBOL $4D7B
FORCE_SYMBOL $4D7D last_button_state
FORCE_SYMBOL $4D80 current_button_state
COMMENT $4D83 this piece of music
FORCE_SYMBOL $4D83 titleMusic
COMMENT $4D86 NOW
FORCE_SYMBOL $4D86 PLY_INIT_ALL
FORCE_SYMBOL $4D89 title_main1_hs_ret
FORCE_SYMBOL $4D8C emptyStreamInMove
FORCE_SYMBOL $4D8F inMovePointer
FORCE_SYMBOL $4D92 list_objects_head
COMMENT $4D95 (D = y,x, X = vectorlist, Y = DDRA+Scale)
COMMENT_LINE $4D97 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $4D97 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $4D97 in reg a place to be edited
FORCE_NO_SYMBOL $4D98
COMMENT_LINE $4D9A in a now the compare value to ourcounter
FORCE_SYMBOL $4D9A hs_place_got
FORCE_NO_SYMBOL $4D9D
FORCE_SYMBOL $4D9F hs_place_edit
FORCE_SYMBOL $4DA2 BLINK_LENGTH
FORCE_SYMBOL $4DA4 hs_blink_count
FORCE_SYMBOL $4DA7 hs_blink_state
COMMENT_LINE $4DAA save player hs
FORCE_SYMBOL $4DAA player_score
FORCE_SYMBOL $4DAD star_0_score
COMMENT $4DBC this piece of music
FORCE_SYMBOL $4DBC highscoreMusic
COMMENT $4DBF NOW
FORCE_SYMBOL $4DBF PLY_INIT_ALL
FORCE_SYMBOL $4DC2 PLY_PLAY
FORCE_SYMBOL $4DC5 Wait_Recal
COMMENT $4DC8 recal counter, about 21 Minutes befor roll over
FORCE_SYMBOL $4DC8 RecalCounter
FORCE_NO_SYMBOL $4DCB
FORCE_SYMBOL $4DCD RecalCounter
COMMENT $4DD0 round_startup_main expects dp set to d0
FORCE_NO_SYMBOL $4DD0
FORCE_SYMBOL $4DD4 do_ym_sound2
FORCE_SYMBOL $4DD7 Intensity_5F
FORCE_SYMBOL $4DDA HIGH_SCORE_ZERO_POS
FORCE_SYMBOL $4DDD tmp1
FORCE_NO_SYMBOL $4DE0
FORCE_SYMBOL $4DE2 tmp_count
FORCE_SYMBOL $4DE5 highScoreBlock
FORCE_NO_SYMBOL $4DE9
FORCE_SYMBOL $4DEB tmp_count2
COMMENT $4DEE everything we do with "positioning" is scale SCALE_FACTOR_GAME
COMMENT $4DEE scale for placing first point
FORCE_SYMBOL $4DEE SCALE_FACTOR_GAME
COMMENT $4DF0 move to time 1 lo, this means scaling
FORCE_SYMBOL $4DF0 VIA_t1_cnt_lo
COMMENT $4DF2 the current move vector
FORCE_SYMBOL $4DF2 tmp1
FORCE_SYMBOL $4DF5 VIA_port_a
COMMENT $4DF7 Blank low, zero high?
FORCE_NO_SYMBOL $4DF7
FORCE_SYMBOL $4DF9 VIA_cntl
COMMENT $4DFC Enable mux
FORCE_SYMBOL $4DFC VIA_port_b
COMMENT $4DFE Clear shift regigster
FORCE_SYMBOL $4DFE VIA_shift_reg
COMMENT $4E00 Disable mux
FORCE_SYMBOL $4E00 VIA_port_b
COMMENT $4E02 Store X in D/A register
FORCE_SYMBOL $4E02 VIA_port_a
COMMENT $4E04 enable timer
FORCE_SYMBOL $4E04 VIA_t1_cnt_hi
COMMENT $4E06 first char of three letter name
COMMENT_LINE $4E08 lets calculate the abc-table offset...
COMMENT $4E08 subtract smallest letter, so A has 0 offset
COMMENT $4E0A multiply by two, since addresses are 16 bit
COMMENT $4E0B and add the abc (table of vector list address of the alphabet's letters)
FORCE_SYMBOL $4E0B _abc
COMMENT $4E0E in x now address of first letter vectorlist
COMMENT_LINE $4E10 check if current place is the "blinker"
FORCE_SYMBOL $4E10 tmp_count
FORCE_SYMBOL $4E13 hs_place_got
FORCE_SYMBOL $4E18 tmp_count2
FORCE_SYMBOL $4E1B hs_place_edit
COMMENT_LINE $4E20 here we have our blinking position
FORCE_SYMBOL $4E20 hs_blink_count
FORCE_SYMBOL $4E25 BLINK_LENGTH
FORCE_SYMBOL $4E27 hs_blink_count
FORCE_SYMBOL $4E2A hs_blink_state
FORCE_SYMBOL $4E2F hs_blink_state
FORCE_SYMBOL $4E34 hs_blink_state
FORCE_SYMBOL $4E37 hs_blink_state
COMMENT $4E3A if blink state != than display normal character
COMMENT_LINE $4E3C load SPACE
FORCE_SYMBOL $4E3C ABC_28
COMMENT $4E3F (SCROLL_SCALE_FACTOR) ; drawing of letters is done in SCROLL_SCALE_FACTOR
COMMENT $4E3F scale for placing first point
FORCE_NO_SYMBOL $4E3F
COMMENT $4E41 move to time 1 lo, this means scaling
FORCE_SYMBOL $4E41 VIA_t1_cnt_lo
FORCE_SYMBOL $4E43 mov_x
FORCE_SYMBOL $4E46 X_STEP_LETTERS
FORCE_SYMBOL $4E48 mov_x
FORCE_NO_SYMBOL $4E4B
FORCE_SYMBOL $4E4D VIA_int_flags
FORCE_SYMBOL $4E51 myDraw_VL_mode3
COMMENT $4E54 draw each letter with a move from zero, more stable
FORCE_NO_SYMBOL $4E54
COMMENT $4E56 /BLANK low and /ZERO low
FORCE_SYMBOL $4E56 VIA_cntl
FORCE_SYMBOL $4E58 tmp_count2
FORCE_SYMBOL $4E5D mov_x
FORCE_SYMBOL $4E62 mov_x
COMMENT $4E65 everything we do with "positioning" is scale SCALE_FACTOR_GAME
COMMENT $4E65 scale for placing first point
FORCE_SYMBOL $4E65 SCALE_FACTOR_GAME
COMMENT $4E67 move to time 1 lo, this means scaling
FORCE_SYMBOL $4E67 VIA_t1_cnt_lo
COMMENT_LINE $4E69 put to be displayed bcd score as csa score into player score
COMMENT_LINE $4E69 player_score
COMMENT $4E69 the current move vector
FORCE_SYMBOL $4E69 tmp1
COMMENT $4E6C Store Y in D/A register
FORCE_SYMBOL $4E6C VIA_port_a
COMMENT $4E6E Blank low, zero high?
FORCE_NO_SYMBOL $4E6E
FORCE_SYMBOL $4E70 VIA_cntl
COMMENT $4E73 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $4E73 VIA_port_b
COMMENT $4E75 Clear shift regigster
FORCE_SYMBOL $4E75 VIA_shift_reg
COMMENT $4E77 Disable mux
FORCE_SYMBOL $4E77 VIA_port_b
COMMENT $4E79 Store X in D/A register
FORCE_SYMBOL $4E79 VIA_port_a
COMMENT $4E7B enable timer
FORCE_SYMBOL $4E7B VIA_t1_cnt_hi
FORCE_NO_SYMBOL $4E7D
FORCE_NO_SYMBOL $4E7F
FORCE_SYMBOL $4E81 player_score
FORCE_SYMBOL $4E84 bcd_to_csa
FORCE_SYMBOL $4E87 mov_y
FORCE_NO_SYMBOL $4E8A
FORCE_SYMBOL $4E8C mov_y
FORCE_NO_SYMBOL $4E8F
FORCE_SYMBOL $4E91 mov_x
COMMENT $4E96 #isfunction
FORCE_SYMBOL $4E96 in_game_score
FORCE_SYMBOL $4E9B tmp_count
FORCE_SYMBOL $4EA2 query_joystick
FORCE_SYMBOL $4EA5 highScoreBlock
COMMENT $4EA9 only jump if last joy pos was zero (needed for testing later)
FORCE_SYMBOL $4EA9 last_joy_x
COMMENT $4EAC load joystick 1 position X to A
FORCE_SYMBOL $4EAC Vec_Joy_1_X
COMMENT $4EAF store this joystick position
FORCE_SYMBOL $4EAF last_joy_x
COMMENT $4EB4 joystick moved to left
COMMENT $4EB6 test the old joystick position
COMMENT $4EB7 was center
COMMENT_LINE $4EB9 pos dec 1
FORCE_SYMBOL $4EB9 hs_place_edit
FORCE_SYMBOL $4EBE hs_place_edit
COMMENT $4EC3 test the old joystick position
COMMENT $4EC4 was center
COMMENT_LINE $4EC6 pos inc 1
FORCE_SYMBOL $4EC6 hs_place_edit
FORCE_NO_SYMBOL $4EC9
FORCE_SYMBOL $4ECB hs_place_edit
FORCE_NO_SYMBOL $4ED0
FORCE_SYMBOL $4ED2 hs_place_edit
COMMENT_LINE $4ED7 todo check y
COMMENT $4ED7 only jump if last joy pos was zero (needed for testing later)
FORCE_SYMBOL $4ED7 last_joy_y
COMMENT $4EDA load joystick 1 position X to A
FORCE_SYMBOL $4EDA Vec_Joy_1_Y
COMMENT $4EDD store this joystick position
FORCE_SYMBOL $4EDD last_joy_y
COMMENT $4EE2 joystick moved to left
COMMENT $4EE4 test the old joystick position
COMMENT $4EE5 was center
FORCE_SYMBOL $4EE7 hs_place_got
FORCE_NO_SYMBOL $4EEB
FORCE_NO_SYMBOL $4EED
FORCE_SYMBOL $4EF2 hs_place_edit
FORCE_NO_SYMBOL $4EF6
COMMENT_LINE $4EFA in y now the to be changed letter
FORCE_NO_SYMBOL $4EFA
FORCE_NO_SYMBOL $4F03
COMMENT $4F07 test the old joystick position
COMMENT $4F08 was center
FORCE_SYMBOL $4F0A hs_place_got
FORCE_NO_SYMBOL $4F0E
FORCE_NO_SYMBOL $4F10
FORCE_SYMBOL $4F15 hs_place_edit
FORCE_NO_SYMBOL $4F19
COMMENT_LINE $4F1D in y now the to be changed letter
FORCE_NO_SYMBOL $4F1D
FORCE_NO_SYMBOL $4F26
COMMENT_LINE $4F2A letter inc 1
COMMENT $4F2A is a button pressed?
FORCE_SYMBOL $4F2A getButtonState
COMMENT $4F31 same aslast state
FORCE_NO_SYMBOL $4F31
COMMENT $4F37 as released - possibly from highscore return
FORCE_NO_SYMBOL $4F37
FORCE_NO_SYMBOL $4F3D
FORCE_SYMBOL $4F3F last_button_state
FORCE_SYMBOL $4F42 current_button_state
COMMENT_LINE $4F45 restore player hs
FORCE_SYMBOL $4F45 player_score
FORCE_SYMBOL $4F48 star_0_score
COMMENT_LINE $4F58 u must be preserved
COMMENT_LINE $4F58 destroys d,y
COMMENT_LINE $4F58 in x pointer to 3 digit csa score (lsb)
COMMENT_LINE $4F58 adds the score pointed to by X (3 didgit csa score) to
COMMENT_LINE $4F58 the player score (6 digit csa score)
COMMENT_LINE $4F58 x pointer to 3 digits in csa format
FORCE_SYMBOL $4F58 player_score_0
FORCE_NO_SYMBOL $4F5C
FORCE_NO_SYMBOL $4F5E
FORCE_NO_SYMBOL $4F60
FORCE_NO_SYMBOL $4F64
COMMENT $4F68 write score 0
FORCE_NO_SYMBOL $4F68
FORCE_NO_SYMBOL $4F6C
FORCE_NO_SYMBOL $4F6E
FORCE_NO_SYMBOL $4F72
COMMENT $4F76 write score 1
FORCE_NO_SYMBOL $4F76
FORCE_NO_SYMBOL $4F7A
FORCE_NO_SYMBOL $4F7C
COMMENT $4F80 write score 2
FORCE_NO_SYMBOL $4F83
COMMENT $4F85 write score 2
FORCE_NO_SYMBOL $4F85
FORCE_NO_SYMBOL $4F8A
COMMENT $4F8E write score 3
FORCE_NO_SYMBOL $4F8E
FORCE_NO_SYMBOL $4F91
COMMENT $4F93 write score 3
FORCE_NO_SYMBOL $4F93
FORCE_NO_SYMBOL $4F98
COMMENT $4F9C write score 4
FORCE_NO_SYMBOL $4F9C
FORCE_NO_SYMBOL $4F9F
COMMENT $4FA1 write score 4
FORCE_NO_SYMBOL $4FA1
FORCE_NO_SYMBOL $4FA6
COMMENT $4FAA write score 5
FORCE_NO_SYMBOL $4FAA
COMMENT_LINE $4FAD no further increase - score reached max (999999, flipped to 900000)
COMMENT_LINE $4FAE ***************************************************************************
COMMENT_LINE $4FAE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $4FAE entry point for ingame score display
COMMENT_LINE $4FAE score has a CERTAIN nice long move
COMMENT_LINE $4FAE therefor we can decode some music here
COMMENT_LINE $4FAE the decoding of music is handled differently if not in game.
COMMENT_LINE $4FAE has a nice long moveto
COMMENT $4FB1 to timer t1 (lo=
FORCE_SYMBOL $4FB1 VIA_t1_cnt_lo
COMMENT_LINE $4FB3 ldb #SCORE_X_START
COMMENT $4FB3 Store Y in D/A register
FORCE_SYMBOL $4FB3 VIA_port_a
COMMENT $4FB5 Blank low, zero high?
FORCE_NO_SYMBOL $4FB5
FORCE_SYMBOL $4FB7 VIA_cntl
COMMENT $4FBA Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $4FBA VIA_port_b
COMMENT $4FBC Clear shift regigster
FORCE_SYMBOL $4FBC VIA_shift_reg
COMMENT $4FBE Disable mux
FORCE_SYMBOL $4FBE VIA_port_b
COMMENT $4FC0 Store X in D/A register
FORCE_SYMBOL $4FC0 VIA_port_a
COMMENT $4FC2 enable timer
FORCE_SYMBOL $4FC2 VIA_t1_cnt_hi
COMMENT_LINE $4FC4 in between about 200 cylces spare time!
COMMENT_LINE $4FC4 jsr      [inMovePointer]
FORCE_SYMBOL $4FC4 inMovePointer
COMMENT $4FC8 are we in demo mode?
FORCE_SYMBOL $4FC8 demo_mode
COMMENT $4FCB if so jump to display demo rather than the score
FORCE_SYMBOL $4FCD SCORE_SIZE
COMMENT $4FCF to timer t1 (lo=
FORCE_SYMBOL $4FCF VIA_t1_cnt_lo
FORCE_SYMBOL $4FD1 NumberList
FORCE_SYMBOL $4FD4 player_score_5
COMMENT $4FDA intensity
FORCE_NO_SYMBOL $4FDA
FORCE_NO_SYMBOL $4FDC
FORCE_SYMBOL $4FDE VIA_int_flags
COMMENT $4FE2 Store intensity in D/A
FORCE_SYMBOL $4FE2 VIA_port_a
COMMENT $4FE4 mux disabled channel 2
FORCE_NO_SYMBOL $4FE4
FORCE_SYMBOL $4FE7 VIA_port_b
COMMENT $4FE9 mux enabled channel 2
FORCE_SYMBOL $4FE9 VIA_port_b
COMMENT $4FEB turn off mux
FORCE_SYMBOL $4FEB VIA_port_b
COMMENT_LINE $4FED the score is positioned with one move only
COMMENT_LINE $4FED all subsequent letters can be drawn directly, since the
COMMENT_LINE $4FED score allways "leave" at the correct position
COMMENT_LINE $4FED display 6 digits!
FORCE_SYMBOL $4FED myDraw_VL_mode2
FORCE_SYMBOL $4FF0 player_score_4
FORCE_SYMBOL $4FF6 myDraw_VL_mode2
FORCE_SYMBOL $4FF9 player_score_3
FORCE_SYMBOL $4FFF myDraw_VL_mode2
FORCE_SYMBOL $5002 player_score_2
FORCE_SYMBOL $5008 myDraw_VL_mode2
FORCE_SYMBOL $500B player_score_1
FORCE_SYMBOL $5011 myDraw_VL_mode2
FORCE_SYMBOL $5014 player_score_0
FORCE_SYMBOL $501A myDraw_VL_mode2
FORCE_NO_SYMBOL $501D
COMMENT $501F /BLANK low and /ZERO low
FORCE_SYMBOL $501F VIA_cntl
COMMENT_LINE $5022 display demo instead of score
COMMENT_LINE $5022 demo "blinks" at the ferquency of 5/2 second (50/20)
COMMENT_LINE $5022 in opposite to the score
COMMENT_LINE $5022 the letters of the DEMO are displayed seperately
COMMENT_LINE $5022 each letters gets positioned from 0,0
COMMENT_LINE $5022 otherwise (for whatever reason) the
COMMENT_LINE $5022 demo does not display nicely
COMMENT_LINE $5022 additionally: due to the phenomenon which I call "zero retain",
COMMENT_LINE $5022 befor the first letter I do one "dummy" move and zero,
COMMENT_LINE $5022 otherwise the first letter is not in line with the others.
COMMENT_LINE $5022 on entry we are already in the first MOVE
FORCE_SYMBOL $5025 tmp_word
FORCE_SYMBOL $5028 demo_string
FORCE_NO_SYMBOL $502B
COMMENT $502D to timer t1 (lo=
FORCE_SYMBOL $502D VIA_t1_cnt_lo
FORCE_SYMBOL $502F tmp_word
FORCE_SYMBOL $5032 demo_blink_Counter
FORCE_NO_SYMBOL $5037
FORCE_SYMBOL $5039 demo_blink_Counter
FORCE_SYMBOL $503C demo_Intensity
FORCE_SYMBOL $5041 demo_Intensity
FORCE_NO_SYMBOL $5046
FORCE_SYMBOL $5048 demo_Intensity
COMMENT $504B intensity
FORCE_SYMBOL $504B demo_Intensity
FORCE_NO_SYMBOL $504E
FORCE_SYMBOL $5050 VIA_int_flags
COMMENT $5054 Store intensity in D/A
FORCE_SYMBOL $5054 VIA_port_a
COMMENT $5056 mux disabled channel 2
FORCE_NO_SYMBOL $5056
FORCE_SYMBOL $5059 VIA_port_b
COMMENT $505B mux enabled channel 2
FORCE_SYMBOL $505B VIA_port_b
COMMENT $505D turn off mux
FORCE_SYMBOL $505D VIA_port_b
COMMENT $505F draw each letter with a move from zero, more stable
FORCE_NO_SYMBOL $505F
COMMENT $5061 /BLANK low and /ZERO low
FORCE_SYMBOL $5061 VIA_cntl
FORCE_NO_SYMBOL $5065
COMMENT $5067 to timer t1 (lo=
FORCE_SYMBOL $5067 VIA_t1_cnt_lo
FORCE_SYMBOL $5069 tmp_word
COMMENT_LINE $506C #isfunction
COMMENT $506C Store Y in D/A register
FORCE_SYMBOL $506C VIA_port_a
COMMENT $506E Blank low, zero high?
FORCE_NO_SYMBOL $506E
FORCE_SYMBOL $5070 VIA_cntl
COMMENT $5073 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $5073 VIA_port_b
COMMENT $5075 Clear shift regigster
FORCE_SYMBOL $5075 VIA_shift_reg
COMMENT $5077 Disable mux
FORCE_SYMBOL $5077 VIA_port_b
COMMENT $5079 Store X in D/A register
FORCE_SYMBOL $5079 VIA_port_a
COMMENT $507B enable timer
FORCE_SYMBOL $507B VIA_t1_cnt_hi
COMMENT $507D first char of three letter name
COMMENT $507F subtract smallest letter, so A has 0 offset
COMMENT $5081 multiply by two, since addresses are 16 bit
COMMENT $5082 and add the abc (table of vector list address of the alphabet's letters)
FORCE_SYMBOL $5082 _abc
COMMENT $5085 in x now address of first letter vectorlist
FORCE_NO_SYMBOL $508A
FORCE_NO_SYMBOL $508F
COMMENT $5091 move to time 1 lo, this means scaling
FORCE_SYMBOL $5091 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $5093
FORCE_SYMBOL $5095 VIA_int_flags
COMMENT $5099 2
FORCE_SYMBOL $5099 myDraw_VL_mode2
COMMENT $509C draw each letter with a move from zero, more stable
FORCE_NO_SYMBOL $509C
COMMENT $509E /BLANK low and /ZERO low
FORCE_SYMBOL $509E VIA_cntl
FORCE_NO_SYMBOL $50A0
FORCE_NO_SYMBOL $50A4
COMMENT $50A6 Store intensity in D/A
FORCE_SYMBOL $50A6 VIA_port_a
COMMENT $50A8 mux disabled channel 2
FORCE_NO_SYMBOL $50A8
FORCE_SYMBOL $50AB VIA_port_b
COMMENT $50AD mux enabled channel 2
FORCE_SYMBOL $50AD VIA_port_b
COMMENT $50AF turn off mux
FORCE_SYMBOL $50AF VIA_port_b
COMMENT_LINE $50B2 ;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $50B2 draws the bonus Icon next to the score
COMMENT_LINE $50B2 has a nice long moveto
FORCE_SYMBOL $50B2 bonusCounter
FORCE_NO_SYMBOL $50B5
FORCE_SYMBOL $50BB bonusIconMoveScale
FORCE_NO_SYMBOL $50BE
FORCE_NO_SYMBOL $50C2
FORCE_SYMBOL $50C4 bonusIconMoveScale
COMMENT $50C7 to timer t1 (lo=
FORCE_SYMBOL $50C7 VIA_t1_cnt_lo
FORCE_SYMBOL $50C9 BONUS_X_START
COMMENT $50CB Store Y in D/A register
FORCE_SYMBOL $50CB VIA_port_a
COMMENT $50CD Blank low, zero high?
FORCE_NO_SYMBOL $50CD
FORCE_SYMBOL $50CF VIA_cntl
COMMENT $50D2 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $50D2 VIA_port_b
COMMENT $50D4 Clear shift regigster
FORCE_SYMBOL $50D4 VIA_shift_reg
COMMENT $50D6 Disable mux
FORCE_SYMBOL $50D6 VIA_port_b
COMMENT $50D8 Store X in D/A register
FORCE_SYMBOL $50D8 VIA_port_a
COMMENT $50DA enable timer
FORCE_SYMBOL $50DA VIA_t1_cnt_hi
COMMENT_LINE $50DC in between about 200 cylces spare time!
FORCE_SYMBOL $50DC inMovePointer
FORCE_NO_SYMBOL $50E0
COMMENT $50E2 to timer t1 (lo=
FORCE_SYMBOL $50E2 VIA_t1_cnt_lo
FORCE_SYMBOL $50E4 bonusIconList
FORCE_NO_SYMBOL $50E7
FORCE_SYMBOL $50E9 VIA_int_flags
FORCE_SYMBOL $50ED myDraw_VL_mode2
FORCE_NO_SYMBOL $50F0
COMMENT $50F2 /BLANK low and /ZERO low
FORCE_SYMBOL $50F2 VIA_cntl
COMMENT $50F5 the actual hardcoded part of the level information
COMMENT_LINE $50F5 this file is part of Release, written by Malban in 2017
COMMENT $5111 14
COMMENT $511D 20
COMMENT $5131 30
COMMENT_LINE $513B slow spawn,
COMMENT_LINE $513B very slow hiddens
COMMENT $513B spawn types allowed
COMMENT $513C 4 2 up , ec -> bpl than width grow
COMMENT $513D 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $513E 2 shield minor counter delay; test for dec -> bpl
COMMENT $513F 0 shield minor speed increase
COMMENT $5140 INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $5141 1 shot move delay ; test for dec -> bpl
COMMENT $5142 1 shot move strength
COMMENT $5143 1 x move delay ; test for dec -> bpl
COMMENT $5144 1 x move strength
COMMENT $5145 INITIAL_HX_MOVE_DELAY ;1 x move delay ; test for dec -> bpl
COMMENT $5146 1 hunter move strength
COMMENT $5147 1 bomber move delay ; test for dec -> bpl
COMMENT $5148 1 bomber move strength
COMMENT $5149 first shot can also be shorter timed than minimum 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $514A INITIAL_DRAGON_MOVE_DELAY ;5 (scale) dragon inner move delay; test for dec -> bpl
COMMENT $514B 2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $514D INITIAL_DRAGON_ANGLE_DELAY; 0 angle delay
COMMENT $514E 1 dragonchild (free) speed; update per tick
COMMENT $514F 50
COMMENT $5150 3 x move delay ; test for dec -> bpl
COMMENT $5151 1 x move strength
COMMENT $5152 30 in seconds
COMMENT $5153 phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $5154 phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $5155 phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $5156 phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT_LINE $5159 slow spawn,
COMMENT_LINE $5159 very slow hiddens
COMMENT $5159 spawn types allowed
COMMENT $515A 4 2 up , ec -> bpl than width grow
COMMENT $515B 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $515C 2 shield minor counter delay; test for dec -> bpl
COMMENT $515D 0 shield minor speed increase
COMMENT $515E INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $515F 1 shot move delay ; test for dec -> bpl
COMMENT $5160 1 shot move strength
COMMENT $5161 1 x move delay ; test for dec -> bpl
COMMENT $5162 1 x move strength
COMMENT $5163 INITIAL_HX_MOVE_DELAY ;1 x move delay ; test for dec -> bpl
COMMENT $5164 1 hunter move strength
COMMENT $5165 1 bomber move delay ; test for dec -> bpl
COMMENT $5166 1 bomber move strength
COMMENT $5167 first shot can also be shorter timed than minimum 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $5168 INITIAL_DRAGON_MOVE_DELAY ;5 (scale) dragon inner move delay; test for dec -> bpl
COMMENT $5169 2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $516B INITIAL_DRAGON_ANGLE_DELAY; 0 angle delay
COMMENT $516C 1 dragonchild (free) speed; update per tick
COMMENT $516D 50
COMMENT $516E 3 x move delay ; test for dec -> bpl
COMMENT $516F 1 x move strength
COMMENT $5170 30 in seconds
COMMENT $5171 phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $5172 phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $5173 phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $5174 phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT $5175 slow spawn,
COMMENT_LINE $5177 very slow hiddens
COMMENT $5177 spawn types allowed
COMMENT $5178 4 2 up , ec -> bpl than width grow
COMMENT $5179 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $517A 2 shield minor counter delay; test for dec -> bpl
COMMENT $517B 0 shield minor speed increase
COMMENT $517C INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $517D 1 shot move delay ; test for dec -> bpl
COMMENT $517E 1 shot move strength
COMMENT $517F 1 x move delay ; test for dec -> bpl
COMMENT $5180 1 x move strength
COMMENT $5181 INITIAL_HX_MOVE_DELAY ;1 x move delay ; test for dec -> bpl
COMMENT $5182 1 hunter move strength
COMMENT $5183 1 bomber move delay ; test for dec -> bpl
COMMENT $5184 1 bomber move strength
COMMENT $5185 first shot can also be shorter timed than minimum 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $5186 INITIAL_DRAGON_MOVE_DELAY ;5 (scale) dragon inner move delay; test for dec -> bpl
COMMENT $5187 2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $5189 INITIAL_DRAGON_ANGLE_DELAY; 0 angle delay
COMMENT $518A 1 dragonchild (free) speed; update per tick
COMMENT $518B 50
COMMENT $518C 3 x move delay ; test for dec -> bpl
COMMENT $518D 1 x move strength
COMMENT $518E 30 in seconds
COMMENT $518F phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $5190 phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $5191 phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $5192 phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT_LINE $5195 very slow hiddens
COMMENT $5195 spawn types allowed
COMMENT $5196 4 2 up , ec -> bpl than width grow
COMMENT $5197 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $5198 2 shield minor counter delay; test for dec -> bpl
COMMENT $5199 0 shield minor speed increase
COMMENT $519A INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $519B 1 shot move delay ; test for dec -> bpl
COMMENT $519C 1 shot move strength
COMMENT $519D 1 x move delay ; test for dec -> bpl
COMMENT $519E 1 x move strength
COMMENT $519F INITIAL_HX_MOVE_DELAY ;1 x move delay ; test for dec -> bpl
COMMENT $51A0 1 hunter move strength
COMMENT $51A1 1 bomber move delay ; test for dec -> bpl
COMMENT $51A2 1 bomber move strength
COMMENT $51A3 first shot can also be shorter timed than minimum 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $51A4 INITIAL_DRAGON_MOVE_DELAY ;5 (scale) dragon inner move delay; test for dec -> bpl
COMMENT $51A5 2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $51A7 INITIAL_DRAGON_ANGLE_DELAY; 0 angle delay
COMMENT $51A8 1 dragonchild (free) speed; update per tick
COMMENT $51A9 50
COMMENT $51AA 3 x move delay ; test for dec -> bpl
COMMENT $51AB 1 x move strength
COMMENT $51AC 30 in seconds
COMMENT $51AD phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $51AE phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $51AF phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $51B0 phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT_LINE $51B3 very slow hiddens
COMMENT $51B3 spawn types allowed
COMMENT $51B4 4 2 up , ec -> bpl than width grow
COMMENT $51B5 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $51B6 2 shield minor counter delay; test for dec -> bpl
COMMENT $51B7 0 shield minor speed increase
COMMENT $51B8 INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $51B9 1 shot move delay ; test for dec -> bpl
COMMENT $51BA 1 shot move strength
COMMENT $51BB 1 x move delay ; test for dec -> bpl
COMMENT $51BC 1 x move strength
COMMENT $51BD INITIAL_HX_MOVE_DELAY ;1 x move delay ; test for dec -> bpl
COMMENT $51BE 1 hunter move strength
COMMENT $51BF 1 bomber move delay ; test for dec -> bpl
COMMENT $51C0 1 bomber move strength
COMMENT $51C1 first shot can also be shorter timed than minimum 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $51C2 INITIAL_DRAGON_MOVE_DELAY ;5 (scale) dragon inner move delay; test for dec -> bpl
COMMENT $51C3 2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $51C5 INITIAL_DRAGON_ANGLE_DELAY; 0 angle delay
COMMENT $51C6 1 dragonchild (free) speed; update per tick
COMMENT $51C7 50
COMMENT $51C8 3 x move delay ; test for dec -> bpl
COMMENT $51C9 1 x move strength
COMMENT $51CA 30 in seconds
COMMENT $51CB phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $51CC phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $51CD phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $51CE phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT_LINE $51D1 slow spawn,
COMMENT_LINE $51D1 very slow hiddens
COMMENT $51D1 spawn types allowed
COMMENT $51D2 4 2 up , ec -> bpl than width grow
COMMENT $51D3 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $51D4 2 shield minor counter delay; test for dec -> bpl
COMMENT $51D5 0 shield minor speed increase
COMMENT $51D6 INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $51D7 1 shot move delay ; test for dec -> bpl
COMMENT $51D8 1 shot move strength
COMMENT $51D9 1 x move delay ; test for dec -> bpl
COMMENT $51DA 1 x move strength
COMMENT $51DB INITIAL_HX_MOVE_DELAY ;1 x move delay ; test for dec -> bpl
COMMENT $51DC 1 hunter move strength
COMMENT $51DD 1 bomber move delay ; test for dec -> bpl
COMMENT $51DE 1 bomber move strength
COMMENT $51DF first shot can also be shorter timed than minimum 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $51E0 INITIAL_DRAGON_MOVE_DELAY ;5 (scale) dragon inner move delay; test for dec -> bpl
COMMENT $51E1 2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $51E3 INITIAL_DRAGON_ANGLE_DELAY; 0 angle delay
COMMENT $51E4 1 dragonchild (free) speed; update per tick
COMMENT $51E5 50
COMMENT $51E6 3 x move delay ; test for dec -> bpl
COMMENT $51E7 1 x move strength
COMMENT $51E8 30 in seconds
COMMENT $51E9 phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $51EA phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $51EB phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $51EC phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT $51ED next phase after 20 spawns
COMMENT_LINE $51EF minor shield speed increase
COMMENT_LINE $51EF hidden same as x
COMMENT_LINE $51EF bomber shoots fast - but long reload
COMMENT $51EF spawn types allowed
COMMENT $51F0 4 2 up , ec -> bpl than width grow
COMMENT $51F1 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $51F2 shield minor counter delay; test for dec -> bpl
COMMENT $51F3 0 shield minor speed increase
COMMENT $51F4 1 1-4 shield width adder
COMMENT $51F5 0 shot move delay ; test for dec -> bpl
COMMENT $51F6 0 shot move strength
COMMENT $51F7 1 x move delay ; test for dec -> bpl
COMMENT $51F8 1 x move strength
COMMENT $51F9 INITIAL_HX_MOVE_DELAY ;1 x move delay ; test for dec -> bpl
COMMENT $51FA 1 hunter move strength
COMMENT $51FB 1 bomber move delay ; test for dec -> bpl
COMMENT $51FC 1 bomber move strength
COMMENT $51FD INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $51FE 5 dragon inner move delay; test for dec -> bpl
COMMENT $51FF 2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $5201 0 angle delay
COMMENT $5202 2 dragonchild (free) speed; update per tick
COMMENT $5203 DEFAULT_MINIMUM_BOMB_RELOAD_DELAY
COMMENT $5204 3
COMMENT $5205 1
COMMENT $5206 9
COMMENT $5207 phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $5208 phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $5209 phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $520A phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT $520D spawn types allowed
COMMENT $520E 4 2 up , ec -> bpl than width grow
COMMENT $520F 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $5210 shield minor counter delay; test for dec -> bpl
COMMENT $5211 0 shield minor speed increase
COMMENT $5212 1 1-4 shield width adder
COMMENT $5213 0 shot move delay ; test for dec -> bpl
COMMENT $5214 0 shot move strength
COMMENT $5215 1 x move delay ; test for dec -> bpl
COMMENT $5216 1 x move strength
COMMENT $5217 1 x move delay ; test for dec -> bpl
COMMENT $5218 1 hunter move strength
COMMENT $5219 1 bomber move delay ; test for dec -> bpl
COMMENT $521A 1 bomber move strength
COMMENT $521B bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $521C 5 dragon inner move delay; test for dec -> bpl
COMMENT $521D INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $521F 0 angle delay
COMMENT $5220 2 dragonchild (free) speed; update per tick
COMMENT $5222 3
COMMENT $5223 1
COMMENT $5224 9
COMMENT $5225 phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $5226 phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $5227 phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $5228 phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT_LINE $5229 db 25;10 ; phase_spawn_reset -1 == stay unchanged
COMMENT_LINE $5229 db 1;0; phase_spawn_increase_delay -1 == stay unchanged
COMMENT_LINE $5229 db 25;5; CANON -1; phase_min_spawn_reset -1 == stay unchanged
COMMENT_LINE $5229 db 1;1; -1; phase_max_spawn_increase_delay -1 == stay unchanged
COMMENT_LINE $522B spawning slow down!
COMMENT $522B spawn types allowed
COMMENT $522C 4 2 up , ec -> bpl than width grow
COMMENT $522D 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $522E shield minor counter delay; test for dec -> bpl
COMMENT $522F 0 shield minor speed increase
COMMENT $5230 INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $5231 0 shot move delay ; test for dec -> bpl
COMMENT $5232 0 shot move strength
COMMENT $5233 1 x move delay ; test for dec -> bpl
COMMENT $5234 1 x move strength
COMMENT $5235 1 x move delay ; test for dec -> bpl
COMMENT $5236 INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $5237 1 bomber move delay ; test for dec -> bpl
COMMENT $5238 1 bomber move strength
COMMENT $5239 INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $523A 5 dragon inner move delay; test for dec -> bpl
COMMENT $523B INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $523D 0 angle delay
COMMENT $523E 2 dragonchild (free) speed; update per tick
COMMENT $5240 3
COMMENT $5241 1
COMMENT $5242 9
COMMENT $5243 phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $5244 phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $5245 phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $5246 phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT $5249 spawn types allowed
COMMENT $524A 4 2 up , ec -> bpl than width grow
COMMENT $524B 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $524C shield minor counter delay; test for dec -> bpl
COMMENT $524D 0 shield minor speed increase
COMMENT $524E INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $524F 0 shot move delay ; test for dec -> bpl
COMMENT $5250 0 shot move strength
COMMENT $5251 1 x move delay ; test for dec -> bpl
COMMENT $5252 1 x move strength
COMMENT $5253 1 x move delay ; test for dec -> bpl
COMMENT $5254 INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $5255 1 bomber move delay ; test for dec -> bpl
COMMENT $5256 1 bomber move strength
COMMENT $5257 INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $5258 5 dragon inner move delay; test for dec -> bpl
COMMENT $5259 INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $525B 0 angle delay
COMMENT $525C 2 dragonchild (free) speed; update per tick
COMMENT $525E 3
COMMENT $525F 1
COMMENT $5260 9
COMMENT $5261 10 ; phase_spawn_reset -1 == stay unchanged
COMMENT $5262 0; phase_spawn_increase_delay -1 == stay unchanged
COMMENT $5263 5; CANON -1; phase_min_spawn_reset -1 == stay unchanged
COMMENT $5264 1; -1; phase_max_spawn_increase_delay -1 == stay unchanged
COMMENT $5267 spawn types allowed
COMMENT $5268 4 2 up , ec -> bpl than width grow
COMMENT $5269 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $526A 2 shield minor counter delay; test for dec -> bpl
COMMENT $526B 0 shield minor speed increase
COMMENT $526C INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $526D 0 shot move delay ; test for dec -> bpl
COMMENT $526E 0 shot move strength
COMMENT $526F 1 x move delay ; test for dec -> bpl
COMMENT $5270 1 x move strength
COMMENT $5271 1 x move delay ; test for dec -> bpl
COMMENT $5272 INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $5273 1 bomber move delay ; test for dec -> bpl
COMMENT $5274 1 bomber move strength
COMMENT $5275 INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $5276 5 dragon inner move delay; test for dec -> bpl
COMMENT $5277 INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $5279 0 angle delay
COMMENT $527A 2 dragonchild (free) speed; update per tick
COMMENT $527C 3
COMMENT $527D 1
COMMENT $527E 9
COMMENT $527F 10 ; phase_spawn_reset -1 == stay unchanged
COMMENT $5280 0; phase_spawn_increase_delay -1 == stay unchanged
COMMENT $5281 5; CANON -1; phase_min_spawn_reset -1 == stay unchanged
COMMENT $5282 1; -1; phase_max_spawn_increase_delay -1 == stay unchanged
COMMENT $5285 spawn types allowed
COMMENT $5286 4 2 up , ec -> bpl than width grow
COMMENT $5287 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $5288 shield minor counter delay; test for dec -> bpl
COMMENT $5289 0 shield minor speed increase
COMMENT $528A INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $528B INITIAL_SHOT_MOVE_DELAY ;0 shot move delay ; test for dec -> bpl
COMMENT $528C 0 shot move strength
COMMENT $528D 1 x move delay ; test for dec -> bpl
COMMENT $528E 1 x move strength
COMMENT $528F 1 x move delay ; test for dec -> bpl
COMMENT $5290 INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $5291 INITIAL_BOMBER_MOVE_DELAY ;1 bomber move delay ; test for dec -> bpl
COMMENT $5292 1 bomber move strength
COMMENT $5293 INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $5294 INITIAL_DRAGON_MOVE_DELAY ;5 dragon inner move delay; test for dec -> bpl
COMMENT $5295 INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $5297 0 angle delay
COMMENT $5298 2 dragonchild (free) speed; update per tick
COMMENT $5299 DEFAULT_MINIMUM_BOMB_RELOAD_DELAY
COMMENT $529A 3
COMMENT $529B INITIAL_BONUS_MOVE_STRENGTH ; 1
COMMENT $529C 9
COMMENT $529D 10 ; phase_spawn_reset -1 == stay unchanged
COMMENT $529E 0; phase_spawn_increase_delay -1 == stay unchanged
COMMENT $529F 5; CANON -1; phase_min_spawn_reset -1 == stay unchanged
COMMENT $52A0 1; -1; phase_max_spawn_increase_delay -1 == stay unchanged
COMMENT $52A3 spawn types allowed
COMMENT $52A4 4 2 up , ec -> bpl than width grow
COMMENT $52A5 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $52A6 shield minor counter delay; test for dec -> bpl
COMMENT $52A7 0 shield minor speed increase
COMMENT $52A8 INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $52A9 INITIAL_SHOT_MOVE_DELAY ;0 shot move delay ; test for dec -> bpl
COMMENT $52AA 0 shot move strength
COMMENT $52AB 1 x move delay ; test for dec -> bpl
COMMENT $52AC 1 x move strength
COMMENT $52AD 1 x move delay ; test for dec -> bpl
COMMENT $52AE INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $52AF INITIAL_BOMBER_MOVE_DELAY ;1 bomber move delay ; test for dec -> bpl
COMMENT $52B0 1 bomber move strength
COMMENT $52B1 INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $52B2 INITIAL_DRAGON_MOVE_DELAY ;5 dragon inner move delay; test for dec -> bpl
COMMENT $52B3 INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $52B5 0 angle delay
COMMENT $52B6 2 dragonchild (free) speed; update per tick
COMMENT $52B7 DEFAULT_MINIMUM_BOMB_RELOAD_DELAY
COMMENT $52B8 3
COMMENT $52B9 INITIAL_BONUS_MOVE_STRENGTH ; 1
COMMENT $52BA 9
COMMENT $52BB 10 ; phase_spawn_reset -1 == stay unchanged
COMMENT $52BC 0; phase_spawn_increase_delay -1 == stay unchanged
COMMENT $52BD 5; CANON -1; phase_min_spawn_reset -1 == stay unchanged
COMMENT $52BE 1; -1; phase_max_spawn_increase_delay -1 == stay unchanged
COMMENT $52C1 spawn types allowed
COMMENT $52C2 4 2 up , ec -> bpl than width grow
COMMENT $52C3 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $52C4 shield minor counter delay; test for dec -> bpl
COMMENT $52C5 0 shield minor speed increase
COMMENT $52C6 INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $52C7 INITIAL_SHOT_MOVE_DELAY ;0 shot move delay ; test for dec -> bpl
COMMENT $52C8 0 shot move strength
COMMENT $52C9 1 x move delay ; test for dec -> bpl
COMMENT $52CA 1 x move strength
COMMENT $52CB 1 x move delay ; test for dec -> bpl
COMMENT $52CC INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $52CD INITIAL_BOMBER_MOVE_DELAY ;1 bomber move delay ; test for dec -> bpl
COMMENT $52CE 1 bomber move strength
COMMENT $52CF INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $52D0 INITIAL_DRAGON_MOVE_DELAY ;5 dragon inner move delay; test for dec -> bpl
COMMENT $52D1 INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $52D3 0 angle delay
COMMENT $52D4 2 dragonchild (free) speed; update per tick
COMMENT $52D5 DEFAULT_MINIMUM_BOMB_RELOAD_DELAY
COMMENT $52D6 3
COMMENT $52D7 INITIAL_BONUS_MOVE_STRENGTH ; 1
COMMENT $52D8 9
COMMENT $52D9 10 ; phase_spawn_reset -1 == stay unchanged
COMMENT $52DA 0; phase_spawn_increase_delay -1 == stay unchanged
COMMENT $52DB 5; CANON -1; phase_min_spawn_reset -1 == stay unchanged
COMMENT $52DC 1; -1; phase_max_spawn_increase_delay -1 == stay unchanged
COMMENT $52DF spawn types allowed
COMMENT $52E0 4 2 up , ec -> bpl than width grow
COMMENT $52E1 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $52E2 shield minor counter delay; test for dec -> bpl
COMMENT $52E3 0 shield minor speed increase
COMMENT $52E4 INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $52E5 INITIAL_SHOT_MOVE_DELAY ;0 shot move delay ; test for dec -> bpl
COMMENT $52E6 INITIAL_SHOT_MOVE_STRENGTH ;0 shot move strength
COMMENT $52E7 INITIAL_X_MOVE_DELAY ;1 x move delay ; test for dec -> bpl
COMMENT $52E8 INITIAL_X_MOVE_STRENGTH ;1 x move strength
COMMENT $52E9 1 x move delay ; test for dec -> bpl
COMMENT $52EA INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $52EB INITIAL_BOMBER_MOVE_DELAY ;1 bomber move delay ; test for dec -> bpl
COMMENT $52EC INITIAL_BOMBER_MOVE_STRENGTH ;1 bomber move strength
COMMENT $52ED INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $52EE INITIAL_DRAGON_MOVE_DELAY ;5 dragon inner move delay; test for dec -> bpl
COMMENT $52EF INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $52F1 0 angle delay
COMMENT $52F2 DRAGON_CHILD_FREE_SPEED ;2 dragonchild (free) speed; update per tick
COMMENT $52F3 DEFAULT_MINIMUM_BOMB_RELOAD_DELAY
COMMENT $52F4 3
COMMENT $52F5 INITIAL_BONUS_MOVE_STRENGTH ; 1
COMMENT $52F6 9
COMMENT $52F7 10 ; phase_spawn_reset -1 == stay unchanged
COMMENT $52F8 0; phase_spawn_increase_delay -1 == stay unchanged
COMMENT $52F9 5; CANON -1; phase_min_spawn_reset -1 == stay unchanged
COMMENT $52FA 1; -1; phase_max_spawn_increase_delay -1 == stay unchanged
COMMENT_LINE $52FD very slow hiddens
COMMENT $52FD spawn types allowed
COMMENT $52FE 4 2 up , ec -> bpl than width grow
COMMENT $52FF 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $5300 shield minor counter delay; test for dec -> bpl
COMMENT $5301 0 shield minor speed increase
COMMENT $5302 INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $5303 INITIAL_SHOT_MOVE_DELAY ;0 shot move delay ; test for dec -> bpl
COMMENT $5304 0 shot move strength
COMMENT $5305 1 x move delay ; test for dec -> bpl
COMMENT $5306 1 x move strength
COMMENT $5307 1 x move delay ; test for dec -> bpl
COMMENT $5308 INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $5309 INITIAL_BOMBER_MOVE_DELAY ;1 bomber move delay ; test for dec -> bpl
COMMENT $530A 1 bomber move strength
COMMENT $530B INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $530C INITIAL_DRAGON_MOVE_DELAY ;5 dragon inner move delay; test for dec -> bpl
COMMENT $530D INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $530F 0 angle delay
COMMENT $5310 2 dragonchild (free) speed; update per tick
COMMENT $5311 DEFAULT_MINIMUM_BOMB_RELOAD_DELAY
COMMENT $5312 3
COMMENT $5313 INITIAL_BONUS_MOVE_STRENGTH ; 1
COMMENT $5314 9
COMMENT $5315 phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $5316 phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $5317 phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $5318 phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT_LINE $531B very slow hiddens
COMMENT $531B spawn types allowed
COMMENT $531C 4 2 up , ec -> bpl than width grow
COMMENT $531D 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $531E shield minor counter delay; test for dec -> bpl
COMMENT $531F 0 shield minor speed increase
COMMENT $5320 INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $5321 INITIAL_SHOT_MOVE_DELAY ;0 shot move delay ; test for dec -> bpl
COMMENT $5322 0 shot move strength
COMMENT $5323 1 x move delay ; test for dec -> bpl
COMMENT $5324 1 x move strength
COMMENT $5325 1 x move delay ; test for dec -> bpl
COMMENT $5326 INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $5327 INITIAL_BOMBER_MOVE_DELAY ;1 bomber move delay ; test for dec -> bpl
COMMENT $5328 1 bomber move strength
COMMENT $5329 INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $532A INITIAL_DRAGON_MOVE_DELAY ;5 dragon inner move delay; test for dec -> bpl
COMMENT $532B INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $532D 0 angle delay
COMMENT $532E 2 dragonchild (free) speed; update per tick
COMMENT $532F DEFAULT_MINIMUM_BOMB_RELOAD_DELAY
COMMENT $5330 3
COMMENT $5331 INITIAL_BONUS_MOVE_STRENGTH ; 1
COMMENT $5332 9
COMMENT $5333 phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $5334 phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $5335 phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $5336 phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT_LINE $5339 very slow hiddens
COMMENT $5339 spawn types allowed
COMMENT $533A 4 2 up , ec -> bpl than width grow
COMMENT $533B 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $533C shield minor counter delay; test for dec -> bpl
COMMENT $533D 0 shield minor speed increase
COMMENT $533E INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $533F INITIAL_SHOT_MOVE_DELAY ;0 shot move delay ; test for dec -> bpl
COMMENT $5340 INITIAL_SHOT_MOVE_STRENGTH ;0 shot move strength
COMMENT $5341 INITIAL_X_MOVE_DELAY ;1 x move delay ; test for dec -> bpl
COMMENT $5342 INITIAL_X_MOVE_STRENGTH ;1 x move strength
COMMENT $5343 1 x move delay ; test for dec -> bpl
COMMENT $5344 INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $5345 INITIAL_BOMBER_MOVE_DELAY ;1 bomber move delay ; test for dec -> bpl
COMMENT $5346 INITIAL_BOMBER_MOVE_STRENGTH ;1 bomber move strength
COMMENT $5347 INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $5348 INITIAL_DRAGON_MOVE_DELAY ;5 dragon inner move delay; test for dec -> bpl
COMMENT $5349 INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $534B 0 angle delay
COMMENT $534C DRAGON_CHILD_FREE_SPEED ;2 dragonchild (free) speed; update per tick
COMMENT $534D DEFAULT_MINIMUM_BOMB_RELOAD_DELAY
COMMENT $534E 3
COMMENT $534F INITIAL_BONUS_MOVE_STRENGTH ; 1
COMMENT $5350 9
COMMENT $5351 phase_spawn_reset -1 == stay unchanged INITIAL_SPAWN_RESET_TIMER
COMMENT $5352 phase_spawn_increase_delay -1 == stay unchanged INITIAL_SPAWN_INCREASE_DELAY
COMMENT $5353 phase_min_spawn_reset -1 == stay unchanged FASTEST_SPAWN_RATE
COMMENT $5354 phase_max_spawn_increase_delay -1 == stay unchanged MAXIMUM_RESET_INCREASE_SLOWDOWN
COMMENT $5357 spawn types allowed
COMMENT $5358 4 2 up , ec -> bpl than width grow
COMMENT $5359 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $535A shield minor counter delay; test for dec -> bpl
COMMENT $535B 0 shield minor speed increase
COMMENT $535C INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $535D INITIAL_SHOT_MOVE_DELAY ;0 shot move delay ; test for dec -> bpl
COMMENT $535E 0 shot move strength
COMMENT $535F 1 x move delay ; test for dec -> bpl
COMMENT $5360 1 x move strength
COMMENT $5361 1 x move delay ; test for dec -> bpl
COMMENT $5362 INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $5363 INITIAL_BOMBER_MOVE_DELAY ;1 bomber move delay ; test for dec -> bpl
COMMENT $5364 1 bomber move strength
COMMENT $5365 INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $5366 INITIAL_DRAGON_MOVE_DELAY ;5 dragon inner move delay; test for dec -> bpl
COMMENT $5367 INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $5369 0 angle delay
COMMENT $536A 2 dragonchild (free) speed; update per tick
COMMENT $536B DEFAULT_MINIMUM_BOMB_RELOAD_DELAY
COMMENT $536C 3
COMMENT $536D INITIAL_BONUS_MOVE_STRENGTH ; 1
COMMENT $536E 9
COMMENT $536F 10 ; phase_spawn_reset -1 == stay unchanged
COMMENT $5370 0; phase_spawn_increase_delay -1 == stay unchanged
COMMENT $5371 5; CANON -1; phase_min_spawn_reset -1 == stay unchanged
COMMENT $5372 1; -1; phase_max_spawn_increase_delay -1 == stay unchanged
COMMENT $5375 spawn types allowed
COMMENT $5376 4 2 up , ec -> bpl than width grow
COMMENT $5377 2 shield major speed ; update every tick, must be in sum greater than minor increase
COMMENT $5378 shield minor counter delay; test for dec -> bpl
COMMENT $5379 0 shield minor speed increase
COMMENT $537A INITIAL_SHIELD_WIDTH_ADDER ; 1 1-4 shield width adder
COMMENT $537B INITIAL_SHOT_MOVE_DELAY ;0 shot move delay ; test for dec -> bpl
COMMENT $537C 0 shot move strength
COMMENT $537D 1 x move delay ; test for dec -> bpl
COMMENT $537E 1 x move strength
COMMENT $537F 1 x move delay ; test for dec -> bpl
COMMENT $5380 INITIAL_HUNTER_MOVE_STRENGTH ;1 hunter move strength
COMMENT $5381 INITIAL_BOMBER_MOVE_DELAY ;1 bomber move delay ; test for dec -> bpl
COMMENT $5382 1 bomber move strength
COMMENT $5383 INITIAL_BOMBER_SHOT_DELAY ; 200 bomber shot delay ; test for dec -> bpl, decreased by 25 every shot down to 50 (50 = 1 s)
COMMENT $5384 INITIAL_DRAGON_MOVE_DELAY ;5 dragon inner move delay; test for dec -> bpl
COMMENT $5385 INITIAL_DRAGON_MOVE_STRENGTH;2 Dragon_angle add ANGLES must be *2 since angles go up to 720
COMMENT $5387 0 angle delay
COMMENT $5388 2 dragonchild (free) speed; update per tick
COMMENT $5389 DEFAULT_MINIMUM_BOMB_RELOAD_DELAY
COMMENT $538A 3
COMMENT $538B INITIAL_BONUS_MOVE_STRENGTH ; 1
COMMENT $538C 9
COMMENT $538D 10 ; phase_spawn_reset -1 == stay unchanged
COMMENT $538E 0; phase_spawn_increase_delay -1 == stay unchanged
COMMENT $538F 5; CANON -1; phase_min_spawn_reset -1 == stay unchanged
COMMENT $5390 1; -1; phase_max_spawn_increase_delay -1 == stay unchanged
COMMENT_LINE $5394 check whether some game factors should change
COMMENT_LINE $5394 speed increase / decrease etc
COMMENT_LINE $5394 the determining factor are the number of enemy "spawns"
COMMENT_LINE $5394 the actual count needed to advance to the next phase is included in the active phase (or 0 - than phase stays forever)
FORCE_SYMBOL $5394 next_phase_at
FORCE_SYMBOL $5399 spawn_count
FORCE_NO_SYMBOL $539E
FORCE_SYMBOL $53A1 spawn_count
FORCE_SYMBOL $53A4 phaseList
FORCE_SYMBOL $53A7 phase_count
FORCE_SYMBOL $53B0 phase_count
FORCE_SYMBOL $53B3 phaseChange_Sound
FORCE_SYMBOL $53B6 play_sfx
COMMENT_LINE $53B9 in u pointer to phase
COMMENT_LINE $53B9 some values of the phase can be = to -1
COMMENT_LINE $53B9 if these are set, the old values are kept
COMMENT_LINE $53B9 like accumulated spawn timer etc
COMMENT_LINE $53B9 these values are = "manually"
COMMENT_LINE $53B9 in the next lines
COMMENT_LINE $53B9 the actual
COMMENT_LINE $53B9 initialize values from the the phase are copied
COMMENT_LINE $53B9 later nonetheless via memmove
COMMENT_LINE $53B9 but not used for further initialization
FORCE_SYMBOL $53B9 currentPhaseData
FORCE_NO_SYMBOL $53BC
FORCE_SYMBOL $53BE shieldMinorIncreaseCounter
FORCE_NO_SYMBOL $53C4
FORCE_SYMBOL $53C8 spawn_reset
FORCE_SYMBOL $53CB spawn_timer
FORCE_NO_SYMBOL $53D1
FORCE_SYMBOL $53D5 spawn_increase_delay
FORCE_NO_SYMBOL $53DB
FORCE_SYMBOL $53DF min_spawn_reset
FORCE_NO_SYMBOL $53E5
FORCE_SYMBOL $53E9 max_spawn_increase_delay
FORCE_SYMBOL $53EE phaseBlockStart
FORCE_SYMBOL $53F1 Move_Mem_a
FORCE_SYMBOL $53F4 INITIAL_HUNTER_MOVE_DELAY
FORCE_SYMBOL $53F6 Hunter_add_delay
FORCE_SYMBOL $53F9 INITIAL_HX_MOVE_STRENGTH
FORCE_SYMBOL $53FB HX_addi
COMMENT_LINE $53FE keep bonus alive on new phase!
FORCE_SYMBOL $53FE bonusActiveType
FORCE_SYMBOL $5403 BONUS_TYPE_FASTER
FORCE_SYMBOL $5407 BONUS_TYPE_EXPAND
FORCE_SYMBOL $540B BONUS_TYPE_SHIELD
COMMENT $540F more with each adder
FORCE_SYMBOL $540F shieldSpeed
COMMENT_LINE $5412 we also enlargen the width adder, otherwise the width would (alltogether) be smaller
COMMENT $5412 more with each adder
FORCE_SYMBOL $5412 shield_width_adder
FORCE_NO_SYMBOL $5417
FORCE_SYMBOL $5419 shieldWidthGrowth
FORCE_SYMBOL $541C shieldSpeed
COMMENT $541F more with each adder
FORCE_SYMBOL $541F shield_width_adder
COMMENT_LINE $5423 ***************************************************************************
COMMENT_LINE $5423 x = in csa score [6 byte] msb first
COMMENT_LINE $5423 u = out bcd [3 byte] msb first
FORCE_NO_SYMBOL $5423
FORCE_SYMBOL $542B tmp_byte
FORCE_SYMBOL $5430 tmp_byte
COMMENT_LINE $5439 ***************************************************************************
COMMENT_LINE $5439 u = in bcd [3 byte] msb first
COMMENT_LINE $5439 x = out csa score [6 byte] msb first
FORCE_NO_SYMBOL $5439
FORCE_NO_SYMBOL $543B
FORCE_NO_SYMBOL $5445
COMMENT_LINE $544D ***************************************************************************
COMMENT_LINE $544D unsigned!
COMMENT_LINE $544D u = in csa score [6 byte] msb first
COMMENT_LINE $544D x = in csa score [6 byte] msb first
COMMENT_LINE $544D return a = $ff if u<x
COMMENT_LINE $544D return a = 1 if u>x
COMMENT_LINE $544D return a = 0 if u=x
COMMENT_LINE $544D flags are = corresponingly
FORCE_NO_SYMBOL $544D
FORCE_NO_SYMBOL $545A
FORCE_NO_SYMBOL $545D
FORCE_NO_SYMBOL $5460
COMMENT_LINE $5463 ***************************************************************************
COMMENT_LINE $5463 unsigned!
COMMENT_LINE $5463 u = in bcd score [3 byte] msb first
COMMENT_LINE $5463 x = in csa score [6 byte] msb first
COMMENT_LINE $5463 return a = $ff if u<x
COMMENT_LINE $5463 return a = 1 if u>x
COMMENT_LINE $5463 return a = 0 if u=x
COMMENT_LINE $5463 flags are = corresponingly
COMMENT_LINE $5463 uses: csa_buf
FORCE_SYMBOL $5465 csa_buf
FORCE_SYMBOL $546A csa_buf
FORCE_SYMBOL $5472 tmp_word
FORCE_NO_SYMBOL $5475
FORCE_NO_SYMBOL $5479
COMMENT_LINE $547C compares the last acchieved score (in player_score - csa 6 msb first)
COMMENT_LINE $547C to all highscore in highScoreTable (5 bcd scores)
COMMENT_LINE $547C if high score is valid, the scores get copied to the correct places
COMMENT_LINE $547C leaves with a = place achieved 0-4
COMMENT_LINE $547C or $ff for no highscore
FORCE_NO_SYMBOL $547C
FORCE_SYMBOL $547E tmp_word
COMMENT $5481 (pointer to last bsd highscore)
FORCE_SYMBOL $5484 player_score
COMMENT_LINE $5491 if not last position, copy this position to one further
FORCE_SYMBOL $5491 tmp_word
FORCE_NO_SYMBOL $5494
COMMENT_LINE $5498 copy score (and name) in table to one position lower
FORCE_NO_SYMBOL $54A0
FORCE_NO_SYMBOL $54A2
FORCE_NO_SYMBOL $54A4
FORCE_NO_SYMBOL $54A6
COMMENT_LINE $54A8 copy my score to this position (and keep the old name)
FORCE_SYMBOL $54A8 player_score
COMMENT_LINE $54AB convert X to bcd
FORCE_SYMBOL $54AD csa_to_bcd
COMMENT $54B2 one score earlier
FORCE_SYMBOL $54B4 tmp_word
COMMENT_LINE $54BB ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $54BB
FORCE_SYMBOL $54BE currentSFX_3
FORCE_SYMBOL $54C1 currentSFX_2
FORCE_SYMBOL $54C4 currentSFX_1
FORCE_SYMBOL $54C7 sfx_pointer_3
FORCE_SYMBOL $54CA sfx_pointer_2
FORCE_SYMBOL $54CD sfx_pointer_1
FORCE_SYMBOL $54D0 sfx_status_1
FORCE_SYMBOL $54D3 sfx_status_3
COMMENT $54D6 no music is playing ->0 (is placed in rottist!
FORCE_SYMBOL $54D6 Vec_Music_Flag
COMMENT $54D9 shadow regs
FORCE_SYMBOL $54D9 Init_Music_Buf
COMMENT $54DC ROM function that does the sound playing, here used to clear all regs
FORCE_SYMBOL $54DC Do_Sound
COMMENT_LINE $54E0 move_to_d
COMMENT_LINE $54E0 MY_MOVE_TO_D_START_NT
COMMENT_LINE $54E0 MY_MOVE_TO_B_END
COMMENT_LINE $54E0 rts
COMMENT_LINE $54E0 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $54E0 in d music address
COMMENT_LINE $54E0 prioratize 1 (supposed for noise)
FORCE_SYMBOL $54E4 sfx_status_1
FORCE_SYMBOL $54E9 play_sfx_1
FORCE_SYMBOL $54EE sfx_status_2
FORCE_SYMBOL $54F3 play_sfx_2
FORCE_SYMBOL $54F8 sfx_status_3
FORCE_SYMBOL $54FD play_sfx_3
FORCE_SYMBOL $5502 play_sfx_1
FORCE_NO_SYMBOL $5505
COMMENT $5507 playing1|\?
FORCE_SYMBOL $5509 play_sfx_2
FORCE_NO_SYMBOL $550C
COMMENT $550E playing2\?
FORCE_SYMBOL $5510 play_sfx_3
COMMENT_LINE $5516 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5516 uses only channels B+C (not A - where the music is playing)
FORCE_SYMBOL $5516 musicOption
FORCE_SYMBOL $551F sfx_status_2
FORCE_SYMBOL $5524 play_sfx_2
FORCE_SYMBOL $5529 sfx_status_3
FORCE_SYMBOL $552E play_sfx_3
FORCE_SYMBOL $5533 play_sfx_2
FORCE_NO_SYMBOL $5536
COMMENT $5538 playing2\?
FORCE_SYMBOL $553A play_sfx_3
COMMENT_LINE $5540 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5540 joytick pot readings are also switched by the (de)muliplexer (analog section)
COMMENT_LINE $5540 with joystick pots the switching is not done in regard of the output (in opposite to "input" switching of integrator logic)
COMMENT_LINE $5540 but with regard to input
COMMENT_LINE $5540 thus, the SEL part of the mux now selects which joystick pot is selected and send to the compare logic.
COMMENT_LINE $5540 mux sel:
COMMENT_LINE $5540 xxxx x00x: port 0 horizontal
COMMENT_LINE $5540 xxxx x01x: port 0 vertical
COMMENT_LINE $5540 xxxx x10x: port 1 horizontal
COMMENT_LINE $5540 xxxx x11x: port 1 vertical
COMMENT_LINE $5540 the result of the pot reading is compared to the
COMMENT_LINE $5540 value present in the dac and according to the comparisson the compare flag of VIA (bit 5 of port b) is set.
COMMENT_LINE $5540 (compare bit is = if contents of dac was "smaller" (signed) than the "pot" read)
COMMENT $5540 mux disabled, mux sel = 01 (vertical pot port 0)
FORCE_NO_SYMBOL $5540
FORCE_SYMBOL $5543 VIA_port_b
COMMENT $5545 mux enabled, mux sel = 01
FORCE_SYMBOL $5545 VIA_port_b
COMMENT $5547 a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
FORCE_SYMBOL $5547 DIGITAL_JOYTICK_LOOP_MIN
COMMENT $5549 ...
COMMENT $554A wait...
COMMENT $554C disable mux
FORCE_SYMBOL $554C VIA_port_b
COMMENT $554E load a with test value (positive y)
FORCE_NO_SYMBOL $554E
COMMENT $5551 test value to DAC
FORCE_SYMBOL $5551 VIA_port_a
COMMENT $5553 default result value y was pushed UP
FORCE_NO_SYMBOL $5553
COMMENT $5555 test comparator
FORCE_SYMBOL $5555 VIA_port_b
COMMENT $5557 if comparator cleared - joystick was moved up
COMMENT $5559 "load" with negative value
FORCE_SYMBOL $5559 VIA_port_a
COMMENT $555B also switch the possible result in A
COMMENT $555C test comparator again
FORCE_SYMBOL $555C VIA_port_b
COMMENT $555E if cleared the joystick was moved down
COMMENT $5560 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $5561 remember the result in "our" joystick data
FORCE_SYMBOL $5561 Vec_Joy_1_Y
COMMENT $5566 if y moved I assume no X move
COMMENT_LINE $5568 now the same for horizontal
COMMENT $5568 mux disabled, mux sel = 00 (horizontal pot port 0)
FORCE_NO_SYMBOL $5568
FORCE_SYMBOL $556B VIA_port_b
COMMENT $556D mux enabled, mux sel = 01
FORCE_SYMBOL $556D VIA_port_b
COMMENT $556F a wait loop 32 times a loop (waiting for the pots to "read" values, and feed to compare logic)
FORCE_SYMBOL $556F DIGITAL_JOYTICK_LOOP_MIN
COMMENT $5571 ...
COMMENT $5572 wait...
COMMENT $5574 disable mux
FORCE_SYMBOL $5574 VIA_port_b
COMMENT $5576 load a with test value (positive x)
FORCE_NO_SYMBOL $5576
COMMENT $5579 test value to DAC
FORCE_SYMBOL $5579 VIA_port_a
COMMENT $557B default result value x was pushed right
FORCE_NO_SYMBOL $557B
COMMENT $557D test comparator
FORCE_SYMBOL $557D VIA_port_b
COMMENT $557F if comparator cleared - joystick was moved right
COMMENT $5581 "load" with negative value
FORCE_SYMBOL $5581 VIA_port_a
COMMENT $5583 also switch the possible result in A
COMMENT $5584 test comparator again
FORCE_SYMBOL $5584 VIA_port_b
COMMENT $5586 if cleared the joystick was moved left
COMMENT $5588 if still not cleared, we clear a as the final vertical test result (no move at all)
COMMENT $5589 remember the result in "our" joystick data
FORCE_SYMBOL $5589 Vec_Joy_1_X
COMMENT_LINE $558F ***************************************************************************
COMMENT_LINE $558F this file is part of Release, written by Malban in 2017
COMMENT_LINE $558F Scroller of text (normal vectrex text format)
COMMENT_LINE $558F using vector chartable
COMMENT_LINE $558F the chars 0,0
COMMENT_LINE $558F (start is allways = end!)
COMMENT_LINE $558F all letters are drawn in "SCROLL_SCALE_FACTOR"
COMMENT_LINE $558F positioning is done in "SCALE_FACTOR_GAME"
COMMENT_LINE $558F two routines,
COMMENT_LINE $558F a) set_up_scrolling() need parameter = to RAM addresses (see function head)
COMMENT_LINE $558F expectes dp = $c8
COMMENT_LINE $558F b) do_one_scroll_step() no parameters
COMMENT_LINE $558F expectes dp = $d0
COMMENT_LINE $558F macros for MOV and DRAW_MODE
COMMENT_LINE $558F can be replaced with BIOS to save more space (althogh slower)
COMMENT_LINE $558F setup uses MACRO DIV
COMMENT_LINE $558F RAM start must be = to SCROLL_RAM_START
COMMENT $C84D start of our ram space ;#isfunction
COMMENT $CA4E this is fix for one scroll, the start of the original text
COMMENT $CA50 this is the current scroller start position in text
COMMENT $CA52 speed of scroll, should be negative
COMMENT $CA53 current y pos of scroll (allways the same) (SCALE_FACTOR_GAME)
COMMENT $CA54 current x pos of first (top left) char in the scrolling display (SCALE_FACTOR_GAME)
COMMENT $CA55 left position, lower than this and a char is "discarded"
COMMENT $CA56 new chars start (more or less) here
COMMENT $CA57 calculated, this is the offset between two chars in the scroller (SCALE_FACTOR_GAME)
COMMENT $CA58 only set once upon every "scroll"
COMMENT $CA59 counte, used to count the currently drawn chars, initiates with NUMBER_OF_SCROLL_LETTERS and is brought to zero
COMMENT $CA5A used as a storage for yx position, and during setup in MUL
COMMENT $CA5C used in setup for DIV
COMMENT_LINE $CA5F clipping
COMMENT $CA65 "round" counter of scroll text -> if 1 (or higher) the scrolltext has been fully shown
COMMENT $CA73 maximum 20 vectors to clip
COMMENT_LINE $558F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $558F scroll subroutines used in the startup screen                             ;
COMMENT_LINE $558F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $558F ***************************************************************************
COMMENT_LINE $558F below are all subroutines for scroll text
COMMENT_LINE $558F scrolling from right to left!
COMMENT_LINE $558F (only two) set_up_scrolling(), do_one_scroll_step()
COMMENT_LINE $558F scroll text ends with $80
COMMENT_LINE $558F this restarts scrolling...
COMMENT_LINE $558F ***************************************************************************
COMMENT_LINE $558F expects text address in X register
COMMENT_LINE $558F scroll_y:                  the y coordinate (signed byte value)
COMMENT_LINE $558F scroll_x_left              (signed byte value)
COMMENT_LINE $558F scroll_x_right             (signed byte value)
COMMENT_LINE $558F scroll_speed               (signed byte value) must be negative
COMMENT_LINE $558F scroll_intensity           (byte value)
COMMENT_LINE $558F NUMBER_OF_SCROLL_LETTERS
COMMENT_LINE $558F uses tmp1, tmp2
COMMENT $558F remember address of first letter
FORCE_SYMBOL $558F scroll_text_address_start
COMMENT $5592 and store it as current address
FORCE_SYMBOL $5592 scroll_text_address_current
COMMENT $5595 how many letters are at most to be displayed at once?
FORCE_SYMBOL $5595 NUMBER_OF_SCROLL_LETTERS
COMMENT $5598 remember that value in tmp1 (16 bit)
FORCE_SYMBOL $5598 tmp1
COMMENT $559B load right boundary
FORCE_SYMBOL $559B scroll_x_right
COMMENT $559E subtract left boundary
FORCE_SYMBOL $559E scroll_x_left
COMMENT $55A1 SEX it, this is the 16 bit width 'in pixel'
COMMENT $55A2 divide it by the number of letters to be displayed
FORCE_SYMBOL $55A2 divide_tmp
FORCE_SYMBOL $55AA divide_tmp
FORCE_NO_SYMBOL $55AD
FORCE_SYMBOL $55B3 divide_tmp
FORCE_SYMBOL $55B6 tmp1
FORCE_SYMBOL $55BB divide_tmp
FORCE_SYMBOL $55C1 divide_tmp
FORCE_SYMBOL $55C4 tmp1
FORCE_SYMBOL $55C9 divide_tmp
COMMENT $55CC remember that as the scroll step...
FORCE_SYMBOL $55CC scroll_step_width
COMMENT $55CF and screen address where last letter will appear
FORCE_SYMBOL $55CF scroll_x_left
COMMENT $55D2 here our first char will be displayed
FORCE_SYMBOL $55D2 scroll_x
FORCE_SYMBOL $55D5 STEP_DELAY
FORCE_SYMBOL $55D7 half_stepCounter
FORCE_SYMBOL $55DA scrollReset
COMMENT $55DD bye bye...
COMMENT_LINE $55DE ***************************************************************************
COMMENT_LINE $55DE does one scroll step of text initialized with the above function
COMMENT_LINE $55DE does also all printing...
COMMENT_LINE $55DE expects dp = to d0
COMMENT_LINE $55DE sets intensity and trashs beam position (as well as everything else...)
COMMENT_LINE $55DE destroys tmp1
COMMENT_LINE $55DE clipped version of scroll routines
COMMENT_LINE $55DE uses hardcoded -128 <-> +127 edges, despite the fact that
COMMENT_LINE $55DE scroll_x_left and scroll_x_right are set
COMMENT_LINE $55DE they are EXPECTED to be = to those values
FORCE_SYMBOL $55DE is_first_letter
COMMENT $55E1 load intensity
FORCE_SYMBOL $55E1 scroll_intensity
FORCE_SYMBOL $55E4 Intensity_a
COMMENT $55E7 setup counter of chars to be displayed
FORCE_SYMBOL $55E7 NUMBER_OF_SCROLL_LETTERS
FORCE_SYMBOL $55E9 counter
COMMENT $55EC get address of current letter
FORCE_SYMBOL $55EC scroll_text_address_current
FORCE_SYMBOL $55F0 use_half_stepCounter
FORCE_SYMBOL $55F5 half_stepCounter
FORCE_SYMBOL $55FA STEP_DELAY
FORCE_SYMBOL $55FC half_stepCounter
COMMENT $55FF 0 = positive, 1 = netgaive
FORCE_SYMBOL $55FF neg_test
COMMENT $5602 load x coordinate
FORCE_SYMBOL $5602 scroll_x
COMMENT $5607 if 1 then negative
FORCE_SYMBOL $5607 neg_test
COMMENT $560A add to scroll speed (x coordinate that is)
FORCE_SYMBOL $560A scroll_speed
FORCE_SYMBOL $560F neg_test
COMMENT $5612 if true than an overflow from negative to positive occured
COMMENT $5614 is on left side out of bounds?
FORCE_SYMBOL $5614 scroll_x_left
COMMENT $5617 if not go on... REALLY get the char
COMMENT $5619 other wise correct x position
FORCE_SYMBOL $5619 scroll_step_width
COMMENT $561C the start of X now should point to the NEXT char, whoch is one "width" away
FORCE_SYMBOL $561C scroll_x
COMMENT $561F and remember it
FORCE_SYMBOL $561F scroll_x
COMMENT $5622 increment char pointer to scrolltext by one
FORCE_NO_SYMBOL $5622
COMMENT $5624 and store it back
FORCE_SYMBOL $5624 scroll_text_address_current
COMMENT_LINE $5628 init new letter here
COMMENT $5628 load the current letter to B
FORCE_NO_SYMBOL $5628
COMMENT $562A compare to $80, end marker
FORCE_NO_SYMBOL $562A
COMMENT $562C if not set, go on
COMMENT $562E otherwise load start address of text
FORCE_SYMBOL $562E scroll_text_address_start
COMMENT $5632 store it as current
FORCE_SYMBOL $5632 scroll_text_address_current
COMMENT_LINE $5636 inc scrollReset
COMMENT $5636 load y, x coordinate
FORCE_SYMBOL $5636 scroll_y
COMMENT $5639 add to B (x coordinate that is)
FORCE_SYMBOL $5639 scroll_speed
COMMENT $563C store the new x position
FORCE_SYMBOL $563C scroll_x
COMMENT $563F this will be our next MOV, the first mov actually moves to
FORCE_SYMBOL $563F tmp1
COMMENT_LINE $5642 start position of scroller, all subsequent moves only to the "width" of one scroll char!
COMMENT $5644 load y, x coordinate
FORCE_SYMBOL $5644 scroll_y
COMMENT $5647 this will be our next MOV, the first mov actually moves to
FORCE_SYMBOL $5647 tmp1
COMMENT $564A and load the first letter of the text to B (and inc y)
COMMENT $564C compare to $80, end marker
FORCE_NO_SYMBOL $564C
COMMENT $564E if not set, go on
FORCE_SYMBOL $5650 scrollReset
COMMENT $5653 otherwise load start address of text
FORCE_SYMBOL $5653 scroll_text_address_start
COMMENT $5657 and load the first letter of the text to B
COMMENT_LINE $5659 here we certainly have a correct 'letter'- value in B register
COMMENT $5659 really correct? isn't it a SPACE
COMMENT $565B no? than go on...
COMMENT $565D otherwise zero everything, pointer to vector list
FORCE_SYMBOL $565D ABC_28
COMMENT $5660 go on
COMMENT $5662 is it even a 'fullstop'
COMMENT $5664 if not... go on
COMMENT $5666 if it is load vectorlist addres to X
FORCE_SYMBOL $5666 ABC_26
COMMENT $5669 and go on
COMMENT_LINE $566B small letter "blink" in the scrolltext!
COMMENT $566B is it even a 'fullstop'
COMMENT $566D if not... go on
COMMENT $566F if it is load vectorlist addres to X
FORCE_SYMBOL $566F ABC_29
COMMENT $5672 and go on
FORCE_NO_SYMBOL $5674
FORCE_SYMBOL $5676 scrollIntensity
FORCE_SYMBOL $567F scrollBlink
FORCE_SYMBOL $5682 scrollIntensity
COMMENT_LINE $5685 now it should be a 'real' letter (CAPITAL!!!)
COMMENT_LINE $5685 lets calculate the abc-table offset...
COMMENT $5685 subtract smallest letter, so A has 0 offset
COMMENT $5687 multiply by two, since addresses are 16 bit
FORCE_SYMBOL $5688 _abc
COMMENT $568B load the letters address from the table
COMMENT $568D draw each letter with a move from zero, more stable
FORCE_NO_SYMBOL $568D
COMMENT $568F /BLANK low and /ZERO low
FORCE_SYMBOL $568F VIA_cntl
COMMENT $5691 everything we do with "positioning" is scale SCALE_FACTOR_GAME
COMMENT $5691 scale for placing first point
FORCE_SYMBOL $5691 SCALE_FACTOR_GAME
COMMENT $5693 move to time 1 lo, this means scaling
FORCE_SYMBOL $5693 VIA_t1_cnt_lo
FORCE_SYMBOL $5695 mov_x
FORCE_SYMBOL $569A scroll_step_width
FORCE_SYMBOL $569D mov_x
FORCE_SYMBOL $56A4 counter
FORCE_NO_SYMBOL $56A7
COMMENT $56AB +127
FORCE_SYMBOL $56AB scroll_x_right
COMMENT $56AE - 124 (e.g.) = -4
FORCE_SYMBOL $56AE mov_x
COMMENT $56B1 scale of letter is 64
FORCE_NO_SYMBOL $56B1
COMMENT $56B8 times 8
FORCE_SYMBOL $56BB clip_vlp_p2_right
FORCE_SYMBOL $56C0 is_first_letter
COMMENT_LINE $56C5 in X is the current pointer to the to be drawn char
COMMENT_LINE $56C5 check position, if very left, than I can  do a clipping
COMMENT_LINE $56C5 HARDCODE left most here!
COMMENT $56C5 -128
FORCE_SYMBOL $56C5 scroll_x_left
COMMENT $56C8 - -124 (e.g.) = -4
FORCE_SYMBOL $56C8 scroll_x
COMMENT_LINE $56CC scale of positioning is $60
COMMENT_LINE $56CC strength of positioning is max $ff (-128 <-> +127
COMMENT_LINE $56CC -> max pos in dec = +-12192 "pixel"
COMMENT_LINE $56CC scrolling is done by 1 Strength
COMMENT_LINE $56CC that means the minimum movement is 96 pixel per step
COMMENT_LINE $56CC 15 letter maximum
COMMENT_LINE $56CC each letter takes up 812 "pixel"
COMMENT_LINE $56CC the scroll step per letter per "pixel" is thus "8" (812 / 96)
COMMENT_LINE $56CC thus we must calculate 8 different "clipping" positions per letter.
COMMENT_LINE $56CC strength of letter is max $40
COMMENT_LINE $56CC thus $40/8 = 64/8 = 8
COMMENT_LINE $56CC we habe one clipping position each 8 pixels in each letter
COMMENT $56CC scale of letter is 64
FORCE_NO_SYMBOL $56CC
FORCE_NO_SYMBOL $56D1
COMMENT $56D6 times 8
FORCE_SYMBOL $56D9 clip_vlp_p2_left
FORCE_SYMBOL $56DE is_first_letter
COMMENT $56E1 the current move vector
FORCE_SYMBOL $56E1 tmp1
FORCE_SYMBOL $56E4 VIA_port_a
COMMENT $56E6 Blank low, zero high?
FORCE_NO_SYMBOL $56E6
FORCE_SYMBOL $56E8 VIA_cntl
COMMENT $56EB Enable mux
FORCE_SYMBOL $56EB VIA_port_b
COMMENT $56ED Clear shift regigster
FORCE_SYMBOL $56ED VIA_shift_reg
COMMENT $56EF Disable mux
FORCE_SYMBOL $56EF VIA_port_b
COMMENT $56F1 Store X in D/A register
FORCE_SYMBOL $56F1 VIA_port_a
COMMENT $56F3 enable timer
FORCE_SYMBOL $56F3 VIA_t1_cnt_hi
COMMENT $56F5 and width of one scroll "char"
FORCE_SYMBOL $56F5 scroll_step_width
COMMENT $56F8 anything but zero indicates another letter must be drawn
FORCE_SYMBOL $56F8 do_another_letter
FORCE_SYMBOL $56FB mov_x
FORCE_SYMBOL $56FE mov_x
FORCE_SYMBOL $5703 do_another_letter
COMMENT $5706 store to temp
FORCE_SYMBOL $5706 mov_x
COMMENT $5709 are we done yet?
FORCE_SYMBOL $5709 counter
FORCE_SYMBOL $570E do_another_letter
COMMENT $5711 (SCROLL_SCALE_FACTOR) ; drawing of letters is done in SCROLL_SCALE_FACTOR
COMMENT $5711 scale for placing first point
FORCE_NO_SYMBOL $5711
COMMENT $5713 move to time 1 lo, this means scaling
FORCE_SYMBOL $5713 VIA_t1_cnt_lo
FORCE_SYMBOL $5715 scrollIntensity
FORCE_NO_SYMBOL $5718
FORCE_SYMBOL $571A VIA_int_flags
COMMENT $571E Store intensity in D/A
FORCE_SYMBOL $571E VIA_port_a
COMMENT $5720 mux disabled channel 2
FORCE_NO_SYMBOL $5720
FORCE_SYMBOL $5723 VIA_port_b
COMMENT $5725 mux enabled channel 2
FORCE_SYMBOL $5725 VIA_port_b
COMMENT $5727 turn off mux
FORCE_SYMBOL $5727 VIA_port_b
FORCE_SYMBOL $5729 myDraw_VL_mode3
FORCE_SYMBOL $572C do_another_letter
COMMENT $5734 ok, that was our scroll step :-)
COMMENT_LINE $5735 this file is part of Release, written by Malban in 2017
COMMENT_LINE $5735 all letters start at the bottom left
COMMENT_LINE $5735 hight of font is 8
COMMENT_LINE $5735 width is 4
COMMENT_LINE $5735 if commented out lines are used, the draw "returns" to its starting point
COMMENT_LINE $5735 the definition is conform to the clipping used - meaning
COMMENT_LINE $5735 each letter is divideable by a power of two
COMMENT_LINE $5735 in this case even all letters are dividable by "8" (see BLOW_UP)
COMMENT $5735 A list of all single vectorlists in this
COMMENT $5737 B
COMMENT $5739 C
COMMENT $573B D
COMMENT $573D E
COMMENT $573F F
COMMENT $5741 G
COMMENT $5743 H
COMMENT $5745 I
COMMENT $5747 J
COMMENT $5749 K
COMMENT $574B L
COMMENT $574D M
COMMENT $574F N
COMMENT $5751 O
COMMENT $5753 P
COMMENT $5755 Q
COMMENT $5757 R
COMMENT $5759 S
COMMENT $575B T
COMMENT $575D U
COMMENT $575F V
COMMENT $5761 W
COMMENT $5763 X
COMMENT $5765 Y
COMMENT $5767 Z
COMMENT $5769 dot
COMMENT $576B space
COMMENT $576D ! - only used in greetings for VectrexMad! :-)
COMMENT $576F mode, y, x
COMMENT $5772 mode, y, x
COMMENT $5775 mode, y, x
COMMENT $5778 mode, y, x
COMMENT $577B mode, y, x
COMMENT $577E mode, y, x
COMMENT_LINE $5781 DB $00, +$00*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $5781 endmarker (1)
COMMENT $5782 mode, y, x
COMMENT $5785 mode, y, x
COMMENT $5788 mode, y, x
COMMENT $578B mode, y, x
COMMENT $578E mode, y, x
COMMENT $5791 mode, y, x
COMMENT $5794 endmarker (1)
COMMENT $5795 mode, y, x
COMMENT $5798 mode, y, x
COMMENT $579B mode, y, x
COMMENT $579E mode, y, x
COMMENT $57A1 mode, y, x
COMMENT $57A4 mode, y, x
COMMENT $57A7 mode, y, x
COMMENT $57AA mode, y, x
COMMENT_LINE $57AD DB $00, -$02*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $57AD endmarker (1)
COMMENT $57AE mode, y, x
COMMENT $57B1 mode, y, x
COMMENT $57B4 mode, y, x
COMMENT $57B7 mode, y, x
COMMENT $57BA mode, y, x
COMMENT $57BD mode, y, x
COMMENT $57C0 endmarker (1)
COMMENT $57C1 mode, y, x
COMMENT $57C4 mode, y, x
COMMENT $57C7 mode, y, x
COMMENT $57CA mode, y, x
COMMENT $57CD mode, y, x
COMMENT $57D0 mode, y, x
COMMENT $57D3 mode, y, x
COMMENT_LINE $57D6 DB $00, -$08*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $57D6 endmarker (1)
COMMENT $57D7 mode, y, x
COMMENT $57DA mode, y, x
COMMENT $57DD mode, y, x
COMMENT $57E0 mode, y, x
COMMENT $57E3 mode, y, x
COMMENT_LINE $57E6 DB $00, -$08*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $57E6 endmarker (1)
COMMENT $57E7 mode, y, x
COMMENT $57EA mode, y, x
COMMENT $57ED mode, y, x
COMMENT $57F0 mode, y, x
COMMENT $57F3 mode, y, x
COMMENT $57F6 mode, y, x
COMMENT $57F9 mode, y, x
COMMENT $57FC mode, y, x
COMMENT_LINE $57FF DB $00, -$04*BLOW_UP, -$02*BLOW_UP ; mode, y, x
COMMENT $57FF endmarker (1)
COMMENT $5800 mode, y, x
COMMENT $5803 mode, y, x
COMMENT $5806 mode, y, x
COMMENT $5809 mode, y, x
COMMENT $580C mode, y, x
COMMENT_LINE $580F DB $00, +$00*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $580F endmarker (1)
COMMENT $5810 mode, y, x
COMMENT $5813 mode, y, x
COMMENT $5816 mode, y, x
COMMENT $5819 mode, y, x
COMMENT $581C mode, y, x
COMMENT_LINE $581F DB $00, -$08*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $581F endmarker (1)
COMMENT $5820 mode, y, x
COMMENT $5823 mode, y, x
COMMENT $5826 mode, y, x
COMMENT $5829 mode, y, x
COMMENT $582C mode, y, x
COMMENT_LINE $582F DB $00, -$08*BLOW_UP, +$00*BLOW_UP ; mode, y, x
COMMENT $582F endmarker (1)
COMMENT $5830 mode, y, x
COMMENT $5833 mode, y, x
COMMENT $5836 mode, y, x
COMMENT $5839 mode, y, x
COMMENT $583C mode, y, x
COMMENT_LINE $583F DB $00, +$00*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $583F endmarker (1)
COMMENT $5840 mode, y, x
COMMENT $5843 mode, y, x
COMMENT $5846 mode, y, x
COMMENT_LINE $5849 DB $00, +$00*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $5849 endmarker (1)
COMMENT $584A mode, y, x
COMMENT $584D mode, y, x
COMMENT $5850 mode, y, x
COMMENT $5853 mode, y, x
COMMENT_LINE $5856 DB $00, +$00*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $5856 endmarker (1)
COMMENT $5857 mode, y, x
COMMENT $585A mode, y, x
COMMENT $585D mode, y, x
COMMENT_LINE $5860 DB $00, -$08*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $5860 endmarker (1)
COMMENT $5861 mode, y, x
COMMENT $5864 mode, y, x
COMMENT $5867 mode, y, x
COMMENT $586A mode, y, x
COMMENT $586D mode, y, x
COMMENT $5870 mode, y, x
COMMENT $5873 mode, y, x
COMMENT_LINE $5876 DB $00, +$00*BLOW_UP, -$02*BLOW_UP ; mode, y, x
COMMENT $5876 endmarker (1)
COMMENT $5877 mode, y, x
COMMENT $587A mode, y, x
COMMENT $587D mode, y, x
COMMENT $5880 mode, y, x
COMMENT_LINE $5883 DB $00, -$04*BLOW_UP, +$00*BLOW_UP ; mode, y, x
COMMENT $5883 endmarker (1)
COMMENT $5884 mode, y, x
COMMENT $5887 mode, y, x
COMMENT $588A mode, y, x
COMMENT $588D mode, y, x
COMMENT $5890 mode, y, x
COMMENT $5893 mode, y, x
COMMENT $5896 mode, y, x
COMMENT $5899 mode, y, x
COMMENT $589C mode, y, x
COMMENT $589F mode, y, x
COMMENT $58A2 endmarker (1)
COMMENT $58A3 mode, y, x
COMMENT $58A6 mode, y, x
COMMENT $58A9 mode, y, x
COMMENT $58AC mode, y, x
COMMENT $58AF mode, y, x
COMMENT $58B2 mode, y, x
COMMENT $58B5 mode, y, x
COMMENT_LINE $58B8 DB $00, +$00*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $58B8 endmarker (1)
COMMENT $58B9 mode, y, x
COMMENT $58BC mode, y, x
COMMENT $58BF mode, y, x
COMMENT $58C2 mode, y, x
COMMENT $58C5 mode, y, x
COMMENT $58C8 mode, y, x
COMMENT $58CB mode, y, x
COMMENT $58CE mode, y, x
COMMENT $58D1 mode, y, x
COMMENT_LINE $58D4 DB $00, -$02*BLOW_UP, +$00*BLOW_UP ; mode, y, x
COMMENT $58D4 endmarker (1)
COMMENT $58D5 mode, y, x
COMMENT $58D8 mode, y, x
COMMENT $58DB mode, y, x
COMMENT $58DE mode, y, x
COMMENT_LINE $58E1 DB $00, -$08*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $58E1 endmarker (1)
COMMENT $58E2 mode, y, x
COMMENT $58E5 mode, y, x
COMMENT $58E8 mode, y, x
COMMENT $58EB mode, y, x
COMMENT_LINE $58EE DB $00, -$08*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $58EE endmarker (1)
COMMENT $58EF mode, y, x
COMMENT $58F2 mode, y, x
COMMENT $58F5 mode, y, x
COMMENT_LINE $58F8 DB $00, -$08*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $58F8 endmarker (1)
COMMENT $58F9 mode, y, x
COMMENT $58FC mode, y, x
COMMENT $58FF mode, y, x
COMMENT $5902 mode, y, x
COMMENT $5905 mode, y, x
COMMENT_LINE $5908 DB $00, -$08*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $5908 endmarker (1)
COMMENT $5909 mode, y, x
COMMENT $590C mode, y, x
COMMENT $590F mode, y, x
COMMENT_LINE $5912 DB $00, +$00*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $5912 endmarker (1)
COMMENT $5913 mode, y, x
COMMENT $5916 mode, y, x
COMMENT $5919 mode, y, x
COMMENT $591C mode, y, x
COMMENT $591F mode, y, x
COMMENT_LINE $5922 DB $00, +$00*BLOW_UP, -$02*BLOW_UP ; mode, y, x
COMMENT $5922 endmarker (1)
COMMENT $5923 mode, y, x
COMMENT $5926 mode, y, x
COMMENT $5929 mode, y, x
COMMENT $592C mode, y, x
COMMENT_LINE $592F DB $00, +$00*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $592F endmarker (1)
COMMENT $5930 mode, y, x
COMMENT $5933 mode, y, x
COMMENT $5936 mode, y, x
COMMENT $5939 mode, y, x
COMMENT $593C endmarker (1)
COMMENT_LINE $593D DB $00, +$00*BLOW_UP, +$00*BLOW_UP ; mode, y, x
COMMENT_LINE $593D DB $00, +$00*BLOW_UP, -$04*BLOW_UP ; mode, y, x
COMMENT $593D endmarker (1)
COMMENT $593E mode, y, x
COMMENT $5941 mode, y, x
COMMENT $5944 mode, y, x
COMMENT $5947 mode, y, x
COMMENT $594A mode, y, x
COMMENT $594D mode, y, x
COMMENT $5950 mode, y, x
COMMENT $5953 mode, y, x
COMMENT $5956 mode, y, x
COMMENT $5959 endmarker (1)
COMMENT_LINE $595A this file is part of Release, written by Malban in 2017
COMMENT_LINE $595A originaly programmed and released in 1998
COMMENT_LINE $595A documentation see original release
COMMENT_LINE $595A this version contains 2 bugfixes which I can't remember
COMMENT_LINE $595A the bugs were introduced by translating the Vectrex C version to ASM way back in 1998
COMMENT_LINE $595A ***************************************************************************
COMMENT $0000 done
COMMENT_LINE $0000 ***************************************************************************
COMMENT $0000 this divides d by 64
COMMENT $0000 result in A
COMMENT $0000 done
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 entry:   D has clip_counter
COMMENT_LINE $0000 clip_test is set
COMMENT_LINE $0000 v0 is set
COMMENT_LINE $0000 result: v1 = y1, x1
COMMENT_LINE $0000 v2 = y2, x2
COMMENT_LINE $0000 get calculated
COMMENT_LINE $0000 this one assumes X0 is either 64, 32 or 16
COMMENT_LINE $0000 divide is pretty fast than...
COMMENT_LINE $0000 first setup x1 and x2 according to clipping
COMMENT_LINE $0000 information
COMMENT $0000 part of vector that is visible (or vice versa)
COMMENT $0000 part of vector that is invisible (or vice versa)
COMMENT_LINE $0000 now we have to calculate the Y part of the two
COMMENT_LINE $0000 halves
COMMENT_LINE $0000 Y1/X1 and Y2/X2 should be like Y0/X0
COMMENT_LINE $0000 X0 = original length
COMMENT_LINE $0000 than Y1 = Y0*X1/X0
COMMENT_LINE $0000 than Y2 = Y0*X2/X0
COMMENT_LINE $0000 but we know that Y1 + Y2 = Y0
COMMENT_LINE $0000 -> Y2 = Y0 - Y1
COMMENT_LINE $0000 div cycles depend on size of tmp1
COMMENT_LINE $0000 the bigger tmp1 the faster div
COMMENT_LINE $0000 we do div and mul unsigned
COMMENT_LINE $0000 so check for signness here
COMMENT_LINE $0000 and adjust later
COMMENT $0000 this divides d by 64
COMMENT $0000 result in A
COMMENT $0000 store y1
COMMENT $0000 -y1 + y0 = y0 - y1 = y2
COMMENT $0000 store y2
COMMENT $0000 store y1
COMMENT $0000 -y1 + y0 = y0 - y1 = y2
COMMENT $0000 store y2
COMMENT_LINE $0000 performance depends on the length of processed list
COMMENT_LINE $0000 ~ about 180 cycles per vector of vectorlist
COMMENT_LINE $0000 input, D is a 16bit X position (BORDER) within the vectorlist
COMMENT_LINE $0000 vectorlist is supposed to start at the left most point
COMMENT_LINE $0000 left most point within vectorlist is point 0
COMMENT_LINE $0000 coordinates "grow" to positive with going further right
COMMENT_LINE $0000 every coordinate greater X position is visible
COMMENT_LINE $0000 every lower is invisible
COMMENT_LINE $0000 X values of coordinates are summurized in clip_counter (starts with 0)
COMMENT_LINE $0000 so the relative coordinates are added to a 16 bit compare value against BORDER
COMMENT_LINE $0000 clip_vlp_p2_right clips the right side of the BORDER
COMMENT_LINE $0000 clip_vlp_p2_left clips the left side of the BORDER
COMMENT_LINE $0000 Example:
COMMENT_LINE $0000 ldx #2
COMMENT_LINE $0000 ldx #vlist
COMMENT_LINE $0000 JSR clip_vlp_p2_right
COMMENT_LINE $0000 assuming vlist point zero is in the most of the vectorlist, than everything
COMMENT_LINE $0000 left of point 2 (positive) is displayed
COMMENT_LINE $0000 Example:
COMMENT_LINE $0000 ldx #2
COMMENT_LINE $0000 ldx #vlist
COMMENT_LINE $0000 JSR clip_vlp_p2_left
COMMENT_LINE $0000 assuming vlist point zero is in the left most of the vectorlist, than everything
COMMENT_LINE $0000 right of point 2 (positive) is displayed
COMMENT_LINE $0000 assumes modified pattern list input
COMMENT_LINE $0000 0 = move
COMMENT_LINE $0000 high bit = = draw
COMMENT_LINE $0000 not 0 and not hightbit = = end
COMMENT_LINE $0000 !!!!!
COMMENT_LINE $0000 vectorlists must consist of vectors coordinates 0, 16, 32, 64
COMMENT_LINE $0000 in order to do a performant DIV
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 D = clipping place (in scale of added strengths of vector X positions)
COMMENT_LINE $0000 X = Vector list
COMMENT_LINE $0000 returns new vector list pointer in X
COMMENT_LINE $0000 result list has following format
COMMENT_LINE $0000 DB pattern, y, x
COMMENT_LINE $0000 DB pattern, y, x
COMMENT_LINE $0000 DB ... (till counter is 1)
COMMENT_LINE $0000 result in DrawVLp type Vector list
COMMENT_LINE $0000 clip vectors EXACTLY!
COMMENT_LINE $0000 note:
COMMENT_LINE $0000 Due to DIVs and MULs, this function does take some time
COMMENT_LINE $0000 maybe a few thousand cycles for LARGE VLISTs.
COMMENT_LINE $0000 Therefor do zeroing + positioning AFTER calling this functions
COMMENT_LINE $0000 otherwise vectrex beam drifts away a bit!
COMMENT_LINE $0000 Noticeable on a real vectrex or in DVE when Drift is
COMMENT_LINE $0000 = to something different than 0 (in *.ini)
COMMENT_LINE $0000 note:
COMMENT_LINE $0000 Expects now VLists, that have X vector strength of 16, 32, or 64
COMMENT_LINE $0000 Gabage will produced else...
COMMENT $595A but here the code still uses c8
FORCE_SYMBOL $595A firstVector
COMMENT $595D default pattern is 0, invisible
FORCE_SYMBOL $595D clip_pattern
COMMENT $5960 remember clipping edge
FORCE_SYMBOL $5960 BORDER
FORCE_NO_SYMBOL $5963
COMMENT $5967 address of result list
FORCE_SYMBOL $5967 clipped_vector_list
FORCE_NO_SYMBOL $596A
COMMENT $596D clip starts at 0
FORCE_SYMBOL $596D clip_counter
COMMENT_LINE $5970 we add to this each strength
COMMENT_LINE $5970 of a vector
FORCE_NO_SYMBOL $5970
COMMENT $5974 when first vector will be invisible
COMMENT $5976 default pattern is 0, invisible
FORCE_SYMBOL $5976 clip_pattern
COMMENT $5979 compare current 'place'
FORCE_SYMBOL $5979 clip_counter
COMMENT $597C with clipping edge
FORCE_SYMBOL $597C BORDER
COMMENT $5980 if higher... the start of this
COMMENT_LINE $5982 current vector is visible -> branch
FORCE_SYMBOL $5982 clip_counter
COMMENT_LINE $5986 otherwise the start was not visible
FORCE_NO_SYMBOL $5986
COMMENT $5988 get current Vector strength
COMMENT $598A remember it as v0
FORCE_SYMBOL $598A v0
COMMENT $598D extend it X part
COMMENT $598E and adjust clip_counter
FORCE_SYMBOL $598E clip_counter
COMMENT $5991 store it
FORCE_SYMBOL $5991 clip_counter
COMMENT_LINE $5994 clip counter has vector
COMMENT_LINE $5994 'position' at the end
COMMENT_LINE $5994 of current vector
COMMENT $5994 test for clipping edge
FORCE_SYMBOL $5994 BORDER
COMMENT $5998 str_pat_and_scale_vlp
COMMENT_LINE $599A startpoint is visible by coordinates
COMMENT $599C str_pat_and_scale_vlp_nv
COMMENT $59A0 make_two_pieces_invisible_vlp ; one invisible the other visible? -> branch
COMMENT $59A6 pattern is 0
COMMENT $59A8 load current Vector
FORCE_SYMBOL $59A8 v0
COMMENT $59AB store it also
FORCE_SYMBOL $59AD firstVector
COMMENT $59B2 pattern = 1 ends VList
FORCE_NO_SYMBOL $59B2
COMMENT $59B4 store it
FORCE_NO_SYMBOL $59B4
COMMENT $59B6 load X with correct VLp
FORCE_SYMBOL $59B6 clipped_vector_list
COMMENT $59B9 reset dp to d0
FORCE_NO_SYMBOL $59B9
COMMENT $59BD but here the code still uses c8
COMMENT $59BD return
COMMENT $59BE pattern is 0
COMMENT $59C0 load current Vector
FORCE_SYMBOL $59C0 v0
COMMENT $59C3 store it also
FORCE_SYMBOL $59C5 firstVector
FORCE_SYMBOL $59C8 clip_counter
FORCE_NO_SYMBOL $59CC
COMMENT $59CE get current Vector
COMMENT $59D0 remember it as v0
FORCE_SYMBOL $59D0 v0
COMMENT $59D3 extend it x0 part
COMMENT $59D4 and adjuct clip_counter
FORCE_SYMBOL $59D4 clip_counter
COMMENT $59D7 store it
FORCE_SYMBOL $59D7 clip_counter
COMMENT_LINE $59DA clip counter has vector
COMMENT_LINE $59DA 'position' at the end
COMMENT_LINE $59DA of current vector
COMMENT $59DC str_pat_and_scale_vlp_nt
COMMENT $59E0 test for clipping edge
FORCE_SYMBOL $59E0 BORDER
COMMENT $59E4 make_two_pieces_visible_vlp ; if the whole is visible -> branch
COMMENT $59E6 use full pattern
FORCE_NO_SYMBOL $59E6
COMMENT $59E8 store in vlist
COMMENT $59EA load current Vector
FORCE_SYMBOL $59EA v0
COMMENT $59ED store it also
FORCE_SYMBOL $59EF firstVector
COMMENT $59F2 no? -> branch
FORCE_SYMBOL $59F4 firstVector
FORCE_SYMBOL $59F9 clip_pattern
FORCE_SYMBOL $59FC BORDER
COMMENT_LINE $5A04 NEW
COMMENT_LINE $5A04 check if invisible was due to a move
COMMENT_LINE $5A04 and the current vector might be displayed COMPLETELY
FORCE_SYMBOL $5A04 BORDER
COMMENT_LINE $5A0A NEW END
COMMENT_LINE $5A0C HELP_CALC_P2 ; leaves with v1 and v2 calculated
COMMENT $5A0C get pattern
FORCE_SYMBOL $5A0C clip_pattern
COMMENT $5A0F store it
COMMENT $5A11 build vector from X1 and Y1
FORCE_SYMBOL $5A11 v1
COMMENT $5A14 store it to list
COMMENT $5A16 get pattern and
FORCE_SYMBOL $5A16 clip_pattern
COMMENT $5A19 reverse it
COMMENT $5A1A store it
COMMENT $5A1C build vector from X2 and Y2
FORCE_SYMBOL $5A1C v2
COMMENT $5A1F store it to list
FORCE_SYMBOL $5A21 firstVector
COMMENT $5A24 do next
FORCE_SYMBOL $5A24 do_next_vector_vlp
COMMENT_LINE $5A27 NEW
FORCE_SYMBOL $5A27 clip_pattern
COMMENT $5A2A get pattern and
FORCE_SYMBOL $5A2A clip_pattern
COMMENT $5A2D store it
COMMENT $5A2F build vector from X2 and Y2
FORCE_SYMBOL $5A2F v0
COMMENT $5A32 store it to list
FORCE_SYMBOL $5A34 firstVector
COMMENT $5A37 do next !!! (rather to was visible?
FORCE_SYMBOL $5A37 do_next_vector_vlp
COMMENT_LINE $5A3A NEW END
COMMENT_LINE $5A3A first setup x1 and x2 according to clipping
COMMENT_LINE $5A3A information
FORCE_SYMBOL $5A3A BORDER
COMMENT $5A3D part of vector that is visible (or vice versa)
FORCE_SYMBOL $5A3D x2
FORCE_SYMBOL $5A40 x0
COMMENT $5A44 part of vector that is invisible (or vice versa)
FORCE_SYMBOL $5A44 x1
COMMENT_LINE $5A47 now we have to calculate the Y part of the two
COMMENT_LINE $5A47 halves
COMMENT_LINE $5A47 Y1/X1 and Y2/X2 should be like Y0/X0
COMMENT_LINE $5A47 X0 = original length
COMMENT_LINE $5A47 than Y1 = Y0*X1/X0
COMMENT_LINE $5A47 than Y2 = Y0*X2/X0
COMMENT_LINE $5A47 but we know that Y1 + Y2 = Y0
COMMENT_LINE $5A47 -> Y2 = Y0 - Y1
COMMENT_LINE $5A47 div cycles depend on size of tmp1
COMMENT_LINE $5A47 the bigger tmp1 the faster div
COMMENT_LINE $5A47 we do div and mul unsigned
COMMENT_LINE $5A47 so check for signness here
COMMENT_LINE $5A47 and adjust later
FORCE_SYMBOL $5A48 neggi
FORCE_SYMBOL $5A4B x0
FORCE_SYMBOL $5A50 neggi
FORCE_NO_SYMBOL $5A54
FORCE_NO_SYMBOL $5A58
FORCE_NO_SYMBOL $5A5C
FORCE_NO_SYMBOL $5A60
FORCE_SYMBOL $5A64 y0
FORCE_SYMBOL $5A69 neggi
FORCE_SYMBOL $5A6D x1
FORCE_SYMBOL $5A72 neggi
COMMENT $5A77 this divides d by 64
COMMENT $5A78 result in A
FORCE_SYMBOL $5A7B neggi
COMMENT $5A81 store y1
FORCE_SYMBOL $5A81 y1
COMMENT $5A84 -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $5A85 y0
COMMENT $5A88 store y2
FORCE_SYMBOL $5A88 y2
FORCE_SYMBOL $5A8D y0
FORCE_SYMBOL $5A92 neggi
FORCE_SYMBOL $5A96 x1
FORCE_SYMBOL $5A9B neggi
FORCE_SYMBOL $5AA2 y0
FORCE_SYMBOL $5AA7 neggi
FORCE_SYMBOL $5AAB x1
FORCE_SYMBOL $5AB0 neggi
FORCE_SYMBOL $5AB7 y0
FORCE_SYMBOL $5ABC neggi
FORCE_SYMBOL $5AC0 x1
FORCE_SYMBOL $5AC5 neggi
FORCE_SYMBOL $5ACC y0
FORCE_SYMBOL $5AD1 neggi
FORCE_SYMBOL $5AD5 x1
FORCE_SYMBOL $5ADA neggi
FORCE_SYMBOL $5AE9 neggi
COMMENT $5AEF store y1
FORCE_SYMBOL $5AEF y1
COMMENT $5AF2 -y1 + y0 = y0 - y1 = y2
FORCE_SYMBOL $5AF3 y0
COMMENT $5AF6 store y2
FORCE_SYMBOL $5AF6 y2
COMMENT_LINE $5AFA ***************************************************************************
COMMENT_LINE $5AFA D = clipping place (in scale of added strengths of vector X positions)
COMMENT_LINE $5AFA X = Vector list
COMMENT_LINE $5AFA returns new vector list pointer in X
COMMENT_LINE $5AFA result list has following format
COMMENT_LINE $5AFA DB pattern, y, x
COMMENT_LINE $5AFA DB pattern, y, x
COMMENT_LINE $5AFA DB ... (till counter is 1)
COMMENT_LINE $5AFA result in DrawVLp type Vector list
COMMENT_LINE $5AFA clip vectors EXACTLY!
COMMENT_LINE $5AFA note:
COMMENT_LINE $5AFA Due to DIVs and MULs, this function does take some time
COMMENT_LINE $5AFA maybe a few thousand cycles for LARGE VLISTs.
COMMENT_LINE $5AFA Therefor do zeroing + positioning AFTER calling this functions
COMMENT_LINE $5AFA otherwise vectrex beam drifts away a bit!
COMMENT_LINE $5AFA Noticeable on a real vectrex or in DVE when Drift is
COMMENT_LINE $5AFA = to something different than 0 (in *.ini)
COMMENT_LINE $5AFA note:
COMMENT_LINE $5AFA Expects now VLists, that have X vector strength of 16, 32, or 64
COMMENT_LINE $5AFA Gabage will produced else...
COMMENT $5AFA but here the code still uses c8
COMMENT $5AFA default pattern is 0, invisible
FORCE_SYMBOL $5AFA clip_pattern
COMMENT $5AFD remember clipping edge
FORCE_SYMBOL $5AFD BORDER
FORCE_NO_SYMBOL $5B00
COMMENT $5B04 address of result list
FORCE_SYMBOL $5B04 clipped_vector_list
FORCE_NO_SYMBOL $5B07
COMMENT $5B0A clip starts at 0
FORCE_SYMBOL $5B0A clip_counter
COMMENT_LINE $5B0D we add to this each strength
COMMENT_LINE $5B0D of a vector
FORCE_NO_SYMBOL $5B0D
COMMENT $5B13 when first vector will be invisible
COMMENT $5B15 start of first vector will be invisible
COMMENT $5B17 default pattern is 0, invisible
FORCE_SYMBOL $5B17 clip_pattern
COMMENT $5B1A compare current 'place'
FORCE_SYMBOL $5B1A clip_counter
COMMENT $5B1D with clipping edge
FORCE_SYMBOL $5B1D BORDER
COMMENT $5B21 if lower... the start of this
COMMENT_LINE $5B23 current vector is visible -> branch
COMMENT_LINE $5B23 otherwise the start was not visible
FORCE_NO_SYMBOL $5B23
COMMENT $5B25 get current Vector strength
COMMENT $5B27 remember it as v0
FORCE_SYMBOL $5B27 v0
COMMENT $5B2A extend it X part
COMMENT $5B2B and adjust clip_counter
FORCE_SYMBOL $5B2B clip_counter
COMMENT $5B2E store it
FORCE_SYMBOL $5B2E clip_counter
COMMENT_LINE $5B31 clip counter has vector
COMMENT_LINE $5B31 'position' at the end
COMMENT_LINE $5B31 of current vector
COMMENT $5B31 test for clipping edge
FORCE_SYMBOL $5B31 BORDER
COMMENT $5B3D one invisible the other visible? -> branch
COMMENT_LINE $5B3F both vector ends are invisible
COMMENT $5B43 pattern is 0
COMMENT $5B45 load current Vector
FORCE_SYMBOL $5B45 v0
COMMENT $5B48 store it also
FORCE_SYMBOL $5B4A firstVector
COMMENT $5B4F pattern = 1 ends VList
FORCE_NO_SYMBOL $5B4F
COMMENT $5B51 store it
FORCE_NO_SYMBOL $5B51
COMMENT $5B53 load X with correct vlpr
FORCE_SYMBOL $5B53 clipped_vector_list
COMMENT $5B56 reset dp to d0
FORCE_NO_SYMBOL $5B56
COMMENT $5B5A but here the code still uses c8
COMMENT $5B5A return
COMMENT $5B5B test for clipping edge
FORCE_SYMBOL $5B5B BORDER
COMMENT $5B61 pattern is 0
COMMENT $5B63 load current Vector
FORCE_SYMBOL $5B63 v0
COMMENT $5B66 store it also
COMMENT_LINE $5B68 BRA was_visible_vlpr
FORCE_NO_SYMBOL $5B68
COMMENT $5B6A get current Vector
COMMENT $5B6C remember it as v0
FORCE_SYMBOL $5B6C v0
COMMENT $5B6F extend it x0 part
COMMENT $5B70 and adjuct clip_counter
FORCE_SYMBOL $5B70 clip_counter
COMMENT $5B73 store it
FORCE_SYMBOL $5B73 clip_counter
COMMENT_LINE $5B76 clip counter has vector
COMMENT_LINE $5B76 'position' at the end
COMMENT_LINE $5B76 of current vector
COMMENT $5B7C test for clipping edge
FORCE_SYMBOL $5B7C BORDER
COMMENT $5B80 if the whole is visible -> branch
COMMENT $5B82 use full pattern
FORCE_NO_SYMBOL $5B82
COMMENT $5B84 store in vlist
COMMENT $5B86 load current Vector
FORCE_SYMBOL $5B86 v0
COMMENT $5B89 store it also
FORCE_SYMBOL $5B8B firstVector
COMMENT $5B8E no? -> branch
FORCE_SYMBOL $5B90 firstVector
FORCE_SYMBOL $5B95 clip_pattern
FORCE_SYMBOL $5B98 CALC_P2
COMMENT_LINE $5B9B HELP_CALC_P2 ; leaves with v1 and v2 calculated
COMMENT $5B9B get pattern
FORCE_SYMBOL $5B9B clip_pattern
COMMENT $5B9E store it
COMMENT $5BA0 build vector from X1 and Y1
FORCE_SYMBOL $5BA0 v1
COMMENT $5BA3 store it to list
COMMENT $5BA5 get pattern and
FORCE_SYMBOL $5BA5 clip_pattern
COMMENT $5BA8 reverse it
COMMENT $5BA9 store it
COMMENT $5BAB build vector from X2 and Y2
FORCE_SYMBOL $5BAB v2
COMMENT $5BAE store it to list
FORCE_SYMBOL $5BB0 firstVector
COMMENT $5BB3 do next
FORCE_SYMBOL $5BB3 do_next_vector_vlpr
COMMENT_LINE $5BB6 this file is part of Release, written by Malban in 2017
COMMENT $CAAF start of our ram space
COMMENT_LINE $CABE dif_add_delay ds 1
COMMENT_LINE $5BB6 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $5BB6 PHASE_8_SHOW_SCORER
FORCE_SYMBOL $5BB8 title_phase
COMMENT $5BBB is titel
FORCE_NO_SYMBOL $5BBB
FORCE_SYMBOL $5BBE title_phase_counter
FORCE_SYMBOL $5BC1 return_state
COMMENT_LINE $5BC5 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5BC5 removes from list all objects that can be "exploded" (positive)
FORCE_SYMBOL $5BC5 list_objects_head
FORCE_SYMBOL $5BC8 PC_TITLE
FORCE_SYMBOL $5BCE TYPE
FORCE_SYMBOL $5BD0 TYPE_BOUNDARY
FORCE_SYMBOL $5BD4 removeObject_rts
FORCE_SYMBOL $5BD9 NEXT_OBJECT
COMMENT_LINE $5BDE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $5BDE
COMMENT $5BE0 /BLANK low and /ZERO low
FORCE_SYMBOL $5BE0 VIA_cntl
FORCE_SYMBOL $5BE2 title_phase_counter
FORCE_SYMBOL $5BE7 title_phase_counter
FORCE_SYMBOL $5BEE INITIAL_TITLE_PHASE_LENGTH
FORCE_SYMBOL $5BF1 title_phase_counter
COMMENT_LINE $5BF4 change some circle stuff
FORCE_SYMBOL $5BF4 Vec_Loop_Count
FORCE_NO_SYMBOL $5BF8
FORCE_SYMBOL $5BFC Vec_Loop_Count
FORCE_NO_SYMBOL $5BFF
FORCE_SYMBOL $5C04 angle_speed
FORCE_SYMBOL $5C09 angle_speed
FORCE_SYMBOL $5C0E Vec_Loop_Count
FORCE_NO_SYMBOL $5C11
FORCE_NO_SYMBOL $5C18
FORCE_SYMBOL $5C1B angle_speed
FORCE_SYMBOL $5C24 angle_speed
FORCE_NO_SYMBOL $5C27
FORCE_NO_SYMBOL $5C2D
FORCE_SYMBOL $5C30 angle_speed
FORCE_SYMBOL $5C3C angle_speed
FORCE_SYMBOL $5C3F title_phase
FORCE_SYMBOL $5C43 PHASE_END_SHOW_END
FORCE_SYMBOL $5C47 PHASE_1_SHOW_NOTHING
FORCE_SYMBOL $5C49 title_phase
COMMENT_LINE $5C4C do deinit old phase
FORCE_SYMBOL $5C4C remove_unwanted_objects
FORCE_SYMBOL $5C4F title_phase
COMMENT $5C52 spawn allowed
FORCE_NO_SYMBOL $5C52
FORCE_SYMBOL $5C54 PHASE_2_SHOW_X
FORCE_SYMBOL $5C58 PHASE_3_SHOW_HX
FORCE_SYMBOL $5C5C PHASE_4_SHOW_HUNTER
FORCE_SYMBOL $5C60 PHASE_5_SHOW_BOMBER
FORCE_SYMBOL $5C64 PHASE_6_SHOW_DRAGON
FORCE_SYMBOL $5C68 PHASE_7_SHOW_BONUS
FORCE_SYMBOL $5C6C PHASE_8_SHOW_SCORER
FORCE_SYMBOL $5C70 done_title_init_phase_done
COMMENT_LINE $5C73 init new phase
FORCE_SYMBOL $5C73 spawnX
FORCE_SYMBOL $5C76 behaviourXTitel
COMMENT_LINE $5C7F init new phase
FORCE_SYMBOL $5C7F spawnHiddenX
FORCE_SYMBOL $5C82 behaviourHXTitel
COMMENT_LINE $5C8B init new phase
FORCE_SYMBOL $5C8B spawnHunter
FORCE_SYMBOL $5C8E behaviourHunterTitel
COMMENT_LINE $5C97 init new phase
FORCE_SYMBOL $5C97 spawnBomber
FORCE_SYMBOL $5C9A behaviourBomberTitel
COMMENT_LINE $5CA3 init new phase
FORCE_SYMBOL $5CA3 spawnDragon
FORCE_SYMBOL $5CA6 SCALE
FORCE_SYMBOL $5CA8 behaviourDragonTitel
FORCE_SYMBOL $5CAB BEHAVIOUR
FORCE_SYMBOL $5CB0 Y_POS
FORCE_SYMBOL $5CB2 X_POS
COMMENT_LINE $5CB4 child 1
FORCE_SYMBOL $5CB4 CHILD_1
FORCE_SYMBOL $5CB6 SCALE
FORCE_SYMBOL $5CBB Y_POS
FORCE_SYMBOL $5CBD X_POS
FORCE_SYMBOL $5CBF behaviourDragonChildTitel
FORCE_SYMBOL $5CC2 BEHAVIOUR
COMMENT_LINE $5CC4 child 2
FORCE_SYMBOL $5CC4 CHILD_2
FORCE_SYMBOL $5CC9 behaviourDragonChildTitel
COMMENT_LINE $5CCF init new phase
FORCE_SYMBOL $5CCF spawnBonus
FORCE_SYMBOL $5CD2 behaviourBonusTitel
COMMENT_LINE $5CDB init new phase
FORCE_SYMBOL $5CDB spawnStarlet
FORCE_SYMBOL $5CDE behaviourStarletTitel
FORCE_SYMBOL $5CE7 Y_POS
FORCE_SYMBOL $5CE9 X_POS
FORCE_SYMBOL $5CEB SCALE
FORCE_SYMBOL $5CED PC_TITLE
FORCE_SYMBOL $5CF0 NEXT_OBJECT
FORCE_SYMBOL $5CF2 BEHAVIOUR
FORCE_NO_SYMBOL $5CF5
FORCE_SYMBOL $5CF7 title_scale
FORCE_SYMBOL $5CFA title_phase_counter
FORCE_SYMBOL $5D03 INITIAL_TITLE_PHASE_LENGTH
FORCE_NO_SYMBOL $5D08
FORCE_SYMBOL $5D0B title_scale
FORCE_SYMBOL $5D0E title_phase_counter
FORCE_NO_SYMBOL $5D11
FORCE_SYMBOL $5D17 title_scale
FORCE_SYMBOL $5D1A title_phase
FORCE_SYMBOL $5D1D PHASE_2_SHOW_X
FORCE_SYMBOL $5D21 PHASE_3_SHOW_HX
FORCE_SYMBOL $5D25 PHASE_4_SHOW_HUNTER
FORCE_SYMBOL $5D29 PHASE_5_SHOW_BOMBER
FORCE_SYMBOL $5D2D PHASE_6_SHOW_DRAGON
FORCE_SYMBOL $5D31 PHASE_7_SHOW_BONUS
FORCE_SYMBOL $5D35 PHASE_8_SHOW_SCORER
FORCE_SYMBOL $5D3B x_in_title
FORCE_SYMBOL $5D40 hx_in_title
FORCE_SYMBOL $5D45 hunter_in_title
FORCE_SYMBOL $5D4A bomber_in_title
FORCE_SYMBOL $5D4F dragon_in_title
FORCE_SYMBOL $5D54 helper_in_title
FORCE_SYMBOL $5D59 bonus_in_title
FORCE_SYMBOL $5D5E title_scale
COMMENT $5D61 Store intensity in D/A
FORCE_SYMBOL $5D61 VIA_port_a
COMMENT $5D63 mux disabled channel 2
FORCE_NO_SYMBOL $5D63
FORCE_SYMBOL $5D66 VIA_port_b
COMMENT $5D68 mux enabled channel 2
FORCE_SYMBOL $5D68 VIA_port_b
COMMENT $5D6A turn off mux
FORCE_SYMBOL $5D6A VIA_port_b
FORCE_SYMBOL $5D6F vectorPrint
COMMENT_LINE $5D73 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $5D73 spawnStarfield
FORCE_SYMBOL $5D76 PC_TITLE
FORCE_SYMBOL $5D79 NEXT_OBJECT
FORCE_SYMBOL $5D7B spawnStarfield
FORCE_SYMBOL $5D7E PC_TITLE
FORCE_SYMBOL $5D81 NEXT_OBJECT
FORCE_SYMBOL $5D83 spawnStarfield
FORCE_SYMBOL $5D86 PC_TITLE
FORCE_SYMBOL $5D89 NEXT_OBJECT
FORCE_SYMBOL $5D8E vector_print_scale
FORCE_SYMBOL $5D91 vector_move_scale
FORCE_NO_SYMBOL $5D94
FORCE_SYMBOL $5D97 print_angle
FORCE_SYMBOL $5D9A print_angle_2
FORCE_NO_SYMBOL $5D9D
FORCE_SYMBOL $5D9F angle_speed
COMMENT_LINE $5DA2 ;;
FORCE_SYMBOL $5DA2 INITIAL_ANGLE_DIFFERENCE
FORCE_SYMBOL $5DA5 print_letter_angle_dif
FORCE_SYMBOL $5DAA spawnLetter
FORCE_SYMBOL $5DAD PC_TITLE
FORCE_SYMBOL $5DB0 NEXT_OBJECT
FORCE_SYMBOL $5DB2 print_angle
FORCE_SYMBOL $5DB6 ANGLE
FORCE_SYMBOL $5DBB circle
FORCE_SYMBOL $5DC0 Y_POS
FORCE_SYMBOL $5DC2 X_POS
FORCE_NO_SYMBOL $5DC4
FORCE_SYMBOL $5DC7 SPACE_TO_PREVIOUS
FORCE_SYMBOL $5DCA PREVIOUS_LETTER
COMMENT_LINE $5DCD ;;
FORCE_SYMBOL $5DE3 INITIAL_ANGLE_DIFFERENCE
FORCE_SYMBOL $5DE8 spawnLetter
FORCE_SYMBOL $5DEB PC_TITLE
FORCE_SYMBOL $5DEE NEXT_OBJECT
FORCE_SYMBOL $5DF0 ANGLE
FORCE_SYMBOL $5DF5 circle
FORCE_SYMBOL $5DFA Y_POS
FORCE_SYMBOL $5DFC X_POS
FORCE_SYMBOL $5DFE print_letter_angle_dif
FORCE_SYMBOL $5E01 SPACE_TO_PREVIOUS
FORCE_SYMBOL $5E06 PREVIOUS_LETTER
COMMENT_LINE $5E0A print text pointed to by u as vector string
COMMENT_LINE $5E0A only large letters and "."
COMMENT_LINE $5E0A terminated by $80
COMMENT_LINE $5E0A position in D
COMMENT_LINE $5E0A positioning done with title_scale scale
COMMENT_LINE $5E0A print done with title_scale/8 scale
FORCE_SYMBOL $5E0A tmp1
FORCE_SYMBOL $5E0D title_scale
COMMENT $5E10 move to time 1 lo, this means scaling
FORCE_SYMBOL $5E10 VIA_t1_cnt_lo
COMMENT $5E12 the current move vector
FORCE_SYMBOL $5E12 tmp1
FORCE_SYMBOL $5E15 VIA_port_a
COMMENT $5E17 Blank low, zero high?
FORCE_NO_SYMBOL $5E17
FORCE_SYMBOL $5E19 VIA_cntl
COMMENT $5E1C Enable mux
FORCE_SYMBOL $5E1C VIA_port_b
COMMENT $5E1E Clear shift regigster
FORCE_SYMBOL $5E1E VIA_shift_reg
COMMENT $5E20 Disable mux
FORCE_SYMBOL $5E20 VIA_port_b
COMMENT $5E22 Store X in D/A register
FORCE_SYMBOL $5E22 VIA_port_a
COMMENT $5E24 enable timer
FORCE_SYMBOL $5E24 VIA_t1_cnt_hi
COMMENT $5E26 first char of three letter name
COMMENT_LINE $5E28 lets calculate the abc-table offset...
COMMENT $5E2C and add the abc (table of vector list address of the alphabet's letters)
FORCE_SYMBOL $5E2C ABC_28
COMMENT $5E31 subtract smallest letter, so A has 0 offset
COMMENT $5E33 multiply by two, since addresses are 16 bit
COMMENT $5E34 and add the abc (table of vector list address of the alphabet's letters)
FORCE_SYMBOL $5E34 _abc
COMMENT $5E37 in x now address of first letter vectorlist
FORCE_SYMBOL $5E39 mov_x
FORCE_NO_SYMBOL $5E3C
FORCE_SYMBOL $5E3E mov_x
FORCE_SYMBOL $5E41 title_scale
COMMENT $5E47 move to time 1 lo, this means scaling
FORCE_SYMBOL $5E47 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $5E49
FORCE_SYMBOL $5E4B VIA_int_flags
COMMENT $5E4F 2
FORCE_SYMBOL $5E4F myDraw_VL_mode
COMMENT $5E52 draw each letter with a move from zero, more stable
FORCE_NO_SYMBOL $5E52
COMMENT $5E54 /BLANK low and /ZERO low
FORCE_SYMBOL $5E54 VIA_cntl
FORCE_NO_SYMBOL $5E56
COMMENT_LINE $5E5B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5E5B behaviours control (action) and draw all objects
COMMENT_LINE $5E5B each object type has an individual behaviour
COMMENT_LINE $5E5B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5E5B values are = from "u" list as:
COMMENT_LINE $5E5B pulu     pc,d,x; (D = y,x, X = vectorlist)
COMMENT_LINE $5E5B do the scaling
COMMENT $5E5B also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $5E5B VIA_t1_cnt_lo
COMMENT $5E5D also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
COMMENT_LINE $5E5F start the move to
COMMENT_LINE $5E5F following calcs can be done within that move
FORCE_SYMBOL $5E5F move_to_d_start
COMMENT $5E62 see if wee need calc at all, compare tick counter with below zero
COMMENT $5E64 if not, scale will not be updated
COMMENT $5E66 anim reset
FORCE_SYMBOL $5E66 X_ANIM_DELAY
FORCE_SYMBOL $5E75 enemyXList_0
FORCE_SYMBOL $5E7A title_scale
COMMENT $5E7F preload next user stack
FORCE_SYMBOL $5E81 title_scale
FORCE_NO_SYMBOL $5E88
FORCE_NO_SYMBOL $5E8C
COMMENT $5E8E to timer t1 (lo=
FORCE_SYMBOL $5E8E VIA_t1_cnt_lo
FORCE_SYMBOL $5E90 title_scale
COMMENT $5E93 end a move to
FORCE_NO_SYMBOL $5E93
FORCE_SYMBOL $5E95 VIA_int_flags
COMMENT $5E99 Store intensity in D/A
FORCE_SYMBOL $5E99 VIA_port_a
COMMENT $5E9B mux disabled channel 2
FORCE_NO_SYMBOL $5E9B
FORCE_SYMBOL $5E9E VIA_port_b
COMMENT $5EA0 mux enabled channel 2
FORCE_SYMBOL $5EA0 VIA_port_b
COMMENT $5EA2 turn off mux
FORCE_SYMBOL $5EA2 VIA_port_b
COMMENT $5EA4 draw the list
FORCE_SYMBOL $5EA4 myDraw_VL_mode_direct
COMMENT_LINE $5EA7 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5EA7 behaviours control (action) and draw all objects
COMMENT_LINE $5EA7 each object type has an individual behaviour
COMMENT_LINE $5EA7 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5EA7 values are = from "u" list as:
COMMENT_LINE $5EA7 pulu     pc,d,x; (D = y,x, X = vectorlist)
COMMENT_LINE $5EA7 do the scaling
COMMENT $5EA7 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $5EA7 VIA_t1_cnt_lo
COMMENT $5EA9 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
COMMENT_LINE $5EAB start the move to
COMMENT_LINE $5EAB following calcs can be done within that move
FORCE_SYMBOL $5EAB move_to_d_start
COMMENT $5EAE see if wee need calc at all, compare tick counter with below zero
COMMENT $5EB0 if not, scale will not be updated
COMMENT $5EB2 anim reset
FORCE_SYMBOL $5EB2 X_ANIM_DELAY
FORCE_SYMBOL $5EC1 enemyXList_0
FORCE_SYMBOL $5EC6 title_scale
COMMENT $5ECB preload next user stack
FORCE_SYMBOL $5ECD title_scale
FORCE_NO_SYMBOL $5ED4
FORCE_NO_SYMBOL $5ED8
COMMENT $5EDA to timer t1 (lo=
FORCE_SYMBOL $5EDA VIA_t1_cnt_lo
FORCE_SYMBOL $5EDC title_scale
COMMENT_LINE $5EE2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5EE2 behaviours control (action) and draw all objects
COMMENT_LINE $5EE2 each object type has an individual behaviour
COMMENT_LINE $5EE2 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5EE2 values are = from "u" list as:
COMMENT_LINE $5EE2 pulu     pc,d,x; (D = y,x, X = vectorlist)
COMMENT_LINE $5EE2 do the scaling
COMMENT $5EE2 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $5EE2 VIA_t1_cnt_lo
COMMENT $5EE4 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
COMMENT_LINE $5EE6 start the move to
COMMENT_LINE $5EE6 following calcs can be done within that move
FORCE_SYMBOL $5EE6 move_to_d_start
FORCE_SYMBOL $5EE9 title_scale
COMMENT $5EEE preload next user stack
COMMENT $5EF0 load offset of vector list draw
FORCE_SYMBOL $5EF7 title_scale
FORCE_NO_SYMBOL $5EFE
FORCE_NO_SYMBOL $5F02
FORCE_SYMBOL $5F04 title_scale
COMMENT $5F07 end a move to
FORCE_NO_SYMBOL $5F07
FORCE_SYMBOL $5F09 VIA_int_flags
COMMENT $5F0D Store intensity in D/A
FORCE_SYMBOL $5F0D VIA_port_a
COMMENT $5F0F mux disabled channel 2
FORCE_NO_SYMBOL $5F0F
FORCE_SYMBOL $5F12 VIA_port_b
COMMENT $5F14 mux enabled channel 2
FORCE_SYMBOL $5F14 VIA_port_b
COMMENT $5F16 turn off mux
FORCE_SYMBOL $5F16 VIA_port_b
FORCE_SYMBOL $5F18 entry_optimized_draw_mvlc_unloop
COMMENT_LINE $5F1B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5F1B behaviours control (action) and draw all objects
COMMENT_LINE $5F1B each object type has an individual behaviour
COMMENT_LINE $5F1B ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5F1B values are = from "u" list as:
COMMENT_LINE $5F1B pulu     pc,d,x; (D = y,x, X = vectorlist)
COMMENT_LINE $5F1B do the scaling
COMMENT $5F1B also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $5F1B VIA_t1_cnt_lo
COMMENT $5F1D also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
COMMENT_LINE $5F1F start the move to
COMMENT_LINE $5F1F following calcs can be done within that move
FORCE_SYMBOL $5F1F move_to_d_start
COMMENT_LINE $5F22 check anim
COMMENT $5F22 see if wee need calc at all, compare tick counter with below zero
COMMENT $5F24 if not, scale will not be updated
COMMENT $5F26 anim reset
FORCE_SYMBOL $5F26 BOMBER_ANIM_DELAY
FORCE_SYMBOL $5F35 BomberList_0
COMMENT_LINE $5F3C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5F3C behaviours control (action) and draw all objects
COMMENT_LINE $5F3C each object type has an individual behaviour
COMMENT_LINE $5F3C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5F3C values are = from "u" list as:
COMMENT_LINE $5F3C pulu     pc,d,x; (D = y,x, X = vectorlist)
COMMENT_LINE $5F3C do the scaling
COMMENT $5F3C also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $5F3C VIA_t1_cnt_lo
COMMENT $5F3E also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
COMMENT_LINE $5F40 start the move to
COMMENT_LINE $5F40 following calcs can be done within that move
FORCE_SYMBOL $5F40 move_to_d_start
FORCE_SYMBOL $5F43 dummyCounter
COMMENT $5F46 only every second tick
FORCE_SYMBOL $5F46 dummyCounter
FORCE_NO_SYMBOL $5F49
FORCE_SYMBOL $5F58 DragonList_0
COMMENT_LINE $5F5F ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5F5F do the scaling
COMMENT $5F5F also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $5F5F VIA_t1_cnt_lo
COMMENT $5F61 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
COMMENT_LINE $5F63 start the move to
COMMENT_LINE $5F63 following calcs can be done within that move
FORCE_NO_SYMBOL $5F70
FORCE_SYMBOL $5F83 Dragonchild_List
FORCE_SYMBOL $5F86 do_behaviourRest1
COMMENT_LINE $5F89 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5F89 values are = from "u" list as:
COMMENT_LINE $5F89 pulu     pc,d,x; (D = y,x, X = vectorlist)
COMMENT_LINE $5F89 do the scaling
COMMENT $5F89 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $5F89 VIA_t1_cnt_lo
COMMENT $5F8B also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
COMMENT_LINE $5F8D start the move to
COMMENT_LINE $5F8D following calcs can be done within that move
COMMENT $5F8F see if wee need calc at all, compare tick counter with below zero
COMMENT $5F91 if not, scale will not be updated
COMMENT $5F93 anim reset
FORCE_SYMBOL $5F93 X_ANIM_DELAY
FORCE_SYMBOL $5FA2 BonusList_0
FORCE_SYMBOL $5FA7 do_behaviourRest1
COMMENT_LINE $5FAA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $5FAA values are = from "u" list as:
COMMENT_LINE $5FAA pulu     pc,d,x; (D = y,x, X = vectorlist)
COMMENT_LINE $5FAA do the scaling
COMMENT $5FAA also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $5FAA VIA_t1_cnt_lo
COMMENT $5FAC also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
COMMENT_LINE $5FAE start the move to
COMMENT_LINE $5FAE following calcs can be done within that move
COMMENT $5FB0 see if wee need calc at all, compare tick counter with below zero
COMMENT $5FB2 if not, scale will not be updated
COMMENT $5FB4 anim reset
FORCE_SYMBOL $5FB4 STARLET_ANIM_DELAY
FORCE_SYMBOL $5FC3 StarletList_0
FORCE_SYMBOL $5FC8 do_behaviourRest3
FORCE_SYMBOL $5FCB VIA_port_a
COMMENT $5FCD Blank low, zero high?
FORCE_NO_SYMBOL $5FCD
FORCE_SYMBOL $5FCF VIA_cntl
COMMENT $5FD2 Enable mux
FORCE_SYMBOL $5FD2 VIA_port_b
COMMENT $5FD4 Clear shift regigster
FORCE_SYMBOL $5FD4 VIA_shift_reg
COMMENT $5FD6 Disable mux
FORCE_SYMBOL $5FD6 VIA_port_b
COMMENT $5FD8 Store X in D/A register
FORCE_SYMBOL $5FD8 VIA_port_a
COMMENT $5FDA enable timer
FORCE_SYMBOL $5FDA VIA_t1_cnt_hi
COMMENT_LINE $5FDD this file is part of Release, written by Malban in 2017
COMMENT_LINE $5FDD ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $5FE0 selected_option_O
FORCE_SYMBOL $5FE3 inc_o
FORCE_SYMBOL $5FE6 resetDone
FORCE_SYMBOL $5FE9 veryUp
FORCE_SYMBOL $5FEC veryUoCount_1
FORCE_SYMBOL $5FEF veryUoCount_2
FORCE_SYMBOL $5FF2 phaseList
FORCE_SYMBOL $5FF5 initialPhase
FORCE_NO_SYMBOL $5FFB
FORCE_SYMBOL $5FFD veryUoCount_1
FORCE_NO_SYMBOL $6001
FORCE_SYMBOL $6006 veryUoCount_2
FORCE_SYMBOL $6009 veryUoCount_1
FORCE_SYMBOL $600E PLY_PLAY
FORCE_SYMBOL $6011 Wait_Recal
COMMENT $6014 recal counter, about 21 Minutes befor roll over
FORCE_SYMBOL $6014 RecalCounter
FORCE_NO_SYMBOL $6017
FORCE_SYMBOL $6019 RecalCounter
COMMENT $601C round_startup_main expects dp set to d0
FORCE_NO_SYMBOL $601C
FORCE_SYMBOL $6020 do_ym_sound2_no_sfx
COMMENT_LINE $6023 print text pointed to by u as vector string
COMMENT_LINE $6023 only large letters and "."
COMMENT_LINE $6023 terminated by $80
COMMENT_LINE $6023 position in D
COMMENT_LINE $6023 positioning done with $20 scale
COMMENT_LINE $6023 print done with title_scale scale
COMMENT $6023 if on "MUSIC" and pressed 5 times more "up" the level selection appears
FORCE_SYMBOL $6023 veryUp
FORCE_NO_SYMBOL $6026
FORCE_NO_SYMBOL $602A
COMMENT $602C move to time 1 lo, this means scaling
FORCE_SYMBOL $602C VIA_t1_cnt_lo
FORCE_SYMBOL $602E Intensity_3F
FORCE_NO_SYMBOL $6031
FORCE_SYMBOL $6034 Moveto_d
FORCE_NO_SYMBOL $6037
COMMENT $6039 to timer t1 (lo=
FORCE_SYMBOL $6039 VIA_t1_cnt_lo
COMMENT $603B list of pointers to number vectorlists
FORCE_SYMBOL $603B NumberList
FORCE_SYMBOL $603E veryUoCount_2
FORCE_SYMBOL $6044 myDraw_VL_mode
COMMENT $6047 list of pointers to number vectorlists
FORCE_SYMBOL $6047 NumberList
FORCE_SYMBOL $604A veryUoCount_1
FORCE_SYMBOL $6050 myDraw_VL_mode
FORCE_NO_SYMBOL $6053
COMMENT $6055 /BLANK low and /ZERO low
FORCE_SYMBOL $6055 VIA_cntl
FORCE_SYMBOL $6057 change_scale
FORCE_NO_SYMBOL $605A
FORCE_SYMBOL $605C moveScale_O
COMMENT $605F move to time 1 lo, this means scaling
FORCE_SYMBOL $605F VIA_t1_cnt_lo
FORCE_SYMBOL $6064 letterScale_O
FORCE_SYMBOL $6067 printing_now
FORCE_SYMBOL $606A Intensity_5F
FORCE_NO_SYMBOL $606D
FORCE_SYMBOL $6070 options_string
FORCE_SYMBOL $6073 vectorPrint2
FORCE_SYMBOL $6076 printing_now
FORCE_SYMBOL $6079 Intensity_3F
FORCE_NO_SYMBOL $607C
FORCE_SYMBOL $607F music_string
FORCE_SYMBOL $6082 change_scale
FORCE_SYMBOL $6085 vectorPrint2
FORCE_SYMBOL $6088 change_scale
FORCE_SYMBOL $608B musicOption
FORCE_NO_SYMBOL $6090
FORCE_SYMBOL $6093 on_string
FORCE_SYMBOL $6096 vectorPrint2
FORCE_NO_SYMBOL $609B
FORCE_SYMBOL $609E off_string
FORCE_SYMBOL $60A1 vectorPrint2
FORCE_SYMBOL $60A6 printing_now
FORCE_SYMBOL $60A9 Intensity_3F
FORCE_NO_SYMBOL $60AC
FORCE_SYMBOL $60AF change_scale
FORCE_SYMBOL $60B2 sfx_string
FORCE_SYMBOL $60B5 vectorPrint2
FORCE_SYMBOL $60B8 change_scale
FORCE_SYMBOL $60BB sfxOption
FORCE_SYMBOL $60C0 halfnoise
FORCE_NO_SYMBOL $60C5
FORCE_SYMBOL $60C8 half_string
FORCE_SYMBOL $60CB vectorPrint2
FORCE_NO_SYMBOL $60D0
FORCE_SYMBOL $60D3 on_string
FORCE_SYMBOL $60D6 vectorPrint2
FORCE_NO_SYMBOL $60DB
FORCE_SYMBOL $60DE off_string
FORCE_SYMBOL $60E1 vectorPrint2
FORCE_SYMBOL $60E6 change_scale
FORCE_SYMBOL $60E9 printing_now
FORCE_SYMBOL $60EC Intensity_3F
FORCE_NO_SYMBOL $60EF
FORCE_SYMBOL $60F2 reset_string
FORCE_SYMBOL $60F5 vectorPrint2
FORCE_SYMBOL $60F8 change_scale
FORCE_SYMBOL $60FB resetDone
FORCE_NO_SYMBOL $6100
FORCE_SYMBOL $6103 done_string
FORCE_SYMBOL $6106 vectorPrint2
FORCE_SYMBOL $6109 change_scale
FORCE_SYMBOL $610C printing_now
FORCE_SYMBOL $610F Intensity_3F
FORCE_NO_SYMBOL $6112
FORCE_SYMBOL $6115 back_string
FORCE_SYMBOL $6118 vectorPrint2
COMMENT $611B is a button pressed?
FORCE_SYMBOL $611B getButtonState
COMMENT $6120 same aslast state
FORCE_NO_SYMBOL $6120
COMMENT $6124 as released - possibly from highscore return
FORCE_NO_SYMBOL $6124
FORCE_SYMBOL $6128 selected_option_O
FORCE_NO_SYMBOL $612B
FORCE_NO_SYMBOL $612F
FORCE_NO_SYMBOL $6135
FORCE_NO_SYMBOL $613B
FORCE_SYMBOL $6144 current_eprom_blocksize
FORCE_SYMBOL $6147 optionsBlock
FORCE_SYMBOL $614A eeprom_save_options
FORCE_NO_SYMBOL $614D
FORCE_SYMBOL $614F init_objects_a
FORCE_NO_SYMBOL $6152
FORCE_SYMBOL $6154 last_button_state
FORCE_SYMBOL $6157 current_button_state
FORCE_SYMBOL $615A title_main1_hs_ret
FORCE_SYMBOL $615D query_joystick
COMMENT $6160 only jump if last joy pos was zero (needed for testing later)
FORCE_SYMBOL $6160 last_joy_y
COMMENT $6163 load joystick 1 position X to A
FORCE_SYMBOL $6163 Vec_Joy_1_Y
COMMENT $6166 store this joystick position
FORCE_SYMBOL $6166 last_joy_y
COMMENT $616B joystick moved to left
COMMENT $616D test the old joystick position
COMMENT $616E was center
FORCE_SYMBOL $6170 selected_option_O
FORCE_SYMBOL $6175 selected_option_O
FORCE_SYMBOL $617A veryUp
COMMENT $617D test the old joystick position
COMMENT $617E was center
FORCE_SYMBOL $6180 selected_option_O
FORCE_NO_SYMBOL $6183
FORCE_SYMBOL $6187 selected_option_O
COMMENT_LINE $618C letter inc 1
FORCE_SYMBOL $618C veryUp
FORCE_NO_SYMBOL $618F
COMMENT $6193 only jump if last joy pos was zero (needed for testing later)
FORCE_SYMBOL $6193 last_joy_x
COMMENT $6196 load joystick 1 position X to A
FORCE_SYMBOL $6196 Vec_Joy_1_X
COMMENT $6199 store this joystick position
FORCE_SYMBOL $6199 last_joy_x
COMMENT $619E joystick moved to left
COMMENT $61A0 test the old joystick position
COMMENT $61A1 was center
FORCE_SYMBOL $61A3 initialPhase
FORCE_NO_SYMBOL $61A6
COMMENT $61A8 to high
FORCE_NO_SYMBOL $61AA
FORCE_SYMBOL $61AC initialPhase
FORCE_SYMBOL $61AF veryUoCount_1
FORCE_NO_SYMBOL $61B3
FORCE_SYMBOL $61B8 veryUoCount_2
FORCE_SYMBOL $61BB veryUoCount_1
COMMENT $61C0 test the old joystick position
COMMENT $61C1 was center
COMMENT_LINE $61C3 pos inc 1
FORCE_SYMBOL $61C3 initialPhase
FORCE_SYMBOL $61C6 phaseList
FORCE_SYMBOL $61CE initialPhase
FORCE_SYMBOL $61D1 veryUoCount_1
FORCE_NO_SYMBOL $61D7
FORCE_SYMBOL $61D9 veryUoCount_2
FORCE_SYMBOL $61DC veryUoCount_1
FORCE_SYMBOL $61E1 display_options_loop
FORCE_SYMBOL $61E4 veryUp
FORCE_SYMBOL $61E7 display_options_loop
COMMENT_LINE $61EA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6218 print text pointed to by u as vector string
COMMENT_LINE $6218 only large letters and "."
COMMENT_LINE $6218 terminated by $80
COMMENT_LINE $6218 position in D
COMMENT_LINE $6218 positioning done with title_scale scale
COMMENT_LINE $6218 print done with title_scale/8 scale
FORCE_SYMBOL $6218 is_first_move_O
FORCE_SYMBOL $621B tmp1
FORCE_SYMBOL $621E moveScale_O
COMMENT $6221 move to time 1 lo, this means scaling
FORCE_SYMBOL $6221 VIA_t1_cnt_lo
COMMENT $6223 the current move vector
FORCE_SYMBOL $6223 tmp1
FORCE_SYMBOL $6226 VIA_port_a
COMMENT $6228 Blank low, zero high?
FORCE_NO_SYMBOL $6228
FORCE_SYMBOL $622A VIA_cntl
COMMENT $622D Enable mux
FORCE_SYMBOL $622D VIA_port_b
COMMENT $622F Clear shift regigster
FORCE_SYMBOL $622F VIA_shift_reg
COMMENT $6231 Disable mux
FORCE_SYMBOL $6231 VIA_port_b
COMMENT $6233 Store X in D/A register
FORCE_SYMBOL $6233 VIA_port_a
COMMENT $6235 enable timer
FORCE_SYMBOL $6235 VIA_t1_cnt_hi
FORCE_SYMBOL $6237 is_first_move_O
FORCE_SYMBOL $623C letterScale_O
FORCE_SYMBOL $623F printing_now
FORCE_SYMBOL $6242 selected_option_O
FORCE_SYMBOL $6247 inc_o
COMMENT $624C do only change once per line
FORCE_SYMBOL $624C change_scale
FORCE_SYMBOL $6251 selected_scale_size_O
FORCE_SYMBOL $6254 selected_scale_size_O
FORCE_NO_SYMBOL $6257
FORCE_SYMBOL $625B inc_o
COMMENT $6260 do only change once per line
FORCE_SYMBOL $6260 change_scale
FORCE_SYMBOL $6265 selected_scale_size_O
FORCE_SYMBOL $6268 selected_scale_size_O
FORCE_NO_SYMBOL $626B
FORCE_SYMBOL $626F inc_o
COMMENT_LINE $6272 lda selected_scale_size_O
FORCE_SYMBOL $6272 use_scale_letter_o
FORCE_NO_SYMBOL $6275
FORCE_SYMBOL $6277 VIA_int_flags
FORCE_SYMBOL $627B is_first_move_O
FORCE_SYMBOL $6280 printing_now
FORCE_SYMBOL $6283 selected_option_O
FORCE_SYMBOL $6288 Intensity_7F
FORCE_SYMBOL $628B is_first_move_O
FORCE_NO_SYMBOL $628E
COMMENT $6290 /BLANK low and /ZERO low
FORCE_SYMBOL $6290 VIA_cntl
COMMENT $6296 first char of three letter name
COMMENT_LINE $6298 lets calculate the abc-table offset...
COMMENT $629C and add the abc (table of vector list address of the alphabet's letters)
FORCE_SYMBOL $629C ABC_28
COMMENT $62A1 subtract smallest letter, so A has 0 offset
COMMENT $62A3 multiply by two, since addresses are 16 bit
COMMENT $62A4 and add the abc (table of vector list address of the alphabet's letters)
FORCE_SYMBOL $62A4 _abc
COMMENT $62A7 in x now address of first letter vectorlist
FORCE_SYMBOL $62A9 mov_x
FORCE_NO_SYMBOL $62AC
FORCE_SYMBOL $62AE mov_x
FORCE_SYMBOL $62B1 use_scale_letter_o
COMMENT $62B4 move to time 1 lo, this means scaling
FORCE_SYMBOL $62B4 VIA_t1_cnt_lo
FORCE_NO_SYMBOL $62B6
FORCE_SYMBOL $62B8 VIA_int_flags
COMMENT $62BE 2
FORCE_SYMBOL $62BE myDraw_VL_mode3
COMMENT $62C3 draw each letter with a move from zero, more stable
FORCE_NO_SYMBOL $62C3
COMMENT $62C5 /BLANK low and /ZERO low
FORCE_SYMBOL $62C5 VIA_cntl
FORCE_NO_SYMBOL $62C7
COMMENT_LINE $62CE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $62CE resetEprom
FORCE_NO_SYMBOL $62D1
FORCE_SYMBOL $62D3 resetDone
COMMENT_LINE $62D8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $62D8 sfxOption
FORCE_SYMBOL $62DD halfnoise
FORCE_NO_SYMBOL $62E2
FORCE_SYMBOL $62E4 halfnoise
FORCE_NO_SYMBOL $62E9
FORCE_SYMBOL $62EB sfxOption
FORCE_SYMBOL $62F0 sfxOption
FORCE_SYMBOL $62F3 halfnoise
FORCE_SYMBOL $62F6 display_options_loop
COMMENT_LINE $62F9 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $62F9 musicOption
FORCE_SYMBOL $62FE musicOption
COMMENT $6301 clear all regs
FORCE_SYMBOL $6301 clear_all_sound
COMMENT $6304 this piece of music
FORCE_SYMBOL $6304 titleMusic
COMMENT $6307 NOW
FORCE_SYMBOL $6307 PLY_INIT_ALL
FORCE_SYMBOL $630A display_options_loop
COMMENT $630D clear all regs
FORCE_SYMBOL $630D clear_all_sound
FORCE_NO_SYMBOL $6310
FORCE_SYMBOL $6312 musicOption
FORCE_SYMBOL $6315 display_options_loop
COMMENT_LINE $6318 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 Can still be somewhat optimized - but is fast enough as is (and ROM space also enough)
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 this does:
COMMENT_LINE $0000 signed multiplication of parameter 1 and parameter 2 to D
COMMENT_LINE $0000 and divides D by 64
COMMENT_LINE $0000 result is stored in A
COMMENT $0000 here we can use this as negd
COMMENT $0000 since the low nibble of b doesn't interest us
COMMENT $0000 this divides d by 64
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $6318 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6318 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $0000 ***************************************************************************
COMMENT_LINE $CA50 3d vars and general "explosion" vars use the same RAM space,
COMMENT_LINE $CA50 they are never used at the same time - so no collision here
COMMENT $CA50 RAM locations reused
COMMENT_LINE $CA50 this file is part of Release, written by Malban in 2017
COMMENT_LINE $CA50 uses 11 + 27 *3 = 92 bytes RAM space
COMMENT_LINE $CA4E var definitions used in the game over sequence
COMMENT_LINE $CA5D space for about 72 dots
COMMENT_LINE $CB7D letters_3d ds Letter3d*8
COMMENT $0000 times four, each dot has 4 byte
COMMENT $0000 space for current dot
FORCE_SYMBOL $6318 clear_all_sound
FORCE_SYMBOL $631B DOT_SPAWN_DELAY
FORCE_SYMBOL $631D spawnDelay
FORCE_NO_SYMBOL $6320
FORCE_SYMBOL $6323 counter_Arm
FORCE_SYMBOL $6326 angle_Arm1
FORCE_NO_SYMBOL $6329
FORCE_SYMBOL $632C angle_Arm2
FORCE_NO_SYMBOL $632F
FORCE_SYMBOL $6332 angle_Arm3
FORCE_SYMBOL $6335 SPIN_SPEED
FORCE_SYMBOL $6338 spinSpeed_all
FORCE_SYMBOL $633E expandArms
FORCE_SYMBOL $6341 endstage
FORCE_SYMBOL $6344 STAGE_1_LENGTH
FORCE_SYMBOL $6347 stageCounter
COMMENT_LINE $634A sound in all three channels -> is more impressive!
FORCE_SYMBOL $634A explosion3_Sound
FORCE_SYMBOL $634D play_sfx_p1
FORCE_SYMBOL $6350 explosion3_Sound
FORCE_SYMBOL $6353 play_sfx_p1
FORCE_SYMBOL $6356 explosion2_Sound
FORCE_SYMBOL $6359 play_sfx_p1
FORCE_NO_SYMBOL $635C
COMMENT $635E /BLANK low and /ZERO low
FORCE_SYMBOL $635E VIA_cntl
COMMENT $6360 is a button pressed?
FORCE_SYMBOL $6360 getButtonState
COMMENT $6364 allFourButtonsPressed_return
FORCE_SYMBOL $6368 Wait_Recal
FORCE_SYMBOL $636B sfxOption
FORCE_SYMBOL $6370 do_ym_sound2
FORCE_SYMBOL $6373 draw_Score_game
FORCE_SYMBOL $6376 stageCounter
FORCE_SYMBOL $637B stageCounter
FORCE_NO_SYMBOL $637E
FORCE_SYMBOL $6385 endstage
FORCE_SYMBOL $6388 endstage
FORCE_SYMBOL $638B STAGE_2
FORCE_SYMBOL $638F STAGE_3
FORCE_SYMBOL $6393 STAGE_4
FORCE_SYMBOL $6397 STAGE_5
FORCE_SYMBOL $639B STAGE_6
FORCE_SYMBOL $639F STAGE_7
FORCE_SYMBOL $63A5 explosion2_Sound
FORCE_SYMBOL $63A8 play_sfx_p1
FORCE_SYMBOL $63AB explosion2_Sound
FORCE_SYMBOL $63AE play_sfx_p1
FORCE_SYMBOL $63B1 STAGE_2_LENGTH
FORCE_SYMBOL $63B4 stageCounter
FORCE_SYMBOL $63B9 explosionStart_Sound
FORCE_SYMBOL $63BC play_sfx_p1
FORCE_SYMBOL $63BF STAGE_3_LENGTH
FORCE_SYMBOL $63C2 stageCounter
FORCE_SYMBOL $63C7 explosionB_Sound
FORCE_SYMBOL $63CA play_sfx_p1
FORCE_SYMBOL $63CD STAGE_4_LENGTH
FORCE_SYMBOL $63D0 stageCounter
FORCE_SYMBOL $63D5 expandArms
FORCE_SYMBOL $63DA explosionFading_Sound
FORCE_SYMBOL $63DD play_sfx_p1
FORCE_SYMBOL $63E0 STAGE_5_LENGTH
FORCE_SYMBOL $63E3 stageCounter
FORCE_SYMBOL $63E8 explosionLast_Sound
FORCE_SYMBOL $63EB play_sfx_p1
FORCE_SYMBOL $63EE explosionLast_Sound
FORCE_SYMBOL $63F1 play_sfx_p1
FORCE_SYMBOL $63F4 explosionLast_Sound
FORCE_SYMBOL $63F7 play_sfx_p1
FORCE_NO_SYMBOL $63FA
FORCE_SYMBOL $63FC expl_scale_base
FORCE_SYMBOL $63FF STAGE_6_LENGTH
FORCE_SYMBOL $6402 stageCounter
FORCE_SYMBOL $6407 STAGE_7_LENGTH
FORCE_SYMBOL $640A stageCounter
FORCE_SYMBOL $640F endstage
FORCE_SYMBOL $6412 STAGE_1
FORCE_SYMBOL $6418 STAGE_2
FORCE_SYMBOL $641E STAGE_3
FORCE_SYMBOL $6424 STAGE_4
FORCE_SYMBOL $6428 STAGE_5
FORCE_SYMBOL $642C STAGE_6
FORCE_SYMBOL $6430 STAGE_7
FORCE_SYMBOL $6436 endofstagestuff
FORCE_NO_SYMBOL $6439
FORCE_SYMBOL $643E explosionLast_Sound
FORCE_SYMBOL $6441 play_sfx_p1
FORCE_SYMBOL $6444 explosionLast_Sound
FORCE_SYMBOL $6447 play_sfx_p1
FORCE_SYMBOL $644A explosionLast_Sound
FORCE_SYMBOL $644D play_sfx_p1
COMMENT_LINE $6452 mighty explosion
FORCE_NO_SYMBOL $6452
FORCE_SYMBOL $6454 addi_ex
FORCE_SYMBOL $6457 expl_scale_base
FORCE_SYMBOL $645A expl_scale_base
FORCE_SYMBOL $645D expl_scale_base
FORCE_SYMBOL $6460 expl_scale_base
FORCE_NO_SYMBOL $6463
FORCE_SYMBOL $6467 drawOneBase
FORCE_NO_SYMBOL $646A
FORCE_NO_SYMBOL $646C
FORCE_SYMBOL $646E drawOneBase
FORCE_NO_SYMBOL $6471
FORCE_NO_SYMBOL $6473
FORCE_SYMBOL $6475 drawOneBase
FORCE_SYMBOL $6478 addi_ex
FORCE_NO_SYMBOL $647B
FORCE_SYMBOL $647D addi_ex
FORCE_SYMBOL $6484 addi_ex
FORCE_SYMBOL $6493 mainGameOver
FORCE_SYMBOL $649D explosionB_Sound
FORCE_SYMBOL $64A0 play_sfx_p1
FORCE_SYMBOL $64AA explosionA_Sound
FORCE_SYMBOL $64AD play_sfx_p1
FORCE_SYMBOL $64B9 explosionStart_Sound
FORCE_SYMBOL $64BC play_sfx_p1
FORCE_SYMBOL $64C6 explosionStart_Sound
FORCE_SYMBOL $64C9 play_sfx_p1
FORCE_SYMBOL $64CE spinSpeed_all
FORCE_NO_SYMBOL $64D1
FORCE_NO_SYMBOL $64D4
FORCE_SYMBOL $64DC spinSpeed_all
FORCE_SYMBOL $64E1 stageCounter
FORCE_SYMBOL $64E9 explosion2_Sound
FORCE_SYMBOL $64EC play_sfx_p1
FORCE_NO_SYMBOL $64F2
FORCE_SYMBOL $64F6 spinSpeed_all
FORCE_NO_SYMBOL $64F9
FORCE_NO_SYMBOL $64FC
FORCE_NO_SYMBOL $6502
FORCE_SYMBOL $6505 spinSpeed_all
COMMENT_LINE $650A nothing to do here :-)
COMMENT_LINE $650C increase base angle by 1 degree
COMMENT_LINE $650C and modulo it at 360 degrees
FORCE_SYMBOL $650C base_angle
FORCE_NO_SYMBOL $650F
FORCE_SYMBOL $651A base_angle
COMMENT_LINE $651D beq no_playerAction ; zero means no, and last was also not pressed
FORCE_NO_SYMBOL $651D
COMMENT $651F /BLANK low and /ZERO low
FORCE_SYMBOL $651F VIA_cntl
FORCE_SYMBOL $6521 endstage
FORCE_SYMBOL $6524 STAGE_5
FORCE_SYMBOL $6528 drawPlayerHome
FORCE_NO_SYMBOL $652B
COMMENT $652D /BLANK low and /ZERO low
FORCE_SYMBOL $652D VIA_cntl
FORCE_SYMBOL $652F spawnDelay
FORCE_SYMBOL $6534 DOT_SPAWN_DELAY
FORCE_SYMBOL $6536 spawnDelay
FORCE_SYMBOL $6539 counter_Arm
FORCE_SYMBOL $653C MAX_DOT_PER_ARM
FORCE_SYMBOL $6540 angle_Arm1
FORCE_SYMBOL $6543 ARM_SPAWN_ANGLE_ADD
FORCE_NO_SYMBOL $6546
FORCE_SYMBOL $654F angle_Arm1
FORCE_SYMBOL $6552 dotsArm1
FORCE_SYMBOL $6555 counter_Arm
COMMENT $6559 times four, each dot has 4 byte
COMMENT $655A space for current dot
FORCE_NO_SYMBOL $655C
FORCE_SYMBOL $655F dscale
FORCE_SYMBOL $6561 dangle
FORCE_SYMBOL $6563 angle_Arm2
FORCE_SYMBOL $6566 ARM_SPAWN_ANGLE_ADD
FORCE_NO_SYMBOL $6569
FORCE_SYMBOL $6572 angle_Arm2
FORCE_SYMBOL $6575 dotsArm2
FORCE_SYMBOL $6578 counter_Arm
COMMENT $657C times four, each dot has 4 byte
COMMENT $657D space for current dot
FORCE_NO_SYMBOL $657F
FORCE_SYMBOL $6582 dscale
FORCE_SYMBOL $6584 dangle
FORCE_SYMBOL $6586 angle_Arm3
FORCE_SYMBOL $6589 ARM_SPAWN_ANGLE_ADD
FORCE_NO_SYMBOL $658C
FORCE_SYMBOL $6595 angle_Arm3
FORCE_SYMBOL $6598 dotsArm3
FORCE_SYMBOL $659B counter_Arm
COMMENT $659F times four, each dot has 4 byte
COMMENT $65A0 space for current dot
FORCE_NO_SYMBOL $65A2
FORCE_SYMBOL $65A5 dscale
FORCE_SYMBOL $65A7 dangle
FORCE_SYMBOL $65A9 counter_Arm
FORCE_SYMBOL $65AE dotsArm1
FORCE_SYMBOL $65B1 counter_Arm
FORCE_SYMBOL $65B4 tmp_byte
FORCE_SYMBOL $65CB tmp_byte
FORCE_SYMBOL $65D0 clear_all_sound
COMMENT_LINE $65D3 rts
COMMENT_LINE $65D3 pointer to dot in u
FORCE_SYMBOL $65D3 dscale
FORCE_SYMBOL $65D5 VIA_t1_cnt_lo
FORCE_SYMBOL $65D7 expandArms
FORCE_NO_SYMBOL $65DC
FORCE_SYMBOL $65DE dscale
FORCE_SYMBOL $65E0 endstage
FORCE_SYMBOL $65E3 STAGE_5
FORCE_SYMBOL $65EA dintensity
COMMENT $65EC Store intensity in D/A
FORCE_SYMBOL $65EC VIA_port_a
COMMENT $65EE mux disabled channel 2
FORCE_NO_SYMBOL $65EE
FORCE_SYMBOL $65F1 VIA_port_b
COMMENT $65F3 mux enabled channel 2
FORCE_SYMBOL $65F3 VIA_port_b
COMMENT $65F5 turn off mux
FORCE_SYMBOL $65F5 VIA_port_b
COMMENT $65F7 angle
FORCE_NO_SYMBOL $65F7
FORCE_SYMBOL $65F9 spinSpeed_all
FORCE_NO_SYMBOL $65FC
FORCE_NO_SYMBOL $6602
FORCE_NO_SYMBOL $6605
FORCE_SYMBOL $6607 circle
COMMENT $660A u pointer to spwan angle coordinates
FORCE_NO_SYMBOL $660C
COMMENT $660E move to the corner, and draw a dot at every corner
FORCE_SYMBOL $660E VIA_port_a
COMMENT $6610 Blank low, zero high?
FORCE_NO_SYMBOL $6610
FORCE_SYMBOL $6612 VIA_cntl
COMMENT $6615 Enable mux
FORCE_SYMBOL $6615 VIA_port_b
COMMENT $6617 Clear shift regigster
FORCE_SYMBOL $6617 VIA_shift_reg
COMMENT $6619 Disable mux
FORCE_SYMBOL $6619 VIA_port_b
COMMENT $661B Store X in D/A register
FORCE_SYMBOL $661B VIA_port_a
COMMENT $661D enable timer
FORCE_SYMBOL $661D VIA_t1_cnt_hi
COMMENT $661F preload shift
FORCE_NO_SYMBOL $661F
COMMENT $6621 end a move to
FORCE_NO_SYMBOL $6621
FORCE_SYMBOL $6623 VIA_int_flags
COMMENT $6627 Store in VIA shift register
FORCE_SYMBOL $6627 VIA_shift_reg
COMMENT_LINE $6629 delay for dot dwell
FORCE_SYMBOL $6629 endstage
FORCE_SYMBOL $662C STAGE_3
COMMENT $663A Blank beam in VIA shift register
FORCE_SYMBOL $663A VIA_shift_reg
FORCE_NO_SYMBOL $663C
COMMENT $663E /BLANK low and /ZERO low
FORCE_SYMBOL $663E VIA_cntl
FORCE_NO_SYMBOL $6641
COMMENT $6643 /BLANK low and /ZERO low
FORCE_SYMBOL $6643 VIA_cntl
COMMENT $664D Blank beam in VIA shift register
FORCE_SYMBOL $664D VIA_shift_reg
COMMENT $664F /BLANK low and /ZERO low
FORCE_SYMBOL $664F VIA_cntl
COMMENT_LINE $6652 in a scale
COMMENT_LINE $6652 in b intensity
FORCE_NO_SYMBOL $6652
COMMENT $6656 to timer t1
FORCE_SYMBOL $6656 VIA_t1_cnt_lo
COMMENT $6658 Store intensity in D/A
FORCE_SYMBOL $6658 VIA_port_a
COMMENT $665A mux disabled channel 2
FORCE_NO_SYMBOL $665A
FORCE_SYMBOL $665D VIA_port_b
COMMENT $665F mux enabled channel 2
FORCE_SYMBOL $665F VIA_port_b
COMMENT $6661 turn off mux
FORCE_SYMBOL $6661 VIA_port_b
FORCE_SYMBOL $6663 rotList
COMMENT_LINE $6666 ;;;;;;;;;;;;;;;; one draw rotated start
FORCE_NO_SYMBOL $6666
COMMENT $6668 Store Y in D/A register
FORCE_SYMBOL $6668 VIA_port_a
COMMENT $666A Blank low, zero high?
FORCE_NO_SYMBOL $666A
FORCE_SYMBOL $666C VIA_cntl
COMMENT $666F Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $666F VIA_port_b
COMMENT $6671 Clear shift regigster
FORCE_SYMBOL $6671 VIA_shift_reg
COMMENT $6673 Disable mux
FORCE_SYMBOL $6673 VIA_port_b
COMMENT $6675 Store X in D/A register
FORCE_SYMBOL $6675 VIA_port_a
COMMENT $6677 enable timer
FORCE_SYMBOL $6677 VIA_t1_cnt_hi
COMMENT $6679 get count of vectors
FORCE_NO_SYMBOL $6679
FORCE_SYMBOL $667B tmp_count2
FORCE_NO_SYMBOL $667E
FORCE_NO_SYMBOL $6681
FORCE_SYMBOL $6683 VIA_int_flags
COMMENT $6687 Clear shift register (blank output)
FORCE_SYMBOL $6687 VIA_shift_reg
FORCE_NO_SYMBOL $6689
COMMENT $668B Send Y to A/D
FORCE_SYMBOL $668B VIA_port_a
COMMENT $668D Enable mux
FORCE_SYMBOL $668D VIA_port_b
COMMENT $668F Disable mux
FORCE_SYMBOL $668F VIA_port_b
COMMENT $6691 Send X to A/D
FORCE_SYMBOL $6691 VIA_port_a
COMMENT $6693 Shift reg=$FF (solid line), T1H=0
FORCE_NO_SYMBOL $6693
COMMENT $6696 Put pattern in shift register
FORCE_SYMBOL $6696 VIA_shift_reg
COMMENT $6698 Set T1H (scale factor?)
FORCE_SYMBOL $6698 VIA_t1_cnt_hi
COMMENT $669A B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $669A
COMMENT $669C Point to next coordinate pair
FORCE_NO_SYMBOL $669C
COMMENT $669E Wait for T1 to time out
FORCE_SYMBOL $669E VIA_int_flags
COMMENT $66A2 Decrement line count
FORCE_SYMBOL $66A2 tmp_count2
COMMENT $66A5 Go back for more points
COMMENT $66A7 Clear shift register (blank output)
FORCE_SYMBOL $66A7 VIA_shift_reg
COMMENT_LINE $66A9 ;;;;;;;;;;;;;;;; one draw rotated end
FORCE_NO_SYMBOL $66A9
COMMENT $66AB /BLANK low and /ZERO low
FORCE_SYMBOL $66AB VIA_cntl
COMMENT $66AE scale factor
FORCE_SYMBOL $66AE scale_3d_move
COMMENT $66B1 move to time 1 lo, this means scaling
FORCE_SYMBOL $66B1 VIA_t1_cnt_lo
FORCE_SYMBOL $66B3 s_pos_3d
COMMENT $66B5 Store Y in D/A register
FORCE_SYMBOL $66B5 VIA_port_a
COMMENT $66B7 Blank low, zero high?
FORCE_NO_SYMBOL $66B7
FORCE_SYMBOL $66B9 VIA_cntl
COMMENT $66BC Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $66BC VIA_port_b
COMMENT $66BE Clear shift regigster
FORCE_SYMBOL $66BE VIA_shift_reg
COMMENT $66C0 Disable mux
FORCE_SYMBOL $66C0 VIA_port_b
COMMENT $66C2 Store X in D/A register
FORCE_SYMBOL $66C2 VIA_port_a
COMMENT $66C4 enable timer
FORCE_SYMBOL $66C4 VIA_t1_cnt_hi
FORCE_SYMBOL $66C6 s_angle_x_3d
FORCE_SYMBOL $66C8 angle_x
FORCE_SYMBOL $66CB s_angle_z_3d
FORCE_SYMBOL $66CD angle_z
COMMENT $66D0 overkill - but saves memory
FORCE_SYMBOL $66D0 init_all
COMMENT $66D3 scale factor
FORCE_SYMBOL $66D3 scale_3d_move
FORCE_NO_SYMBOL $66D6
FORCE_SYMBOL $66DA s_offset_3d
FORCE_NO_SYMBOL $66E1
FORCE_SYMBOL $66E5 s_angle_x_3d
FORCE_SYMBOL $66E7 s_angle_x_3d
FORCE_NO_SYMBOL $66E9
FORCE_SYMBOL $66ED s_angle_x_3d
FORCE_SYMBOL $66EF s_angle_y_3d
FORCE_SYMBOL $66F1 s_angle_y_3d
FORCE_NO_SYMBOL $66F3
FORCE_SYMBOL $66F7 s_angle_y_3d
FORCE_SYMBOL $66F9 s_angle_z_3d
FORCE_SYMBOL $66FB s_angle_z_3d
FORCE_NO_SYMBOL $66FD
FORCE_SYMBOL $6701 s_angle_z_3d
FORCE_SYMBOL $6705 s_offset_3d
COMMENT_LINE $6707 STA scale_3d_move ; move to time 1 lo, this means scaling
FORCE_SYMBOL $6707 scale_3d_move
FORCE_NO_SYMBOL $670C
FORCE_NO_SYMBOL $6710
COMMENT $6712 move to time 1 lo, this means scaling
FORCE_SYMBOL $6712 VIA_t1_cnt_lo
FORCE_SYMBOL $6714 s_vlist_3d
FORCE_NO_SYMBOL $6716
FORCE_SYMBOL $6718 VIA_int_flags
FORCE_SYMBOL $671C myDraw_VL_mode4_3d
FORCE_NO_SYMBOL $671F
COMMENT $6721 /BLANK low and /ZERO low
FORCE_SYMBOL $6721 VIA_cntl
FORCE_SYMBOL $6724 s_scale_3d
FORCE_SYMBOL $6727 s_vlist_3d
FORCE_SYMBOL $6729 s_pos_3d
FORCE_NO_SYMBOL $672C
FORCE_SYMBOL $672E s_angle_x_3d
FORCE_SYMBOL $6730 s_angle_y_3d
FORCE_SYMBOL $6732 s_angle_z_3d
FORCE_SYMBOL $6734 Letter3d
FORCE_NO_SYMBOL $6737
FORCE_SYMBOL $6739 last_button_state
FORCE_SYMBOL $673C current_button_state
COMMENT $673F no music is playing ->0
FORCE_SYMBOL $673F Vec_Music_Flag
COMMENT $6742 shadow regs
FORCE_SYMBOL $6742 Init_Music_Buf
COMMENT $6745 ROM function that does the sound playing
FORCE_SYMBOL $6745 Do_Sound
FORCE_NO_SYMBOL $6748
FORCE_SYMBOL $674A angle_x
FORCE_SYMBOL $674D angle_y
FORCE_SYMBOL $6750 angle_z
FORCE_NO_SYMBOL $6753
FORCE_SYMBOL $6755 scale_3d
FORCE_SYMBOL $6758 letters_3d
FORCE_SYMBOL $675F g_3d
FORCE_NO_SYMBOL $6762
FORCE_SYMBOL $676B a_3d
FORCE_SYMBOL $6777 m_3d
FORCE_SYMBOL $6783 e_3d
FORCE_SYMBOL $678F o_3d
FORCE_NO_SYMBOL $6792
FORCE_SYMBOL $679B v_3d
FORCE_SYMBOL $67A7 e_3d
FORCE_SYMBOL $67AD init_3d_letter_jsr
FORCE_SYMBOL $67B4 r_3d
FORCE_SYMBOL $67BA init_3d_letter_jsr
FORCE_NO_SYMBOL $67BD
FORCE_SYMBOL $67C0 s_vlist_3d
FORCE_SYMBOL $67C2 scale_3d_move
COMMENT $67C5 this piece of music
FORCE_SYMBOL $67C5 gameOverMusic
COMMENT $67C8 NOW
FORCE_SYMBOL $67C8 PLY_INIT_ALL
FORCE_NO_SYMBOL $67CB
FORCE_SYMBOL $67CE return_state
FORCE_SYMBOL $67D1 gameOverIntensity
FORCE_SYMBOL $67D4 DECREASE
FORCE_SYMBOL $67D6 gameOverCounter1
FORCE_NO_SYMBOL $67D9
COMMENT $67DB /BLANK low and /ZERO low
FORCE_SYMBOL $67DB VIA_cntl
COMMENT $67DD is a button pressed?
FORCE_SYMBOL $67DD getButtonState
FORCE_SYMBOL $67E4 Wait_Recal
FORCE_SYMBOL $67E7 PLY_PLAY
FORCE_SYMBOL $67EA songOver
COMMENT $67F1 do_ym_sound2
FORCE_SYMBOL $67F1 do_ym_sound2_no_sfx
COMMENT $67F4 has a nice long moveto
FORCE_SYMBOL $67F4 draw_Score_game
COMMENT $67F7 intensity to $3f, gets destroyed
FORCE_SYMBOL $67F7 Intensity_3F
FORCE_SYMBOL $67FA scale_3d_move
FORCE_NO_SYMBOL $67FF
FORCE_SYMBOL $6803 scale_3d_move
FORCE_SYMBOL $6808 gameOverIntensity
FORCE_SYMBOL $680B gameOverCounter1
FORCE_SYMBOL $6810 DECREASE
FORCE_SYMBOL $6812 gameOverCounter1
FORCE_SYMBOL $6815 gameOverIntensity
FORCE_SYMBOL $6818 Intensity_a
FORCE_SYMBOL $681B letters_3d
FORCE_SYMBOL $681F print3dLetter
FORCE_SYMBOL $6822 Letter3d
FORCE_SYMBOL $6824 s_vlist_3d
FORCE_SYMBOL $6828 angle_x
FORCE_SYMBOL $682B angle_x
FORCE_NO_SYMBOL $682E
FORCE_SYMBOL $6832 angle_x
COMMENT_LINE $6837 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6837 **********************************************************
COMMENT_LINE $6837 input list in X
COMMENT_LINE $6837 destroys u
COMMENT_LINE $6837 0 move
COMMENT_LINE $6837 negative use as shift
COMMENT_LINE $6837 positive end
FORCE_NO_SYMBOL $6837
COMMENT $6839 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $6839 VIA_aux_cntl
FORCE_NO_SYMBOL $683B
COMMENT $683D skip scale info
FORCE_NO_SYMBOL $683D
COMMENT_LINE $6843 VIA values back to default
COMMENT $6843 [6] check $ce = light off
FORCE_NO_SYMBOL $6843
COMMENT $6846 [4] Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $6846 VIA_aux_cntl
COMMENT $684A [4] $CC /BLANK low and /ZERO low
FORCE_SYMBOL $684A VIA_cntl
FORCE_NO_SYMBOL $684D
FORCE_SYMBOL $6851 VIA_cntl
FORCE_NO_SYMBOL $6853
COMMENT $6855 (2) [4] Send Y to A/D
FORCE_SYMBOL $6855 VIA_port_a
COMMENT $6857 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $6857 VIA_port_b
COMMENT $6859 [6] Disable mux
FORCE_SYMBOL $6859 VIA_port_b
COMMENT $685B [6] Send X to A/D
FORCE_SYMBOL $685B VIA_port_a
COMMENT $685D $ee = light ON, ZERO OFF
FORCE_NO_SYMBOL $685D
COMMENT $685F [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $685F VIA_t1_cnt_hi
COMMENT_LINE $6861 light on
COMMENT $6861 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $6861 VIA_cntl
COMMENT_LINE $6863 24 cycles -> light off
FORCE_NO_SYMBOL $6863
FORCE_NO_SYMBOL $6865
COMMENT $6867 [7]
FORCE_NO_SYMBOL $6867
COMMENT $6869 [3]
COMMENT $686B [3]
COMMENT $686D [3]
FORCE_NO_SYMBOL $686F
FORCE_SYMBOL $6873 VIA_cntl
FORCE_NO_SYMBOL $6875
COMMENT $6877 (2) [4] Send Y to A/D
FORCE_SYMBOL $6877 VIA_port_a
COMMENT $6879 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $6879 VIA_port_b
COMMENT $687B [6] Disable mux
FORCE_SYMBOL $687B VIA_port_b
COMMENT $687D [6] Send X to A/D
FORCE_SYMBOL $687D VIA_port_a
COMMENT $687F [4] enable timer 1 (6 cycles)
FORCE_SYMBOL $687F VIA_t1_cnt_hi
COMMENT_LINE $6881 light on
FORCE_NO_SYMBOL $6881
FORCE_NO_SYMBOL $6883
COMMENT_LINE $6885 stb <VIA_cntl ; [4] ZERO disabled, and BLANK disabled
COMMENT_LINE $6885 24 cycles -> light off
COMMENT $6885 [7]
FORCE_NO_SYMBOL $6885
COMMENT $6887 [3]
COMMENT $6889 [3]
COMMENT $688B [3]
COMMENT_LINE $688D Cosinus data
COMMENT $688D 11
COMMENT $6898 22
COMMENT $68A3 33
COMMENT $68AE 44
COMMENT $68B9 55
COMMENT_LINE $68CD Sinus data
COMMENT $68CD 11
COMMENT $68D8 22
COMMENT $68E3 33
COMMENT $68EE 44
COMMENT $68F9 55
COMMENT_LINE $690D this file is part of Release, written by Malban in 2017
FORCE_SYMBOL $690D cosinus3d
FORCE_SYMBOL $6910 sinus3d
FORCE_SYMBOL $6913 angle_x
FORCE_SYMBOL $6918 cosx
FORCE_SYMBOL $691D sinx
FORCE_SYMBOL $6920 angle_y
FORCE_SYMBOL $6925 cosy
FORCE_SYMBOL $692A siny
FORCE_SYMBOL $692D angle_z
FORCE_SYMBOL $6932 cosz
FORCE_SYMBOL $6937 sinz
FORCE_SYMBOL $693E _100z
FORCE_SYMBOL $6941 _100zi
FORCE_SYMBOL $6944 sinz
FORCE_SYMBOL $6947 cosy
COMMENT $6958 here we can use this as negd
COMMENT $6959 since the low nibble of b doesn't interest us
COMMENT $695D this divides d by 64
FORCE_SYMBOL $6961 _100y
FORCE_SYMBOL $6965 _100yi
FORCE_SYMBOL $6968 cosz
FORCE_SYMBOL $696B cosy
COMMENT $697C here we can use this as negd
COMMENT $697D since the low nibble of b doesn't interest us
COMMENT $6981 this divides d by 64
FORCE_SYMBOL $6985 _100x
FORCE_SYMBOL $6989 _100xi
FORCE_SYMBOL $698C cosx
FORCE_SYMBOL $698F _010z
FORCE_SYMBOL $6993 _010yi
FORCE_SYMBOL $6996 siny
FORCE_SYMBOL $6999 cosx
COMMENT $69AA here we can use this as negd
COMMENT $69AB since the low nibble of b doesn't interest us
COMMENT $69AF this divides d by 64
FORCE_SYMBOL $69B3 _010x
FORCE_SYMBOL $69B6 sinz
FORCE_SYMBOL $69B9 _010x
COMMENT $69CA here we can use this as negd
COMMENT $69CB since the low nibble of b doesn't interest us
COMMENT $69CF this divides d by 64
FORCE_SYMBOL $69D3 _010y
FORCE_SYMBOL $69D6 cosz
FORCE_SYMBOL $69D9 sinx
COMMENT $69EA here we can use this as negd
COMMENT $69EB since the low nibble of b doesn't interest us
COMMENT $69EF this divides d by 64
FORCE_SYMBOL $69F4 _010y
FORCE_SYMBOL $69F7 _010y
FORCE_SYMBOL $69FB _010yi
FORCE_SYMBOL $69FE cosz
FORCE_SYMBOL $6A01 _010x
COMMENT $6A12 here we can use this as negd
COMMENT $6A13 since the low nibble of b doesn't interest us
COMMENT $6A17 this divides d by 64
FORCE_SYMBOL $6A1B _010x
FORCE_SYMBOL $6A1E sinz
FORCE_SYMBOL $6A21 sinx
COMMENT $6A32 here we can use this as negd
COMMENT $6A33 since the low nibble of b doesn't interest us
COMMENT $6A37 this divides d by 64
FORCE_SYMBOL $6A3B _010x
FORCE_SYMBOL $6A3E _010x
FORCE_SYMBOL $6A42 _010xi
FORCE_SYMBOL $6A45 cosx
FORCE_SYMBOL $6A48 _110z
FORCE_SYMBOL $6A4C _110zi
FORCE_SYMBOL $6A4F sinx
FORCE_SYMBOL $6A53 helper
FORCE_SYMBOL $6A56 siny
FORCE_SYMBOL $6A59 cosx
COMMENT $6A6A here we can use this as negd
COMMENT $6A6B since the low nibble of b doesn't interest us
COMMENT $6A6F this divides d by 64
FORCE_SYMBOL $6A73 cosy
FORCE_SYMBOL $6A76 _110x
FORCE_SYMBOL $6A79 cosz
FORCE_SYMBOL $6A7C helper
COMMENT $6A8D here we can use this as negd
COMMENT $6A8E since the low nibble of b doesn't interest us
COMMENT $6A92 this divides d by 64
FORCE_SYMBOL $6A96 _110y
FORCE_SYMBOL $6A99 sinz
FORCE_SYMBOL $6A9C _110x
COMMENT $6AAD here we can use this as negd
COMMENT $6AAE since the low nibble of b doesn't interest us
COMMENT $6AB2 this divides d by 64
FORCE_SYMBOL $6AB6 _110y
FORCE_SYMBOL $6AB9 _110y
FORCE_SYMBOL $6ABD _110yi
FORCE_SYMBOL $6AC0 cosz
FORCE_SYMBOL $6AC3 _110x
COMMENT $6AD4 here we can use this as negd
COMMENT $6AD5 since the low nibble of b doesn't interest us
COMMENT $6AD9 this divides d by 64
FORCE_SYMBOL $6ADD _110x
FORCE_SYMBOL $6AE0 sinz
FORCE_SYMBOL $6AE3 helper
COMMENT $6AF4 here we can use this as negd
COMMENT $6AF5 since the low nibble of b doesn't interest us
COMMENT $6AF9 this divides d by 64
FORCE_SYMBOL $6AFE _110x
FORCE_SYMBOL $6B01 _110x
FORCE_SYMBOL $6B05 _110xi
FORCE_SYMBOL $6B08 cosx
FORCE_SYMBOL $6B0B _N10z
FORCE_SYMBOL $6B0F _N10zi
FORCE_SYMBOL $6B12 sinx
FORCE_SYMBOL $6B16 helper
FORCE_SYMBOL $6B19 siny
FORCE_SYMBOL $6B1C cosx
COMMENT $6B2D here we can use this as negd
COMMENT $6B2E since the low nibble of b doesn't interest us
COMMENT $6B32 this divides d by 64
FORCE_SYMBOL $6B36 cosy
FORCE_SYMBOL $6B39 _N10x
FORCE_SYMBOL $6B3C cosz
FORCE_SYMBOL $6B3F helper
COMMENT $6B50 here we can use this as negd
COMMENT $6B51 since the low nibble of b doesn't interest us
COMMENT $6B55 this divides d by 64
FORCE_SYMBOL $6B59 _N10y
FORCE_SYMBOL $6B5C sinz
FORCE_SYMBOL $6B5F _N10x
COMMENT $6B70 here we can use this as negd
COMMENT $6B71 since the low nibble of b doesn't interest us
COMMENT $6B75 this divides d by 64
FORCE_SYMBOL $6B79 _N10y
FORCE_SYMBOL $6B7C _N10y
FORCE_SYMBOL $6B80 _N10yi
FORCE_SYMBOL $6B83 cosz
FORCE_SYMBOL $6B86 _N10x
COMMENT $6B97 here we can use this as negd
COMMENT $6B98 since the low nibble of b doesn't interest us
COMMENT $6B9C this divides d by 64
FORCE_SYMBOL $6BA0 _N10x
FORCE_SYMBOL $6BA3 sinz
FORCE_SYMBOL $6BA6 helper
COMMENT $6BB7 here we can use this as negd
COMMENT $6BB8 since the low nibble of b doesn't interest us
COMMENT $6BBC this divides d by 64
FORCE_SYMBOL $6BC1 _N10x
FORCE_SYMBOL $6BC4 _N10x
FORCE_SYMBOL $6BC8 _N10xi
COMMENT_LINE $6BCC init_A:
COMMENT_LINE $6BCC jsr  initStart
COMMENT_LINE $6BCC INIT_1_1_0_A
COMMENT_LINE $6BCC INIT_0_1_0_A
COMMENT_LINE $6BCC INIT_1_0_0_A
COMMENT_LINE $6BCC INIT_N_1_0
COMMENT_LINE $6BCC RTS
COMMENT_LINE $6BCC init_E:
COMMENT_LINE $6BCC jsr  initStart
COMMENT_LINE $6BCC INIT_0_1_0_A
COMMENT_LINE $6BCC INIT_N_1_0
COMMENT_LINE $6BCC INIT_1_0_0
COMMENT_LINE $6BCC RTS
COMMENT_LINE $6BCC init_G:
COMMENT_LINE $6BCC jsr  initStart
COMMENT_LINE $6BCC INIT_1_0_0_A
COMMENT_LINE $6BCC INIT_0_1_0_A
COMMENT_LINE $6BCC INIT_N_N_0
COMMENT_LINE $6BCC RTS
COMMENT_LINE $6BCC init_M:
COMMENT_LINE $6BCC jsr  initStart
COMMENT_LINE $6BCC INIT_1_0_0_A
COMMENT_LINE $6BCC INIT_1_1_0_A
COMMENT_LINE $6BCC INIT_N_1_0
COMMENT_LINE $6BCC RTS
COMMENT_LINE $6BCC init_O:
COMMENT_LINE $6BCC jsr  initStart
COMMENT_LINE $6BCC INIT_1_0_0_A
COMMENT_LINE $6BCC INIT_0_1_0_A
COMMENT_LINE $6BCC INIT_N_N_0
COMMENT_LINE $6BCC RTS
COMMENT_LINE $6BCC init_R:
COMMENT_LINE $6BCC jsr  initStart
COMMENT_LINE $6BCC INIT_0_1_0_A
COMMENT_LINE $6BCC INIT_1_0_0
COMMENT_LINE $6BCC INIT_N_N_0
COMMENT_LINE $6BCC RTS
COMMENT_LINE $6BCC init_V:
COMMENT_LINE $6BCC jsr  initStart
COMMENT_LINE $6BCC INIT_1_0_0_A
COMMENT_LINE $6BCC INIT_1_N_0_A
COMMENT_LINE $6BCC INIT_1_1_0
COMMENT_LINE $6BCC RTS
COMMENT $6BCC A list of all single vectorlists in this
COMMENT $6BCE E
COMMENT $6BD0 G
COMMENT $6BD2 M
COMMENT $6BD4 O
COMMENT $6BD6 R
COMMENT $6BD8 V
COMMENT $6BDA mode, y, x
COMMENT $6BDE mode, y, x
COMMENT $6BE2 mode, y, x
COMMENT $6BE6 mode, y, x
COMMENT $6BEA mode, y, x
COMMENT $6BEE mode, y, x
COMMENT $6BF2 mode, y, x
COMMENT $6BF6 mode, y, x
COMMENT $6BFA mode, y, x
COMMENT $6BFE endmarker (1)
COMMENT $6BFF mode, y, x
COMMENT $6C03 mode, y, x
COMMENT $6C07 mode, y, x
COMMENT $6C0B mode, y, x
COMMENT $6C0F mode, y, x
COMMENT $6C13 mode, y, x
COMMENT $6C17 mode, y, x
COMMENT $6C1B mode, y, x
COMMENT $6C1F mode, y, x
COMMENT $6C23 endmarker (1)
COMMENT $6C24 mode, y, x
COMMENT $6C28 mode, y, x
COMMENT $6C2C mode, y, x
COMMENT $6C30 mode, y, x
COMMENT $6C34 mode, y, x
COMMENT $6C38 mode, y, x
COMMENT $6C3C mode, y, x
COMMENT $6C40 mode, y, x
COMMENT $6C44 mode, y, x
COMMENT $6C48 mode, y, x
COMMENT $6C4C mode, y, x
COMMENT $6C50 endmarker (1)
COMMENT $6C51 mode, y, x
COMMENT $6C55 mode, y, x
COMMENT $6C59 mode, y, x
COMMENT $6C5D mode, y, x
COMMENT $6C61 mode, y, x
COMMENT $6C65 mode, y, x
COMMENT $6C69 mode, y, x
COMMENT $6C6D endmarker (1)
COMMENT $6C6E mode, y, x
COMMENT $6C72 mode, y, x
COMMENT $6C76 mode, y, x
COMMENT $6C7A mode, y, x
COMMENT $6C7E mode, y, x
COMMENT $6C82 mode, y, x
COMMENT $6C86 mode, y, x
COMMENT $6C8A mode, y, x
COMMENT $6C8E mode, y, x
COMMENT $6C92 endmarker (1)
COMMENT $6C93 mode, y, x
COMMENT $6C97 mode, y, x
COMMENT $6C9B mode, y, x
COMMENT $6C9F mode, y, x
COMMENT $6CA3 mode, y, x
COMMENT $6CA7 mode, y, x
COMMENT $6CAB mode, y, x
COMMENT $6CAF endmarker (1)
COMMENT $6CB0 mode, y, x
COMMENT $6CB4 mode, y, x
COMMENT $6CB8 mode, y, x
COMMENT $6CBC mode, y, x
COMMENT $6CC0 mode, y, x
COMMENT $6CC4 endmarker (1)
COMMENT_LINE $6CC5 ***************************************************************************
COMMENT_LINE $6CC5 ***************************************************************************
COMMENT_LINE $6CC5 this file is part of Release, written by Malban in 2017
COMMENT_LINE $6CC5 This is more or less the same as the "complete" Arkos player
COMMENT_LINE $6CC5 only this one assumes only music played is on channel 1
COMMENT $0000 done
FORCE_SYMBOL $6CC5 Channel1Data
COMMENT_LINE $6CC9 Manage Speed. If Speed counter is over, we have to read the Pattern further.
FORCE_SYMBOL $6CC9 PLY_SPEEDCPT
COMMENT_LINE $6CD0 Moving forward in the Pattern. Test if it is not over.
FORCE_SYMBOL $6CD0 PLY_HEIGHTCPT
COMMENT_LINE $6CD5 Pattern Over. We have to read the Linker.
COMMENT_LINE $6CD5 Get the Transpositions, if they have changed, or detect the Song Ending !
FORCE_SYMBOL $6CD5 PLY_LINKER_PT
COMMENT_LINE $6CDA A =
COMMENT_LINE $6CDA {DB PatternState :
COMMENT_LINE $6CDA b5 = New Special Track ?
COMMENT_LINE $6CDA b4 = New Height ?
COMMENT_LINE $6CDA b3 = New Transposition 3 ?
COMMENT_LINE $6CDA b2 = New Transposition 2 ?
COMMENT_LINE $6CDA b1 = New Transposition 1 ?
COMMENT_LINE $6CDA b0 = Song over ? 1 = song over - no new bytes following -> loop possible...
COMMENT_LINE $6CDD Song over ! We read the address of the Loop point.
COMMENT_LINE $6CDD if b0 == 1
COMMENT_LINE $6CDD dw Pointeur on Linker to loop. Restart reading.
FORCE_NO_SYMBOL $6CDD
COMMENT_LINE $6CDF We know the Song won't restart now, so we can skip the first bit.                                                                                      ;WE KNOW THE SONG WON'T RESTART NOW, SO WE CAN SKIP THE FIRST BIT.
COMMENT_LINE $6CE1 now it looks like we just started a new pattern!
COMMENT $6CE1 skip the song over, when we just start a new pattern - cant be over yet, can it?
COMMENT_LINE $6CE2 if b0 = 0 :
COMMENT_LINE $6CE2 DB Transposition 1 if Transposition1?
COMMENT_LINE $6CE2 DB Transposition 2 if Transposition2?
COMMENT_LINE $6CE2 DB Transposition 3 if Transposition3?
COMMENT_LINE $6CE2 DW Track1
COMMENT_LINE $6CE2 DW Track2
COMMENT_LINE $6CE2 DW Track3
COMMENT_LINE $6CE2 DB Height if New Height?.
COMMENT_LINE $6CE2 DW Special Track if New Special Track?
COMMENT_LINE $6CE2 } * Length + 1		(+1 because the Loop item has to be added to the list).
FORCE_NO_SYMBOL $6CE2
FORCE_NO_SYMBOL $6CE7
FORCE_NO_SYMBOL $6CE9
FORCE_SYMBOL $6CEF PLY_HEIGHT
FORCE_NO_SYMBOL $6CF2
COMMENT $6CF4 this pattern was read, whenever the tracks are playered - the next pattern will start here
FORCE_SYMBOL $6CF4 PLY_LINKER_PT
COMMENT_LINE $6CF7 a new pattern allways resets the special track - whether an old one - or a just gotten one
FORCE_SYMBOL $6CF7 PLY_SAVESPECIALTRACK
FORCE_SYMBOL $6CFA PLY_SPECIALTRACK_PT
COMMENT_LINE $6CFD Reset the SpecialTrack/Tracks line counter.
COMMENT_LINE $6CFD We can't rely on the song data, because the Pattern Height is not related to the Tracks Height.
COMMENT_LINE $6CFD countdowns allways test for dec->beq - so placing a one is a garantied "reset"
FORCE_NO_SYMBOL $6CFD
FORCE_SYMBOL $6CFF PLY_SPECIALTRACK_WAITCOUNTER
FORCE_SYMBOL $6D05 PLY_HEIGHT
FORCE_SYMBOL $6D08 PLY_HEIGHTCPT
COMMENT_LINE $6D0B Read the Special Track/Tracks.
COMMENT_LINE $6D0B ------------------------------
COMMENT_LINE $6D0B note:
COMMENT_LINE $6D0B vectrex player does not support digidrums!
COMMENT_LINE $6D0B SpecialTracks
COMMENT_LINE $6D0B -------------
COMMENT_LINE $6D0B DB Data
COMMENT_LINE $6D0B b0 = Data (1) or Wait (0)
COMMENT_LINE $6D0B If Wait :
COMMENT_LINE $6D0B b7-b1 = Wait b7-b1 lines. (1=1 line, 0=128 lines)
COMMENT_LINE $6D0B If Data :
COMMENT_LINE $6D0B b1 = Speed (0) or Digidrum (1) ?
COMMENT_LINE $6D0B b7-b2 = Value. If value = 0, escape code : read next byte to know value.
COMMENT_LINE $6D0B If Escape Code :
COMMENT_LINE $6D0B {
COMMENT_LINE $6D0B DB Value
COMMENT_LINE $6D0B }
COMMENT_LINE $6D0B Read the Special Track.
FORCE_SYMBOL $6D0B PLY_SPECIALTRACK_WAITCOUNTER
FORCE_SYMBOL $6D10 PLY_SPECIALTRACK_PT
COMMENT $6D15 if b0=0 -> carry will be clear -> jump to WAIT
COMMENT $6D18 regardless if speed or digidrum -> if a right shift results in 0 A, than we have an escape situation, if not -> jump
COMMENT $6D1B load the escaped (additional) value
COMMENT_LINE $6D1D if carry was = by the last right shift, the special track
COMMENT_LINE $6D1D denotes a digidrum, since it is not supported
COMMENT_LINE $6D1D we just ignore it and jump to the end
COMMENT $6D1F the data we got was the speed - store it
FORCE_SYMBOL $6D1F PLY_SPEED
COMMENT $6D22 reset wait counter, next round might be more waiting :-)
FORCE_NO_SYMBOL $6D22
COMMENT $6D24 is this used anywhere?
FORCE_SYMBOL $6D24 PLY_SPECIALTRACK_PT
FORCE_SYMBOL $6D27 PLY_SPECIALTRACK_WAITCOUNTER
COMMENT_LINE $6D2A Read the Track 1.
COMMENT_LINE $6D2A -----------------
COMMENT_LINE $6D2A Store the parameters, because the player below is called every frame, but the Read Track isn't.
FORCE_SYMBOL $6D2A PLY_TRACK_WAITCOUNTER
FORCE_SYMBOL $6D30 PLY_TRACK_PT
COMMENT $6D34 Full Optimisation ? If yes = Note only, no Pitch, no Volume, Same Instrument.
COMMENT $6D37 0-31 = Wait.
FORCE_NO_SYMBOL $6D37
COMMENT $6D3D 0 (32-32) = Escape Code for more Notes (parameters will be read)
COMMENT_LINE $6D3E Note. Parameters are present. But the note is only present if Note? flag is 1.
COMMENT_LINE $6D3E Read Parameters
COMMENT $6D40 Save Parameters.
FORCE_SYMBOL $6D40 tmp_track_param
COMMENT $6D43 is pitch following? -> load it
FORCE_NO_SYMBOL $6D43
FORCE_SYMBOL $6D49 PLY_TRACK_PITCHADD
COMMENT $6D4B is instrument following? -> load it
FORCE_NO_SYMBOL $6D4B
COMMENT_LINE $6D4F in a original parameter
COMMENT_LINE $6D4F use it to correct volume, if any
COMMENT_LINE $6D4F befor "destroying" a with instrument data
COMMENT $6D4F Volume ? If bit 4(0?) was 1, then volume exists on b3-b0 - inverted volume
FORCE_NO_SYMBOL $6D52
FORCE_SYMBOL $6D54 PLY_TRACK_VOLUME
FORCE_SYMBOL $6D58 tmp_track_instrument
COMMENT $6D5D load note to B
COMMENT_LINE $6D61 ---------
FORCE_SYMBOL $6D61 PLY_TRACK_PT
COMMENT $6D63 is param now, no need to save - accessed directly in full opt
FORCE_NO_SYMBOL $6D64
COMMENT_LINE $6D6A cc_out_save_note
COMMENT_LINE $6D6A no pitch
COMMENT_LINE $6D6A no vol
COMMENT_LINE $6D6A but certainly note
COMMENT_LINE $6D6C ---------
FORCE_NO_SYMBOL $6D6C
FORCE_NO_SYMBOL $6D6E
FORCE_SYMBOL $6D70 PLY_TRACK_PT
COMMENT_LINE $6D74 in b now note - if any
COMMENT_LINE $6D74 in a original parameter
COMMENT $6D74 Volume ? If bit 4(0?) was 1, then volume exists on b3-b0 - inverted volume
FORCE_NO_SYMBOL $6D77
FORCE_SYMBOL $6D79 PLY_TRACK_VOLUME
COMMENT_LINE $6D7B in b current note
COMMENT_LINE $6D7B in tmp_b_instrument the current instrument number
COMMENT_LINE $6D7B in tmp_d_param, the parameters of the last read track info
COMMENT_LINE $6D7B 76543210
COMMENT_LINE $6D7B pnivvvvo
COMMENT_LINE $6D7B DB Parameters
COMMENT_LINE $6D7B p = New Pitch ?
COMMENT_LINE $6D7B n = Note ?
COMMENT_LINE $6D7B i = New Instrument ? Only tested if Note? = 1.
COMMENT_LINE $6D7B v = Inverted Volume if Volume?=1. %0000 if Volume? is off.
COMMENT_LINE $6D7B o = Volume ?
COMMENT_LINE $6D7B No Wait command. Can be a Note and/or Effects.
FORCE_SYMBOL $6D7B tmp_track_param
FORCE_SYMBOL $6D7E PLY_TRACK_PT
COMMENT $6D80 Note ? If no Note, we don't have to test if a new Instrument is here.
FORCE_NO_SYMBOL $6D80
COMMENT $6D84 Transpose Note according to the Transposition in the Linker.
FORCE_SYMBOL $6D84 PLY_TRANSPOSITION
FORCE_SYMBOL $6D86 PLY_TRACK_NOTE
COMMENT $6D88 Reset the TrackPitch.
FORCE_NO_SYMBOL $6D88
FORCE_SYMBOL $6D8B PLY_TRACK_PITCH
COMMENT $6D8D New Instrument ?;
FORCE_NO_SYMBOL $6D8D
COMMENT $6D91 Same Instrument. We recover its address to restart it.
FORCE_SYMBOL $6D91 PLY_TRACK_SAVEPTINSTRUMENT
COMMENT $6D93 Reset the Instrument Speed Counter. Never seemed useful...
FORCE_SYMBOL $6D93 PLY_TRACK_INSTRUMENTSPEED
FORCE_SYMBOL $6D95 PLY_TRACK_INSTRUMENTSPEEDCPT
FORCE_SYMBOL $6D9A tmp_track_instrument
FORCE_SYMBOL $6D9F PLY_TRACK_INSTRUMENTSTABLEPT
FORCE_SYMBOL $6DA6 PLY_TRACK_INSTRUMENTSPEED
FORCE_SYMBOL $6DA8 PLY_TRACK_INSTRUMENTSPEEDCPT
COMMENT $6DAA When using the Instrument again, no need to give the Speed, it is skipped. ;WHEN USING THE INSTRUMENT AGAIN, NO NEED TO GIVE THE SPEED, IT IS SKIPPED.
FORCE_SYMBOL $6DAA PLY_TRACK_SAVEPTINSTRUMENT
FORCE_SYMBOL $6DB0 PLY_PSGREG13_RETRIG
FORCE_SYMBOL $6DB3 PLY_TRACK_INSTRUMENT
FORCE_NO_SYMBOL $6DB5
FORCE_SYMBOL $6DB7 PLY_TRACK_WAITCOUNTER
COMMENT_LINE $6DB9 leay     ArkosChannel, y
COMMENT_LINE $6DB9 cmpy     #ChannelDataEnd
COMMENT_LINE $6DB9 lbne     readnextchannel
FORCE_SYMBOL $6DB9 PLY_SPEED
FORCE_SYMBOL $6DBC PLY_SPEEDCPT
FORCE_SYMBOL $6DBF PLY_PLAY_1CHANNEL_PART2
FORCE_SYMBOL $6DC2 inMovePointer
COMMENT_LINE $6DC6 *****************************************************************************************************
COMMENT_LINE $6DC6 *****************************************************************************************************
COMMENT_LINE $6DC6 *****************************************************************************************************
FORCE_SYMBOL $6DC8 Channel1Data
COMMENT_LINE $6DCC LDD      #PLY_PSGREGISTERSARRAY; + 4
COMMENT_LINE $6DCC std      PLY_FREQ_REG
COMMENT_LINE $6DCC ldd      #PLY_PSGREGISTERSARRAY+8; + 10
COMMENT_LINE $6DCC std      PLY_VOL_REG
COMMENT_LINE $6DCC LDY      #Channel3Data
COMMENT_LINE $6DCC Play the Sound on Track
COMMENT_LINE $6DCC -------------------------
COMMENT_LINE $6DCC Plays the sound on each frame, but only save the forwarded Instrument pointer when Instrument Speed is reached.
COMMENT_LINE $6DCC This is needed because TrackPitch is involved in the Software Frequency/Hardware Frequency calculation, and is calculated every frame.
FORCE_SYMBOL $6DCC PLY_TRACK_PITCH
FORCE_SYMBOL $6DCE PLY_TRACK_PITCHADD
FORCE_SYMBOL $6DD0 PLY_TRACK_PITCH
COMMENT_LINE $6DD2 arithmetic shift right D (halfing and preserving sign)
COMMENT_LINE $6DD2 slow down pitch by quartering the current pitch
COMMENT_LINE $6DD2 (after the add)
COMMENT $6DD6 U = (PLY_TRACK_PITCH/4)
FORCE_SYMBOL $6DD8 PLY_TRACK_INSTRUMENT
COMMENT_LINE $6DDA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6DDA PLAY SOUND
COMMENT_LINE $6DDA ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $6DDA Plays a sound stream.
COMMENT_LINE $6DDA X Pointer to Instrument Data
COMMENT_LINE $6DDA Y Pointer to track data
COMMENT_LINE $6DDA U current track pitch
COMMENT_LINE $6DDA RET =
COMMENT_LINE $6DDA X =New Instrument pointer.
COMMENT_LINE $6DDA data in track record is set
COMMENT_LINE $6DDA instrument
COMMENT_LINE $6DDA DB FirstByte
COMMENT_LINE $6DDA if b0=0, NON-HARD sound. If b0=1, HARD Sound.
COMMENT_LINE $6DDF ************
COMMENT_LINE $6DDF SOFTWARE SOUND, b0 = 0
COMMENT_LINE $6DDF ************
COMMENT_LINE $6DDF 76543210
COMMENT_LINE $6DDF pavvvvn0
COMMENT_LINE $6DDF p = Pitch?
COMMENT_LINE $6DDF a = Arpeggio?
COMMENT_LINE $6DDF v = Volume
COMMENT_LINE $6DDF n = Second Byte needed? Needed when Noise, or Manual frequency, or noise with no sound.
COMMENT $6DDF is b1 (n) set
COMMENT $6DE0 if yes jump to read second byte
COMMENT $6DE2 for volume check copy the first byte to a
FORCE_NO_SYMBOL $6DE4
COMMENT $6DE6 if is 0 than no sound at all
COMMENT_LINE $6DE8 Null Volume. It means no Sound. We stop the Sound, the Noise, and it's over.
COMMENT_LINE $6DE8 STA      [PLY_VOL_REG]                ;We have to make the volume to 0, because if a bass Hard was activated before, we have to stop it.
COMMENT $6DEB these are the register mask bits for this sound (or this no sound)
FORCE_NO_SYMBOL $6DEB
FORCE_SYMBOL $6DED PLY_TRACK_REG_7
COMMENT_LINE $6DF2 A = volume
COMMENT_LINE $6DF2 Volume is here, no Second Byte needed. It means we have a simple Software sound (Sound = On, Noise = Off)
COMMENT_LINE $6DF2 We have to test Arpeggio and Pitch, however.
COMMENT $6DF2 tmp_volumeN ;Code Volume. volume of instrument minus inverted volume
FORCE_SYMBOL $6DF2 PLY_TRACK_VOLUME
COMMENT_LINE $6DF7 STA      [PLY_VOL_REG]
FORCE_NO_SYMBOL $6DFA
FORCE_SYMBOL $6DFC PLY_TRACK_REG_7
COMMENT $6DFF Needed for the subroutine to get the good flags.
COMMENT_LINE $6E02 in u frequency + pitch, in little endian order, ready to be written to psg
COMMENT_LINE $6E05 stu      [PLY_FREQ_REG]
FORCE_NO_SYMBOL $6E07
FORCE_SYMBOL $6E09 PLY_TRACK_REG_7
COMMENT_LINE $6E0C A second byte of instrument data
FORCE_NO_SYMBOL $6E0E
FORCE_SYMBOL $6E12 PLY_PSGREG6
FORCE_SYMBOL $6E15 PLY_TRACK_REG_7
FORCE_NO_SYMBOL $6E1A
FORCE_SYMBOL $6E1C PLY_TRACK_VOLUME
COMMENT_LINE $6E1E CODE VOLUME.
COMMENT_LINE $6E21 STA      [PLY_VOL_REG]
FORCE_NO_SYMBOL $6E26
FORCE_SYMBOL $6E2A PLY_TRACK_REG_7
COMMENT $6E2F Needed for the subroutine to get the good flags.
FORCE_NO_SYMBOL $6E30
COMMENT_LINE $6E37 stu      [PLY_FREQ_REG]               ; = frequency - u gotton from above jsr
COMMENT_LINE $6E39 u current track pitch
COMMENT_LINE $6E39 X is pointer to instrument
COMMENT_LINE $6E39 B = first byte of instrument + one ror
COMMENT_LINE $6E39 **********
COMMENT_LINE $6E39 HARD SOUND
COMMENT_LINE $6E39 **********
FORCE_NO_SYMBOL $6E39
COMMENT_LINE $6E3D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $6E3D PLY_TRACK_INSTRUMENTSPEEDCPT
FORCE_SYMBOL $6E41 PLY_TRACK_INSTRUMENT
FORCE_SYMBOL $6E43 PLY_TRACK_INSTRUMENTSPEED
FORCE_SYMBOL $6E45 PLY_TRACK_INSTRUMENTSPEEDCPT
FORCE_NO_SYMBOL $6E4A
COMMENT_LINE $6E4C lda #$3e
FORCE_SYMBOL $6E4F emptyStreamInMove
FORCE_SYMBOL $6E52 inMovePointer
FORCE_SYMBOL $6E58 musicOption
FORCE_SYMBOL $6E5D PLY_PLAY_1CHANNEL_PART1
FORCE_SYMBOL $6E60 PLY_PLAY_1CHANNEL_PART2_woy
COMMENT_LINE $6E64 in tmp_de all pitches together
COMMENT_LINE $6E64 pitch is a frequency modifier
COMMENT_LINE $6E64 arepgio is also a frequency modifier but indirect thru a note change
COMMENT_LINE $6E64 X Pointer to Instrument Data
COMMENT_LINE $6E64 U current track pitch
COMMENT_LINE $6E64 B = first byte of instrument data (ROR *3) (when from SOFTWARE SOUND)
COMMENT_LINE $6E64 Note (tmp_noteVolumne)
COMMENT_LINE $6E64 Inverted Volume (tmp_noteVolumne)
COMMENT_LINE $6E64 RET =
COMMENT_LINE $6E64 X = Instrument pointer.
COMMENT_LINE $6E64 u current frequency in little endian order, ready to be written to psg
COMMENT_LINE $6E64 y,b stays same
COMMENT_LINE $6E64 test for arpegio for later use
FORCE_NO_SYMBOL $6E64
COMMENT_LINE $6E68 Pitch ?
COMMENT_LINE $6E68 Test bit 5-1 of B Use BITA or BITB
FORCE_NO_SYMBOL $6E68
COMMENT_LINE $6E70 Arpeggio ?
FORCE_SYMBOL $6E70 PLY_TRACK_NOTE
COMMENT $6E72 reuse arpegio test from above
COMMENT $6E76 ADD ARPEGGIO TO NOTE.
COMMENT $6E78 was max note reached?
FORCE_NO_SYMBOL $6E78
COMMENT $6E7C if so set max note
FORCE_NO_SYMBOL $6E7C
COMMENT_LINE $6E7F in d now the note inclusive the arpegio
COMMENT $6E7F for pointer in table double it
FORCE_SYMBOL $6E81 PLY_FREQUENCYTABLE
FORCE_NO_SYMBOL $6E86
COMMENT $6E88 switching en dian anyway because PSG regs are sortof little endian
COMMENT_LINE $6E8F Vectrex
COMMENT_LINE $6E8F generated by using a PSG divider 16 and 1500000 Hz
COMMENT_LINE $6FAF use this to compare generated YM files with tracker
COMMENT_LINE $6FAF CPC
COMMENT_LINE $6FAF dw       3822,3608,3405,3214,3034,2863,2703,2551,2408,2273,2145,2025
COMMENT_LINE $6FAF dw       1911,1804,1703,1607,1517,1432,1351,1276,1204,1136,1073,1012
COMMENT_LINE $6FAF dw       956,902,851,804,758,716,676,638,602,568,536,506
COMMENT_LINE $6FAF dw       478,451,426,402,379,358,338,319,301,284,268,253
COMMENT_LINE $6FAF dw       239,225,213,201,190,179,169,159,150,142,134,127
COMMENT_LINE $6FAF dw       119,113,106,100,95,89,84,80,75,71,67,63
COMMENT_LINE $6FAF dw       60,56,53,50,47,45,42,40,38,36,34,32
COMMENT_LINE $6FAF dw       30,28,27,25,24,22,21,20,19,18,17,16
COMMENT_LINE $6FAF dw       15,14,13,13,12,11,11,10,9,9,8,8
COMMENT_LINE $6FAF dw       7,7,7,6,6,6,5,5,5,4,4,4
COMMENT_LINE $6FAF dw       4,4,3,3,3,3,3,2,2,2,2,2
COMMENT_LINE $6FAF dw       2,2,2,2,1,1,1,1,1,1,1,1
COMMENT_LINE $6FAF ******************
COMMENT_LINE $6FAF in u address of song
COMMENT_LINE $6FAF Header
COMMENT_LINE $6FAF ------
COMMENT_LINE $6FAF DB "AT10"
COMMENT_LINE $6FAF DB SampleChannel (1,2,3)
COMMENT_LINE $6FAF DB*3 YM Clock (little endian. 1000000=CPC, 1750000=Pentagon 128K, 1773400=ZX Spectrum/MSX, 2000000=Atari ST, or any other in case of custom frequency).
COMMENT_LINE $6FAF DB ReplayFrequency(0=13hz,1=25hz,2=50hz,3=100hz,4=150hz,5=300hz)
COMMENT_LINE $6FAF DB Speed (>=1)
COMMENT_LINE $6FAF dw Instruments Chunk Size (not including this Word)
COMMENT_LINE $6FAF {
COMMENT_LINE $6FAF dw Pointers on Instruments
COMMENT_LINE $6FAF } * nbInstruments
COMMENT_LINE $6FAF {
COMMENT_LINE $6FAF ds InstrumentData (see the Instrument structure below)
COMMENT_LINE $6FAF } * nbInstruments
COMMENT_LINE $6FAF Linker...
COMMENT_LINE $6FAF vectrex conversion skips the 9 "header" bytes and we start of directly at SPEED
COMMENT_LINE $6FAF these inits are by the original player "inherent"
COMMENT_LINE $6FAF since it uses selfmodifying code and the
COMMENT_LINE $6FAF init values are present in the code itself
FORCE_SYMBOL $6FAF arkosPlayerMemStart
FORCE_SYMBOL $6FB5 Clear_x_d
FORCE_NO_SYMBOL $6FB8
FORCE_SYMBOL $6FBB PLY_SPEEDCPT
FORCE_SYMBOL $6FBE PLY_HEIGHT
FORCE_NO_SYMBOL $6FCA
FORCE_SYMBOL $6FD5 PLY_RETRIGVALUE
FORCE_SYMBOL $6FD7 PLY_PSGREG13_RETRIG
COMMENT_LINE $6FDA no the player init
COMMENT $6FDC Copy Speed.
FORCE_SYMBOL $6FDC PLY_SPEED
COMMENT $6FDF Get Instruments chunk size.
FORCE_SYMBOL $6FE1 PLY_TRACK_INSTRUMENTSTABLEPT
COMMENT $6FE4 Skip Instruments to go to the Linker address.
COMMENT_LINE $6FE6 Get the pre-Linker information of the first pattern.
COMMENT_LINE $6FE6 Pre-Linker
COMMENT_LINE $6FE6 ----------
COMMENT_LINE $6FE6 First comes a unique bloc, just before the real Linker, and only used at the initialisation of the song. It is used to optimise the Looping of the song.
COMMENT_LINE $6FE6 DB First Height
COMMENT_LINE $6FE6 DB Transposition1
COMMENT_LINE $6FE6 DB Transposition2
COMMENT_LINE $6FE6 DB Transposition3
COMMENT_LINE $6FE6 DW Special Track
COMMENT_LINE $6FE6 after that the first pattern starts...
FORCE_SYMBOL $6FE8 PLY_HEIGHT
FORCE_SYMBOL $6FF2 PLY_SAVESPECIALTRACK
COMMENT_LINE $6FF5 Store the Linker address.
FORCE_SYMBOL $6FF5 PLY_LINKER_PT
COMMENT $6FF8 make sure the hardware envelope is in an "unkown" state
FORCE_NO_SYMBOL $6FF8
FORCE_SYMBOL $6FFA PLY_PSGREG13
COMMENT_LINE $6FFD Set the Instruments pointers to Instrument 0 data (Header has to be skipped).
FORCE_SYMBOL $6FFD PLY_TRACK_INSTRUMENTSTABLEPT
FORCE_NO_SYMBOL $7000
COMMENT_LINE $7002 Skip Instrument 0 Header.
FORCE_NO_SYMBOL $7002
FORCE_NO_SYMBOL $700A
FORCE_SYMBOL $7010 inMovePointer
FORCE_SYMBOL $7014 inMovePointer
FORCE_SYMBOL $7017 emptyStreamInMove
COMMENT_LINE $701E this file is part of Release, written by Malban in 2017
COMMENT_LINE $701E for more documentation see the Arkos player generated by Vide
FORCE_SYMBOL $701E musicOption
COMMENT_LINE $7025 Manage Speed. If Speed counter is over, we have to read the Pattern further.
FORCE_SYMBOL $7025 PLY_SPEEDCPT
COMMENT_LINE $702C Moving forward in the Pattern. Test if it is not over.
FORCE_SYMBOL $702C PLY_HEIGHTCPT
COMMENT_LINE $7031 Pattern Over. We have to read the Linker.
COMMENT_LINE $7031 Get the Transpositions, if they have changed, or detect the Song Ending !
FORCE_SYMBOL $7031 PLY_LINKER_PT
COMMENT_LINE $7036 A =
COMMENT_LINE $7036 {DB PatternState :
COMMENT_LINE $7036 b5 = New Special Track ?
COMMENT_LINE $7036 b4 = New Height ?
COMMENT_LINE $7036 b3 = New Transposition 3 ?
COMMENT_LINE $7036 b2 = New Transposition 2 ?
COMMENT_LINE $7036 b1 = New Transposition 1 ?
COMMENT_LINE $7036 b0 = Song over ? 1 = song over - no new bytes following -> loop possible...
COMMENT_LINE $7039 Song over ! We read the address of the Loop point.
COMMENT_LINE $7039 if b0 == 1
COMMENT_LINE $7039 dw Pointeur on Linker to loop. Restart reading.
FORCE_SYMBOL $7039 songOver
FORCE_NO_SYMBOL $703C
COMMENT_LINE $703E We know the Song won't restart now, so we can skip the first bit.                                                                                      ;WE KNOW THE SONG WON'T RESTART NOW, SO WE CAN SKIP THE FIRST BIT.
COMMENT_LINE $7040 now it looks like we just started a new pattern!
COMMENT $7040 skip the song over, when we just start a new pattern - cant be over yet, can it?
COMMENT_LINE $7041 if b0 = 0 :
COMMENT_LINE $7041 DB Transposition 1 if Transposition1?
COMMENT_LINE $7041 DB Transposition 2 if Transposition2?
COMMENT_LINE $7041 DB Transposition 3 if Transposition3?
COMMENT_LINE $7041 DW Track1
COMMENT_LINE $7041 DW Track2
COMMENT_LINE $7041 DW Track3
COMMENT_LINE $7041 DB Height if New Height?.
COMMENT_LINE $7041 DW Special Track if New Special Track?
COMMENT_LINE $7041 } * Length + 1		(+1 because the Loop item has to be added to the list).
COMMENT $7041 if b1 = 1
COMMENT $7049 if b2 = 1
COMMENT $7051 if b3 = 1
COMMENT $7068 if b4 = 1
FORCE_SYMBOL $706D PLY_HEIGHT
COMMENT $7070 if b5 = 1
FORCE_SYMBOL $7075 PLY_SAVESPECIALTRACK
COMMENT $7078 this pattern was read, whenever the tracks are playered - the next pattern will start here
FORCE_SYMBOL $7078 PLY_LINKER_PT
COMMENT_LINE $707B a new pattern allways resets the special track - whether an old one - or a just gotten one
FORCE_SYMBOL $707B PLY_SAVESPECIALTRACK
FORCE_SYMBOL $707E PLY_SPECIALTRACK_PT
COMMENT_LINE $7081 Reset the SpecialTrack/Tracks line counter.
COMMENT_LINE $7081 We can't rely on the song data, because the Pattern Height is not related to the Tracks Height.
COMMENT_LINE $7081 countdowns allways test for dec->beq - so placing a one is a garantied "reset"
FORCE_NO_SYMBOL $7081
FORCE_SYMBOL $7083 PLY_SPECIALTRACK_WAITCOUNTER
FORCE_SYMBOL $708F PLY_HEIGHT
FORCE_SYMBOL $7092 PLY_HEIGHTCPT
COMMENT_LINE $7095 Read the Special Track/Tracks.
COMMENT_LINE $7095 ------------------------------
COMMENT_LINE $7095 note:
COMMENT_LINE $7095 vectrex player does not support digidrums!
COMMENT_LINE $7095 SpecialTracks
COMMENT_LINE $7095 -------------
COMMENT_LINE $7095 DB Data
COMMENT_LINE $7095 b0 = Data (1) or Wait (0)
COMMENT_LINE $7095 If Wait :
COMMENT_LINE $7095 b7-b1 = Wait b7-b1 lines. (1=1 line, 0=128 lines)
COMMENT_LINE $7095 If Data :
COMMENT_LINE $7095 b1 = Speed (0) or Digidrum (1) ?
COMMENT_LINE $7095 b7-b2 = Value. If value = 0, escape code : read next byte to know value.
COMMENT_LINE $7095 If Escape Code :
COMMENT_LINE $7095 {
COMMENT_LINE $7095 DB Value
COMMENT_LINE $7095 }
COMMENT_LINE $7095 Read the Special Track.
FORCE_SYMBOL $7095 PLY_SPECIALTRACK_WAITCOUNTER
FORCE_SYMBOL $709A PLY_SPECIALTRACK_PT
COMMENT $709F if b0=0 -> carry will be clear -> jump to WAIT
COMMENT $70A2 regardless if speed or digidrum -> if a right shift results in 0 A, than we have an escape situation, if not -> jump
COMMENT $70A5 load the escaped (additional) value
COMMENT_LINE $70A7 if carry was = by the last right shift, the special track
COMMENT_LINE $70A7 denotes a digidrum, since it is not supported
COMMENT_LINE $70A7 we just ignore it and jump to the end
COMMENT $70A9 the data we got was the speed - store it
FORCE_SYMBOL $70A9 PLY_SPEED
COMMENT $70AC reset wait counter, next round might be more waiting :-)
FORCE_NO_SYMBOL $70AC
COMMENT $70AE is this used anywhere?
FORCE_SYMBOL $70AE PLY_SPECIALTRACK_PT
FORCE_SYMBOL $70B1 PLY_SPECIALTRACK_WAITCOUNTER
FORCE_SYMBOL $70B4 Channel1Data
COMMENT_LINE $70B8 Read the Track 1.
COMMENT_LINE $70B8 -----------------
COMMENT_LINE $70B8 Store the parameters, because the player below is called every frame, but the Read Track isn't.
FORCE_SYMBOL $70B8 PLY_TRACK_WAITCOUNTER
FORCE_SYMBOL $70BE PLY_TRACK_PT
COMMENT $70C2 Full Optimisation ? If yes = Note only, no Pitch, no Volume, Same Instrument.
COMMENT $70C5 0-31 = Wait.
FORCE_NO_SYMBOL $70C5
COMMENT $70CB 0 (32-32) = Escape Code for more Notes (parameters will be read)
COMMENT_LINE $70CC Note. Parameters are present. But the note is only present if Note? flag is 1.
COMMENT_LINE $70CC Read Parameters
COMMENT $70CE Save Parameters.
FORCE_SYMBOL $70CE tmp_track_param
COMMENT $70D1 is pitch following? -> load it
FORCE_NO_SYMBOL $70D1
FORCE_SYMBOL $70D7 PLY_TRACK_PITCHADD
COMMENT $70D9 is instrument following? -> load it
FORCE_NO_SYMBOL $70D9
COMMENT_LINE $70DD in a original parameter
COMMENT_LINE $70DD use it to correct volume, if any
COMMENT_LINE $70DD befor "destroying" a with instrument data
COMMENT $70DD Volume ? If bit 4(0?) was 1, then volume exists on b3-b0 - inverted volume
FORCE_NO_SYMBOL $70E0
FORCE_SYMBOL $70E2 PLY_TRACK_VOLUME
FORCE_SYMBOL $70E6 tmp_track_instrument
COMMENT $70EB load note to B
COMMENT_LINE $70EF ---------
FORCE_SYMBOL $70EF PLY_TRACK_PT
COMMENT $70F1 is param now, no need to save - accessed directly in full opt
FORCE_NO_SYMBOL $70F2
COMMENT_LINE $70F8 cc_out_save_note
COMMENT_LINE $70F8 no pitch
COMMENT_LINE $70F8 no vol
COMMENT_LINE $70F8 but certainly note
COMMENT_LINE $70FA ---------
FORCE_NO_SYMBOL $70FA
FORCE_NO_SYMBOL $70FC
FORCE_SYMBOL $70FE PLY_TRACK_PT
COMMENT_LINE $7102 in b now note - if any
COMMENT_LINE $7102 in a original parameter
COMMENT $7102 Volume ? If bit 4(0?) was 1, then volume exists on b3-b0 - inverted volume
FORCE_NO_SYMBOL $7105
FORCE_SYMBOL $7107 PLY_TRACK_VOLUME
COMMENT_LINE $7109 in b current note
COMMENT_LINE $7109 in tmp_b_instrument the current instrument number
COMMENT_LINE $7109 in tmp_d_param, the parameters of the last read track info
COMMENT_LINE $7109 76543210
COMMENT_LINE $7109 pnivvvvo
COMMENT_LINE $7109 DB Parameters
COMMENT_LINE $7109 p = New Pitch ?
COMMENT_LINE $7109 n = Note ?
COMMENT_LINE $7109 i = New Instrument ? Only tested if Note? = 1.
COMMENT_LINE $7109 v = Inverted Volume if Volume?=1. %0000 if Volume? is off.
COMMENT_LINE $7109 o = Volume ?
COMMENT_LINE $7109 No Wait command. Can be a Note and/or Effects.
FORCE_SYMBOL $7109 tmp_track_param
FORCE_SYMBOL $710C PLY_TRACK_PT
COMMENT $710E Note ? If no Note, we don't have to test if a new Instrument is here.
FORCE_NO_SYMBOL $710E
COMMENT $7112 Transpose Note according to the Transposition in the Linker.
FORCE_SYMBOL $7112 PLY_TRANSPOSITION
FORCE_SYMBOL $7114 PLY_TRACK_NOTE
COMMENT $7116 Reset the TrackPitch.
FORCE_NO_SYMBOL $7116
FORCE_SYMBOL $7119 PLY_TRACK_PITCH
COMMENT $711B New Instrument ?;
FORCE_NO_SYMBOL $711B
COMMENT $711F Same Instrument. We recover its address to restart it.
FORCE_SYMBOL $711F PLY_TRACK_SAVEPTINSTRUMENT
COMMENT $7121 Reset the Instrument Speed Counter. Never seemed useful...
FORCE_SYMBOL $7121 PLY_TRACK_INSTRUMENTSPEED
FORCE_SYMBOL $7123 PLY_TRACK_INSTRUMENTSPEEDCPT
FORCE_SYMBOL $7128 tmp_track_instrument
FORCE_SYMBOL $712D PLY_TRACK_INSTRUMENTSTABLEPT
FORCE_SYMBOL $7134 PLY_TRACK_INSTRUMENTSPEED
FORCE_SYMBOL $7136 PLY_TRACK_INSTRUMENTSPEEDCPT
COMMENT $7138 When using the Instrument again, no need to give the Speed, it is skipped. ;WHEN USING THE INSTRUMENT AGAIN, NO NEED TO GIVE THE SPEED, IT IS SKIPPED.
FORCE_SYMBOL $7138 PLY_TRACK_SAVEPTINSTRUMENT
FORCE_SYMBOL $713E PLY_PSGREG13_RETRIG
FORCE_SYMBOL $7141 PLY_TRACK_INSTRUMENT
FORCE_NO_SYMBOL $7143
FORCE_SYMBOL $7145 PLY_TRACK_WAITCOUNTER
FORCE_SYMBOL $7147 ArkosChannel
FORCE_SYMBOL $714A ChannelDataEnd
FORCE_SYMBOL $7152 PLY_SPEED
FORCE_SYMBOL $7155 PLY_SPEEDCPT
FORCE_SYMBOL $715B PLY_FREQ_REG
FORCE_SYMBOL $7161 PLY_VOL_REG
FORCE_SYMBOL $7164 Channel3Data
COMMENT_LINE $7168 Play the Sound on Track
COMMENT_LINE $7168 -------------------------
COMMENT_LINE $7168 Plays the sound on each frame, but only save the forwarded Instrument pointer when Instrument Speed is reached.
COMMENT_LINE $7168 This is needed because TrackPitch is involved in the Software Frequency/Hardware Frequency calculation, and is calculated every frame.
FORCE_SYMBOL $7168 PLY_TRACK_PITCH
FORCE_SYMBOL $716A PLY_TRACK_PITCHADD
FORCE_SYMBOL $716C PLY_TRACK_PITCH
COMMENT_LINE $716E arithmetic shift right D (halfing and preserving sign)
COMMENT_LINE $716E slow down pitch by quartering the current pitch
COMMENT_LINE $716E (after the add)
COMMENT $7172 U = (PLY_TRACK_PITCH/4)
FORCE_SYMBOL $7174 PLY_TRACK_INSTRUMENT
COMMENT_LINE $7176 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7176 PLAY SOUND
COMMENT_LINE $7176 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7176 Plays a sound stream.
COMMENT_LINE $7176 X Pointer to Instrument Data
COMMENT_LINE $7176 Y Pointer to track data
COMMENT_LINE $7176 U current track pitch
COMMENT_LINE $7176 RET =
COMMENT_LINE $7176 X =New Instrument pointer.
COMMENT_LINE $7176 data in track record is set
COMMENT_LINE $7176 instrument
COMMENT_LINE $7176 DB FirstByte
COMMENT_LINE $7176 if b0=0, NON-HARD sound. If b0=1, HARD Sound.
COMMENT_LINE $717B ************
COMMENT_LINE $717B SOFTWARE SOUND, b0 = 0
COMMENT_LINE $717B ************
COMMENT_LINE $717B 76543210
COMMENT_LINE $717B pavvvvn0
COMMENT_LINE $717B p = Pitch?
COMMENT_LINE $717B a = Arpeggio?
COMMENT_LINE $717B v = Volume
COMMENT_LINE $717B n = Second Byte needed? Needed when Noise, or Manual frequency, or noise with no sound.
COMMENT $717B is b1 (n) set
COMMENT $717C if yes jump to read second byte
COMMENT $717E for volume check copy the first byte to a
FORCE_NO_SYMBOL $7180
COMMENT $7182 if is 0 than no sound at all
COMMENT_LINE $7184 Null Volume. It means no Sound. We stop the Sound, the Noise, and it's over.
COMMENT $7184 We have to make the volume to 0, because if a bass Hard was activated before, we have to stop it.
FORCE_SYMBOL $7184 PLY_VOL_REG
COMMENT $7188 these are the register mask bits for this sound (or this no sound)
FORCE_NO_SYMBOL $7188
FORCE_SYMBOL $718A PLY_TRACK_REG_7
FORCE_SYMBOL $718D out_sound
COMMENT_LINE $7190 A = volume
COMMENT_LINE $7190 Volume is here, no Second Byte needed. It means we have a simple Software sound (Sound = On, Noise = Off)
COMMENT_LINE $7190 We have to test Arpeggio and Pitch, however.
COMMENT $7190 tmp_volumeN ;Code Volume. volume of instrument minus inverted volume
FORCE_SYMBOL $7190 PLY_TRACK_VOLUME
FORCE_SYMBOL $7195 PLY_VOL_REG
FORCE_NO_SYMBOL $7199
FORCE_SYMBOL $719B PLY_TRACK_REG_7
COMMENT $719E Needed for the subroutine to get the good flags.
COMMENT_LINE $71A2 in u frequency + pitch, in little endian order, ready to be written to psg
FORCE_SYMBOL $71A2 PLY_FREQ_REG
FORCE_SYMBOL $71A6 out_sound
FORCE_NO_SYMBOL $71A9
FORCE_SYMBOL $71AB PLY_TRACK_REG_7
COMMENT_LINE $71AE A second byte of instrument data
FORCE_NO_SYMBOL $71B0
FORCE_SYMBOL $71B4 PLY_PSGREG6
FORCE_SYMBOL $71B7 PLY_TRACK_REG_7
FORCE_NO_SYMBOL $71BC
FORCE_SYMBOL $71BE PLY_TRACK_VOLUME
COMMENT_LINE $71C0 CODE VOLUME.
FORCE_SYMBOL $71C3 PLY_VOL_REG
FORCE_NO_SYMBOL $71C9
FORCE_SYMBOL $71CD PLY_TRACK_REG_7
FORCE_SYMBOL $71D0 out_sound
COMMENT $71D3 Needed for the subroutine to get the good flags.
FORCE_NO_SYMBOL $71D4
COMMENT $71D9 set frequency - u gotton from above jsr
FORCE_SYMBOL $71D9 PLY_FREQ_REG
FORCE_SYMBOL $71DD out_sound
COMMENT_LINE $71E0 u current track pitch
COMMENT_LINE $71E0 X is pointer to instrument
COMMENT_LINE $71E0 B = first byte of instrument + one ror
COMMENT_LINE $71E0 **********
COMMENT_LINE $71E0 HARD SOUND
COMMENT_LINE $71E0 **********
COMMENT_LINE $71E0 We don't set the Volume to 16 now because we may have reached the end of the sound !
COMMENT $71E0 Test Retrig here, it is common to every Hard sounds.
COMMENT_LINE $71E3 Retrig only if it is the first step in this line of Instrument !
COMMENT $71E3 forced first channel pointer
COMMENT $71E6 forced first channel pointer
FORCE_SYMBOL $71EB PLY_RETRIGVALUE
FORCE_SYMBOL $71ED PLY_PSGREG13_RETRIG
COMMENT_LINE $71F0 Test bit 1 of B Use BITB
COMMENT $71F0 WE DON'T SHIFT THE BITS, SO THAT WE CAN USE THE SAME CODE (FREQUENCY CALCULATION) SEVERAL TIMES.
FORCE_NO_SYMBOL $71F0
FORCE_NO_SYMBOL $71F6
FORCE_SYMBOL $71F8 PLY_VOL_REG
FORCE_NO_SYMBOL $71FC
FORCE_SYMBOL $71FE PLY_TRACK_REG_7
COMMENT_LINE $7203 Second Byte :
COMMENT_LINE $7203 76543210
COMMENT_LINE $7203 nssscccc;
COMMENT_LINE $7203 n = Noise ?
COMMENT_LINE $7203 s = Inverted Shift (7 - Editor Shift)
COMMENT_LINE $7203 c = Hardware Enveloppe
COMMENT $7203 Get the Hardware Envelope waveform.
FORCE_SYMBOL $7203 tmp_instrument_second_byte
FORCE_NO_SYMBOL $7206
FORCE_SYMBOL $7208 PLY_PSGREG13
COMMENT_LINE $720B Test bit 0 of B Use BITA or BITB
FORCE_NO_SYMBOL $720B
COMMENT_LINE $720F upon entry in
COMMENT_LINE $720F x instrumentpointer after second byte of current data
COMMENT_LINE $720F a = second byte (also in tmp_instrument_second_byte)
COMMENT_LINE $720F b = first byte ror *2
COMMENT_LINE $720F y = pointer to current frequency register of channel
COMMENT_LINE $720F u = current track pitch
COMMENT_LINE $720F ************
COMMENT_LINE $720F SOFTWARE DEP
COMMENT_LINE $720F ************
COMMENT_LINE $720F MANUAL FREQUENCY ? -2 BECAUSE THE BYTE HAS BEEN SHIFTED PREVIOUSLY.
FORCE_NO_SYMBOL $720F
FORCE_SYMBOL $7211 PLY_PS_CALCULATEFREQUENCY_TESTMANUALFREQUENCY
COMMENT_LINE $7214 in u current frequency in little endian format, ready to be written to PSG
FORCE_SYMBOL $7214 PLY_FREQ_REG
COMMENT_LINE $7218 check for HW pitch and remember
FORCE_NO_SYMBOL $7218
COMMENT $721C 0 reload second byte of current instrument data
FORCE_SYMBOL $721C tmp_instrument_second_byte
COMMENT_LINE $721F encoded in bit 4 - 6 shift 3 times -> *2
COMMENT_LINE $721F shift is stored in inverse, 7 - shift
COMMENT $7222 blend out all other data
FORCE_NO_SYMBOL $7222
FORCE_SYMBOL $7225 PLY_PS_SD_SHIFT_ADREESS
COMMENT $7228 shifts only possible with u->D
COMMENT $722A to big endian
FORCE_NO_SYMBOL $722C
FORCE_NO_SYMBOL $723E
COMMENT_LINE $7241 in d now frequency software, shifted X times, in big endian order
COMMENT_LINE $7241 Hardware Pitch ?
COMMENT_LINE $7245 Get Pitch and add it to the just calculated Hardware Frequency.
COMMENT $7247 correct endianness of calculated frequency to little endian for PSG poke
FORCE_SYMBOL $7249 PLY_PSGREG11
COMMENT $724C second byte of instrument reloaded
FORCE_SYMBOL $724C tmp_instrument_second_byte
COMMENT $724F any noise?
FORCE_NO_SYMBOL $724F
FORCE_SYMBOL $7255 PLY_PSGREG6
FORCE_SYMBOL $7258 PLY_TRACK_REG_7
COMMENT_LINE $725B NOTE:
COMMENT_LINE $725B y is not = to point to psg registers anymore -
COMMENT_LINE $725B but at this point is not needed anymore
COMMENT_LINE $725B RTS
FORCE_SYMBOL $725B out_sound
COMMENT_LINE $725E upon entry in
COMMENT_LINE $725E x instrumentpointer after second byte of current data
COMMENT_LINE $725E a = second byte (also in tmp_instrument_second_byte)
COMMENT_LINE $725E b = first byte ror *2
COMMENT_LINE $725E y = pointer to current frequency register of channel
COMMENT_LINE $725E u = current track pitch
COMMENT_LINE $725E ************
COMMENT_LINE $725E HARDWARE DEP
COMMENT_LINE $725E ************
COMMENT_LINE $725E MANUAL HARDWARE FREQUENCY ? -2 BECAUSE THE BYTE HAS BEEN SHIFTED PREVIOUSLY.
FORCE_NO_SYMBOL $725E
FORCE_SYMBOL $7260 PLY_PS_CALCULATEFREQUENCY_TESTMANUALFREQUENCY
COMMENT_LINE $7263 in u current frequency in little endian format, ready to be written to PSG
COMMENT $7263 CODE HARDWARE FREQUENCY.
FORCE_SYMBOL $7263 PLY_PSGREG11
COMMENT_LINE $7266 test for softwarepitch and remember result (we lose b below, an save a reload - save? puls push???)
FORCE_NO_SYMBOL $7266
COMMENT $726A 0 reload second byte of current instrument data
FORCE_SYMBOL $726A tmp_instrument_second_byte
COMMENT_LINE $726D Second Byte :
COMMENT_LINE $726D 76543210
COMMENT_LINE $726D nssscccc
COMMENT_LINE $726D n = Noise ?
COMMENT_LINE $726D s = Inverted Shift (7 - Editor Shift)
COMMENT_LINE $726D c = Hardware Enveloppe
COMMENT_LINE $726D encoded in bit 4 - 6 shift 3 times -> *2
COMMENT_LINE $726D shift is stored in inverse, 7 - shift
FORCE_NO_SYMBOL $7270
FORCE_SYMBOL $7273 PLY_PS_HD_SHIFT_ADREESS
COMMENT $7276 shifts only possible with u->D
COMMENT $7278 to big endian
FORCE_NO_SYMBOL $727A
COMMENT_LINE $728A in d the shifted frequency in big endian format
COMMENT_LINE $728A software pitch configured?
COMMENT_LINE $728E Get Pitch and add it to the just calculated Hardware Frequency.
COMMENT $7290 correct endianness of calculated frequency to little endian for PSG poke
FORCE_SYMBOL $7292 PLY_FREQ_REG
COMMENT_LINE $7298 Test bit 0 of B Use BITA or BITB
FORCE_NO_SYMBOL $7298
FORCE_NO_SYMBOL $729C
FORCE_SYMBOL $729E PLY_PLAYSOUND
COMMENT_LINE $72A1 u current track pitch
COMMENT_LINE $72A1 X is pointer to instrument
COMMENT_LINE $72A1 B = first byte of instrument + 2 ror
COMMENT_LINE $72A1 ***********
COMMENT_LINE $72A1 INDEPENDENT
COMMENT_LINE $72A1 ***********
COMMENT_LINE $72A1 in b shifted twice:
COMMENT_LINE $72A1 ------------------
COMMENT_LINE $72A1 76543210
COMMENT_LINE $72A1 spam10r1
COMMENT_LINE $72A1 After shifting (done twice):
COMMENT_LINE $72A1 76543210
COMMENT_LINE $72A1 --spam10		(spam, ahah).
COMMENT_LINE $72A1 s = Sound ? If Sound? = 0, no need to take care of Software Manual Frequency, Pitch and Arpeggio.
COMMENT_LINE $72A1 m = Manual Frequency? (if 1, Arpeggio and Pitch not read). Manual Frequency can only be present if Sound? = 1.
COMMENT_LINE $72A1 a = Arpeggio?
COMMENT_LINE $72A1 p = Pitch?
COMMENT_LINE $72A1 r = Retrig?
FORCE_NO_SYMBOL $72A1
FORCE_SYMBOL $72A3 PLY_VOL_REG
COMMENT_LINE $72A7 Test bit 7-2 of B
FORCE_NO_SYMBOL $72A7
FORCE_NO_SYMBOL $72AB
FORCE_SYMBOL $72AD PLY_TRACK_REG_7
FORCE_NO_SYMBOL $72B2
FORCE_SYMBOL $72B4 PLY_TRACK_REG_7
COMMENT_LINE $72B7 hardare calculation expects one frequency calculation already being done -> u than is little endian!
FORCE_SYMBOL $72BD PLY_TRACK_NOTE
COMMENT_LINE $72BF Test bit 4-2 of B Use BITA or BITB
FORCE_NO_SYMBOL $72BF
COMMENT_LINE $72C3 in u current frequency in little endian format, ready to be written to PSG
COMMENT $72C3 write software note with its frequency to PSG
FORCE_SYMBOL $72C3 PLY_FREQ_REG
COMMENT_LINE $72C7 load second byte of independend instrument data
COMMENT_LINE $72C7 B after load = :
COMMENT_LINE $72C7 76543210
COMMENT_LINE $72C7 npamcccc
COMMENT_LINE $72C7 n = Noise ?
COMMENT_LINE $72C7 p = Hardware Pitch?
COMMENT_LINE $72C7 a = Hardware Arpeggio?
COMMENT_LINE $72C7 m = Manual Hardware Frequency? (if 1, Arpeggio and Pitch not read).
COMMENT_LINE $72C7 c = Hardware Enveloppe
FORCE_NO_SYMBOL $72CB
FORCE_SYMBOL $72CD PLY_PSGREG13
COMMENT_LINE $72D8 MANUAL HARDWARE FREQUENCY ? -2 BECAUSE THE BYTE HAS BEEN SHIFTED PREVIOUSLY.
FORCE_NO_SYMBOL $72D8
COMMENT_LINE $72DC b stays the same during frequency test
COMMENT_LINE $72DC in u current frequency in little endian format, ready to be written to PSG
COMMENT $72DC CODE HARDWARE FREQUENCY.
FORCE_SYMBOL $72DC PLY_PSGREG11
FORCE_NO_SYMBOL $72DF
FORCE_SYMBOL $72E5 PLY_PSGREG6
FORCE_SYMBOL $72E8 PLY_TRACK_REG_7
FORCE_NO_SYMBOL $72EB
FORCE_SYMBOL $72ED PLY_TRACK_REG_7
COMMENT_LINE $72F0 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $72F0 PLY_TRACK_INSTRUMENTSPEEDCPT
FORCE_SYMBOL $72F4 PLY_TRACK_INSTRUMENT
FORCE_SYMBOL $72F6 PLY_TRACK_INSTRUMENTSPEED
FORCE_SYMBOL $72F8 PLY_TRACK_INSTRUMENTSPEEDCPT
FORCE_SYMBOL $7303 PLY_FREQ_REG
FORCE_NO_SYMBOL $7306
FORCE_SYMBOL $7309 PLY_FREQ_REG
FORCE_SYMBOL $730C PLY_VOL_REG
FORCE_NO_SYMBOL $730F
FORCE_SYMBOL $7312 PLY_VOL_REG
FORCE_SYMBOL $7315 playnextchannel
COMMENT_LINE $7323 SEND THE REGISTERS TO PSG.
COMMENT_LINE $7323 A = REGISTER 7
FORCE_SYMBOL $7326 PLY_PSGREG13
COMMENT $7329 IF ISRETRIG?, FORCE THE R13 TO BE TRIGGERED.
FORCE_SYMBOL $7329 PLY_PSGREG13_RETRIG
FORCE_SYMBOL $732E PLY_PSGREG13_RETRIG
COMMENT_LINE $7334 destroy shadow - otherwise 13 on same is not retriggered
FORCE_NO_SYMBOL $7334
COMMENT_LINE $733A Subroutine that =
COMMENT_LINE $733A If Manual Frequency? (Flag Z off), read frequency (Word) and adds the TrackPitch.
COMMENT_LINE $733A Else, Auto Frequency.
COMMENT_LINE $733A if Arpeggio? = 1 (bit 3 from B), read it (Byte).
COMMENT_LINE $733A if Pitch? = 1 (bit 4 from B), read it (Word).
COMMENT_LINE $733A Calculate the frequency according to the Note + Arpeggio + TrackPitch.
COMMENT_LINE $733A U track pitch
COMMENT_LINE $733A X pointer to instrument data
COMMENT_LINE $733A RET =
COMMENT_LINE $733A X = Instrument pointer.
COMMENT_LINE $733A u current frequency in little endian order, ready to be written to psg
COMMENT_LINE $733A y,b stays same
COMMENT_LINE $733E Manual Frequency. We read it, no need to read Pitch and Arpeggio.
COMMENT_LINE $733E However, we add TrackPitch to the read Frequency, and that's all.
COMMENT $7342 switching endian anyway because PSG regs are sortof little endian
COMMENT_LINE $7347 in u address of song
COMMENT_LINE $7347 Header
COMMENT_LINE $7347 ------
COMMENT_LINE $7347 DB "AT10"
COMMENT_LINE $7347 DB SampleChannel (1,2,3)
COMMENT_LINE $7347 DB*3 YM Clock (little endian. 1000000=CPC, 1750000=Pentagon 128K, 1773400=ZX Spectrum/MSX, 2000000=Atari ST, or any other in case of custom frequency).
COMMENT_LINE $7347 DB ReplayFrequency(0=13hz,1=25hz,2=50hz,3=100hz,4=150hz,5=300hz)
COMMENT_LINE $7347 DB Speed (>=1)
COMMENT_LINE $7347 dw Instruments Chunk Size (not including this Word)
COMMENT_LINE $7347 {
COMMENT_LINE $7347 dw Pointers on Instruments
COMMENT_LINE $7347 } * nbInstruments
COMMENT_LINE $7347 {
COMMENT_LINE $7347 ds InstrumentData (see the Instrument structure below)
COMMENT_LINE $7347 } * nbInstruments
COMMENT_LINE $7347 Linker...
COMMENT_LINE $7347 vectrex conversion skips the 9 "header" bytes and we start of directly at SPEED
COMMENT_LINE $7347 these inits are by the original player "inherent"
COMMENT_LINE $7347 since it uses selfmodifying code and the
COMMENT_LINE $7347 init values are present in the code itself
FORCE_SYMBOL $7347 arkosPlayerMemStart
FORCE_SYMBOL $734D Clear_x_d
FORCE_SYMBOL $7350 songOver
FORCE_NO_SYMBOL $7353
FORCE_SYMBOL $7356 PLY_SPEEDCPT
FORCE_SYMBOL $7359 PLY_HEIGHT
FORCE_NO_SYMBOL $7365
FORCE_SYMBOL $7370 PLY_RETRIGVALUE
FORCE_SYMBOL $7372 PLY_PSGREG13_RETRIG
COMMENT_LINE $7375 no the player init
COMMENT $7377 Copy Speed.
FORCE_SYMBOL $7377 PLY_SPEED
COMMENT $737A Get Instruments chunk size.
FORCE_SYMBOL $737C PLY_TRACK_INSTRUMENTSTABLEPT
COMMENT $737F Skip Instruments to go to the Linker address.
COMMENT_LINE $7381 Get the pre-Linker information of the first pattern.
COMMENT_LINE $7381 Pre-Linker
COMMENT_LINE $7381 ----------
COMMENT_LINE $7381 First comes a unique bloc, just before the real Linker, and only used at the initialisation of the song. It is used to optimise the Looping of the song.
COMMENT_LINE $7381 DB First Height
COMMENT_LINE $7381 DB Transposition1
COMMENT_LINE $7381 DB Transposition2
COMMENT_LINE $7381 DB Transposition3
COMMENT_LINE $7381 DW Special Track
COMMENT_LINE $7381 after that the first pattern starts...
FORCE_SYMBOL $7383 PLY_HEIGHT
FORCE_SYMBOL $7393 PLY_SAVESPECIALTRACK
COMMENT_LINE $7396 Store the Linker address.
FORCE_SYMBOL $7396 PLY_LINKER_PT
COMMENT $7399 make sure the hardware envelope is in an "unkown" state
FORCE_NO_SYMBOL $7399
FORCE_SYMBOL $739B PLY_PSGREG13
COMMENT_LINE $739E Set the Instruments pointers to Instrument 0 data (Header has to be skipped).
FORCE_SYMBOL $739E PLY_TRACK_INSTRUMENTSTABLEPT
FORCE_NO_SYMBOL $73A1
COMMENT_LINE $73A3 Skip Instrument 0 Header.
FORCE_NO_SYMBOL $73A3
FORCE_NO_SYMBOL $73AF
FORCE_SYMBOL $73B2 PLY_PSGREG8
FORCE_SYMBOL $73B5 PLY_PSGREG9
FORCE_SYMBOL $73B8 PLY_PSGREG10
FORCE_NO_SYMBOL $73BB
FORCE_SYMBOL $73BD PLY_SENDREGISTERS
COMMENT_LINE $73C0 this file is part of Release, written by Malban in 2017
COMMENT_LINE $73C0 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $73C0 All the different explosions were done "on the fly"
COMMENT_LINE $73C0 they were not "planned", and certainly do not consist of good or nice code
COMMENT_LINE $73C0 please do not look further!
COMMENT $73C0 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $73C0 VIA_t1_cnt_lo
COMMENT $73C2 anti glitch
COMMENT $73C4 anti glitch
FORCE_SYMBOL $73C4 removeObject
COMMENT_LINE $73C9 start the move to
COMMENT_LINE $73C9 following calcs can be done within that move
COMMENT $73C9 move to last know position of object
COMMENT $73C9 Store Y in D/A register
FORCE_SYMBOL $73C9 VIA_port_a
COMMENT $73CB Blank low, zero high?
FORCE_NO_SYMBOL $73CB
FORCE_SYMBOL $73CD VIA_cntl
COMMENT $73D0 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $73D0 VIA_port_b
COMMENT $73D2 Clear shift regigster
FORCE_SYMBOL $73D2 VIA_shift_reg
COMMENT $73D4 Disable mux
FORCE_SYMBOL $73D4 VIA_port_b
COMMENT $73D6 Store X in D/A register
FORCE_SYMBOL $73D6 VIA_port_a
COMMENT $73D8 enable timer
FORCE_SYMBOL $73D8 VIA_t1_cnt_hi
COMMENT $73DC if not explosion 0 - jump, xplosion 0 is the terribe x - the implosion...
COMMENT $73E4 max * 2 ; if the maximum extend of the explosion is init "implosion"
FORCE_NO_SYMBOL $73E4
COMMENT $73EA implosion slightly fatser than explosion (2 vs 3)
FORCE_NO_SYMBOL $73EA
COMMENT $73EC if negative - than remove the explosion - finally!
FORCE_NO_SYMBOL $73F0
COMMENT $73F2 anti glitch
COMMENT $73F4 and also decrement the explosion active counter
FORCE_SYMBOL $73F4 explosionActiveCounter
COMMENT $73F7 anti glitch
FORCE_NO_SYMBOL $73F9
FORCE_NO_SYMBOL $7401
COMMENT $7405 star - stars expland double fast -> and are brighter
FORCE_NO_SYMBOL $7405
FORCE_NO_SYMBOL $7409
COMMENT $740D max * 2 ; if the maximum extend of the explosion is reached -> remove it
FORCE_NO_SYMBOL $740D
COMMENT $7415 trick that not all explosion "die" in the same round - saves cleanup time
FORCE_SYMBOL $7415 explosionActiveCounter
COMMENT_LINE $7418 also - the more explosions, the less far they reach :-)
COMMENT $7418 if the maximum extend of the explosion is reached -> remove it
FORCE_SYMBOL $7418 explosionMax
COMMENT $741D add a little to the explosion max extend...
FORCE_SYMBOL $741D explosionMax
COMMENT $7420 since now there is are less explosions about
FORCE_NO_SYMBOL $7420
FORCE_SYMBOL $7422 explosionMax
COMMENT $7425 and also decrement the explosion active counter
FORCE_SYMBOL $7425 explosionActiveCounter
COMMENT_LINE $7428 anti glitch              jmp      removeObject                 ; remove the object, "returns" via puls of next object
COMMENT $7428 anti glitch
COMMENT $742A explosion scale
FORCE_SYMBOL $742A VIA_t1_cnt_lo
COMMENT $742C reuse of the rotation list of shield/base
FORCE_SYMBOL $742C rotList
COMMENT $742F get count of vectors
FORCE_SYMBOL $7431 tmp_count2
COMMENT $7434 explosions are bright!
FORCE_NO_SYMBOL $7434
COMMENT $7438 correct U for going out later
FORCE_NO_SYMBOL $743C
COMMENT $7440 end a move to
FORCE_NO_SYMBOL $7440
FORCE_SYMBOL $7442 VIA_int_flags
COMMENT $7446 Store intensity in D/A
FORCE_SYMBOL $7446 VIA_port_a
COMMENT $7448 mux disabled channel 2
FORCE_NO_SYMBOL $7448
FORCE_SYMBOL $744B VIA_port_b
COMMENT $744D mux enabled channel 2
FORCE_SYMBOL $744D VIA_port_b
COMMENT $744F turn off mux
FORCE_SYMBOL $744F VIA_port_b
COMMENT $7451 load the corners of the polygon
FORCE_NO_SYMBOL $7451
COMMENT $7453 move to the corner, and draw a dot at every corner
FORCE_SYMBOL $7453 VIA_port_a
COMMENT $7455 Blank low, zero high?
FORCE_NO_SYMBOL $7455
FORCE_SYMBOL $7457 VIA_cntl
COMMENT $745A Enable mux
FORCE_SYMBOL $745A VIA_port_b
COMMENT $745C Clear shift regigster
FORCE_SYMBOL $745C VIA_shift_reg
COMMENT $745E Disable mux
FORCE_SYMBOL $745E VIA_port_b
COMMENT $7460 Store X in D/A register
FORCE_SYMBOL $7460 VIA_port_a
COMMENT $7462 enable timer
FORCE_SYMBOL $7462 VIA_t1_cnt_hi
COMMENT $7464 little time saving, the ++ of x moved into the MOVE
FORCE_NO_SYMBOL $7464
FORCE_NO_SYMBOL $746A
FORCE_NO_SYMBOL $7470
FORCE_NO_SYMBOL $7476
FORCE_NO_SYMBOL $747C
COMMENT_LINE $7482 do normal explosion here
COMMENT $7482 preload shift
FORCE_NO_SYMBOL $7482
COMMENT $7484 end a move to
FORCE_NO_SYMBOL $7484
FORCE_SYMBOL $7486 VIA_int_flags
COMMENT $748A Store in VIA shift register
FORCE_SYMBOL $748A VIA_shift_reg
COMMENT_LINE $748C the next MoveTo blanks anyways
COMMENT $748C check if vector count finished
FORCE_SYMBOL $748C tmp_count2
COMMENT $748F if not - draw next dot
FORCE_NO_SYMBOL $7492
FORCE_SYMBOL $7494 VIA_shift_reg
COMMENT $7496 /BLANK low and /ZERO low
FORCE_SYMBOL $7496 VIA_cntl
COMMENT $7498 (D = y,x, X = vectorlist)
FORCE_NO_SYMBOL $749A
COMMENT $749C to timer t1 (lo=
FORCE_SYMBOL $749C VIA_t1_cnt_lo
COMMENT $74A0 end a move to
FORCE_NO_SYMBOL $74A0
FORCE_SYMBOL $74A2 VIA_int_flags
COMMENT $74A6 Store intensity in D/A
FORCE_SYMBOL $74A6 VIA_port_a
COMMENT $74A8 mux disabled channel 2
FORCE_NO_SYMBOL $74A8
FORCE_SYMBOL $74AB VIA_port_b
COMMENT $74AD mux enabled channel 2
FORCE_SYMBOL $74AD VIA_port_b
COMMENT $74AF turn off mux
FORCE_SYMBOL $74AF VIA_port_b
FORCE_NO_SYMBOL $74B1
COMMENT_LINE $74B3 shots does not explode at all - the shot stays in its place and "fades"
COMMENT_LINE $74B3 here the shot is optimized:
COMMENT_LINE $74B3 here I inline the drawing of 4 lines
COMMENT $74B3 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $74B3 VIA_aux_cntl
FORCE_NO_SYMBOL $74B5
COMMENT $74B7 (2) [4] Send Y to A/D
FORCE_SYMBOL $74B7 VIA_port_a
COMMENT $74B9 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $74B9 VIA_port_b
COMMENT $74BB [6] Disable mux
FORCE_SYMBOL $74BB VIA_port_b
COMMENT_LINE $74BD ONE LINE
COMMENT $74BD [6] Send X to A/D
FORCE_SYMBOL $74BD VIA_port_a
FORCE_NO_SYMBOL $74BF
COMMENT $74C1 [4] enable timer 1
FORCE_SYMBOL $74C1 VIA_t1_cnt_hi
COMMENT_LINE $74C3 light on
COMMENT $74C3 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $74C3 VIA_cntl
FORCE_NO_SYMBOL $74C5
COMMENT $74C8 [4] Send Y to A/D
FORCE_SYMBOL $74C8 VIA_port_a
COMMENT $74CA [6]
FORCE_SYMBOL $74CA VIA_port_b
COMMENT $74CC [2]
FORCE_NO_SYMBOL $74CC
COMMENT_LINE $74CE light off
COMMENT $74CE [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $74CE VIA_cntl
COMMENT $74D0 [6] Disable mux
FORCE_SYMBOL $74D0 VIA_port_b
COMMENT_LINE $74D2 ONE LINE
COMMENT $74D2 [6] Send X to A/D
FORCE_SYMBOL $74D2 VIA_port_a
FORCE_NO_SYMBOL $74D4
COMMENT $74D6 [4] enable timer 1
FORCE_SYMBOL $74D6 VIA_t1_cnt_hi
COMMENT_LINE $74D8 light on
COMMENT $74D8 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $74D8 VIA_cntl
FORCE_NO_SYMBOL $74DA
COMMENT $74DD [4] Send Y to A/D
FORCE_SYMBOL $74DD VIA_port_a
COMMENT $74DF [6]
FORCE_SYMBOL $74DF VIA_port_b
COMMENT $74E1 [2]
FORCE_NO_SYMBOL $74E1
COMMENT_LINE $74E3 light off
COMMENT $74E3 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $74E3 VIA_cntl
COMMENT $74E5 [6] Disable mux
FORCE_SYMBOL $74E5 VIA_port_b
COMMENT_LINE $74E7 ONE LINE
COMMENT $74E7 [6] Send X to A/D
FORCE_SYMBOL $74E7 VIA_port_a
FORCE_NO_SYMBOL $74E9
COMMENT $74EB [4] enable timer 1
FORCE_SYMBOL $74EB VIA_t1_cnt_hi
COMMENT_LINE $74ED light on
COMMENT $74ED [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $74ED VIA_cntl
FORCE_NO_SYMBOL $74EF
COMMENT $74F2 [4] Send Y to A/D
FORCE_SYMBOL $74F2 VIA_port_a
COMMENT $74F4 [6]
FORCE_SYMBOL $74F4 VIA_port_b
COMMENT $74F6 [2]
FORCE_NO_SYMBOL $74F6
COMMENT_LINE $74F8 light off
COMMENT $74F8 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $74F8 VIA_cntl
COMMENT $74FA [6] Disable mux
FORCE_SYMBOL $74FA VIA_port_b
COMMENT $74FC [6] Send X to A/D
FORCE_SYMBOL $74FC VIA_port_a
COMMENT_LINE $74FE light on
FORCE_NO_SYMBOL $74FE
COMMENT $7500 [4] enable timer 1
FORCE_SYMBOL $7500 VIA_t1_cnt_hi
COMMENT $7502 ZERO disabled, and BLANK disabled
FORCE_SYMBOL $7502 VIA_cntl
FORCE_NO_SYMBOL $7506
COMMENT $750C anti glitch
FORCE_NO_SYMBOL $750E
FORCE_SYMBOL $7511 VIA_aux_cntl
COMMENT $7513 /BLANK low and /ZERO low
FORCE_SYMBOL $7513 VIA_cntl
COMMENT $7515 (D = y,x, X = vectorlist)
COMMENT_LINE $7517 same as above, but with a quite longer "dwelling"
COMMENT $7517 preload shift
FORCE_NO_SYMBOL $7517
COMMENT $7519 end a move to
FORCE_NO_SYMBOL $7519
FORCE_SYMBOL $751B VIA_int_flags
COMMENT $751F Store in VIA shift register
FORCE_SYMBOL $751F VIA_shift_reg
COMMENT $7521 dot dwell for ? explosion - they are bright! (and take some cycles)!
FORCE_NO_SYMBOL $7521
COMMENT_LINE $7526 the next MoveTo blanks anyways
COMMENT $7526 check if vector count finished
FORCE_SYMBOL $7526 tmp_count2
COMMENT $7529 if not - draw next dot
FORCE_SYMBOL $752E VIA_shift_reg
FORCE_NO_SYMBOL $7530
COMMENT $7532 /BLANK low and /ZERO low
FORCE_SYMBOL $7532 VIA_cntl
COMMENT $7534 (D = y,x, X = vectorlist)
FORCE_NO_SYMBOL $7536
COMMENT $7539 to timer t1 (lo=
FORCE_SYMBOL $7539 VIA_t1_cnt_lo
COMMENT $753B end a move to
FORCE_NO_SYMBOL $753B
FORCE_SYMBOL $753D VIA_int_flags
COMMENT_LINE $7541 bomber explosions are terrible cycle wise -
COMMENT_LINE $7541 here I inline the drawing of 4 lines (one "shot" instead of an explosion "dot")
COMMENT $7541 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $7541 VIA_aux_cntl
FORCE_NO_SYMBOL $7543
COMMENT $7545 (2) [4] Send Y to A/D
FORCE_SYMBOL $7545 VIA_port_a
COMMENT $7547 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $7547 VIA_port_b
COMMENT $7549 [6] Disable mux
FORCE_SYMBOL $7549 VIA_port_b
COMMENT_LINE $754B ONE LINE
COMMENT $754B [6] Send X to A/D
FORCE_SYMBOL $754B VIA_port_a
FORCE_NO_SYMBOL $754D
COMMENT $754F [4] enable timer 1
FORCE_SYMBOL $754F VIA_t1_cnt_hi
COMMENT_LINE $7551 light on
COMMENT $7551 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $7551 VIA_cntl
FORCE_NO_SYMBOL $7553
COMMENT $7556 [4] Send Y to A/D
FORCE_SYMBOL $7556 VIA_port_a
COMMENT $7558 [6]
FORCE_SYMBOL $7558 VIA_port_b
COMMENT $755A [2]
FORCE_NO_SYMBOL $755A
COMMENT_LINE $755C light off
COMMENT $755C [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $755C VIA_cntl
COMMENT $755E [6] Disable mux
FORCE_SYMBOL $755E VIA_port_b
COMMENT_LINE $7560 ONE LINE
COMMENT $7560 [6] Send X to A/D
FORCE_SYMBOL $7560 VIA_port_a
FORCE_NO_SYMBOL $7562
COMMENT $7564 [4] enable timer 1
FORCE_SYMBOL $7564 VIA_t1_cnt_hi
COMMENT_LINE $7566 light on
COMMENT $7566 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $7566 VIA_cntl
FORCE_NO_SYMBOL $7568
COMMENT $756B [4] Send Y to A/D
FORCE_SYMBOL $756B VIA_port_a
COMMENT $756D [6]
FORCE_SYMBOL $756D VIA_port_b
COMMENT $756F [2]
FORCE_NO_SYMBOL $756F
COMMENT_LINE $7571 light off
COMMENT $7571 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $7571 VIA_cntl
COMMENT $7573 [6] Disable mux
FORCE_SYMBOL $7573 VIA_port_b
COMMENT_LINE $7575 ONE LINE
COMMENT $7575 [6] Send X to A/D
FORCE_SYMBOL $7575 VIA_port_a
FORCE_NO_SYMBOL $7577
COMMENT $7579 [4] enable timer 1
FORCE_SYMBOL $7579 VIA_t1_cnt_hi
COMMENT_LINE $757B light on
COMMENT $757B [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $757B VIA_cntl
FORCE_NO_SYMBOL $757D
COMMENT $7580 [4] Send Y to A/D
FORCE_SYMBOL $7580 VIA_port_a
COMMENT $7582 [6]
FORCE_SYMBOL $7582 VIA_port_b
COMMENT $7584 [2]
FORCE_NO_SYMBOL $7584
COMMENT_LINE $7586 light off
COMMENT $7586 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $7586 VIA_cntl
COMMENT $7588 [6] Disable mux
FORCE_SYMBOL $7588 VIA_port_b
COMMENT $758A [6] Send X to A/D
FORCE_SYMBOL $758A VIA_port_a
COMMENT_LINE $758C light on
FORCE_NO_SYMBOL $758C
COMMENT $758E [4] enable timer 1
FORCE_SYMBOL $758E VIA_t1_cnt_hi
COMMENT $7590 ZERO disabled, and BLANK disabled
FORCE_SYMBOL $7590 VIA_cntl
COMMENT $7594 to timer t1 (lo=
FORCE_SYMBOL $7594 VIA_t1_cnt_lo
COMMENT $7596 check if vector count finished
FORCE_SYMBOL $7596 tmp_count2
COMMENT $7599 if not - draw next dot
FORCE_NO_SYMBOL $759D
FORCE_SYMBOL $75A0 VIA_aux_cntl
COMMENT $75A2 /BLANK low and /ZERO low
FORCE_SYMBOL $75A2 VIA_cntl
COMMENT $75A4 (D = y,x, X = vectorlist)
COMMENT_LINE $75A6 DB $ff, +$24, +$24 ; mode, y, x
COMMENT_LINE $75A6 DB $00, +$00, -$24 ; mode, y, x
COMMENT_LINE $75A6 DB $ff, -$24, +$24 ; mode, y, x
FORCE_NO_SYMBOL $75A6
COMMENT $75A9 to timer t1 (lo=
FORCE_SYMBOL $75A9 VIA_t1_cnt_lo
COMMENT $75AB end a move to
FORCE_NO_SYMBOL $75AB
FORCE_SYMBOL $75AD VIA_int_flags
COMMENT_LINE $75B1 dragon explosions are terrible cycle wise - (one "dragontail" instead of an explosion "dot")
COMMENT_LINE $75B1 here I inline the drawing of 4 lines
COMMENT $75B1 Shift reg mode = 000 free disable, T1 PB7 enabled
FORCE_SYMBOL $75B1 VIA_aux_cntl
FORCE_NO_SYMBOL $75B3
COMMENT $75B5 (2) [4] Send Y to A/D
FORCE_SYMBOL $75B5 VIA_port_a
COMMENT $75B7 (2) [4] enable mux, thus y integrators are set to Y
FORCE_SYMBOL $75B7 VIA_port_b
COMMENT $75B9 [6] Disable mux
FORCE_SYMBOL $75B9 VIA_port_b
COMMENT_LINE $75BB ONE LINE
COMMENT $75BB [6] Send X to A/D
FORCE_SYMBOL $75BB VIA_port_a
FORCE_NO_SYMBOL $75BD
COMMENT $75BF [4] enable timer 1
FORCE_SYMBOL $75BF VIA_t1_cnt_hi
COMMENT_LINE $75C1 light on
COMMENT $75C1 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $75C1 VIA_cntl
FORCE_NO_SYMBOL $75C3
COMMENT $75C6 [4] Send Y to A/D
FORCE_SYMBOL $75C6 VIA_port_a
COMMENT $75C8 [6]
FORCE_SYMBOL $75C8 VIA_port_b
COMMENT $75CA [2]
FORCE_NO_SYMBOL $75CA
COMMENT_LINE $75CC light off
COMMENT $75CC [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $75CC VIA_cntl
COMMENT $75CE [6] Disable mux
FORCE_SYMBOL $75CE VIA_port_b
COMMENT_LINE $75D0 ONE LINE
COMMENT $75D0 [6] Send X to A/D
FORCE_SYMBOL $75D0 VIA_port_a
FORCE_NO_SYMBOL $75D2
COMMENT $75D4 [4] enable timer 1
FORCE_SYMBOL $75D4 VIA_t1_cnt_hi
COMMENT_LINE $75D6 light on
COMMENT $75D6 [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $75D6 VIA_cntl
FORCE_NO_SYMBOL $75D8
COMMENT $75DB [4] Send Y to A/D
FORCE_SYMBOL $75DB VIA_port_a
COMMENT $75DD [6]
FORCE_SYMBOL $75DD VIA_port_b
COMMENT $75DF [2]
FORCE_NO_SYMBOL $75DF
COMMENT_LINE $75E1 light off
COMMENT $75E1 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $75E1 VIA_cntl
COMMENT $75E3 [6] Disable mux
FORCE_SYMBOL $75E3 VIA_port_b
COMMENT_LINE $75E5 ONE LINE
COMMENT $75E5 [6] Send X to A/D
FORCE_SYMBOL $75E5 VIA_port_a
FORCE_NO_SYMBOL $75E7
COMMENT $75E9 [4] enable timer 1
FORCE_SYMBOL $75E9 VIA_t1_cnt_hi
COMMENT_LINE $75EB light on
COMMENT $75EB [4] ZERO disabled, and BLANK disabled
FORCE_SYMBOL $75EB VIA_cntl
FORCE_NO_SYMBOL $75ED
COMMENT $75F0 [4] Send Y to A/D
FORCE_SYMBOL $75F0 VIA_port_a
COMMENT $75F2 [6]
FORCE_SYMBOL $75F2 VIA_port_b
COMMENT $75F4 [2]
FORCE_NO_SYMBOL $75F4
COMMENT_LINE $75F6 light off
COMMENT $75F6 [4] ZERO disabled, and BLANK enabled
FORCE_SYMBOL $75F6 VIA_cntl
COMMENT $75F8 [6] Disable mux
FORCE_SYMBOL $75F8 VIA_port_b
COMMENT $75FA [6] Send X to A/D
FORCE_SYMBOL $75FA VIA_port_a
COMMENT_LINE $75FC light on
FORCE_NO_SYMBOL $75FC
COMMENT $75FE [4] enable timer 1
FORCE_SYMBOL $75FE VIA_t1_cnt_hi
COMMENT $7600 ZERO disabled, and BLANK disabled
FORCE_SYMBOL $7600 VIA_cntl
COMMENT $7604 to timer t1 (lo=
FORCE_SYMBOL $7604 VIA_t1_cnt_lo
COMMENT $7606 check if vector count finished
FORCE_SYMBOL $7606 tmp_count2
COMMENT $7609 if not - draw next dot
FORCE_NO_SYMBOL $760D
FORCE_SYMBOL $7610 VIA_aux_cntl
COMMENT $7612 /BLANK low and /ZERO low
FORCE_SYMBOL $7612 VIA_cntl
COMMENT $7614 (D = y,x, X = vectorlist)
COMMENT_LINE $7616 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_NO_SYMBOL $7616
COMMENT $761E end a move to
FORCE_NO_SYMBOL $761E
FORCE_SYMBOL $7620 VIA_int_flags
COMMENT $7624 Store intensity in D/A
FORCE_SYMBOL $7624 VIA_port_a
COMMENT $7626 mux disabled channel 2
FORCE_NO_SYMBOL $7626
FORCE_SYMBOL $7629 VIA_port_b
COMMENT $762B mux enabled channel 2
FORCE_SYMBOL $762B VIA_port_b
COMMENT $762D turn off mux
FORCE_SYMBOL $762D VIA_port_b
FORCE_NO_SYMBOL $762F
COMMENT $7631 Send Y to A/D
FORCE_SYMBOL $7631 VIA_port_a
COMMENT $7633 Enable mux
FORCE_SYMBOL $7633 VIA_port_b
COMMENT $7635 Disable mux
FORCE_SYMBOL $7635 VIA_port_b
COMMENT $7637 Send X to A/D
FORCE_SYMBOL $7637 VIA_port_a
COMMENT $7639 Shift reg=$FF (solid line), T1H=0
FORCE_NO_SYMBOL $7639
COMMENT $763C Put pattern in shift register
FORCE_SYMBOL $763C VIA_shift_reg
COMMENT $763E Set T1H (scale factor?)
FORCE_SYMBOL $763E VIA_t1_cnt_hi
COMMENT $7640 B-reg = T1 interrupt bit
FORCE_NO_SYMBOL $7640
COMMENT $7642 Point to next coordinate pair
FORCE_NO_SYMBOL $7642
COMMENT $7644 Wait for T1 to time out
FORCE_SYMBOL $7644 VIA_int_flags
COMMENT $7648 Clear shift register (blank output)
FORCE_SYMBOL $7648 VIA_shift_reg
COMMENT $764A Decrement line count
FORCE_SYMBOL $764A tmp_count2
COMMENT $764D if not - draw next dot
FORCE_NO_SYMBOL $764F
COMMENT $7651 /BLANK low and /ZERO low
FORCE_SYMBOL $7651 VIA_cntl
COMMENT $7653 (D = y,x, X = vectorlist)
COMMENT_LINE $7655 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7655 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7655 *****************************
COMMENT_LINE $7655 **** SCORE ******************
COMMENT_LINE $7655 *****************************
COMMENT_LINE $7655 scores displayed by ONE vectorlist,
COMMENT_LINE $7655 these are "destruction" scores
COMMENT $7655 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $7655 VIA_t1_cnt_lo
COMMENT $7657 anti glitch
COMMENT $7659 anti glitch
FORCE_SYMBOL $7659 removeObject
FORCE_SYMBOL $765E VIA_port_a
COMMENT $7660 Blank low, zero high?
FORCE_NO_SYMBOL $7660
FORCE_SYMBOL $7662 VIA_cntl
COMMENT $7665 Enable mux
FORCE_SYMBOL $7665 VIA_port_b
COMMENT $7667 Clear shift regigster
FORCE_SYMBOL $7667 VIA_shift_reg
COMMENT $7669 Disable mux
FORCE_SYMBOL $7669 VIA_port_b
COMMENT $766B Store X in D/A register
FORCE_SYMBOL $766B VIA_port_a
COMMENT $766D enable timer
FORCE_SYMBOL $766D VIA_t1_cnt_hi
COMMENT $766F if score is far away
FORCE_SYMBOL $7671 shield_max
COMMENT $7674 anti glitchremoveObject ; if score scale is higher than max shield - don't bother displaying it
COMMENT $7676 anti glitch
FORCE_NO_SYMBOL $7678
COMMENT $767C decrunch a music part
FORCE_SYMBOL $767C inMovePointer
COMMENT $7680 scores shown round counter
COMMENT $7685 scores are displayed in "rounds" not in movement, if shown long enough
FORCE_SYMBOL $7685 score_display_time
COMMENT $7688 anti glitch removeObject ; remove it
COMMENT $768A anti glitch
COMMENT $7690 scores move slowly only 1 "point" every second round
FORCE_SYMBOL $7690 RecalCounterLow
COMMENT $7693 use some counter to access a single bit as compare
FORCE_NO_SYMBOL $7693
COMMENT $7697 and only if bit is set increase the score scale
COMMENT $7699 tiny little score
FORCE_NO_SYMBOL $7699
COMMENT $769C to timer t1 (lo=
FORCE_SYMBOL $769C VIA_t1_cnt_lo
COMMENT $769E prepare next object to u
COMMENT $76A0 end a move to
FORCE_NO_SYMBOL $76A0
FORCE_SYMBOL $76A2 VIA_int_flags
COMMENT $76A6 Store intensity in D/A
FORCE_SYMBOL $76A6 VIA_port_a
COMMENT $76A8 mux disabled channel 2
FORCE_NO_SYMBOL $76A8
FORCE_SYMBOL $76AB VIA_port_b
COMMENT $76AD mux enabled channel 2
FORCE_SYMBOL $76AD VIA_port_b
COMMENT $76AF turn off mux
FORCE_SYMBOL $76AF VIA_port_b
COMMENT $76B1 draw the list
FORCE_SYMBOL $76B1 myDraw_VL_mode_direct
COMMENT_LINE $76B4 *****************************
COMMENT_LINE $76B4 **** SCORE X*****************
COMMENT_LINE $76B4 *****************************
COMMENT_LINE $76B4 special
COMMENT_LINE $76B4 the X vectorlist(s)
COMMENT_LINE $76B4 are generated in move to display a 3 digit score (max) generated by the starlets
COMMENT $76B4 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $76B4 VIA_t1_cnt_lo
COMMENT $76B6 anti glitch
COMMENT $76B8 anti glitch
FORCE_SYMBOL $76B8 removeObject
FORCE_SYMBOL $76BD VIA_port_a
COMMENT $76BF Blank low, zero high?
FORCE_NO_SYMBOL $76BF
FORCE_SYMBOL $76C1 VIA_cntl
COMMENT $76C4 Enable mux
FORCE_SYMBOL $76C4 VIA_port_b
COMMENT $76C6 Clear shift regigster
FORCE_SYMBOL $76C6 VIA_shift_reg
COMMENT $76C8 Disable mux
FORCE_SYMBOL $76C8 VIA_port_b
COMMENT $76CA Store X in D/A register
FORCE_SYMBOL $76CA VIA_port_a
COMMENT $76CC enable timer
FORCE_SYMBOL $76CC VIA_t1_cnt_hi
COMMENT $76CE timer countdown for score display
COMMENT $76D3 if count down reached max
FORCE_SYMBOL $76D3 score_display_time
COMMENT $76D6 removeObject ; remove the score
COMMENT $76D8 anti glitch
COMMENT $76DE scores move slowly only 1 "point" every second round
FORCE_SYMBOL $76DE RecalCounterLow
COMMENT $76E1 use some counter to access a single bit as compare
FORCE_NO_SYMBOL $76E1
COMMENT $76E5 and only if bit is set increase the score scale
COMMENT $76E7 tiny little score
FORCE_NO_SYMBOL $76E7
COMMENT $76EA to timer t1 (lo=
FORCE_SYMBOL $76EA VIA_t1_cnt_lo
COMMENT $76EC end a move to
FORCE_NO_SYMBOL $76EC
FORCE_SYMBOL $76EE VIA_int_flags
COMMENT $76F2 Store intensity in D/A
FORCE_SYMBOL $76F2 VIA_port_a
COMMENT $76F4 mux disabled channel 2
FORCE_NO_SYMBOL $76F4
FORCE_SYMBOL $76F7 VIA_port_b
COMMENT $76F9 mux enabled channel 2
FORCE_SYMBOL $76F9 VIA_port_b
COMMENT $76FB turn off mux
FORCE_SYMBOL $76FB VIA_port_b
COMMENT_LINE $76FD generate display from score: SCORE_TO_DISPLAY
COMMENT_LINE $76FD the vectorlist of the scores are generated in the spawner
COMMENT_LINE $76FD if list is 0, than nothing is displayed (leading zero of a score)
FORCE_SYMBOL $7701 myDraw_VL_mode
FORCE_SYMBOL $7708 myDraw_VL_mode
COMMENT $770D prepare next object to u
COMMENT $770F draw the list
FORCE_SYMBOL $770F myDraw_VL_mode_direct
COMMENT_LINE $7712 *****************************
COMMENT_LINE $7712 **** TIMER ******************
COMMENT_LINE $7712 *****************************
COMMENT_LINE $7712 this is a special object in the middle of our base
COMMENT_LINE $7712 that displays the timer that is left for our current activated bonus
COMMENT_LINE $7712 special
COMMENT_LINE $7712 the X vectorlist(s)
COMMENT_LINE $7712 are generated in move to
COMMENT $7715 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $7715 VIA_t1_cnt_lo
COMMENT $771A Store Y in D/A register
FORCE_SYMBOL $771A VIA_port_a
COMMENT $771C Blank low, zero high?
FORCE_NO_SYMBOL $771C
FORCE_SYMBOL $771E VIA_cntl
COMMENT $7721 Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7721 VIA_port_b
COMMENT $7723 Clear shift regigster
FORCE_SYMBOL $7723 VIA_shift_reg
COMMENT $7725 Disable mux
FORCE_SYMBOL $7725 VIA_port_b
COMMENT $7727 Store X in D/A register
FORCE_SYMBOL $7727 VIA_port_a
COMMENT $7729 enable timer
FORCE_SYMBOL $7729 VIA_t1_cnt_hi
COMMENT $772B the position of a two digit timer is different from a one digit timer, here we determine that
FORCE_SYMBOL $772B bonus_time_1
COMMENT_LINE $7730 large bonus timer
COMMENT $7730 contains 50 * times seconds bonus counter - meaning the complete timer in ticks
FORCE_SYMBOL $7730 bonusCounter
FORCE_SYMBOL $7736 bonusCounter
COMMENT $773A must stay here, if shield was used, than the counter will be rest to 0 here!
COMMENT $773E 50Hz that means every 50 ticks is one second
FORCE_NO_SYMBOL $7743
COMMENT $7748 csa string print version of digit 0 of timer
FORCE_SYMBOL $7748 bonus_time_0
FORCE_NO_SYMBOL $774D
FORCE_SYMBOL $774F bonus_time_0
COMMENT $7752 csa string print version of digit 1 of timer
FORCE_SYMBOL $7752 bonus_time_1
COMMENT $7757 y,x pos -1,-10
FORCE_NO_SYMBOL $7757
FORCE_NO_SYMBOL $7761
COMMENT $7764 to timer t1 (lo=
FORCE_SYMBOL $7764 VIA_t1_cnt_lo
COMMENT $7766 Store intensity in D/A
FORCE_SYMBOL $7766 VIA_port_a
COMMENT $7768 mux disabled channel 2
FORCE_NO_SYMBOL $7768
FORCE_SYMBOL $776B VIA_port_b
COMMENT $776D mux enabled channel 2
FORCE_SYMBOL $776D VIA_port_b
COMMENT $776F turn off mux
FORCE_SYMBOL $776F VIA_port_b
COMMENT $7771 list of pointers to number vectorlists
FORCE_SYMBOL $7771 NumberList
FORCE_SYMBOL $7775 bonus_time_1
COMMENT $7778 times two
FORCE_SYMBOL $777B myDraw_VL_mode
FORCE_SYMBOL $777E bonus_time_0
COMMENT $7781 times two
FORCE_SYMBOL $7784 myDraw_VL_mode
FORCE_NO_SYMBOL $7787
COMMENT $7789 /BLANK low and /ZERO low
FORCE_SYMBOL $7789 VIA_cntl
COMMENT_LINE $778C ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $778C contains 50 * times seconds bonus counter - meaning the complete timer in ticks
FORCE_SYMBOL $778C bonusCounter
FORCE_SYMBOL $7792 bonusCounter
COMMENT $7796 if zero is reached - than bonus is discarded
FORCE_NO_SYMBOL $779D
FORCE_SYMBOL $77A2 bonus_time_0
COMMENT $77A5 list of pointers to number vectorlists
FORCE_SYMBOL $77A5 NumberList
FORCE_SYMBOL $77A9 bonus_time_0
COMMENT $77AC times two
FORCE_NO_SYMBOL $77B5
COMMENT $77B8 to timer t1 (lo=
FORCE_SYMBOL $77B8 VIA_t1_cnt_lo
COMMENT $77BA Store intensity in D/A
FORCE_SYMBOL $77BA VIA_port_a
COMMENT $77BC mux disabled channel 2
FORCE_NO_SYMBOL $77BC
FORCE_SYMBOL $77BF VIA_port_b
COMMENT $77C1 mux enabled channel 2
FORCE_SYMBOL $77C1 VIA_port_b
COMMENT $77C3 turn off mux
FORCE_SYMBOL $77C3 VIA_port_b
FORCE_SYMBOL $77C5 myDraw_VL_mode
FORCE_NO_SYMBOL $77C8
COMMENT $77CA /BLANK low and /ZERO low
FORCE_SYMBOL $77CA VIA_cntl
FORCE_NO_SYMBOL $77CD
COMMENT $77CF /BLANK low and /ZERO low
FORCE_SYMBOL $77CF VIA_cntl
COMMENT_LINE $77D1 deinit the actual bonus
COMMENT $77D1 load data of current "level" - e use this to restore the speed/growth settings
FORCE_SYMBOL $77D1 currentPhaseData
FORCE_SYMBOL $77D5 bonusActiveType
FORCE_SYMBOL $77D8 BONUS_TYPE_FASTER
FORCE_SYMBOL $77DC BONUS_TYPE_EXPAND
FORCE_SYMBOL $77E0 BONUS_TYPE_SHIELD
COMMENT $77E4 nothing realy to deactivate here
FORCE_NO_SYMBOL $77E6
FORCE_SYMBOL $77E8 shieldSpeed
FORCE_NO_SYMBOL $77EB
FORCE_SYMBOL $77ED shield_width_adder
FORCE_NO_SYMBOL $77F2
FORCE_SYMBOL $77F4 shieldWidthGrowth
FORCE_NO_SYMBOL $77F7
FORCE_SYMBOL $77F9 shield_width_adder
FORCE_SYMBOL $77FE bonusActiveType
FORCE_NO_SYMBOL $7801
COMMENT_LINE $7808 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7808 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7808 behaviours control (action) and draw all objects
COMMENT_LINE $7808 each object type has an individual behaviour
COMMENT_LINE $7808 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7808 values are = from "u" list as:
COMMENT_LINE $7808 pulu     pc,d,x ; (D = y,x, X = vectorlist)
COMMENT $0000 load and set the correct scale
COMMENT $0000 if $ffff than not
COMMENT_LINE $0000 17 cycles per star more to calc os from angle, instead of old "pos" version
COMMENT_LINE $0000 saving another 6 cycled by ldd instead of lda + ldb above (pos+scale)
COMMENT_LINE $0000 11 per star more
COMMENT_LINE $0000 saving one ldd due to puls = 6 cycles
COMMENT_LINE $0000 11*4-6
COMMENT_LINE $0000 38 cycles for one star cluster more due to using "angle" instead of pos
COMMENT_LINE $0000 in b star angle 0-240
COMMENT_LINE $0000 CIRCLE_ADR gotton from puls in y
COMMENT $0000 y circle + starangle 0-240
COMMENT $0000 in d 0 - 480
COMMENT_LINE $0000 angle final d value 0-762
COMMENT_LINE $0000 corrected in first move to 0 - 720
COMMENT $0000 load from y 0 - 720 (angle)
COMMENT_LINE $0000 TODO?
COMMENT_LINE $0000 it is possible to precalculate in a cluster of 4 stars
COMMENT_LINE $0000 the next 3 stars within the previous move
COMMENT_LINE $0000 might save another 20 cycles or so...
COMMENT $0000 otherwise move to the pos
COMMENT_LINE $0000 in move - don't bother about cycle waste
COMMENT $0000 since pos is already times 2
COMMENT $0000 since pos is already times 2
COMMENT_LINE $0000 change star direction everey 10 seconds (nearly)
COMMENT $0000 do only once
COMMENT $0000 load scale
COMMENT $0000 and see if star is not out of bounds yet
COMMENT $0000 jump to init if out of bounds
COMMENT_LINE $0000 and depending on ho "big" the scale is - add even more to the scale
COMMENT $0000 and store the after add
COMMENT $0000 also depending on the scale calc an intensity level
COMMENT $0000 minimum intensity
COMMENT $0000 end a move to
COMMENT $0000 Store in VIA shift register
COMMENT_LINE $0000 delay for dot dwell
COMMENT $0000 Blank beam in VIA shift register
COMMENT $0000 /BLANK low and /ZERO low
COMMENT $0000 jump to done
COMMENT $0000 we are in initi phase, dec the init delay counter
COMMENT $0000 if not zero yet - jump out
COMMENT $0000 in case we are here from an oob, zero the beam
COMMENT $0000 and also "break" current ramping (move)
COMMENT $0000 disable ramping
COMMENT $0000 minimum scale at star birth
COMMENT $0000 store the scale
COMMENT $0000 0 - 127
COMMENT_LINE $0000 in a random number between 0 - 127
COMMENT $0000 between 0-254
COMMENT_LINE $7808 four stars per star "atom"
COMMENT $7808 load and set the correct scale
FORCE_SYMBOL $7808 VIA_t1_cnt_lo
COMMENT $780A if $ffff than not
FORCE_NO_SYMBOL $780A
COMMENT_LINE $7810 17 cycles per star more to calc os from angle, instead of old "pos" version
COMMENT_LINE $7810 saving another 6 cycled by ldd instead of lda + ldb above (pos+scale)
COMMENT_LINE $7810 11 per star more
COMMENT_LINE $7810 saving one ldd due to puls = 6 cycles
COMMENT_LINE $7810 11*4-6
COMMENT_LINE $7810 38 cycles for one star cluster more due to using "angle" instead of pos
COMMENT_LINE $7810 in b star angle 0-240
COMMENT_LINE $7811 CIRCLE_ADR gotton from puls in y
FORCE_SYMBOL $7811 circle
COMMENT $7815 y circle + starangle 0-240
COMMENT $7817 in d 0 - 480
COMMENT_LINE $7819 angle final d value 0-762
COMMENT_LINE $7819 corrected in first move to 0 - 720
COMMENT $7819 load from y 0 - 720 (angle)
COMMENT_LINE $781B TODO?
COMMENT_LINE $781B it is possible to precalculate in a cluster of 4 stars
COMMENT_LINE $781B the next 3 stars within the previous move
COMMENT_LINE $781B might save another 20 cycles or so...
COMMENT $781B otherwise move to the pos
FORCE_SYMBOL $781B VIA_port_a
COMMENT $781D Blank low, zero high?
FORCE_NO_SYMBOL $781D
FORCE_SYMBOL $781F VIA_cntl
COMMENT $7822 Enable mux
FORCE_SYMBOL $7822 VIA_port_b
COMMENT $7824 Clear shift regigster
FORCE_SYMBOL $7824 VIA_shift_reg
COMMENT $7826 Disable mux
FORCE_SYMBOL $7826 VIA_port_b
COMMENT $7828 Store X in D/A register
FORCE_SYMBOL $7828 VIA_port_a
COMMENT $782A enable timer
FORCE_SYMBOL $782A VIA_t1_cnt_hi
COMMENT_LINE $782C in move - don't bother about cycle waste
FORCE_SYMBOL $782E star_swirl
COMMENT $7833 since pos is already times 2
FORCE_SYMBOL $7833 star_swirl
FORCE_NO_SYMBOL $7836
FORCE_NO_SYMBOL $783A
COMMENT $783E since pos is already times 2
FORCE_SYMBOL $783E star_swirl
FORCE_NO_SYMBOL $7841
FORCE_NO_SYMBOL $7845
COMMENT_LINE $7849 change star direction everey 10 seconds (nearly)
FORCE_SYMBOL $7849 RecalCounterHi
FORCE_NO_SYMBOL $784C
FORCE_SYMBOL $7850 RecalCounterLow
COMMENT $7855 do only once
FORCE_SYMBOL $7855 RecalCounterLow
FORCE_SYMBOL $7858 star_swirl
FORCE_SYMBOL $785B my_random2
FORCE_NO_SYMBOL $7860
FORCE_NO_SYMBOL $7862
FORCE_NO_SYMBOL $7868
FORCE_SYMBOL $786E star_swirl
COMMENT $7871 load scale
COMMENT $7873 and see if star is not out of bounds yet
FORCE_SYMBOL $7873 spawn_max
COMMENT $7876 jump to init if out of bounds
COMMENT_LINE $7878 and depending on ho "big" the scale is - add even more to the scale
FORCE_NO_SYMBOL $7878
FORCE_NO_SYMBOL $787A
FORCE_NO_SYMBOL $787F
FORCE_NO_SYMBOL $7884
FORCE_NO_SYMBOL $7889
COMMENT $788E and store the after add
COMMENT $7890 also depending on the scale calc an intensity level
FORCE_NO_SYMBOL $7890
COMMENT $7892 minimum intensity
FORCE_NO_SYMBOL $7892
FORCE_NO_SYMBOL $7896
COMMENT $7898 end a move to
FORCE_NO_SYMBOL $7898
FORCE_SYMBOL $789A VIA_int_flags
COMMENT $789E Store intensity in D/A
FORCE_SYMBOL $789E VIA_port_a
COMMENT $78A0 mux disabled channel 2
FORCE_NO_SYMBOL $78A0
FORCE_SYMBOL $78A3 VIA_port_b
COMMENT $78A5 mux enabled channel 2
FORCE_SYMBOL $78A5 VIA_port_b
COMMENT $78A7 turn off mux
FORCE_SYMBOL $78A7 VIA_port_b
FORCE_NO_SYMBOL $78A9
COMMENT $78AB Store in VIA shift register
FORCE_SYMBOL $78AB VIA_shift_reg
COMMENT_LINE $78AD delay for dot dwell
FORCE_NO_SYMBOL $78AD
COMMENT $78B0 Blank beam in VIA shift register
FORCE_SYMBOL $78B0 VIA_shift_reg
COMMENT $78B2 /BLANK low and /ZERO low
FORCE_SYMBOL $78B2 VIA_cntl
COMMENT $78B4 jump to done
COMMENT $78B6 we are in initi phase, dec the init delay counter
COMMENT $78B8 if not zero yet - jump out
COMMENT $78BC in case we are here from an oob, zero the beam
FORCE_NO_SYMBOL $78BC
COMMENT $78BE /BLANK low and /ZERO low
FORCE_SYMBOL $78BE VIA_cntl
COMMENT $78C0 and also "break" current ramping (move)
FORCE_NO_SYMBOL $78C0
COMMENT $78C3 disable ramping
FORCE_SYMBOL $78C3 VIA_t1_cnt_lo
COMMENT $78C5 minimum scale at star birth
FORCE_NO_SYMBOL $78C5
COMMENT $78C7 store the scale
FORCE_SYMBOL $78C9 my_random2
COMMENT $78CC 0 - 127
FORCE_NO_SYMBOL $78CC
COMMENT_LINE $78CE in a random number between 0 - 127
COMMENT $78CE between 0-254
COMMENT $78D1 load scale and pos to d
COMMENT $78D3 load and set the correct scale
FORCE_SYMBOL $78D3 VIA_t1_cnt_lo
COMMENT $78D5 if $ffff than not
FORCE_NO_SYMBOL $78D5
COMMENT_LINE $78DB 17 cycles per star more to calc os from angle, instead of old "pos" version
COMMENT_LINE $78DB saving another 6 cycled by ldd instead of lda + ldb above (pos+scale)
COMMENT_LINE $78DB 11 per star more
COMMENT_LINE $78DB saving one ldd due to puls = 6 cycles
COMMENT_LINE $78DB 11*4-6
COMMENT_LINE $78DB 38 cycles for one star cluster more due to using "angle" instead of pos
COMMENT_LINE $78DB in b star angle 0-240
COMMENT_LINE $78DC CIRCLE_ADR gotton from puls in y
FORCE_SYMBOL $78DC circle
COMMENT $78E0 y circle + starangle 0-240
COMMENT $78E2 in d 0 - 480
COMMENT_LINE $78E4 angle final d value 0-762
COMMENT_LINE $78E4 corrected in first move to 0 - 720
COMMENT $78E4 load from y 0 - 720 (angle)
COMMENT_LINE $78E6 TODO?
COMMENT_LINE $78E6 it is possible to precalculate in a cluster of 4 stars
COMMENT_LINE $78E6 the next 3 stars within the previous move
COMMENT_LINE $78E6 might save another 20 cycles or so...
COMMENT $78E6 otherwise move to the pos
FORCE_SYMBOL $78E6 VIA_port_a
COMMENT $78E8 Blank low, zero high?
FORCE_NO_SYMBOL $78E8
FORCE_SYMBOL $78EA VIA_cntl
COMMENT $78ED Enable mux
FORCE_SYMBOL $78ED VIA_port_b
COMMENT $78EF Clear shift regigster
FORCE_SYMBOL $78EF VIA_shift_reg
COMMENT $78F1 Disable mux
FORCE_SYMBOL $78F1 VIA_port_b
COMMENT $78F3 Store X in D/A register
FORCE_SYMBOL $78F3 VIA_port_a
COMMENT $78F5 enable timer
FORCE_SYMBOL $78F5 VIA_t1_cnt_hi
COMMENT_LINE $78F7 in move - don't bother about cycle waste
FORCE_SYMBOL $78F9 star_swirl
COMMENT $78FE since pos is already times 2
FORCE_SYMBOL $78FE star_swirl
FORCE_NO_SYMBOL $7901
FORCE_NO_SYMBOL $7905
COMMENT $7909 since pos is already times 2
FORCE_SYMBOL $7909 star_swirl
FORCE_NO_SYMBOL $790C
FORCE_NO_SYMBOL $7910
COMMENT_LINE $7914 change star direction everey 10 seconds (nearly)
FORCE_SYMBOL $7914 RecalCounterHi
FORCE_NO_SYMBOL $7917
FORCE_SYMBOL $791B RecalCounterLow
COMMENT $7920 do only once
FORCE_SYMBOL $7920 RecalCounterLow
FORCE_SYMBOL $7923 star_swirl
FORCE_SYMBOL $7926 my_random2
FORCE_NO_SYMBOL $792B
FORCE_NO_SYMBOL $792D
FORCE_NO_SYMBOL $7933
FORCE_SYMBOL $7939 star_swirl
COMMENT $793C load scale
COMMENT $793E and see if star is not out of bounds yet
FORCE_SYMBOL $793E spawn_max
COMMENT $7941 jump to init if out of bounds
COMMENT_LINE $7943 and depending on ho "big" the scale is - add even more to the scale
FORCE_NO_SYMBOL $7943
FORCE_NO_SYMBOL $7945
FORCE_NO_SYMBOL $794A
FORCE_NO_SYMBOL $794F
FORCE_NO_SYMBOL $7954
COMMENT $7959 and store the after add
COMMENT $795B also depending on the scale calc an intensity level
FORCE_NO_SYMBOL $795B
COMMENT $795D minimum intensity
FORCE_NO_SYMBOL $795D
FORCE_NO_SYMBOL $7961
COMMENT $7963 end a move to
FORCE_NO_SYMBOL $7963
FORCE_SYMBOL $7965 VIA_int_flags
COMMENT $7969 Store intensity in D/A
FORCE_SYMBOL $7969 VIA_port_a
COMMENT $796B mux disabled channel 2
FORCE_NO_SYMBOL $796B
FORCE_SYMBOL $796E VIA_port_b
COMMENT $7970 mux enabled channel 2
FORCE_SYMBOL $7970 VIA_port_b
COMMENT $7972 turn off mux
FORCE_SYMBOL $7972 VIA_port_b
FORCE_NO_SYMBOL $7974
COMMENT $7976 Store in VIA shift register
FORCE_SYMBOL $7976 VIA_shift_reg
COMMENT_LINE $7978 delay for dot dwell
FORCE_NO_SYMBOL $7978
COMMENT $797B Blank beam in VIA shift register
FORCE_SYMBOL $797B VIA_shift_reg
COMMENT $797D /BLANK low and /ZERO low
FORCE_SYMBOL $797D VIA_cntl
COMMENT $797F jump to done
COMMENT $7981 we are in initi phase, dec the init delay counter
COMMENT $7983 if not zero yet - jump out
COMMENT $7987 in case we are here from an oob, zero the beam
FORCE_NO_SYMBOL $7987
COMMENT $7989 /BLANK low and /ZERO low
FORCE_SYMBOL $7989 VIA_cntl
COMMENT $798B and also "break" current ramping (move)
FORCE_NO_SYMBOL $798B
COMMENT $798E disable ramping
FORCE_SYMBOL $798E VIA_t1_cnt_lo
COMMENT $7990 minimum scale at star birth
FORCE_NO_SYMBOL $7990
COMMENT $7992 store the scale
FORCE_SYMBOL $7994 my_random2
COMMENT $7997 0 - 127
FORCE_NO_SYMBOL $7997
COMMENT_LINE $7999 in a random number between 0 - 127
COMMENT $7999 between 0-254
COMMENT $799C load scale and pos to d
COMMENT $799E load and set the correct scale
FORCE_SYMBOL $799E VIA_t1_cnt_lo
COMMENT $79A0 if $ffff than not
FORCE_NO_SYMBOL $79A0
COMMENT_LINE $79A6 17 cycles per star more to calc os from angle, instead of old "pos" version
COMMENT_LINE $79A6 saving another 6 cycled by ldd instead of lda + ldb above (pos+scale)
COMMENT_LINE $79A6 11 per star more
COMMENT_LINE $79A6 saving one ldd due to puls = 6 cycles
COMMENT_LINE $79A6 11*4-6
COMMENT_LINE $79A6 38 cycles for one star cluster more due to using "angle" instead of pos
COMMENT_LINE $79A6 in b star angle 0-240
COMMENT_LINE $79A7 CIRCLE_ADR gotton from puls in y
FORCE_SYMBOL $79A7 circle
COMMENT $79AB y circle + starangle 0-240
COMMENT $79AD in d 0 - 480
COMMENT_LINE $79AF angle final d value 0-762
COMMENT_LINE $79AF corrected in first move to 0 - 720
COMMENT $79AF load from y 0 - 720 (angle)
COMMENT_LINE $79B1 TODO?
COMMENT_LINE $79B1 it is possible to precalculate in a cluster of 4 stars
COMMENT_LINE $79B1 the next 3 stars within the previous move
COMMENT_LINE $79B1 might save another 20 cycles or so...
COMMENT $79B1 otherwise move to the pos
FORCE_SYMBOL $79B1 VIA_port_a
COMMENT $79B3 Blank low, zero high?
FORCE_NO_SYMBOL $79B3
FORCE_SYMBOL $79B5 VIA_cntl
COMMENT $79B8 Enable mux
FORCE_SYMBOL $79B8 VIA_port_b
COMMENT $79BA Clear shift regigster
FORCE_SYMBOL $79BA VIA_shift_reg
COMMENT $79BC Disable mux
FORCE_SYMBOL $79BC VIA_port_b
COMMENT $79BE Store X in D/A register
FORCE_SYMBOL $79BE VIA_port_a
COMMENT $79C0 enable timer
FORCE_SYMBOL $79C0 VIA_t1_cnt_hi
COMMENT_LINE $79C2 in move - don't bother about cycle waste
FORCE_SYMBOL $79C4 star_swirl
COMMENT $79C9 since pos is already times 2
FORCE_SYMBOL $79C9 star_swirl
FORCE_NO_SYMBOL $79CC
FORCE_NO_SYMBOL $79D0
COMMENT $79D4 since pos is already times 2
FORCE_SYMBOL $79D4 star_swirl
FORCE_NO_SYMBOL $79D7
FORCE_NO_SYMBOL $79DB
COMMENT_LINE $79DF change star direction everey 10 seconds (nearly)
FORCE_SYMBOL $79DF RecalCounterHi
FORCE_NO_SYMBOL $79E2
FORCE_SYMBOL $79E6 RecalCounterLow
COMMENT $79EB do only once
FORCE_SYMBOL $79EB RecalCounterLow
FORCE_SYMBOL $79EE star_swirl
FORCE_SYMBOL $79F1 my_random2
FORCE_NO_SYMBOL $79F6
FORCE_NO_SYMBOL $79F8
FORCE_NO_SYMBOL $79FE
FORCE_SYMBOL $7A04 star_swirl
COMMENT $7A07 load scale
COMMENT $7A09 and see if star is not out of bounds yet
FORCE_SYMBOL $7A09 spawn_max
COMMENT $7A0C jump to init if out of bounds
COMMENT_LINE $7A0E and depending on ho "big" the scale is - add even more to the scale
FORCE_NO_SYMBOL $7A0E
FORCE_NO_SYMBOL $7A10
FORCE_NO_SYMBOL $7A15
FORCE_NO_SYMBOL $7A1A
FORCE_NO_SYMBOL $7A1F
COMMENT $7A24 and store the after add
COMMENT $7A26 also depending on the scale calc an intensity level
FORCE_NO_SYMBOL $7A26
COMMENT $7A28 minimum intensity
FORCE_NO_SYMBOL $7A28
FORCE_NO_SYMBOL $7A2C
COMMENT $7A2E end a move to
FORCE_NO_SYMBOL $7A2E
FORCE_SYMBOL $7A30 VIA_int_flags
COMMENT $7A34 Store intensity in D/A
FORCE_SYMBOL $7A34 VIA_port_a
COMMENT $7A36 mux disabled channel 2
FORCE_NO_SYMBOL $7A36
FORCE_SYMBOL $7A39 VIA_port_b
COMMENT $7A3B mux enabled channel 2
FORCE_SYMBOL $7A3B VIA_port_b
COMMENT $7A3D turn off mux
FORCE_SYMBOL $7A3D VIA_port_b
FORCE_NO_SYMBOL $7A3F
COMMENT $7A41 Store in VIA shift register
FORCE_SYMBOL $7A41 VIA_shift_reg
COMMENT_LINE $7A43 delay for dot dwell
FORCE_NO_SYMBOL $7A43
COMMENT $7A46 Blank beam in VIA shift register
FORCE_SYMBOL $7A46 VIA_shift_reg
COMMENT $7A48 /BLANK low and /ZERO low
FORCE_SYMBOL $7A48 VIA_cntl
COMMENT $7A4A jump to done
COMMENT $7A4C we are in initi phase, dec the init delay counter
COMMENT $7A4E if not zero yet - jump out
COMMENT $7A52 in case we are here from an oob, zero the beam
FORCE_NO_SYMBOL $7A52
COMMENT $7A54 /BLANK low and /ZERO low
FORCE_SYMBOL $7A54 VIA_cntl
COMMENT $7A56 and also "break" current ramping (move)
FORCE_NO_SYMBOL $7A56
COMMENT $7A59 disable ramping
FORCE_SYMBOL $7A59 VIA_t1_cnt_lo
COMMENT $7A5B minimum scale at star birth
FORCE_NO_SYMBOL $7A5B
COMMENT $7A5D store the scale
FORCE_SYMBOL $7A5F my_random2
COMMENT $7A62 0 - 127
FORCE_NO_SYMBOL $7A62
COMMENT_LINE $7A64 in a random number between 0 - 127
COMMENT $7A64 between 0-254
COMMENT $7A67 load scale and pos to d
COMMENT $7A69 load and set the correct scale
FORCE_SYMBOL $7A69 VIA_t1_cnt_lo
COMMENT $7A6B if $ffff than not
FORCE_NO_SYMBOL $7A6B
COMMENT_LINE $7A71 17 cycles per star more to calc os from angle, instead of old "pos" version
COMMENT_LINE $7A71 saving another 6 cycled by ldd instead of lda + ldb above (pos+scale)
COMMENT_LINE $7A71 11 per star more
COMMENT_LINE $7A71 saving one ldd due to puls = 6 cycles
COMMENT_LINE $7A71 11*4-6
COMMENT_LINE $7A71 38 cycles for one star cluster more due to using "angle" instead of pos
COMMENT_LINE $7A71 in b star angle 0-240
COMMENT_LINE $7A72 CIRCLE_ADR gotton from puls in y
FORCE_SYMBOL $7A72 circle
COMMENT $7A76 y circle + starangle 0-240
COMMENT $7A78 in d 0 - 480
COMMENT_LINE $7A7A angle final d value 0-762
COMMENT_LINE $7A7A corrected in first move to 0 - 720
COMMENT $7A7A load from y 0 - 720 (angle)
COMMENT_LINE $7A7C TODO?
COMMENT_LINE $7A7C it is possible to precalculate in a cluster of 4 stars
COMMENT_LINE $7A7C the next 3 stars within the previous move
COMMENT_LINE $7A7C might save another 20 cycles or so...
COMMENT $7A7C otherwise move to the pos
FORCE_SYMBOL $7A7C VIA_port_a
COMMENT $7A7E Blank low, zero high?
FORCE_NO_SYMBOL $7A7E
FORCE_SYMBOL $7A80 VIA_cntl
COMMENT $7A83 Enable mux
FORCE_SYMBOL $7A83 VIA_port_b
COMMENT $7A85 Clear shift regigster
FORCE_SYMBOL $7A85 VIA_shift_reg
COMMENT $7A87 Disable mux
FORCE_SYMBOL $7A87 VIA_port_b
COMMENT $7A89 Store X in D/A register
FORCE_SYMBOL $7A89 VIA_port_a
COMMENT $7A8B enable timer
FORCE_SYMBOL $7A8B VIA_t1_cnt_hi
COMMENT_LINE $7A8D in move - don't bother about cycle waste
FORCE_SYMBOL $7A8F star_swirl
COMMENT $7A94 since pos is already times 2
FORCE_SYMBOL $7A94 star_swirl
FORCE_NO_SYMBOL $7A97
FORCE_NO_SYMBOL $7A9B
COMMENT $7A9F since pos is already times 2
FORCE_SYMBOL $7A9F star_swirl
FORCE_NO_SYMBOL $7AA2
FORCE_NO_SYMBOL $7AA6
COMMENT_LINE $7AAA change star direction everey 10 seconds (nearly)
FORCE_SYMBOL $7AAA RecalCounterHi
FORCE_NO_SYMBOL $7AAD
FORCE_SYMBOL $7AB1 RecalCounterLow
COMMENT $7AB6 do only once
FORCE_SYMBOL $7AB6 RecalCounterLow
FORCE_SYMBOL $7AB9 star_swirl
FORCE_SYMBOL $7ABC my_random2
FORCE_NO_SYMBOL $7AC1
FORCE_NO_SYMBOL $7AC3
FORCE_NO_SYMBOL $7AC9
FORCE_SYMBOL $7ACF star_swirl
COMMENT $7AD2 load scale
COMMENT $7AD4 and see if star is not out of bounds yet
FORCE_SYMBOL $7AD4 spawn_max
COMMENT $7AD7 jump to init if out of bounds
COMMENT_LINE $7AD9 and depending on ho "big" the scale is - add even more to the scale
FORCE_NO_SYMBOL $7AD9
FORCE_NO_SYMBOL $7ADB
FORCE_NO_SYMBOL $7AE0
FORCE_NO_SYMBOL $7AE5
FORCE_NO_SYMBOL $7AEA
COMMENT $7AEF and store the after add
COMMENT $7AF1 also depending on the scale calc an intensity level
FORCE_NO_SYMBOL $7AF1
COMMENT $7AF3 minimum intensity
FORCE_NO_SYMBOL $7AF3
FORCE_NO_SYMBOL $7AF7
COMMENT $7AF9 end a move to
FORCE_NO_SYMBOL $7AF9
FORCE_SYMBOL $7AFB VIA_int_flags
COMMENT $7AFF Store intensity in D/A
FORCE_SYMBOL $7AFF VIA_port_a
COMMENT $7B01 mux disabled channel 2
FORCE_NO_SYMBOL $7B01
FORCE_SYMBOL $7B04 VIA_port_b
COMMENT $7B06 mux enabled channel 2
FORCE_SYMBOL $7B06 VIA_port_b
COMMENT $7B08 turn off mux
FORCE_SYMBOL $7B08 VIA_port_b
FORCE_NO_SYMBOL $7B0A
COMMENT $7B0C Store in VIA shift register
FORCE_SYMBOL $7B0C VIA_shift_reg
COMMENT_LINE $7B0E delay for dot dwell
FORCE_NO_SYMBOL $7B0E
COMMENT $7B11 Blank beam in VIA shift register
FORCE_SYMBOL $7B11 VIA_shift_reg
COMMENT $7B13 /BLANK low and /ZERO low
FORCE_SYMBOL $7B13 VIA_cntl
COMMENT $7B15 jump to done
COMMENT $7B17 we are in initi phase, dec the init delay counter
COMMENT $7B19 if not zero yet - jump out
COMMENT $7B1D in case we are here from an oob, zero the beam
FORCE_NO_SYMBOL $7B1D
COMMENT $7B1F /BLANK low and /ZERO low
FORCE_SYMBOL $7B1F VIA_cntl
COMMENT $7B21 and also "break" current ramping (move)
FORCE_NO_SYMBOL $7B21
COMMENT $7B24 disable ramping
FORCE_SYMBOL $7B24 VIA_t1_cnt_lo
COMMENT $7B26 minimum scale at star birth
FORCE_NO_SYMBOL $7B26
COMMENT $7B28 store the scale
FORCE_SYMBOL $7B2A my_random2
COMMENT $7B2D 0 - 127
FORCE_NO_SYMBOL $7B2D
COMMENT_LINE $7B2F in a random number between 0 - 127
COMMENT $7B2F between 0-254
COMMENT $7B32 preload next user stack
COMMENT $7B34 (D = y,x, X = vectorlist)
COMMENT_LINE $7B36 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7B36 behaviours control (action) and draw all objects
COMMENT_LINE $7B36 each object type has an individual behaviour
COMMENT_LINE $7B36 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7B36 values are = from "u" list as:
COMMENT_LINE $7B36 pulu     pc,d,x ; (D = y,x, X = vectorlist)
COMMENT_LINE $7B36 do the scaling
COMMENT $7B36 also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $7B36 VIA_t1_cnt_lo
COMMENT_LINE $7B3A start the move to
COMMENT_LINE $7B3A following calcs can be done within that move
FORCE_SYMBOL $7B3A VIA_port_a
COMMENT $7B3C Blank low, zero high?
FORCE_NO_SYMBOL $7B3C
FORCE_SYMBOL $7B3E VIA_cntl
COMMENT $7B41 Enable mux
FORCE_SYMBOL $7B41 VIA_port_b
COMMENT $7B43 Clear shift regigster
FORCE_SYMBOL $7B43 VIA_shift_reg
COMMENT $7B45 Disable mux
FORCE_SYMBOL $7B45 VIA_port_b
COMMENT $7B47 Store X in D/A register
FORCE_SYMBOL $7B47 VIA_port_a
COMMENT $7B49 enable timer
FORCE_SYMBOL $7B49 VIA_t1_cnt_hi
COMMENT $7B4B load current scale to a - for later calcs
FORCE_SYMBOL $7B4D tmp_angle
COMMENT $7B50 if we are the "R" than there is no previous letter
COMMENT $7B53 we have the lead and do not depend on other letters (jump)
COMMENT_LINE $7B55 CSA dec DIF_DELAY+u_offset1,u
COMMENT_LINE $7B55 bne no_space_changenow_lb
COMMENT_LINE $7B55 CSA lda #ADD_DELAY
COMMENT_LINE $7B55 CSA sta DIF_DELAY+u_offset1,u
COMMENT $7B55 the current "sinus" position of the space pulsation between letters
FORCE_SYMBOL $7B55 print_angle_2
FORCE_SYMBOL $7B58 circle
COMMENT $7B5E b is the -sin of the circle
COMMENT $7B61 if we happen to get a 0 do nothing, if we count zero as plus or minus, than the spaces change over time!
COMMENT $7B63 space between each letter
COMMENT $7B65 space change per "add"
FORCE_NO_SYMBOL $7B65
COMMENT $7B6C space change per sub
FORCE_NO_SYMBOL $7B6C
COMMENT $7B6F and store the changed space offset
COMMENT $7B71 our own position is always dependened on our prvious letter
COMMENT $7B74 load angle of previous
FORCE_SYMBOL $7B74 ANGLE
COMMENT $7B76 and add our space to that letter
COMMENT $7B78 and correct if over or underflow
FORCE_NO_SYMBOL $7B7A
FORCE_NO_SYMBOL $7B7D
FORCE_NO_SYMBOL $7B83
COMMENT $7B88 print angle has the major "circle angle" ("R" moves with that angle)
FORCE_SYMBOL $7B88 print_angle
COMMENT $7B8B store current angle
COMMENT $7B8D and get a pos from that angle
FORCE_SYMBOL $7B8D circle
COMMENT $7B93 save start pos
COMMENT $7B95 save start pos
COMMENT $7B97 preload next user stack
COMMENT $7B99 SHIFT_TITLE_UP ; this title is shifted a little bit upwards to better display the scroller
FORCE_NO_SYMBOL $7B99
COMMENT $7B9B move to time 1 lo, this means scaling
FORCE_SYMBOL $7B9B VIA_t1_cnt_lo
COMMENT $7B9D intensity
FORCE_NO_SYMBOL $7B9D
COMMENT $7BA1 end a move to
FORCE_NO_SYMBOL $7BA1
FORCE_SYMBOL $7BA3 VIA_int_flags
COMMENT $7BA7 Store intensity in D/A
FORCE_SYMBOL $7BA7 VIA_port_a
COMMENT $7BA9 mux disabled channel 2
FORCE_NO_SYMBOL $7BA9
FORCE_SYMBOL $7BAC VIA_port_b
COMMENT $7BAE mux enabled channel 2
FORCE_SYMBOL $7BAE VIA_port_b
COMMENT $7BB0 turn off mux
FORCE_SYMBOL $7BB0 VIA_port_b
COMMENT $7BB2 $7f is maximum possible positive strength to move
FORCE_NO_SYMBOL $7BB2
FORCE_SYMBOL $7BB5 VIA_port_a
COMMENT $7BB7 Blank low, zero high?
FORCE_NO_SYMBOL $7BB7
FORCE_SYMBOL $7BB9 VIA_cntl
COMMENT $7BBC Enable mux
FORCE_SYMBOL $7BBC VIA_port_b
COMMENT $7BBE Clear shift regigster
FORCE_SYMBOL $7BBE VIA_shift_reg
COMMENT $7BC0 Disable mux
FORCE_SYMBOL $7BC0 VIA_port_b
COMMENT $7BC2 Store X in D/A register
FORCE_SYMBOL $7BC2 VIA_port_a
COMMENT $7BC4 enable timer
FORCE_SYMBOL $7BC4 VIA_t1_cnt_hi
COMMENT $7BC6 strength in that the letters are printed
FORCE_SYMBOL $7BC6 vector_print_scale
COMMENT $7BC9 move to time 1 lo, this means scaling
FORCE_SYMBOL $7BC9 VIA_t1_cnt_lo
COMMENT $7BCB end a move to
FORCE_NO_SYMBOL $7BCB
FORCE_SYMBOL $7BCD VIA_int_flags
FORCE_SYMBOL $7BD1 myDraw_VL_mode4
FORCE_NO_SYMBOL $7BD6
COMMENT $7BD8 /BLANK low and /ZERO low
FORCE_SYMBOL $7BD8 VIA_cntl
COMMENT $7BDA (D = y,x, X = vectorlist)
COMMENT_LINE $7BDC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $7BDF also stores to scale :-() VIA_t1_cnt_lo ; to timer t1 (lo)
FORCE_SYMBOL $7BDF VIA_t1_cnt_lo
COMMENT $7BE4 Store Y in D/A register
FORCE_SYMBOL $7BE4 VIA_port_a
COMMENT $7BE6 Blank low, zero high?
FORCE_NO_SYMBOL $7BE6
FORCE_SYMBOL $7BE8 VIA_cntl
COMMENT $7BEB Enable mux ; hey dis si "break integratorzero 440"
FORCE_SYMBOL $7BEB VIA_port_b
COMMENT $7BED Clear shift regigster
FORCE_SYMBOL $7BED VIA_shift_reg
COMMENT $7BEF Disable mux
FORCE_SYMBOL $7BEF VIA_port_b
COMMENT $7BF1 Store X in D/A register
FORCE_SYMBOL $7BF1 VIA_port_a
COMMENT $7BF3 enable timer
FORCE_SYMBOL $7BF3 VIA_t1_cnt_hi
COMMENT $7BF8 if zero is reached - than bonus is discarded
FORCE_NO_SYMBOL $7BFF
COMMENT $7C01 anim counter
COMMENT $7C04 type of bonus
FORCE_NO_SYMBOL $7C07
FORCE_NO_SYMBOL $7C0B
FORCE_SYMBOL $7C1B GhostSmall_0
FORCE_SYMBOL $7C2F WormSmall_0
FORCE_SYMBOL $7C40 PacmanSmall_0
FORCE_NO_SYMBOL $7C49
COMMENT $7C4C to timer t1 (lo=
FORCE_SYMBOL $7C4C VIA_t1_cnt_lo
COMMENT $7C4E Store intensity in D/A
FORCE_SYMBOL $7C4E VIA_port_a
COMMENT $7C50 mux disabled channel 2
FORCE_NO_SYMBOL $7C50
FORCE_SYMBOL $7C53 VIA_port_b
COMMENT $7C55 mux enabled channel 2
FORCE_SYMBOL $7C55 VIA_port_b
COMMENT $7C57 turn off mux
FORCE_SYMBOL $7C57 VIA_port_b
COMMENT $7C59 load offset of vector list draw
COMMENT $7C60 prepare for a simulated pulu d,x,pc
FORCE_NO_SYMBOL $7C62
FORCE_SYMBOL $7C64 my_drawVLC_inner
FORCE_NO_SYMBOL $7C67
FORCE_NO_SYMBOL $7C6D
COMMENT $7C6F /BLANK low and /ZERO low
FORCE_SYMBOL $7C6F VIA_cntl
COMMENT_LINE $7C72 ***************************************************************************
COMMENT_LINE $7C72 ***************************************************************************
COMMENT_LINE $7C72 ***************************************************************************
COMMENT_LINE $7C72 this file is part of Release, written by Malban in 2017
COMMENT_LINE $7C72 org $7cc8
COMMENT_LINE $7C72 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7C72 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7C72 persistency stuff start
COMMENT_LINE $7C72 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FORCE_SYMBOL $7C75 RecalCounterLow
FORCE_SYMBOL $7C78 Random
FORCE_SYMBOL $7C7B my_random2
FORCE_SYMBOL $7C7E Random
FORCE_SYMBOL $7C81 my_random
COMMENT $7C84 +10*2
FORCE_SYMBOL $7C84 phaseList
FORCE_SYMBOL $7C87 initialPhase
COMMENT $7C8A play music (0 = play, !=0 not play)
FORCE_SYMBOL $7C8A musicOption
COMMENT $7C8D we assume a eEprom is available
FORCE_SYMBOL $7C8D ignoreDs2431
COMMENT_LINE $7C92 check if we should ignore eEprom completly (Button press on startup)
COMMENT $7C92 get button status
FORCE_SYMBOL $7C92 Read_Btns
COMMENT $7C95 is a button pressed?
FORCE_NO_SYMBOL $7C95
COMMENT $7C99 yes, than set ignore flag
FORCE_SYMBOL $7C99 ignoreDs2431
COMMENT $7C9C check if v4e did load bytes from storage area
FORCE_SYMBOL $7C9C v4eStorageLoaded
COMMENT $7C9F if != 0, than yes -> jump
COMMENT $7CA1 check if there is any v4e at all?
FORCE_SYMBOL $7CA1 v4ecartflags
COMMENT $7CA4 if not (positive) jump
COMMENT_LINE $7CA6 first time vec4 rom init
COMMENT $7CA6 otherwise fill the (usual) ROM with default values (v4e this is RAM to!)
FORCE_SYMBOL $7CA6 COPY_RAM_TO_VECROM
COMMENT $7CA9 is there an eprom (ignore flag always checked in eeprom routines)
FORCE_SYMBOL $7CA9 checkEprom
COMMENT_LINE $7CAC eprom saves valus in three stages, to keep times smaller (when only block save is needed)
FORCE_SYMBOL $7CAF current_eprom_blocksize
FORCE_SYMBOL $7CB2 optionsBlock
COMMENT $7CB5 load eprom data (also resets if no data found)
FORCE_SYMBOL $7CB5 eeprom_load_option
COMMENT $7CB8 check if there is any v4e at all?
FORCE_SYMBOL $7CB8 v4ecartflags
COMMENT $7CBB if yes, than don't save the same stuff 2 times, poor Flash...
FORCE_SYMBOL $7CC0 current_eprom_blocksize
FORCE_SYMBOL $7CC3 highScoreBlock
COMMENT $7CC6 load eprom data (also resets if no data found)
FORCE_SYMBOL $7CC6 eeprom_load_highscore
FORCE_SYMBOL $7CC9 start_cart
COMMENT_LINE $7CCC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7CCC persistency stuff end
COMMENT_LINE $7CCC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7CCC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $7CCC copy the vec4ever switching function into place
FORCE_SYMBOL $7CCC defaultValuesEeprom
FORCE_SYMBOL $7CCF v4e_saveBlockStart
FORCE_SYMBOL $7CD4 Move_Mem_a
COMMENT_LINE $7CD8 ***************************************************************************
COMMENT_LINE $7CD8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7CD8 ensureBank0
COMMENT_LINE $7CD8 rts
COMMENT_LINE $7CD8 ldd      #$DFFF                       ; Prepare DDR Registers % 1101 1111 1111 1111
COMMENT_LINE $7CD8 std      >VIA_DDR_b                   ; all ORB/ORA to output except ORB 5, PB6 goes LOW
COMMENT_LINE $7CD8 ; RESET to sensible values
COMMENT_LINE $7CD8 ldd      #$0100                       ; A = $01, B = 0
COMMENT_LINE $7CD8 std      >VIA_port_b                  ; ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
COMMENT_LINE $7CD8 ldd      #$987F                       ; A= $98, B = $7F
COMMENT_LINE $7CD8 sta      >VIA_aux_cntl                ; Standard AUX Cont = $98, T1 One shot mode with control of ramp
COMMENT_LINE $7CD8 stb      >VIA_t1_cnt_lo               ; Timer = $7f, RAMP On, after timer expires ramp off
COMMENT_LINE $7CD8 rts
COMMENT_LINE $7CD8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7CD8 ensureBank1
COMMENT_LINE $7CD8 rts
COMMENT_LINE $7CD8 ldd      #$9FFF                       ; Prepare DDR Registers % 1001 1111 1111 1111
COMMENT_LINE $7CD8 std      >VIA_DDR_b                   ; all ORB/ORA to output except ORB 5, PB6 goes LOW
COMMENT_LINE $7CD8 ; RESET to sensible values
COMMENT_LINE $7CD8 ldd      #$0100                       ; A = $01, B = 0
COMMENT_LINE $7CD8 std      >VIA_port_b                  ; ORB = $1 (ramp on, mux off), ORA = 0 (DAC)
COMMENT_LINE $7CD8 ldd      #$987F                       ; A= $98, B = $7F
COMMENT_LINE $7CD8 sta      >VIA_aux_cntl                ; Standard AUX Cont = $98, T1 One shot mode with control of ramp
COMMENT_LINE $7CD8 stb      >VIA_t1_cnt_lo               ; Timer = $7f, RAMP On, after timer expires ramp off
COMMENT_LINE $7CD8 rts
COMMENT_LINE $7CD8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7CD8 toOtherBank
COMMENT_LINE $7CD8 if CURRENT_BANK=2
COMMENT_LINE $7CD8 bra ensureBank0
COMMENT_LINE $7CD8 else
COMMENT_LINE $7CD8 bra ensureBank1
COMMENT_LINE $7CD8 endif
COMMENT_LINE $7CD8 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7CD8 ***************************************************************************
COMMENT_LINE $7CD8 this file is part of Release, written by Malban in 2017
COMMENT_LINE $7CD8 Most parts were written by:
COMMENT_LINE $7CD8 2016 Thomas G. Sontowski:
COMMENT_LINE $7CD8 based on Alex Herbert's ds2430 driver
COMMENT_LINE $7CD8 ***************************************************************************
COMMENT_LINE $7CD8 this file is part of Release, written by Malban in 2017
COMMENT_LINE $7CD8 DS1W - Dallas Semiconductor 1-Wire Driver
COMMENT_LINE $7CD8 Copyright (c) 2002 Alex Herbert
COMMENT_LINE $7CD8 Memory Base Addresses
COMMENT_LINE $7CD8 PIA Registers
COMMENT_LINE $7CD8 Direct Page Macros
COMMENT_LINE $0000 1-Wire Timing constants
COMMENT_LINE $7CD8 $032a = 810 cycles = 540us
COMMENT_LINE $7CD8 $02d0 = 720 cycles = 480us
COMMENT_LINE $7CD8 $78 = 120cycles = 80us
COMMENT_LINE $7CD8 Note:
COMMENT_LINE $7CD8 For reliability DS1W_RESETDUR and DS1W_TSLOTDUR are = above the
COMMENT_LINE $7CD8 minimums specified by the datasheet. To improve performance, values
COMMENT_LINE $7CD8 closer to the specified minimums may be used.
COMMENT_LINE $7CD8 DS1W_RESETDUR minimum = 480us
COMMENT_LINE $7CD8 DS1W_TSLOTDUR minimum = 60us
COMMENT_LINE $7CD8 1-Wire ROM commands
COMMENT_LINE $7CD8 Subroutines
COMMENT_LINE $7CD8 ds1w_open
COMMENT_LINE $7CD8 function:
COMMENT_LINE $7CD8 Prepares Vectrex I/O hardware (6522) for 1-Wire communication.
COMMENT_LINE $7CD8 on entry:
COMMENT_LINE $7CD8 dp = $d0
COMMENT_LINE $7CD8 on exit:
COMMENT_LINE $7CD8 d  = undefined
FORCE_NO_SYMBOL $7CD8
COMMENT $7CDB make sure PB7 is set, PB6 is cleared
FORCE_SYMBOL $7CDB CNTRL
COMMENT $7CDD Disable T1 output on PB7 (RAMP)
FORCE_SYMBOL $7CDD ACNTRL
COMMENT_LINE $7CE0 ds1w_close
COMMENT_LINE $7CE0 function:
COMMENT_LINE $7CE0 Restores Vectrex I/O hardware (6522) defaults.
COMMENT_LINE $7CE0 on entry:
COMMENT_LINE $7CE0 dp = $d0
COMMENT_LINE $7CE0 on exit:
COMMENT_LINE $7CE0 b  = undefined
FORCE_NO_SYMBOL $7CE0
COMMENT $7CE2 Enable T1 output on PB7 (RAMP)
FORCE_SYMBOL $7CE2 ACNTRL
COMMENT_LINE $7CE5 ds1w_reset
COMMENT_LINE $7CE5 function:
COMMENT_LINE $7CE5 Reset 1-Wire device(s), and detect if device is present.
COMMENT_LINE $7CE5 on entry:
COMMENT_LINE $7CE5 dp = $d0
COMMENT_LINE $7CE5 on exit:
COMMENT_LINE $7CE5 a  = 0 if device is present, -1 if not.
COMMENT_LINE $7CE5 b  = undefined
COMMENT_LINE $7CE5 cc = z=1 and n=0 if device present,
COMMENT_LINE $7CE5 z=0 and n=1 if device not present.
COMMENT $7CE5 reset pulse duration
FORCE_SYMBOL $7CE5 DS1W_RESETDUR
COMMENT $7CE8 start timer
FORCE_SYMBOL $7CE8 T1LOLC
COMMENT_LINE $7CEA generate reset pulse
FORCE_NO_SYMBOL $7CEA
COMMENT $7CEC PB6 direction = output
FORCE_SYMBOL $7CEC DCNTRL
FORCE_NO_SYMBOL $7CEE
FORCE_SYMBOL $7CF0 IFLAG
COMMENT $7CF2 wait for timer
FORCE_NO_SYMBOL $7CF4
COMMENT $7CF6 PB6 direction = input
FORCE_SYMBOL $7CF6 DCNTRL
COMMENT_LINE $7CF8 check for presence pulse
COMMENT $7CF8 test PB6
FORCE_SYMBOL $7CF8 CNTRL
COMMENT $7CFA PB6 was low too early (emulator?)
COMMENT $7CFC presence pulse detect duration
FORCE_SYMBOL $7CFC DS1W_PRESDUR
COMMENT $7CFF start timer
FORCE_SYMBOL $7CFF T1LOLC
FORCE_NO_SYMBOL $7D01
COMMENT $7D03 test PB6
FORCE_SYMBOL $7D03 CNTRL
COMMENT $7D07 timeout?
FORCE_SYMBOL $7D07 IFLAG
COMMENT $7D0B PB6 didn't go low (no device attached?)
FORCE_SYMBOL $7D0D IFLAG
COMMENT $7D0F wait for timer
FORCE_SYMBOL $7D11 CNTRL
COMMENT $7D13 PB6 stayed low too long (fault?)
COMMENT $7D15 time slot duration
FORCE_SYMBOL $7D15 DS1W_TSLOTDUR
COMMENT $7D17 load timer latch
FORCE_SYMBOL $7D17 T1LOLC
COMMENT $7D19 return "no error"
COMMENT $7D1B return "device not present"
COMMENT_LINE $7D1E ds1w_txbyte
COMMENT_LINE $7D1E function:
COMMENT_LINE $7D1E Transmit byte to 1-Wire device.
COMMENT_LINE $7D1E on entry:
COMMENT_LINE $7D1E a  = byte to send
COMMENT_LINE $7D1E dp = $d0
COMMENT_LINE $7D1E on exit:
COMMENT_LINE $7D1E d  = undefined
COMMENT $7D1E bits in byte
FORCE_NO_SYMBOL $7D1E
COMMENT $7D20 put loop counter 'above' stack
COMMENT $7D22 shift data into carry
COMMENT $7D25 start timer
FORCE_SYMBOL $7D25 T1HOC
COMMENT_LINE $7D27 long pulse low ~~\________/~~
FORCE_NO_SYMBOL $7D27
COMMENT $7D29 PB6 direction = output
FORCE_SYMBOL $7D29 DCNTRL
FORCE_NO_SYMBOL $7D2B
FORCE_SYMBOL $7D2D IFLAG
COMMENT $7D2F wait for end of time slot
FORCE_NO_SYMBOL $7D31
COMMENT $7D33 PB6 direction = input
FORCE_SYMBOL $7D33 DCNTRL
COMMENT $7D3A start timer
FORCE_SYMBOL $7D3A T1HOC
COMMENT_LINE $7D3C short pulse low ~~\_/~~~~~~~~~
FORCE_NO_SYMBOL $7D3C
COMMENT $7D3E PB6 direction = output
FORCE_SYMBOL $7D3E DCNTRL
FORCE_NO_SYMBOL $7D40
COMMENT $7D42 PB6 direction = input
FORCE_SYMBOL $7D42 DCNTRL
FORCE_NO_SYMBOL $7D44
FORCE_SYMBOL $7D46 IFLAG
COMMENT $7D48 wait for end of time slot
COMMENT_LINE $7D4F ds1w_rxbyte
COMMENT_LINE $7D4F function:
COMMENT_LINE $7D4F Receive byte from 1-Wire device.
COMMENT_LINE $7D4F on entry:
COMMENT_LINE $7D4F dp = $d0
COMMENT_LINE $7D4F on exit:
COMMENT_LINE $7D4F a  = received byte
COMMENT_LINE $7D4F b  = undefined
COMMENT $7D4F bits in byte
FORCE_NO_SYMBOL $7D4F
COMMENT $7D51 put loop counter 'above' stack
COMMENT $7D53 start timer
FORCE_SYMBOL $7D53 T1HOC
COMMENT_LINE $7D55 short pulse low ~~\_xxxxxx~~~~
FORCE_NO_SYMBOL $7D55
COMMENT $7D57 PB6 direction = output
FORCE_SYMBOL $7D57 DCNTRL
FORCE_NO_SYMBOL $7D59
COMMENT $7D5B PB6 direction = input
FORCE_SYMBOL $7D5B DCNTRL
COMMENT_LINE $7D5D read response
COMMENT $7D5D timing
COMMENT $7D5E read PB
FORCE_SYMBOL $7D5E CNTRL
COMMENT $7D60 shift PB6...
COMMENT $7D61 ...into carry...
COMMENT $7D62 ...and rotate into result byte
FORCE_NO_SYMBOL $7D63
FORCE_SYMBOL $7D65 IFLAG
COMMENT $7D67 wait for end of time slot
COMMENT_LINE $7D6E this file is part of Release, written by Malban in 2017
COMMENT_LINE $7D6E 2016 Thomas G. Sontowski:
COMMENT_LINE $7D6E based on Alex Herbert's ds2430 driver
COMMENT_LINE $7D6E DS2431 Commands
COMMENT_LINE $7D6E DS2430_LOCKAR   equ     $5a     ; Lock Application Register
COMMENT_LINE $7D6E DS2430_READSR   equ     $66     ; Read Status Register
COMMENT_LINE $7D6E DS2430_WRITEAR  equ     $99     ; Write bytes to Application Register
COMMENT_LINE $7D6E DS2430_READAR   equ     $c3     ; Read bytes from Application Register
COMMENT_LINE $7D6E DS2430_VALKEY   equ     $a5     ; Validation byte for COPYSP and LOCKAR
COMMENT_LINE $7D6E DS2431 Timings
COMMENT_LINE $7D6E Subroutines
COMMENT_LINE $7D6E ds2431_load
COMMENT_LINE $7D6E function:
COMMENT_LINE $7D6E load DS2431 EEPROM to RAM
COMMENT_LINE $7D6E on entry:
COMMENT_LINE $7D6E x = load address
COMMENT_LINE $7D6E on exit:
COMMENT_LINE $7D6E a = 0 if no error,
COMMENT_LINE $7D6E non-zero if error
COMMENT $7D6E number of bytes to save (loop counter)
FORCE_SYMBOL $7D6E current_eprom_blocksize
COMMENT $7D71 stack used registers
COMMENT $7D77 open 1-wire port
FORCE_SYMBOL $7D77 ds1w_open
COMMENT $7D7A reset device
FORCE_SYMBOL $7D7A ds1w_reset
COMMENT $7D7D exit if no device present
COMMENT $7D7F no need to access rom, non-overdrive version
FORCE_SYMBOL $7D7F DS1W_SKIPROM
COMMENT $7D81 send command
COMMENT $7D83 read memory
FORCE_SYMBOL $7D83 DS2431_READMEM
COMMENT $7D85 send command
FORCE_SYMBOL $7D87 current_eprom_blockadr
COMMENT $7D8A send address
COMMENT $7D8C address of first byte to load
COMMENT $7D8D send address
COMMENT $7D8F read byte from scratch pad
COMMENT $7D91 save to ram
COMMENT $7D93 decrement loop counter
FORCE_NO_SYMBOL $7D93
COMMENT $7D95 until all bytes are read
COMMENT $7D97 close port
FORCE_SYMBOL $7D97 ds1w_close
COMMENT $7D9A restore registers from stack and return
COMMENT_LINE $7D9C ds2430_save
COMMENT_LINE $7D9C function:
COMMENT_LINE $7D9C save RAM to DS2430 EEPROM
COMMENT_LINE $7D9C on entry:
COMMENT_LINE $7D9C x = address of data to save
COMMENT_LINE $7D9C on exit:
COMMENT_LINE $7D9C a = 0 if no error,
COMMENT_LINE $7D9C non-zero if error
COMMENT $7D9C number of bytes to save (loop counter)
FORCE_SYMBOL $7D9C current_eprom_blocksize
FORCE_SYMBOL $7D9F current_eprom_blockadr
COMMENT $7DA2 stack used registers
COMMENT $7DA4 open 1-wire port
FORCE_SYMBOL $7DA4 ds1w_open
COMMENT $7DA7 reset device
FORCE_SYMBOL $7DA7 ds1w_reset
COMMENT $7DAA exit if no device present
COMMENT $7DAC no need to access rom
FORCE_SYMBOL $7DAC DS1W_SKIPROM
COMMENT $7DAE send command
FORCE_SYMBOL $7DAE ds1w_txbyte
COMMENT $7DB1 write bytes to scratch pad
FORCE_SYMBOL $7DB1 DS2431_WRITESP
COMMENT $7DB3 send command
FORCE_SYMBOL $7DB3 ds1w_txbyte
COMMENT $7DB6 address
FORCE_NO_SYMBOL $7DB6
COMMENT $7DB8 send address
FORCE_SYMBOL $7DB8 ds1w_txbyte
FORCE_SYMBOL $7DBC ds1w_txbyte
COMMENT $7DBF get byte from ram
COMMENT $7DC1 send byte
FORCE_SYMBOL $7DC1 ds1w_txbyte
COMMENT $7DC4 decrement loop counter
FORCE_NO_SYMBOL $7DC4
FORCE_NO_SYMBOL $7DC6
FORCE_NO_SYMBOL $7DC8
COMMENT $7DCA until 8 bytes are sent
COMMENT $7DCC reset device
FORCE_SYMBOL $7DCC ds1w_reset
COMMENT $7DCF no need to access rom
FORCE_SYMBOL $7DCF DS1W_SKIPROM
COMMENT $7DD1 send command
FORCE_SYMBOL $7DD1 ds1w_txbyte
FORCE_SYMBOL $7DD4 DS2431_READSP
COMMENT $7DD6 send command
FORCE_SYMBOL $7DD6 ds1w_txbyte
COMMENT_LINE $7DD9 read the authorization code
COMMENT $7DD9 read byte from scratch pad
FORCE_SYMBOL $7DD9 ds1w_rxbyte
COMMENT $7DDC TA1
COMMENT $7DDE read byte from scratch pad
FORCE_SYMBOL $7DDE ds1w_rxbyte
COMMENT $7DE1 TA2
COMMENT $7DE3 read byte from scratch pad
FORCE_SYMBOL $7DE3 ds1w_rxbyte
COMMENT $7DE6 E/S
COMMENT $7DE8 reset device
FORCE_SYMBOL $7DE8 ds1w_reset
COMMENT $7DEB no need to access rom
FORCE_SYMBOL $7DEB DS1W_SKIPROM
COMMENT $7DED send command
FORCE_SYMBOL $7DED ds1w_txbyte
COMMENT $7DF0 copy scratch pad to eeprom
FORCE_SYMBOL $7DF0 DS2431_COPYSP
COMMENT $7DF2 send command
FORCE_SYMBOL $7DF2 ds1w_txbyte
COMMENT $7DF7 send validation
FORCE_SYMBOL $7DF7 ds1w_txbyte
COMMENT $7DFC send validation
FORCE_SYMBOL $7DFC ds1w_txbyte
COMMENT $7E01 send validation
FORCE_SYMBOL $7E01 ds1w_txbyte
COMMENT $7E04 eeprom write (scratch pad copy) duration
FORCE_SYMBOL $7E04 DS2431_COPYDUR
COMMENT $7E07 start timer
FORCE_SYMBOL $7E07 T1LOLC
FORCE_NO_SYMBOL $7E09
FORCE_SYMBOL $7E0B IFLAG
COMMENT $7E0D wait for timer
FORCE_NO_SYMBOL $7E0F
FORCE_NO_SYMBOL $7E13
FORCE_NO_SYMBOL $7E15
FORCE_NO_SYMBOL $7E17
COMMENT $7E1B close port
FORCE_SYMBOL $7E1B ds1w_close
COMMENT_LINE $7E1E jsr ensureBank1
COMMENT $7E1E restore registers from stack and return
COMMENT_LINE $7E20 ds2431_verify
COMMENT_LINE $7E20 function:
COMMENT_LINE $7E20 compare DS2431 EEPROM to RAM
COMMENT_LINE $7E20 on entry:
COMMENT_LINE $7E20 x = data address
COMMENT_LINE $7E20 on exit:
COMMENT_LINE $7E20 a = 0 if same,
COMMENT_LINE $7E20 non-zero if different
COMMENT $7E20 number of bytes to save (loop counter)
FORCE_SYMBOL $7E20 current_eprom_blocksize
COMMENT $7E23 stack used registers
COMMENT $7E25 open 1-wire port
FORCE_SYMBOL $7E25 ds1w_open
COMMENT $7E28 reset device
FORCE_SYMBOL $7E28 ds1w_reset
COMMENT $7E2B exit if no device present
COMMENT $7E2D no need to access rom
FORCE_SYMBOL $7E2D DS1W_SKIPROM
COMMENT $7E2F send command
FORCE_SYMBOL $7E2F ds1w_txbyte
COMMENT $7E32 copy eeprom to scratch pad
FORCE_SYMBOL $7E32 DS2431_READMEM
COMMENT $7E34 send command
FORCE_SYMBOL $7E34 ds1w_txbyte
FORCE_SYMBOL $7E37 current_eprom_blockadr
COMMENT $7E3A send address
FORCE_SYMBOL $7E3A ds1w_txbyte
COMMENT $7E3D address of first byte to verify
COMMENT $7E3E send address
FORCE_SYMBOL $7E3E ds1w_txbyte
COMMENT $7E41 read byte from scratch pad
FORCE_SYMBOL $7E41 ds1w_rxbyte
COMMENT $7E44 compare to ram
COMMENT $7E46 exit if not same
COMMENT $7E48 decrement loop counter
FORCE_NO_SYMBOL $7E48
COMMENT $7E4A until all bytes are read
COMMENT $7E4C close port
FORCE_SYMBOL $7E4C ds1w_close
COMMENT $7E4F restore registers from stack and return
COMMENT_LINE $7E51 ***************************************************************************
COMMENT_LINE $7E51 ;;;;;;;;;;;;
COMMENT_LINE $7E51 ;;;;;;;;;;;;
FORCE_SYMBOL $7E51 copyDefaultsToRAM
FORCE_SYMBOL $7E54 ignoreDs2431
FORCE_SYMBOL $7E59 ds2431Present
FORCE_SYMBOL $7E61 current_eprom_blocksize
FORCE_SYMBOL $7E64 optionsBlock
FORCE_SYMBOL $7E6C current_eprom_blocksize
FORCE_SYMBOL $7E6F highScoreBlock
FORCE_SYMBOL $7E74 v4ecartflags
COMMENT_LINE $7E79 jsr      ensureBank1
FORCE_SYMBOL $7E79 store_score
COMMENT $7E7C jmp ensureBank1
COMMENT_LINE $7E7D jsr ensureBank1
FORCE_SYMBOL $7E7D copyDefaultsToRAM
COMMENT_LINE $7E80 ***************************************************************************
FORCE_SYMBOL $7E80 ignoreDs2431
FORCE_SYMBOL $7E85 ds2431Present
COMMENT $7E88 open 1-wire port
FORCE_SYMBOL $7E88 ds1w_open
COMMENT $7E8B reset device
FORCE_SYMBOL $7E8B ds1w_reset
COMMENT_LINE $7E8E tsta
FORCE_SYMBOL $7E90 ds2431Present
COMMENT $7E93 close port
FORCE_SYMBOL $7E93 ds1w_close
COMMENT_LINE $7E96 jmp ensureBank1
COMMENT_LINE $7E96 ***************************************************************************
COMMENT_LINE $7E96 current_eprom_blocksize = blocksize
COMMENT_LINE $7E96 current_eprom_blockadr = block address in eeprom
COMMENT_LINE $7E96 x = address to save
FORCE_NO_SYMBOL $7E96
FORCE_SYMBOL $7E9A current_eprom_blocksize
FORCE_SYMBOL $7E9E ignoreDs2431
FORCE_SYMBOL $7EA3 v4ecartflags
COMMENT_LINE $7EA8 jsr ensureBank1
COMMENT $7EAC <<8)+(EEPROM_STORESIZE-1) ;
FORCE_SYMBOL $7EAC EEPROM_CHECKSUM
COMMENT $7EAE create checksum byte
FORCE_NO_SYMBOL $7EB3
COMMENT $7EB7 compare ram to eeprom
COMMENT $7EBB if different, then update eeprom
COMMENT $7EBF jmp  ensureBank1
COMMENT_LINE $7EC0 ***************************************************************************
COMMENT_LINE $7EC0 current_eprom_blocksize = blocksize
COMMENT_LINE $7EC0 current_eprom_blockadr = block address in eeprom
COMMENT_LINE $7EC0 x = address to load To
FORCE_SYMBOL $7EC0 ignoreDs2431
FORCE_SYMBOL $7EC5 v4ecartflags
COMMENT $7ECA Source copy the vec4ever switching function into place
FORCE_SYMBOL $7ECA vec4SaveBuffer
COMMENT $7ECD destination
FORCE_SYMBOL $7ECD v4e_saveBlockStart
FORCE_SYMBOL $7ED2 Move_Mem_a
COMMENT $7ED5 load 32 byte eeprom to ram
FORCE_SYMBOL $7ED5 ds2431_load
FORCE_SYMBOL $7ED8 current_eprom_blocksize
COMMENT $7EDC sum the bytes
COMMENT $7EE1 equal to checksum?
FORCE_SYMBOL $7EE1 EEPROM_CHECKSUM
COMMENT $7EE3 if not, then format the eeprom
FORCE_SYMBOL $7EE7 current_eprom_blocksize
FORCE_NO_SYMBOL $7EEA
COMMENT $7EEE jmp  ensureBank1
COMMENT_LINE $7EEF ***************************************************************************
COMMENT_LINE $7EEF ***************************************************************************
COMMENT_LINE $7EEF Immediately back to menu
COMMENT $7EEF copy the vec4ever switching function into place
FORCE_SYMBOL $7EEF ramfunctiondata
FORCE_SYMBOL $7EF2 ramfunction
FORCE_SYMBOL $7EF7 Move_Mem_a
COMMENT $7EFA the 'switch back to menu' command
FORCE_NO_SYMBOL $7EFA
COMMENT $7EFD up up and away
FORCE_SYMBOL $7EFD ramfunction
COMMENT_LINE $7F00 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT $7F00 Source copy the vec4ever switching function into place
FORCE_SYMBOL $7F00 v4e_saveBlockStart
COMMENT $7F03 destination
FORCE_SYMBOL $7F03 vec4SaveBuffer
FORCE_SYMBOL $7F08 Move_Mem_a
COMMENT $7F0D copy the vec4ever switching function into place
FORCE_SYMBOL $7F0D StoreHiscoreFnc
FORCE_SYMBOL $7F10 ramfunction
FORCE_SYMBOL $7F15 Move_Mem_a
COMMENT $7F18 the 'store data' command
FORCE_NO_SYMBOL $7F18
COMMENT $7F1B up up and away
FORCE_SYMBOL $7F1B ramfunction
COMMENT_LINE $7F1E ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7F1E the function below does the magic handshake with the cart,
COMMENT_LINE $7F1E then waits for the new cart data to appear in the cart address
COMMENT_LINE $7F1E space and jumps back to the v4e cart
COMMENT $7F1E notify v4e
FORCE_NO_SYMBOL $7F1E
COMMENT $7F21 and put command on the bus
FORCE_NO_SYMBOL $7F21
COMMENT $7F26 while the cart is working there is only one data byte
FORCE_NO_SYMBOL $7F26
COMMENT $7F2A header just in case
COMMENT_LINE $7F2D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7F2D the function below does the magic handshake with the cart,
COMMENT_LINE $7F2D then waits for the new cart data to appear in the cart address
COMMENT_LINE $7F2D space and jumps back to the menu
COMMENT $7F2D notify the cart uProc
FORCE_NO_SYMBOL $7F2D
COMMENT $7F30 put command on the bus
FORCE_NO_SYMBOL $7F30
FORCE_NO_SYMBOL $7F32
COMMENT $7F38 while the cart is setting up itself there is only one data byte
FORCE_NO_SYMBOL $7F38
COMMENT $7F3B available, so check for .two. known and different ones
COMMENT $7F3D 0-A: "GCE xxxx",$80 / B+C: music pointer (could contain a zero..)
FORCE_NO_SYMBOL $7F3D
COMMENT $7F3F look for end of menu cart header
COMMENT $7F43 return to menu code data
COMMENT_LINE $7F45 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7F6D ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMMENT_LINE $7FF0 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
RANGE $0000-$4B77 DP $D0
RANGE $4B77-$4DC0 DP $FF
RANGE $4DC0-$5685 DP $D0
RANGE $5685-$56D4 DP $C8
RANGE $56D4-$5A5D DP $D0
RANGE $5A5D-$5AB3 DP $C8
RANGE $5AB3-$5AB3 DP $D0
RANGE $5AB3-$5BF0 DP $C8
RANGE $5BF0-$5BFA DP $D0
RANGE $5BFA-$5C50 DP $C8
RANGE $5C50-$5C50 DP $D0
RANGE $5C50-$5CAC DP $C8
RANGE $5CAC-$7E71 DP $D0
RANGE $7E7A-$7F23 DP $D0
RANGE $7F9D-$8103 DP $D0
RANGE $0000-$000B CHAR_DATA 11
RANGE $000B-$000D DW_DATA 1
RANGE $000D-$0011 DB_DATA 4
RANGE $0011-$0019 CHAR_DATA 8
RANGE $0019-$001A DB_DATA 1
RANGE $001A-$001D CODE
RANGE $001D-$0024 CHAR_DATA 7
RANGE $0024-$002A CHAR_DATA 6
RANGE $002A-$002C DW_DATA 1
RANGE $002C-$002E DW_DATA 1
RANGE $002E-$0030 DW_DATA 1
RANGE $0030-$0034 CHAR_DATA 4
RANGE $0034-$0036 DW_DATA 1
RANGE $0036-$0038 DW_DATA 1
RANGE $0038-$003A DW_DATA 1
RANGE $003A-$003B DB_DATA 1
RANGE $003B-$003C DB_DATA 1
RANGE $003C-$003E DW_DATA 1
RANGE $003E-$0040 DW_DATA 1
RANGE $0040-$0042 DW_DATA 1
RANGE $0042-$0044 DW_DATA 1
RANGE $0044-$0048 CHAR_DATA 4
RANGE $0048-$0051 CHAR_DATA 9
RANGE $0051-$0058 CHAR_DATA 7
RANGE $0058-$005D CHAR_DATA 5
RANGE $005D-$0062 CHAR_DATA 5
RANGE $0062-$0069 CHAR_DATA 7
RANGE $0069-$0074 CHAR_DATA 11
RANGE $0074-$007C DB_DATA 8
RANGE $007C-$0082 CHAR_DATA 6
RANGE $0082-$0088 CHAR_DATA 6
RANGE $0088-$008E CHAR_DATA 6
RANGE $008E-$0094 CHAR_DATA 6
RANGE $0094-$009A CHAR_DATA 6
RANGE $009A-$060F CODE
RANGE $060F-$0647 CHAR_DATA 56
RANGE $0647-$06A4 CHAR_DATA 93
RANGE $06A4-$0748 CHAR_DATA 164
RANGE $0748-$079A CHAR_DATA 82
RANGE $079A-$07B7 CHAR_DATA 29
RANGE $07B7-$07D7 CHAR_DATA 32
RANGE $07D7-$07F9 CHAR_DATA 34
RANGE $07F9-$0815 CHAR_DATA 28
RANGE $0815-$0837 CHAR_DATA 34
RANGE $0837-$0855 CHAR_DATA 30
RANGE $0855-$0874 CHAR_DATA 31
RANGE $0874-$0894 CHAR_DATA 32
RANGE $0894-$08AF CHAR_DATA 27
RANGE $08AF-$08CA CHAR_DATA 27
RANGE $08CA-$08E5 CHAR_DATA 27
RANGE $08E5-$0903 CHAR_DATA 30
RANGE $0903-$0926 CHAR_DATA 35
RANGE $0926-$0942 CHAR_DATA 28
RANGE $0942-$095E CHAR_DATA 28
RANGE $095E-$097B CHAR_DATA 29
RANGE $097B-$0998 CHAR_DATA 29
RANGE $0998-$09B6 CHAR_DATA 30
RANGE $09B6-$0A58 CHAR_DATA 162
RANGE $0A58-$16E0 CODE
RANGE $16E0-$16E4 DB_DATA 4
RANGE $16E4-$16EE DB_DATA 10
RANGE $16EE-$16F8 DB_DATA 10
RANGE $16F8-$1702 DB_DATA 10
RANGE $1702-$170C DB_DATA 10
RANGE $170C-$1716 DB_DATA 10
RANGE $1716-$1720 DB_DATA 10
RANGE $1720-$172A DB_DATA 10
RANGE $172A-$172C DB_DATA 2
RANGE $172C-$1736 DB_DATA 10
RANGE $1736-$1740 DB_DATA 10
RANGE $1740-$174A DB_DATA 10
RANGE $174A-$1754 DB_DATA 10
RANGE $1754-$175E DB_DATA 10
RANGE $175E-$1768 DB_DATA 10
RANGE $1768-$1772 DB_DATA 10
RANGE $1772-$177C DB_DATA 10
RANGE $177C-$1786 DB_DATA 10
RANGE $1786-$1790 DB_DATA 10
RANGE $1790-$179A DB_DATA 10
RANGE $179A-$179C DB_DATA 2
RANGE $179C-$17A6 DB_DATA 10
RANGE $17A6-$17B0 DB_DATA 10
RANGE $17B0-$17BA DB_DATA 10
RANGE $17BA-$17C4 DB_DATA 10
RANGE $17C4-$17C9 DB_DATA 5
RANGE $17C9-$2049 CODE
RANGE $2049-$204C DB_DATA 3
RANGE $204C-$204F DB_DATA 3
RANGE $204F-$2052 DB_DATA 3
RANGE $2052-$2055 DB_DATA 3
RANGE $2055-$2058 DB_DATA 3
RANGE $2058-$205B DB_DATA 3
RANGE $205B-$205E DB_DATA 3
RANGE $205E-$2061 DB_DATA 3
RANGE $2061-$2064 DB_DATA 3
RANGE $2064-$2067 DB_DATA 3
RANGE $2067-$206A DB_DATA 3
RANGE $206A-$206D DB_DATA 3
RANGE $206D-$206E DB_DATA 1
RANGE $206E-$2071 DB_DATA 3
RANGE $2071-$2074 DB_DATA 3
RANGE $2074-$2077 DB_DATA 3
RANGE $2077-$207A DB_DATA 3
RANGE $207A-$207D DB_DATA 3
RANGE $207D-$2080 DB_DATA 3
RANGE $2080-$2083 DB_DATA 3
RANGE $2083-$2086 DB_DATA 3
RANGE $2086-$2087 DB_DATA 1
RANGE $2087-$208A DB_DATA 3
RANGE $208A-$208D DB_DATA 3
RANGE $208D-$2090 DB_DATA 3
RANGE $2090-$2093 DB_DATA 3
RANGE $2093-$2096 DB_DATA 3
RANGE $2096-$2099 DB_DATA 3
RANGE $2099-$209A DB_DATA 1
RANGE $209A-$209D DB_DATA 3
RANGE $209D-$20A0 DB_DATA 3
RANGE $20A0-$20A3 DB_DATA 3
RANGE $20A3-$20A6 DB_DATA 3
RANGE $20A6-$20A7 DB_DATA 1
RANGE $20A7-$20AA DB_DATA 3
RANGE $20AA-$20AD DB_DATA 3
RANGE $20AD-$20B0 DB_DATA 3
RANGE $20B0-$20B3 DB_DATA 3
RANGE $20B3-$20B4 DB_DATA 1
RANGE $20B4-$20B7 DB_DATA 3
RANGE $20B7-$20BA DB_DATA 3
RANGE $20BA-$20BD DB_DATA 3
RANGE $20BD-$20C0 DB_DATA 3
RANGE $20C0-$20C1 DB_DATA 1
RANGE $20C1-$20C4 DB_DATA 3
RANGE $20C4-$20C7 DB_DATA 3
RANGE $20C7-$20CA DB_DATA 3
RANGE $20CA-$20CD DB_DATA 3
RANGE $20CD-$20CE DB_DATA 1
RANGE $20CE-$20D1 DB_DATA 3
RANGE $20D1-$20D4 DB_DATA 3
RANGE $20D4-$20D7 DB_DATA 3
RANGE $20D7-$20DA DB_DATA 3
RANGE $20DA-$20DB DB_DATA 1
RANGE $20DB-$20DE DB_DATA 3
RANGE $20DE-$20E1 DB_DATA 3
RANGE $20E1-$20E4 DB_DATA 3
RANGE $20E4-$20E7 DB_DATA 3
RANGE $20E7-$20EA DB_DATA 3
RANGE $20EA-$20ED DB_DATA 3
RANGE $20ED-$20F0 DB_DATA 3
RANGE $20F0-$20F1 DB_DATA 1
RANGE $20F1-$20F4 DB_DATA 3
RANGE $20F4-$20F7 DB_DATA 3
RANGE $20F7-$20FA DB_DATA 3
RANGE $20FA-$20FD DB_DATA 3
RANGE $20FD-$2100 DB_DATA 3
RANGE $2100-$2103 DB_DATA 3
RANGE $2103-$2106 DB_DATA 3
RANGE $2106-$2107 DB_DATA 1
RANGE $2107-$210A DB_DATA 3
RANGE $210A-$210D DB_DATA 3
RANGE $210D-$2110 DB_DATA 3
RANGE $2110-$2113 DB_DATA 3
RANGE $2113-$2116 DB_DATA 3
RANGE $2116-$2119 DB_DATA 3
RANGE $2119-$211A DB_DATA 1
RANGE $211A-$211D DB_DATA 3
RANGE $211D-$2120 DB_DATA 3
RANGE $2120-$2123 DB_DATA 3
RANGE $2123-$2126 DB_DATA 3
RANGE $2126-$2129 DB_DATA 3
RANGE $2129-$212C DB_DATA 3
RANGE $212C-$212F DB_DATA 3
RANGE $212F-$2132 DB_DATA 3
RANGE $2132-$2133 DB_DATA 1
RANGE $2133-$2136 DB_DATA 3
RANGE $2136-$2139 DB_DATA 3
RANGE $2139-$213C DB_DATA 3
RANGE $213C-$213F DB_DATA 3
RANGE $213F-$2142 DB_DATA 3
RANGE $2142-$2145 DB_DATA 3
RANGE $2145-$2148 DB_DATA 3
RANGE $2148-$214B DB_DATA 3
RANGE $214B-$214E DB_DATA 3
RANGE $214E-$214F DB_DATA 1
RANGE $214F-$2152 DB_DATA 3
RANGE $2152-$2155 DB_DATA 3
RANGE $2155-$2158 DB_DATA 3
RANGE $2158-$215B DB_DATA 3
RANGE $215B-$215E DB_DATA 3
RANGE $215E-$2161 DB_DATA 3
RANGE $2161-$2164 DB_DATA 3
RANGE $2164-$2167 DB_DATA 3
RANGE $2167-$216A DB_DATA 3
RANGE $216A-$216D DB_DATA 3
RANGE $216D-$216E DB_DATA 1
RANGE $216E-$2171 DB_DATA 3
RANGE $2171-$2174 DB_DATA 3
RANGE $2174-$2177 DB_DATA 3
RANGE $2177-$217A DB_DATA 3
RANGE $217A-$217D DB_DATA 3
RANGE $217D-$2180 DB_DATA 3
RANGE $2180-$2183 DB_DATA 3
RANGE $2183-$2186 DB_DATA 3
RANGE $2186-$2189 DB_DATA 3
RANGE $2189-$218A DB_DATA 1
RANGE $218A-$218D DB_DATA 3
RANGE $218D-$2190 DB_DATA 3
RANGE $2190-$2193 DB_DATA 3
RANGE $2193-$2196 DB_DATA 3
RANGE $2196-$2199 DB_DATA 3
RANGE $2199-$219C DB_DATA 3
RANGE $219C-$219F DB_DATA 3
RANGE $219F-$21A2 DB_DATA 3
RANGE $21A2-$21A5 DB_DATA 3
RANGE $21A5-$21A8 DB_DATA 3
RANGE $21A8-$21A9 DB_DATA 1
RANGE $21A9-$21AC DB_DATA 3
RANGE $21AC-$21AF DB_DATA 3
RANGE $21AF-$21B2 DB_DATA 3
RANGE $21B2-$21B5 DB_DATA 3
RANGE $21B5-$21B8 DB_DATA 3
RANGE $21B8-$21BB DB_DATA 3
RANGE $21BB-$21BE DB_DATA 3
RANGE $21BE-$21C1 DB_DATA 3
RANGE $21C1-$21C4 DB_DATA 3
RANGE $21C4-$21C7 DB_DATA 3
RANGE $21C7-$21C8 DB_DATA 1
RANGE $21C8-$21CA DW_DATA 1
RANGE $21CA-$21CC DW_DATA 1
RANGE $21CC-$21CE DW_DATA 1
RANGE $21CE-$21D0 DW_DATA 1
RANGE $21D0-$21D2 DW_DATA 1
RANGE $21D2-$21D4 DW_DATA 1
RANGE $21D4-$21D6 DW_DATA 1
RANGE $21D6-$21D8 DW_DATA 1
RANGE $21D8-$21DA DW_DATA 1
RANGE $21DA-$21DC DW_DATA 1
RANGE $21DC-$21DF DB_DATA 3
RANGE $21DF-$21E2 DB_DATA 3
RANGE $21E2-$21E5 DB_DATA 3
RANGE $21E5-$21E8 DB_DATA 3
RANGE $21E8-$21EB DB_DATA 3
RANGE $21EB-$21EC DB_DATA 1
RANGE $21EC-$21EF DB_DATA 3
RANGE $21EF-$21F2 DB_DATA 3
RANGE $21F2-$21F5 DB_DATA 3
RANGE $21F5-$21F6 DB_DATA 1
RANGE $21F6-$21F9 DB_DATA 3
RANGE $21F9-$21FC DB_DATA 3
RANGE $21FC-$21FF DB_DATA 3
RANGE $21FF-$2202 DB_DATA 3
RANGE $2202-$2205 DB_DATA 3
RANGE $2205-$2206 DB_DATA 1
RANGE $2206-$2209 DB_DATA 3
RANGE $2209-$220C DB_DATA 3
RANGE $220C-$220F DB_DATA 3
RANGE $220F-$2212 DB_DATA 3
RANGE $2212-$2215 DB_DATA 3
RANGE $2215-$2216 DB_DATA 1
RANGE $2216-$2219 DB_DATA 3
RANGE $2219-$221C DB_DATA 3
RANGE $221C-$221F DB_DATA 3
RANGE $221F-$2222 DB_DATA 3
RANGE $2222-$2225 DB_DATA 3
RANGE $2225-$2228 DB_DATA 3
RANGE $2228-$2229 DB_DATA 1
RANGE $2229-$222C DB_DATA 3
RANGE $222C-$222F DB_DATA 3
RANGE $222F-$2232 DB_DATA 3
RANGE $2232-$2235 DB_DATA 3
RANGE $2235-$2238 DB_DATA 3
RANGE $2238-$223B DB_DATA 3
RANGE $223B-$223C DB_DATA 1
RANGE $223C-$223F DB_DATA 3
RANGE $223F-$2242 DB_DATA 3
RANGE $2242-$2245 DB_DATA 3
RANGE $2245-$2248 DB_DATA 3
RANGE $2248-$224B DB_DATA 3
RANGE $224B-$224E DB_DATA 3
RANGE $224E-$224F DB_DATA 1
RANGE $224F-$2252 DB_DATA 3
RANGE $2252-$2255 DB_DATA 3
RANGE $2255-$2258 DB_DATA 3
RANGE $2258-$2259 DB_DATA 1
RANGE $2259-$225C DB_DATA 3
RANGE $225C-$225F DB_DATA 3
RANGE $225F-$2262 DB_DATA 3
RANGE $2262-$2265 DB_DATA 3
RANGE $2265-$2268 DB_DATA 3
RANGE $2268-$2269 DB_DATA 1
RANGE $2269-$226C DB_DATA 3
RANGE $226C-$226F DB_DATA 3
RANGE $226F-$2272 DB_DATA 3
RANGE $2272-$2275 DB_DATA 3
RANGE $2275-$2278 DB_DATA 3
RANGE $2278-$227B DB_DATA 3
RANGE $227B-$227C DB_DATA 1
RANGE $227C-$227E DW_DATA 1
RANGE $227E-$2280 DW_DATA 1
RANGE $2280-$2282 DW_DATA 1
RANGE $2282-$2284 DW_DATA 1
RANGE $2284-$2286 DW_DATA 1
RANGE $2286-$2288 DW_DATA 1
RANGE $2288-$228A DW_DATA 1
RANGE $228A-$228C DW_DATA 1
RANGE $228C-$228E DW_DATA 1
RANGE $228E-$2290 DW_DATA 1
RANGE $2290-$2292 DW_DATA 1
RANGE $2292-$2294 DW_DATA 1
RANGE $2294-$2296 DW_DATA 1
RANGE $2296-$2298 DW_DATA 1
RANGE $2298-$229A DW_DATA 1
RANGE $229A-$229C DW_DATA 1
RANGE $229C-$229E DW_DATA 1
RANGE $229E-$22A0 DW_DATA 1
RANGE $22A0-$22A2 DW_DATA 1
RANGE $22A2-$22A4 DW_DATA 1
RANGE $22A4-$22A6 DW_DATA 1
RANGE $22A6-$22A8 DW_DATA 1
RANGE $22A8-$22AA DW_DATA 1
RANGE $22AA-$22AC DW_DATA 1
RANGE $22AC-$22AE DW_DATA 1
RANGE $22AE-$22B0 DB_DATA 2
RANGE $22B0-$22B2 DB_DATA 2
RANGE $22B2-$22B4 DB_DATA 2
RANGE $22B4-$22B6 DB_DATA 2
RANGE $22B6-$22B8 DW_DATA 1
RANGE $22B8-$22BA DB_DATA 2
RANGE $22BA-$22BC DB_DATA 2
RANGE $22BC-$22BE DB_DATA 2
RANGE $22BE-$22C0 DB_DATA 2
RANGE $22C0-$22C2 DW_DATA 1
RANGE $22C2-$22C4 DB_DATA 2
RANGE $22C4-$22C6 DB_DATA 2
RANGE $22C6-$22C8 DB_DATA 2
RANGE $22C8-$22CA DB_DATA 2
RANGE $22CA-$22CC DW_DATA 1
RANGE $22CC-$22CE DB_DATA 2
RANGE $22CE-$22D0 DB_DATA 2
RANGE $22D0-$22D2 DB_DATA 2
RANGE $22D2-$22D4 DB_DATA 2
RANGE $22D4-$22D6 DW_DATA 1
RANGE $22D6-$22D8 DB_DATA 2
RANGE $22D8-$22DA DB_DATA 2
RANGE $22DA-$22DC DB_DATA 2
RANGE $22DC-$22DE DB_DATA 2
RANGE $22DE-$22E0 DW_DATA 1
RANGE $22E0-$22E2 DB_DATA 2
RANGE $22E2-$22E4 DB_DATA 2
RANGE $22E4-$22E6 DB_DATA 2
RANGE $22E6-$22E8 DB_DATA 2
RANGE $22E8-$22EA DW_DATA 1
RANGE $22EA-$22EC DB_DATA 2
RANGE $22EC-$22EE DB_DATA 2
RANGE $22EE-$22F0 DB_DATA 2
RANGE $22F0-$22F2 DB_DATA 2
RANGE $22F2-$22F4 DW_DATA 1
RANGE $22F4-$22F6 DB_DATA 2
RANGE $22F6-$22F8 DB_DATA 2
RANGE $22F8-$22FA DB_DATA 2
RANGE $22FA-$22FC DB_DATA 2
RANGE $22FC-$22FE DW_DATA 1
RANGE $22FE-$2300 DB_DATA 2
RANGE $2300-$2302 DB_DATA 2
RANGE $2302-$2304 DB_DATA 2
RANGE $2304-$2306 DB_DATA 2
RANGE $2306-$2308 DW_DATA 1
RANGE $2308-$230A DB_DATA 2
RANGE $230A-$230C DB_DATA 2
RANGE $230C-$230E DB_DATA 2
RANGE $230E-$2310 DB_DATA 2
RANGE $2310-$2312 DW_DATA 1
RANGE $2312-$2314 DB_DATA 2
RANGE $2314-$2316 DB_DATA 2
RANGE $2316-$2318 DB_DATA 2
RANGE $2318-$231A DB_DATA 2
RANGE $231A-$231C DW_DATA 1
RANGE $231C-$231E DB_DATA 2
RANGE $231E-$2320 DB_DATA 2
RANGE $2320-$2322 DB_DATA 2
RANGE $2322-$2324 DB_DATA 2
RANGE $2324-$2326 DW_DATA 1
RANGE $2326-$2328 DB_DATA 2
RANGE $2328-$232A DB_DATA 2
RANGE $232A-$232C DB_DATA 2
RANGE $232C-$232E DB_DATA 2
RANGE $232E-$2330 DW_DATA 1
RANGE $2330-$2332 DB_DATA 2
RANGE $2332-$2334 DB_DATA 2
RANGE $2334-$2336 DB_DATA 2
RANGE $2336-$2338 DB_DATA 2
RANGE $2338-$233A DW_DATA 1
RANGE $233A-$233C DB_DATA 2
RANGE $233C-$233E DB_DATA 2
RANGE $233E-$2340 DB_DATA 2
RANGE $2340-$2342 DB_DATA 2
RANGE $2342-$2344 DW_DATA 1
RANGE $2344-$2346 DB_DATA 2
RANGE $2346-$2348 DB_DATA 2
RANGE $2348-$234A DB_DATA 2
RANGE $234A-$234C DB_DATA 2
RANGE $234C-$234E DW_DATA 1
RANGE $234E-$2350 DB_DATA 2
RANGE $2350-$2352 DB_DATA 2
RANGE $2352-$2354 DB_DATA 2
RANGE $2354-$2356 DB_DATA 2
RANGE $2356-$2358 DW_DATA 1
RANGE $2358-$235A DB_DATA 2
RANGE $235A-$235C DB_DATA 2
RANGE $235C-$235E DB_DATA 2
RANGE $235E-$2360 DB_DATA 2
RANGE $2360-$2362 DW_DATA 1
RANGE $2362-$2364 DB_DATA 2
RANGE $2364-$2366 DB_DATA 2
RANGE $2366-$2368 DB_DATA 2
RANGE $2368-$236A DB_DATA 2
RANGE $236A-$236C DW_DATA 1
RANGE $236C-$236E DB_DATA 2
RANGE $236E-$2370 DB_DATA 2
RANGE $2370-$2372 DB_DATA 2
RANGE $2372-$2374 DB_DATA 2
RANGE $2374-$2376 DW_DATA 1
RANGE $2376-$2378 DB_DATA 2
RANGE $2378-$237A DB_DATA 2
RANGE $237A-$237C DB_DATA 2
RANGE $237C-$237E DB_DATA 2
RANGE $237E-$2380 DW_DATA 1
RANGE $2380-$2382 DB_DATA 2
RANGE $2382-$2384 DB_DATA 2
RANGE $2384-$2386 DB_DATA 2
RANGE $2386-$2388 DB_DATA 2
RANGE $2388-$238A DW_DATA 1
RANGE $238A-$238C DB_DATA 2
RANGE $238C-$238E DB_DATA 2
RANGE $238E-$2390 DB_DATA 2
RANGE $2390-$2392 DB_DATA 2
RANGE $2392-$2394 DW_DATA 1
RANGE $2394-$2396 DB_DATA 2
RANGE $2396-$2398 DB_DATA 2
RANGE $2398-$239A DB_DATA 2
RANGE $239A-$239C DB_DATA 2
RANGE $239C-$239E DW_DATA 1
RANGE $239E-$23A0 DW_DATA 1
RANGE $23A0-$23A2 DW_DATA 1
RANGE $23A2-$23A4 DW_DATA 1
RANGE $23A4-$23A6 DW_DATA 1
RANGE $23A6-$23A8 DB_DATA 2
RANGE $23A8-$23AA DB_DATA 2
RANGE $23AA-$23AC DB_DATA 2
RANGE $23AC-$23AE DB_DATA 2
RANGE $23AE-$23B0 DB_DATA 2
RANGE $23B0-$23B2 DW_DATA 1
RANGE $23B2-$23B4 DB_DATA 2
RANGE $23B4-$23B6 DB_DATA 2
RANGE $23B6-$23B8 DB_DATA 2
RANGE $23B8-$23BA DB_DATA 2
RANGE $23BA-$23BC DB_DATA 2
RANGE $23BC-$23BE DW_DATA 1
RANGE $23BE-$23C0 DB_DATA 2
RANGE $23C0-$23C2 DB_DATA 2
RANGE $23C2-$23C4 DB_DATA 2
RANGE $23C4-$23C6 DB_DATA 2
RANGE $23C6-$23C8 DB_DATA 2
RANGE $23C8-$23CA DW_DATA 1
RANGE $23CA-$23CC DB_DATA 2
RANGE $23CC-$23CE DB_DATA 2
RANGE $23CE-$23D0 DB_DATA 2
RANGE $23D0-$23D2 DB_DATA 2
RANGE $23D2-$23D4 DB_DATA 2
RANGE $23D4-$23D6 DW_DATA 1
RANGE $23D6-$23D8 DW_DATA 1
RANGE $23D8-$23DA DW_DATA 1
RANGE $23DA-$23DC DW_DATA 1
RANGE $23DC-$23DE DW_DATA 1
RANGE $23DE-$23E0 DW_DATA 1
RANGE $23E0-$23E2 DW_DATA 1
RANGE $23E2-$23E4 DW_DATA 1
RANGE $23E4-$23E6 DW_DATA 1
RANGE $23E6-$23E8 DW_DATA 1
RANGE $23E8-$23EA DW_DATA 1
RANGE $23EA-$23EC DW_DATA 1
RANGE $23EC-$23EE DB_DATA 2
RANGE $23EE-$23F0 DB_DATA 2
RANGE $23F0-$23F2 DB_DATA 2
RANGE $23F2-$23F4 DB_DATA 2
RANGE $23F4-$23F6 DB_DATA 2
RANGE $23F6-$23F8 DB_DATA 2
RANGE $23F8-$23FA DB_DATA 2
RANGE $23FA-$23FC DB_DATA 2
RANGE $23FC-$23FE DB_DATA 2
RANGE $23FE-$2400 DB_DATA 2
RANGE $2400-$2402 DB_DATA 2
RANGE $2402-$2404 DW_DATA 1
RANGE $2404-$2406 DB_DATA 2
RANGE $2406-$2408 DB_DATA 2
RANGE $2408-$240A DB_DATA 2
RANGE $240A-$240C DB_DATA 2
RANGE $240C-$240E DB_DATA 2
RANGE $240E-$2410 DB_DATA 2
RANGE $2410-$2412 DB_DATA 2
RANGE $2412-$2414 DB_DATA 2
RANGE $2414-$2416 DB_DATA 2
RANGE $2416-$2418 DB_DATA 2
RANGE $2418-$241A DB_DATA 2
RANGE $241A-$241C DW_DATA 1
RANGE $241C-$241E DB_DATA 2
RANGE $241E-$2420 DB_DATA 2
RANGE $2420-$2422 DB_DATA 2
RANGE $2422-$2424 DB_DATA 2
RANGE $2424-$2426 DB_DATA 2
RANGE $2426-$2428 DB_DATA 2
RANGE $2428-$242A DB_DATA 2
RANGE $242A-$242C DB_DATA 2
RANGE $242C-$242E DB_DATA 2
RANGE $242E-$2430 DB_DATA 2
RANGE $2430-$2432 DB_DATA 2
RANGE $2432-$2434 DW_DATA 1
RANGE $2434-$2436 DB_DATA 2
RANGE $2436-$2438 DB_DATA 2
RANGE $2438-$243A DB_DATA 2
RANGE $243A-$243C DB_DATA 2
RANGE $243C-$243E DB_DATA 2
RANGE $243E-$2440 DB_DATA 2
RANGE $2440-$2442 DB_DATA 2
RANGE $2442-$2444 DB_DATA 2
RANGE $2444-$2446 DB_DATA 2
RANGE $2446-$2448 DB_DATA 2
RANGE $2448-$244A DB_DATA 2
RANGE $244A-$244C DW_DATA 1
RANGE $244C-$244E DB_DATA 2
RANGE $244E-$2450 DB_DATA 2
RANGE $2450-$2452 DB_DATA 2
RANGE $2452-$2454 DB_DATA 2
RANGE $2454-$2456 DB_DATA 2
RANGE $2456-$2458 DB_DATA 2
RANGE $2458-$245A DB_DATA 2
RANGE $245A-$245C DB_DATA 2
RANGE $245C-$245E DB_DATA 2
RANGE $245E-$2460 DB_DATA 2
RANGE $2460-$2462 DB_DATA 2
RANGE $2462-$2464 DW_DATA 1
RANGE $2464-$2466 DB_DATA 2
RANGE $2466-$2468 DB_DATA 2
RANGE $2468-$246A DB_DATA 2
RANGE $246A-$246C DB_DATA 2
RANGE $246C-$246E DB_DATA 2
RANGE $246E-$2470 DB_DATA 2
RANGE $2470-$2472 DB_DATA 2
RANGE $2472-$2474 DB_DATA 2
RANGE $2474-$2476 DB_DATA 2
RANGE $2476-$2478 DB_DATA 2
RANGE $2478-$247A DB_DATA 2
RANGE $247A-$247C DW_DATA 1
RANGE $247C-$247E DB_DATA 2
RANGE $247E-$2480 DB_DATA 2
RANGE $2480-$2482 DB_DATA 2
RANGE $2482-$2484 DB_DATA 2
RANGE $2484-$2486 DB_DATA 2
RANGE $2486-$2488 DB_DATA 2
RANGE $2488-$248A DB_DATA 2
RANGE $248A-$248C DB_DATA 2
RANGE $248C-$248E DB_DATA 2
RANGE $248E-$2490 DB_DATA 2
RANGE $2490-$2492 DB_DATA 2
RANGE $2492-$2494 DW_DATA 1
RANGE $2494-$2496 DB_DATA 2
RANGE $2496-$2498 DB_DATA 2
RANGE $2498-$249A DB_DATA 2
RANGE $249A-$249C DB_DATA 2
RANGE $249C-$249E DB_DATA 2
RANGE $249E-$24A0 DB_DATA 2
RANGE $24A0-$24A2 DB_DATA 2
RANGE $24A2-$24A4 DB_DATA 2
RANGE $24A4-$24A6 DB_DATA 2
RANGE $24A6-$24A8 DB_DATA 2
RANGE $24A8-$24AA DB_DATA 2
RANGE $24AA-$24AC DW_DATA 1
RANGE $24AC-$24AE DB_DATA 2
RANGE $24AE-$24B0 DB_DATA 2
RANGE $24B0-$24B2 DB_DATA 2
RANGE $24B2-$24B4 DB_DATA 2
RANGE $24B4-$24B6 DB_DATA 2
RANGE $24B6-$24B8 DB_DATA 2
RANGE $24B8-$24BA DB_DATA 2
RANGE $24BA-$24BC DB_DATA 2
RANGE $24BC-$24BE DB_DATA 2
RANGE $24BE-$24C0 DB_DATA 2
RANGE $24C0-$24C2 DB_DATA 2
RANGE $24C2-$24C4 DW_DATA 1
RANGE $24C4-$24C6 DB_DATA 2
RANGE $24C6-$24C8 DB_DATA 2
RANGE $24C8-$24CA DB_DATA 2
RANGE $24CA-$24CC DB_DATA 2
RANGE $24CC-$24CE DB_DATA 2
RANGE $24CE-$24D0 DB_DATA 2
RANGE $24D0-$24D2 DB_DATA 2
RANGE $24D2-$24D4 DB_DATA 2
RANGE $24D4-$24D6 DB_DATA 2
RANGE $24D6-$24D8 DB_DATA 2
RANGE $24D8-$24DA DB_DATA 2
RANGE $24DA-$24DC DW_DATA 1
RANGE $24DC-$24DE DB_DATA 2
RANGE $24DE-$24E0 DB_DATA 2
RANGE $24E0-$24E2 DB_DATA 2
RANGE $24E2-$24E4 DB_DATA 2
RANGE $24E4-$24E6 DB_DATA 2
RANGE $24E6-$24E8 DB_DATA 2
RANGE $24E8-$24EA DB_DATA 2
RANGE $24EA-$24EC DB_DATA 2
RANGE $24EC-$24EE DB_DATA 2
RANGE $24EE-$24F0 DB_DATA 2
RANGE $24F0-$24F2 DB_DATA 2
RANGE $24F2-$24F4 DW_DATA 1
RANGE $24F4-$24F6 DW_DATA 1
RANGE $24F6-$24F8 DW_DATA 1
RANGE $24F8-$24FA DW_DATA 1
RANGE $24FA-$24FC DW_DATA 1
RANGE $24FC-$24FE DW_DATA 1
RANGE $24FE-$2500 DW_DATA 1
RANGE $2500-$2502 DW_DATA 1
RANGE $2502-$2504 DW_DATA 1
RANGE $2504-$2506 DW_DATA 1
RANGE $2506-$2508 DB_DATA 2
RANGE $2508-$250A DB_DATA 2
RANGE $250A-$250C DB_DATA 2
RANGE $250C-$250E DB_DATA 2
RANGE $250E-$2510 DB_DATA 2
RANGE $2510-$2512 DB_DATA 2
RANGE $2512-$2514 DB_DATA 2
RANGE $2514-$2516 DB_DATA 2
RANGE $2516-$2518 DB_DATA 2
RANGE $2518-$251A DW_DATA 1
RANGE $251A-$251C DB_DATA 2
RANGE $251C-$251E DB_DATA 2
RANGE $251E-$2520 DB_DATA 2
RANGE $2520-$2522 DB_DATA 2
RANGE $2522-$2524 DB_DATA 2
RANGE $2524-$2526 DB_DATA 2
RANGE $2526-$2528 DB_DATA 2
RANGE $2528-$252A DB_DATA 2
RANGE $252A-$252C DB_DATA 2
RANGE $252C-$252E DW_DATA 1
RANGE $252E-$2530 DB_DATA 2
RANGE $2530-$2532 DB_DATA 2
RANGE $2532-$2534 DB_DATA 2
RANGE $2534-$2536 DB_DATA 2
RANGE $2536-$2538 DB_DATA 2
RANGE $2538-$253A DB_DATA 2
RANGE $253A-$253C DB_DATA 2
RANGE $253C-$253E DB_DATA 2
RANGE $253E-$2540 DB_DATA 2
RANGE $2540-$2542 DW_DATA 1
RANGE $2542-$2544 DB_DATA 2
RANGE $2544-$2546 DB_DATA 2
RANGE $2546-$2548 DB_DATA 2
RANGE $2548-$254A DB_DATA 2
RANGE $254A-$254C DB_DATA 2
RANGE $254C-$254E DB_DATA 2
RANGE $254E-$2550 DB_DATA 2
RANGE $2550-$2552 DB_DATA 2
RANGE $2552-$2554 DB_DATA 2
RANGE $2554-$2556 DW_DATA 1
RANGE $2556-$2558 DB_DATA 2
RANGE $2558-$255A DB_DATA 2
RANGE $255A-$255C DB_DATA 2
RANGE $255C-$255E DB_DATA 2
RANGE $255E-$2560 DB_DATA 2
RANGE $2560-$2562 DB_DATA 2
RANGE $2562-$2564 DB_DATA 2
RANGE $2564-$2566 DB_DATA 2
RANGE $2566-$2568 DB_DATA 2
RANGE $2568-$256A DW_DATA 1
RANGE $256A-$256C DB_DATA 2
RANGE $256C-$256E DB_DATA 2
RANGE $256E-$2570 DB_DATA 2
RANGE $2570-$2572 DB_DATA 2
RANGE $2572-$2574 DB_DATA 2
RANGE $2574-$2576 DB_DATA 2
RANGE $2576-$2578 DB_DATA 2
RANGE $2578-$257A DB_DATA 2
RANGE $257A-$257C DB_DATA 2
RANGE $257C-$257E DW_DATA 1
RANGE $257E-$2580 DB_DATA 2
RANGE $2580-$2582 DB_DATA 2
RANGE $2582-$2584 DB_DATA 2
RANGE $2584-$2586 DB_DATA 2
RANGE $2586-$2588 DB_DATA 2
RANGE $2588-$258A DB_DATA 2
RANGE $258A-$258C DB_DATA 2
RANGE $258C-$258E DB_DATA 2
RANGE $258E-$2590 DB_DATA 2
RANGE $2590-$2592 DW_DATA 1
RANGE $2592-$2594 DB_DATA 2
RANGE $2594-$2596 DB_DATA 2
RANGE $2596-$2598 DB_DATA 2
RANGE $2598-$259A DB_DATA 2
RANGE $259A-$259C DB_DATA 2
RANGE $259C-$259E DB_DATA 2
RANGE $259E-$25A0 DB_DATA 2
RANGE $25A0-$25A2 DB_DATA 2
RANGE $25A2-$25A4 DB_DATA 2
RANGE $25A4-$25A6 DW_DATA 1
RANGE $25A6-$25A8 DB_DATA 2
RANGE $25A8-$25AA DB_DATA 2
RANGE $25AA-$25AC DB_DATA 2
RANGE $25AC-$25AE DB_DATA 2
RANGE $25AE-$25B0 DB_DATA 2
RANGE $25B0-$25B2 DB_DATA 2
RANGE $25B2-$25B4 DB_DATA 2
RANGE $25B4-$25B6 DB_DATA 2
RANGE $25B6-$25B8 DB_DATA 2
RANGE $25B8-$25BA DW_DATA 1
RANGE $25BA-$25BC DB_DATA 2
RANGE $25BC-$25BE DB_DATA 2
RANGE $25BE-$25C0 DB_DATA 2
RANGE $25C0-$25C2 DB_DATA 2
RANGE $25C2-$25C4 DW_DATA 1
RANGE $25C4-$25C6 DW_DATA 1
RANGE $25C6-$25C8 DW_DATA 1
RANGE $25C8-$25CA DW_DATA 1
RANGE $25CA-$25CC DW_DATA 1
RANGE $25CC-$25CE DW_DATA 1
RANGE $25CE-$25D0 DW_DATA 1
RANGE $25D0-$25D2 DW_DATA 1
RANGE $25D2-$25D4 DW_DATA 1
RANGE $25D4-$25D6 DW_DATA 1
RANGE $25D6-$25D8 DW_DATA 1
RANGE $25D8-$25DA DW_DATA 1
RANGE $25DA-$25DC DW_DATA 1
RANGE $25DC-$25DE DW_DATA 1
RANGE $25DE-$25E0 DW_DATA 1
RANGE $25E0-$25E2 DW_DATA 1
RANGE $25E2-$25E4 DW_DATA 1
RANGE $25E4-$25E7 DB_DATA 3
RANGE $25E7-$25EA DB_DATA 3
RANGE $25EA-$25ED DB_DATA 3
RANGE $25ED-$25F0 DB_DATA 3
RANGE $25F0-$25F3 DB_DATA 3
RANGE $25F3-$25F6 DB_DATA 3
RANGE $25F6-$25F9 DB_DATA 3
RANGE $25F9-$25FA DB_DATA 1
RANGE $25FA-$25FD DB_DATA 3
RANGE $25FD-$2600 DB_DATA 3
RANGE $2600-$2603 DB_DATA 3
RANGE $2603-$2606 DB_DATA 3
RANGE $2606-$2609 DB_DATA 3
RANGE $2609-$260C DB_DATA 3
RANGE $260C-$260F DB_DATA 3
RANGE $260F-$2610 DB_DATA 1
RANGE $2610-$2613 DB_DATA 3
RANGE $2613-$2616 DB_DATA 3
RANGE $2616-$2619 DB_DATA 3
RANGE $2619-$261C DB_DATA 3
RANGE $261C-$261F DB_DATA 3
RANGE $261F-$2622 DB_DATA 3
RANGE $2622-$2625 DB_DATA 3
RANGE $2625-$2626 DB_DATA 1
RANGE $2626-$2629 DB_DATA 3
RANGE $2629-$262C DB_DATA 3
RANGE $262C-$262F DB_DATA 3
RANGE $262F-$2632 DB_DATA 3
RANGE $2632-$2635 DB_DATA 3
RANGE $2635-$2638 DB_DATA 3
RANGE $2638-$263B DB_DATA 3
RANGE $263B-$263C DB_DATA 1
RANGE $263C-$263F DB_DATA 3
RANGE $263F-$2642 DB_DATA 3
RANGE $2642-$2645 DB_DATA 3
RANGE $2645-$2648 DB_DATA 3
RANGE $2648-$264B DB_DATA 3
RANGE $264B-$264E DB_DATA 3
RANGE $264E-$2651 DB_DATA 3
RANGE $2651-$2652 DB_DATA 1
RANGE $2652-$2655 DB_DATA 3
RANGE $2655-$2658 DB_DATA 3
RANGE $2658-$265B DB_DATA 3
RANGE $265B-$265E DB_DATA 3
RANGE $265E-$2661 DB_DATA 3
RANGE $2661-$2664 DB_DATA 3
RANGE $2664-$2667 DB_DATA 3
RANGE $2667-$2668 DB_DATA 1
RANGE $2668-$266B DB_DATA 3
RANGE $266B-$266E DB_DATA 3
RANGE $266E-$2671 DB_DATA 3
RANGE $2671-$2674 DB_DATA 3
RANGE $2674-$2677 DB_DATA 3
RANGE $2677-$267A DB_DATA 3
RANGE $267A-$267D DB_DATA 3
RANGE $267D-$267E DB_DATA 1
RANGE $267E-$2681 DB_DATA 3
RANGE $2681-$2684 DB_DATA 3
RANGE $2684-$2687 DB_DATA 3
RANGE $2687-$268A DB_DATA 3
RANGE $268A-$268D DB_DATA 3
RANGE $268D-$2690 DB_DATA 3
RANGE $2690-$2693 DB_DATA 3
RANGE $2693-$2694 DB_DATA 1
RANGE $2694-$2697 DB_DATA 3
RANGE $2697-$269A DB_DATA 3
RANGE $269A-$269D DB_DATA 3
RANGE $269D-$26A0 DB_DATA 3
RANGE $26A0-$26A3 DB_DATA 3
RANGE $26A3-$26A6 DB_DATA 3
RANGE $26A6-$26A9 DB_DATA 3
RANGE $26A9-$26AA DB_DATA 1
RANGE $26AA-$26AD DB_DATA 3
RANGE $26AD-$26B0 DB_DATA 3
RANGE $26B0-$26B3 DB_DATA 3
RANGE $26B3-$26B6 DB_DATA 3
RANGE $26B6-$26B9 DB_DATA 3
RANGE $26B9-$26BC DB_DATA 3
RANGE $26BC-$26BF DB_DATA 3
RANGE $26BF-$26C0 DB_DATA 1
RANGE $26C0-$26C3 DB_DATA 3
RANGE $26C3-$26C6 DB_DATA 3
RANGE $26C6-$26C9 DB_DATA 3
RANGE $26C9-$26CC DB_DATA 3
RANGE $26CC-$26CF DB_DATA 3
RANGE $26CF-$26D2 DB_DATA 3
RANGE $26D2-$26D5 DB_DATA 3
RANGE $26D5-$26D6 DB_DATA 1
RANGE $26D6-$26D9 DB_DATA 3
RANGE $26D9-$26DC DB_DATA 3
RANGE $26DC-$26DF DB_DATA 3
RANGE $26DF-$26E2 DB_DATA 3
RANGE $26E2-$26E5 DB_DATA 3
RANGE $26E5-$26E8 DB_DATA 3
RANGE $26E8-$26EB DB_DATA 3
RANGE $26EB-$26EC DB_DATA 1
RANGE $26EC-$26EF DB_DATA 3
RANGE $26EF-$26F2 DB_DATA 3
RANGE $26F2-$26F5 DB_DATA 3
RANGE $26F5-$26F8 DB_DATA 3
RANGE $26F8-$26FB DB_DATA 3
RANGE $26FB-$26FE DB_DATA 3
RANGE $26FE-$2701 DB_DATA 3
RANGE $2701-$2702 DB_DATA 1
RANGE $2702-$2705 DB_DATA 3
RANGE $2705-$2708 DB_DATA 3
RANGE $2708-$270B DB_DATA 3
RANGE $270B-$270E DB_DATA 3
RANGE $270E-$2711 DB_DATA 3
RANGE $2711-$2714 DB_DATA 3
RANGE $2714-$2717 DB_DATA 3
RANGE $2717-$2718 DB_DATA 1
RANGE $2718-$271B DB_DATA 3
RANGE $271B-$271E DB_DATA 3
RANGE $271E-$2721 DB_DATA 3
RANGE $2721-$2724 DB_DATA 3
RANGE $2724-$2727 DB_DATA 3
RANGE $2727-$272A DB_DATA 3
RANGE $272A-$272D DB_DATA 3
RANGE $272D-$272E DB_DATA 1
RANGE $272E-$2731 DB_DATA 3
RANGE $2731-$2734 DB_DATA 3
RANGE $2734-$2737 DB_DATA 3
RANGE $2737-$273A DB_DATA 3
RANGE $273A-$273D DB_DATA 3
RANGE $273D-$2740 DB_DATA 3
RANGE $2740-$2743 DB_DATA 3
RANGE $2743-$2744 DB_DATA 1
RANGE $2744-$2747 DB_DATA 3
RANGE $2747-$274A DB_DATA 3
RANGE $274A-$274D DB_DATA 3
RANGE $274D-$2750 DB_DATA 3
RANGE $2750-$2753 DB_DATA 3
RANGE $2753-$2756 DB_DATA 3
RANGE $2756-$2759 DB_DATA 3
RANGE $2759-$275A DB_DATA 1
RANGE $275A-$275C DB_DATA 2
RANGE $275C-$275E DB_DATA 2
RANGE $275E-$2760 DB_DATA 2
RANGE $2760-$2762 DB_DATA 2
RANGE $2762-$2764 DB_DATA 2
RANGE $2764-$2766 DB_DATA 2
RANGE $2766-$2768 DB_DATA 2
RANGE $2768-$276A DB_DATA 2
RANGE $276A-$276C DB_DATA 2
RANGE $276C-$276E DB_DATA 2
RANGE $276E-$2770 DB_DATA 2
RANGE $2770-$2772 DB_DATA 2
RANGE $2772-$2774 DB_DATA 2
RANGE $2774-$2776 DB_DATA 2
RANGE $2776-$2778 DB_DATA 2
RANGE $2778-$277A DB_DATA 2
RANGE $277A-$277C DB_DATA 2
RANGE $277C-$277E DB_DATA 2
RANGE $277E-$2780 DB_DATA 2
RANGE $2780-$2782 DB_DATA 2
RANGE $2782-$2784 DB_DATA 2
RANGE $2784-$2786 DB_DATA 2
RANGE $2786-$2788 DB_DATA 2
RANGE $2788-$278A DB_DATA 2
RANGE $278A-$278C DB_DATA 2
RANGE $278C-$278E DB_DATA 2
RANGE $278E-$2790 DB_DATA 2
RANGE $2790-$2792 DB_DATA 2
RANGE $2792-$2794 DB_DATA 2
RANGE $2794-$2796 DB_DATA 2
RANGE $2796-$2798 DB_DATA 2
RANGE $2798-$279A DB_DATA 2
RANGE $279A-$279C DB_DATA 2
RANGE $279C-$279E DB_DATA 2
RANGE $279E-$27A0 DB_DATA 2
RANGE $27A0-$27A2 DB_DATA 2
RANGE $27A2-$27A4 DB_DATA 2
RANGE $27A4-$27A6 DB_DATA 2
RANGE $27A6-$27A8 DB_DATA 2
RANGE $27A8-$27AA DB_DATA 2
RANGE $27AA-$27AC DB_DATA 2
RANGE $27AC-$27AE DB_DATA 2
RANGE $27AE-$27B0 DB_DATA 2
RANGE $27B0-$27B2 DB_DATA 2
RANGE $27B2-$27B4 DB_DATA 2
RANGE $27B4-$27B6 DB_DATA 2
RANGE $27B6-$27B8 DB_DATA 2
RANGE $27B8-$27BA DB_DATA 2
RANGE $27BA-$27BC DB_DATA 2
RANGE $27BC-$27BE DB_DATA 2
RANGE $27BE-$27C0 DB_DATA 2
RANGE $27C0-$27C2 DB_DATA 2
RANGE $27C2-$27C4 DB_DATA 2
RANGE $27C4-$27C6 DB_DATA 2
RANGE $27C6-$27C8 DB_DATA 2
RANGE $27C8-$27CA DB_DATA 2
RANGE $27CA-$27CC DB_DATA 2
RANGE $27CC-$27CE DB_DATA 2
RANGE $27CE-$27D0 DB_DATA 2
RANGE $27D0-$27D2 DB_DATA 2
RANGE $27D2-$27D4 DB_DATA 2
RANGE $27D4-$27D6 DB_DATA 2
RANGE $27D6-$27D8 DB_DATA 2
RANGE $27D8-$27DA DB_DATA 2
RANGE $27DA-$27DC DB_DATA 2
RANGE $27DC-$27DE DB_DATA 2
RANGE $27DE-$27E0 DB_DATA 2
RANGE $27E0-$27E2 DB_DATA 2
RANGE $27E2-$27E4 DB_DATA 2
RANGE $27E4-$27E6 DB_DATA 2
RANGE $27E6-$27E8 DB_DATA 2
RANGE $27E8-$27EA DB_DATA 2
RANGE $27EA-$27EC DB_DATA 2
RANGE $27EC-$27EE DB_DATA 2
RANGE $27EE-$27F0 DB_DATA 2
RANGE $27F0-$27F2 DB_DATA 2
RANGE $27F2-$27F4 DB_DATA 2
RANGE $27F4-$27F6 DB_DATA 2
RANGE $27F6-$27F8 DB_DATA 2
RANGE $27F8-$27FA DB_DATA 2
RANGE $27FA-$27FC DB_DATA 2
RANGE $27FC-$27FE DB_DATA 2
RANGE $27FE-$2800 DB_DATA 2
RANGE $2800-$2802 DB_DATA 2
RANGE $2802-$2804 DB_DATA 2
RANGE $2804-$2806 DB_DATA 2
RANGE $2806-$2808 DB_DATA 2
RANGE $2808-$280A DB_DATA 2
RANGE $280A-$280C DB_DATA 2
RANGE $280C-$280E DB_DATA 2
RANGE $280E-$2810 DB_DATA 2
RANGE $2810-$2812 DB_DATA 2
RANGE $2812-$2814 DB_DATA 2
RANGE $2814-$2816 DB_DATA 2
RANGE $2816-$2818 DB_DATA 2
RANGE $2818-$281A DB_DATA 2
RANGE $281A-$281C DB_DATA 2
RANGE $281C-$281E DB_DATA 2
RANGE $281E-$2820 DB_DATA 2
RANGE $2820-$2822 DB_DATA 2
RANGE $2822-$2824 DB_DATA 2
RANGE $2824-$2826 DB_DATA 2
RANGE $2826-$2828 DB_DATA 2
RANGE $2828-$282A DB_DATA 2
RANGE $282A-$282C DB_DATA 2
RANGE $282C-$282E DB_DATA 2
RANGE $282E-$2830 DB_DATA 2
RANGE $2830-$2832 DB_DATA 2
RANGE $2832-$2834 DB_DATA 2
RANGE $2834-$2836 DB_DATA 2
RANGE $2836-$2838 DB_DATA 2
RANGE $2838-$283A DB_DATA 2
RANGE $283A-$283C DB_DATA 2
RANGE $283C-$283E DB_DATA 2
RANGE $283E-$2840 DB_DATA 2
RANGE $2840-$2842 DB_DATA 2
RANGE $2842-$2844 DB_DATA 2
RANGE $2844-$2846 DB_DATA 2
RANGE $2846-$2848 DB_DATA 2
RANGE $2848-$284A DB_DATA 2
RANGE $284A-$284C DB_DATA 2
RANGE $284C-$284E DB_DATA 2
RANGE $284E-$2850 DB_DATA 2
RANGE $2850-$2852 DB_DATA 2
RANGE $2852-$2854 DB_DATA 2
RANGE $2854-$2856 DB_DATA 2
RANGE $2856-$2858 DB_DATA 2
RANGE $2858-$285A DB_DATA 2
RANGE $285A-$285C DB_DATA 2
RANGE $285C-$285E DB_DATA 2
RANGE $285E-$2860 DB_DATA 2
RANGE $2860-$2862 DB_DATA 2
RANGE $2862-$2864 DB_DATA 2
RANGE $2864-$2866 DB_DATA 2
RANGE $2866-$2868 DB_DATA 2
RANGE $2868-$286A DB_DATA 2
RANGE $286A-$286C DB_DATA 2
RANGE $286C-$286E DB_DATA 2
RANGE $286E-$2870 DB_DATA 2
RANGE $2870-$2872 DB_DATA 2
RANGE $2872-$2874 DB_DATA 2
RANGE $2874-$2876 DB_DATA 2
RANGE $2876-$2878 DB_DATA 2
RANGE $2878-$287A DB_DATA 2
RANGE $287A-$287C DB_DATA 2
RANGE $287C-$287E DB_DATA 2
RANGE $287E-$2880 DB_DATA 2
RANGE $2880-$2882 DB_DATA 2
RANGE $2882-$2884 DB_DATA 2
RANGE $2884-$2886 DB_DATA 2
RANGE $2886-$2888 DB_DATA 2
RANGE $2888-$288A DB_DATA 2
RANGE $288A-$288C DB_DATA 2
RANGE $288C-$288E DB_DATA 2
RANGE $288E-$2890 DB_DATA 2
RANGE $2890-$2892 DB_DATA 2
RANGE $2892-$2894 DB_DATA 2
RANGE $2894-$2896 DB_DATA 2
RANGE $2896-$2898 DB_DATA 2
RANGE $2898-$289A DB_DATA 2
RANGE $289A-$289C DB_DATA 2
RANGE $289C-$289E DB_DATA 2
RANGE $289E-$28A0 DB_DATA 2
RANGE $28A0-$28A2 DB_DATA 2
RANGE $28A2-$28A4 DB_DATA 2
RANGE $28A4-$28A6 DB_DATA 2
RANGE $28A6-$28A8 DB_DATA 2
RANGE $28A8-$28AA DB_DATA 2
RANGE $28AA-$28AC DB_DATA 2
RANGE $28AC-$28AE DB_DATA 2
RANGE $28AE-$28B0 DB_DATA 2
RANGE $28B0-$28B2 DB_DATA 2
RANGE $28B2-$28B4 DB_DATA 2
RANGE $28B4-$28B6 DB_DATA 2
RANGE $28B6-$28B8 DB_DATA 2
RANGE $28B8-$28BA DB_DATA 2
RANGE $28BA-$28BC DB_DATA 2
RANGE $28BC-$28BE DB_DATA 2
RANGE $28BE-$28C0 DB_DATA 2
RANGE $28C0-$28C2 DB_DATA 2
RANGE $28C2-$28C4 DB_DATA 2
RANGE $28C4-$28C6 DB_DATA 2
RANGE $28C6-$28C8 DB_DATA 2
RANGE $28C8-$28CA DB_DATA 2
RANGE $28CA-$28CC DB_DATA 2
RANGE $28CC-$28CE DB_DATA 2
RANGE $28CE-$28D0 DB_DATA 2
RANGE $28D0-$28D2 DB_DATA 2
RANGE $28D2-$28D4 DB_DATA 2
RANGE $28D4-$28D6 DB_DATA 2
RANGE $28D6-$28D8 DB_DATA 2
RANGE $28D8-$28DA DB_DATA 2
RANGE $28DA-$28DC DB_DATA 2
RANGE $28DC-$28DE DB_DATA 2
RANGE $28DE-$28E0 DB_DATA 2
RANGE $28E0-$28E2 DB_DATA 2
RANGE $28E2-$28E4 DB_DATA 2
RANGE $28E4-$28E6 DB_DATA 2
RANGE $28E6-$28E8 DB_DATA 2
RANGE $28E8-$28EA DB_DATA 2
RANGE $28EA-$28EC DB_DATA 2
RANGE $28EC-$28EE DB_DATA 2
RANGE $28EE-$28F0 DB_DATA 2
RANGE $28F0-$28F2 DB_DATA 2
RANGE $28F2-$28F4 DB_DATA 2
RANGE $28F4-$28F6 DB_DATA 2
RANGE $28F6-$28F8 DB_DATA 2
RANGE $28F8-$28FA DB_DATA 2
RANGE $28FA-$28FC DB_DATA 2
RANGE $28FC-$28FE DB_DATA 2
RANGE $28FE-$2900 DB_DATA 2
RANGE $2900-$2902 DB_DATA 2
RANGE $2902-$2904 DB_DATA 2
RANGE $2904-$2906 DB_DATA 2
RANGE $2906-$2908 DB_DATA 2
RANGE $2908-$290A DB_DATA 2
RANGE $290A-$290C DB_DATA 2
RANGE $290C-$290E DB_DATA 2
RANGE $290E-$2910 DB_DATA 2
RANGE $2910-$2912 DB_DATA 2
RANGE $2912-$2914 DB_DATA 2
RANGE $2914-$2916 DB_DATA 2
RANGE $2916-$2918 DB_DATA 2
RANGE $2918-$291A DB_DATA 2
RANGE $291A-$291C DB_DATA 2
RANGE $291C-$291E DB_DATA 2
RANGE $291E-$2920 DB_DATA 2
RANGE $2920-$2922 DB_DATA 2
RANGE $2922-$2924 DB_DATA 2
RANGE $2924-$2926 DB_DATA 2
RANGE $2926-$2928 DB_DATA 2
RANGE $2928-$292A DB_DATA 2
RANGE $292A-$292C DB_DATA 2
RANGE $292C-$292E DB_DATA 2
RANGE $292E-$2930 DB_DATA 2
RANGE $2930-$2932 DB_DATA 2
RANGE $2932-$2934 DB_DATA 2
RANGE $2934-$2936 DB_DATA 2
RANGE $2936-$2938 DB_DATA 2
RANGE $2938-$293A DB_DATA 2
RANGE $293A-$293C DB_DATA 2
RANGE $293C-$293E DB_DATA 2
RANGE $293E-$2940 DB_DATA 2
RANGE $2940-$2942 DB_DATA 2
RANGE $2942-$2944 DB_DATA 2
RANGE $2944-$2946 DB_DATA 2
RANGE $2946-$2948 DB_DATA 2
RANGE $2948-$294A DB_DATA 2
RANGE $294A-$294C DB_DATA 2
RANGE $294C-$294E DB_DATA 2
RANGE $294E-$2950 DB_DATA 2
RANGE $2950-$2952 DB_DATA 2
RANGE $2952-$2954 DB_DATA 2
RANGE $2954-$2956 DB_DATA 2
RANGE $2956-$2958 DB_DATA 2
RANGE $2958-$295A DB_DATA 2
RANGE $295A-$295C DB_DATA 2
RANGE $295C-$295E DB_DATA 2
RANGE $295E-$2960 DB_DATA 2
RANGE $2960-$2962 DB_DATA 2
RANGE $2962-$2964 DB_DATA 2
RANGE $2964-$2966 DB_DATA 2
RANGE $2966-$2968 DB_DATA 2
RANGE $2968-$296A DB_DATA 2
RANGE $296A-$296C DB_DATA 2
RANGE $296C-$296E DB_DATA 2
RANGE $296E-$2970 DB_DATA 2
RANGE $2970-$2972 DB_DATA 2
RANGE $2972-$2974 DB_DATA 2
RANGE $2974-$2976 DB_DATA 2
RANGE $2976-$2978 DB_DATA 2
RANGE $2978-$297A DB_DATA 2
RANGE $297A-$297C DB_DATA 2
RANGE $297C-$297E DB_DATA 2
RANGE $297E-$2980 DB_DATA 2
RANGE $2980-$2982 DB_DATA 2
RANGE $2982-$2984 DB_DATA 2
RANGE $2984-$2986 DB_DATA 2
RANGE $2986-$2988 DB_DATA 2
RANGE $2988-$298A DB_DATA 2
RANGE $298A-$298C DB_DATA 2
RANGE $298C-$298E DB_DATA 2
RANGE $298E-$2990 DB_DATA 2
RANGE $2990-$2992 DB_DATA 2
RANGE $2992-$2994 DB_DATA 2
RANGE $2994-$2996 DB_DATA 2
RANGE $2996-$2998 DB_DATA 2
RANGE $2998-$299A DB_DATA 2
RANGE $299A-$299C DB_DATA 2
RANGE $299C-$299E DB_DATA 2
RANGE $299E-$29A0 DB_DATA 2
RANGE $29A0-$29A2 DB_DATA 2
RANGE $29A2-$29A4 DB_DATA 2
RANGE $29A4-$29A6 DB_DATA 2
RANGE $29A6-$29A8 DB_DATA 2
RANGE $29A8-$29AA DB_DATA 2
RANGE $29AA-$29AC DB_DATA 2
RANGE $29AC-$29AE DB_DATA 2
RANGE $29AE-$29B0 DB_DATA 2
RANGE $29B0-$29B2 DB_DATA 2
RANGE $29B2-$29B4 DB_DATA 2
RANGE $29B4-$29B6 DB_DATA 2
RANGE $29B6-$29B8 DB_DATA 2
RANGE $29B8-$29BA DB_DATA 2
RANGE $29BA-$29BC DB_DATA 2
RANGE $29BC-$29BE DB_DATA 2
RANGE $29BE-$29C0 DB_DATA 2
RANGE $29C0-$29C2 DB_DATA 2
RANGE $29C2-$29C4 DB_DATA 2
RANGE $29C4-$29C6 DB_DATA 2
RANGE $29C6-$29C8 DB_DATA 2
RANGE $29C8-$29CA DB_DATA 2
RANGE $29CA-$29CC DB_DATA 2
RANGE $29CC-$29CE DB_DATA 2
RANGE $29CE-$29D0 DB_DATA 2
RANGE $29D0-$29D2 DB_DATA 2
RANGE $29D2-$29D4 DB_DATA 2
RANGE $29D4-$29D6 DB_DATA 2
RANGE $29D6-$29D8 DB_DATA 2
RANGE $29D8-$29DA DB_DATA 2
RANGE $29DA-$29DC DB_DATA 2
RANGE $29DC-$29DE DB_DATA 2
RANGE $29DE-$29E0 DB_DATA 2
RANGE $29E0-$29E2 DB_DATA 2
RANGE $29E2-$29E4 DB_DATA 2
RANGE $29E4-$29E6 DB_DATA 2
RANGE $29E6-$29E8 DB_DATA 2
RANGE $29E8-$29EA DB_DATA 2
RANGE $29EA-$29EC DB_DATA 2
RANGE $29EC-$29EE DB_DATA 2
RANGE $29EE-$29F0 DB_DATA 2
RANGE $29F0-$29F2 DB_DATA 2
RANGE $29F2-$29F4 DB_DATA 2
RANGE $29F4-$29F6 DB_DATA 2
RANGE $29F6-$29F8 DB_DATA 2
RANGE $29F8-$29FA DB_DATA 2
RANGE $29FA-$29FC DB_DATA 2
RANGE $29FC-$29FE DB_DATA 2
RANGE $29FE-$2A00 DB_DATA 2
RANGE $2A00-$2A02 DB_DATA 2
RANGE $2A02-$2A04 DB_DATA 2
RANGE $2A04-$2A06 DB_DATA 2
RANGE $2A06-$2A08 DB_DATA 2
RANGE $2A08-$2A0A DB_DATA 2
RANGE $2A0A-$2A0C DB_DATA 2
RANGE $2A0C-$2A0E DB_DATA 2
RANGE $2A0E-$2A10 DB_DATA 2
RANGE $2A10-$2A12 DB_DATA 2
RANGE $2A12-$2A14 DB_DATA 2
RANGE $2A14-$2A16 DB_DATA 2
RANGE $2A16-$2A18 DB_DATA 2
RANGE $2A18-$2A1A DB_DATA 2
RANGE $2A1A-$2A1C DB_DATA 2
RANGE $2A1C-$2A1E DB_DATA 2
RANGE $2A1E-$2A20 DB_DATA 2
RANGE $2A20-$2A22 DB_DATA 2
RANGE $2A22-$2A24 DB_DATA 2
RANGE $2A24-$2A26 DB_DATA 2
RANGE $2A26-$2A28 DB_DATA 2
RANGE $2A28-$2A2A DB_DATA 2
RANGE $2A2A-$2A2C DB_DATA 2
RANGE $2A2C-$2A2E DB_DATA 2
RANGE $2A2E-$2A30 DB_DATA 2
RANGE $2A30-$2A32 DB_DATA 2
RANGE $2A32-$2A34 DB_DATA 2
RANGE $2A34-$2A36 DB_DATA 2
RANGE $2A36-$2A38 DB_DATA 2
RANGE $2A38-$2A3A DB_DATA 2
RANGE $2A3A-$2A3C DB_DATA 2
RANGE $2A3C-$2A3E DB_DATA 2
RANGE $2A3E-$2A40 DB_DATA 2
RANGE $2A40-$2A42 DB_DATA 2
RANGE $2A42-$2A44 DB_DATA 2
RANGE $2A44-$2A46 DB_DATA 2
RANGE $2A46-$2A48 DB_DATA 2
RANGE $2A48-$2A4A DB_DATA 2
RANGE $2A4A-$2A4C DB_DATA 2
RANGE $2A4C-$2A4E DB_DATA 2
RANGE $2A4E-$2A50 DB_DATA 2
RANGE $2A50-$2A52 DB_DATA 2
RANGE $2A52-$2A54 DB_DATA 2
RANGE $2A54-$2A56 DB_DATA 2
RANGE $2A56-$2A58 DB_DATA 2
RANGE $2A58-$2A5A DW_DATA 1
RANGE $2A5A-$2A5C DB_DATA 2
RANGE $2A5C-$2A5E DB_DATA 2
RANGE $2A5E-$2A60 DB_DATA 2
RANGE $2A60-$2A62 DB_DATA 2
RANGE $2A62-$2A64 DB_DATA 2
RANGE $2A64-$2A66 DB_DATA 2
RANGE $2A66-$2A68 DB_DATA 2
RANGE $2A68-$2A6A DB_DATA 2
RANGE $2A6A-$2A6C DB_DATA 2
RANGE $2A6C-$2A6E DW_DATA 1
RANGE $2A6E-$2A70 DB_DATA 2
RANGE $2A70-$2A72 DB_DATA 2
RANGE $2A72-$2A74 DB_DATA 2
RANGE $2A74-$2A76 DB_DATA 2
RANGE $2A76-$2A78 DB_DATA 2
RANGE $2A78-$2A7A DB_DATA 2
RANGE $2A7A-$2A7C DB_DATA 2
RANGE $2A7C-$2A7E DB_DATA 2
RANGE $2A7E-$2A80 DB_DATA 2
RANGE $2A80-$2A82 DW_DATA 1
RANGE $2A82-$2A84 DB_DATA 2
RANGE $2A84-$2A86 DB_DATA 2
RANGE $2A86-$2A88 DB_DATA 2
RANGE $2A88-$2A8A DB_DATA 2
RANGE $2A8A-$2A8C DB_DATA 2
RANGE $2A8C-$2A8E DB_DATA 2
RANGE $2A8E-$2A90 DB_DATA 2
RANGE $2A90-$2A92 DB_DATA 2
RANGE $2A92-$2A94 DB_DATA 2
RANGE $2A94-$2A96 DW_DATA 1
RANGE $2A96-$2A98 DB_DATA 2
RANGE $2A98-$2A9A DB_DATA 2
RANGE $2A9A-$2A9C DB_DATA 2
RANGE $2A9C-$2A9E DB_DATA 2
RANGE $2A9E-$2AA0 DB_DATA 2
RANGE $2AA0-$2AA2 DB_DATA 2
RANGE $2AA2-$2AA4 DB_DATA 2
RANGE $2AA4-$2AA6 DB_DATA 2
RANGE $2AA6-$2AA8 DB_DATA 2
RANGE $2AA8-$2AAA DW_DATA 1
RANGE $2AAA-$2AAC DB_DATA 2
RANGE $2AAC-$2AAE DB_DATA 2
RANGE $2AAE-$2AB0 DB_DATA 2
RANGE $2AB0-$2AB2 DB_DATA 2
RANGE $2AB2-$2AB4 DB_DATA 2
RANGE $2AB4-$2AB6 DB_DATA 2
RANGE $2AB6-$2AB8 DB_DATA 2
RANGE $2AB8-$2ABA DB_DATA 2
RANGE $2ABA-$2ABC DB_DATA 2
RANGE $2ABC-$2ABE DB_DATA 2
RANGE $2ABE-$2AC0 DW_DATA 1
RANGE $2AC0-$2AC2 DB_DATA 2
RANGE $2AC2-$2AC4 DB_DATA 2
RANGE $2AC4-$2AC6 DB_DATA 2
RANGE $2AC6-$2AC8 DB_DATA 2
RANGE $2AC8-$2ACA DB_DATA 2
RANGE $2ACA-$2ACC DB_DATA 2
RANGE $2ACC-$2ACE DB_DATA 2
RANGE $2ACE-$2AD0 DB_DATA 2
RANGE $2AD0-$2AD2 DB_DATA 2
RANGE $2AD2-$2AD4 DB_DATA 2
RANGE $2AD4-$2AD6 DW_DATA 1
RANGE $2AD6-$2AD8 DB_DATA 2
RANGE $2AD8-$2ADA DB_DATA 2
RANGE $2ADA-$2ADC DB_DATA 2
RANGE $2ADC-$2ADE DB_DATA 2
RANGE $2ADE-$2AE0 DB_DATA 2
RANGE $2AE0-$2AE2 DB_DATA 2
RANGE $2AE2-$2AE4 DB_DATA 2
RANGE $2AE4-$2AE6 DB_DATA 2
RANGE $2AE6-$2AE8 DB_DATA 2
RANGE $2AE8-$2AEA DB_DATA 2
RANGE $2AEA-$2AEC DW_DATA 1
RANGE $2AEC-$2AEE DB_DATA 2
RANGE $2AEE-$2AF0 DB_DATA 2
RANGE $2AF0-$2AF2 DB_DATA 2
RANGE $2AF2-$2AF4 DB_DATA 2
RANGE $2AF4-$2AF6 DB_DATA 2
RANGE $2AF6-$2AF8 DB_DATA 2
RANGE $2AF8-$2AFA DW_DATA 1
RANGE $2AFA-$2AFC DB_DATA 2
RANGE $2AFC-$2AFE DB_DATA 2
RANGE $2AFE-$2B00 DB_DATA 2
RANGE $2B00-$2B02 DB_DATA 2
RANGE $2B02-$2B04 DB_DATA 2
RANGE $2B04-$2B06 DB_DATA 2
RANGE $2B06-$2B08 DW_DATA 1
RANGE $2B08-$2B0A DB_DATA 2
RANGE $2B0A-$2B0C DB_DATA 2
RANGE $2B0C-$2B0E DB_DATA 2
RANGE $2B0E-$2B10 DB_DATA 2
RANGE $2B10-$2B12 DB_DATA 2
RANGE $2B12-$2B14 DB_DATA 2
RANGE $2B14-$2B16 DW_DATA 1
RANGE $2B16-$2B18 DB_DATA 2
RANGE $2B18-$2B1A DB_DATA 2
RANGE $2B1A-$2B1C DB_DATA 2
RANGE $2B1C-$2B1E DB_DATA 2
RANGE $2B1E-$2B20 DB_DATA 2
RANGE $2B20-$2B22 DB_DATA 2
RANGE $2B22-$2B24 DW_DATA 1
RANGE $2B24-$2B26 DB_DATA 2
RANGE $2B26-$2B28 DB_DATA 2
RANGE $2B28-$2B2A DB_DATA 2
RANGE $2B2A-$2B2C DB_DATA 2
RANGE $2B2C-$2B2E DB_DATA 2
RANGE $2B2E-$2B30 DB_DATA 2
RANGE $2B30-$2B32 DW_DATA 1
RANGE $2B32-$2B34 DB_DATA 2
RANGE $2B34-$2B36 DB_DATA 2
RANGE $2B36-$2B38 DB_DATA 2
RANGE $2B38-$2B3A DB_DATA 2
RANGE $2B3A-$2B3C DB_DATA 2
RANGE $2B3C-$2B3E DB_DATA 2
RANGE $2B3E-$2B40 DW_DATA 1
RANGE $2B40-$2B42 DB_DATA 2
RANGE $2B42-$2B44 DB_DATA 2
RANGE $2B44-$2B46 DB_DATA 2
RANGE $2B46-$2B48 DB_DATA 2
RANGE $2B48-$2B4A DB_DATA 2
RANGE $2B4A-$2B4C DB_DATA 2
RANGE $2B4C-$2BF0 CODE
RANGE $2BF0-$2BF2 DW_DATA 1
RANGE $2BF2-$2BF3 DB_DATA 1
RANGE $2BF3-$2BF5 DW_DATA 1
RANGE $2BF5-$2BF6 DB_DATA 1
RANGE $2BF6-$2BF8 DW_DATA 1
RANGE $2BF8-$2BF9 DB_DATA 1
RANGE $2BF9-$2BFB DW_DATA 1
RANGE $2BFB-$2BFC DB_DATA 1
RANGE $2BFC-$2BFE DW_DATA 1
RANGE $2BFE-$2BFF DB_DATA 1
RANGE $2BFF-$2C01 DW_DATA 1
RANGE $2C01-$2C02 DB_DATA 1
RANGE $2C02-$2C04 DW_DATA 1
RANGE $2C04-$2C05 DB_DATA 1
RANGE $2C05-$2C07 DW_DATA 1
RANGE $2C07-$2C08 DB_DATA 1
RANGE $2C08-$2C0A DW_DATA 1
RANGE $2C0A-$2C0B DB_DATA 1
RANGE $2C0B-$2C0D DW_DATA 1
RANGE $2C0D-$2C0E DB_DATA 1
RANGE $2C0E-$2C10 DW_DATA 1
RANGE $2C10-$2C11 DB_DATA 1
RANGE $2C11-$2C13 DW_DATA 1
RANGE $2C13-$2C14 DB_DATA 1
RANGE $2C14-$2C16 DW_DATA 1
RANGE $2C16-$2C17 DB_DATA 1
RANGE $2C17-$2C19 DW_DATA 1
RANGE $2C19-$2C1A DB_DATA 1
RANGE $2C1A-$2C1C DW_DATA 1
RANGE $2C1C-$2C1D DB_DATA 1
RANGE $2C1D-$2C1F DW_DATA 1
RANGE $2C1F-$2C20 DB_DATA 1
RANGE $2C20-$2C22 DW_DATA 1
RANGE $2C22-$2C23 DB_DATA 1
RANGE $2C23-$2C25 DW_DATA 1
RANGE $2C25-$2C26 DB_DATA 1
RANGE $2C26-$2C30 DB_DATA 10
RANGE $2C30-$2C3A DB_DATA 10
RANGE $2C3A-$2C44 DB_DATA 10
RANGE $2C44-$2C4E DB_DATA 10
RANGE $2C4E-$2C58 DB_DATA 10
RANGE $2C58-$2C62 DB_DATA 10
RANGE $2C62-$2C6C DB_DATA 10
RANGE $2C6C-$2C76 DB_DATA 10
RANGE $2C76-$2C80 DB_DATA 10
RANGE $2C80-$2C8A DB_DATA 10
RANGE $2C8A-$2C94 DB_DATA 10
RANGE $2C94-$2C9E DB_DATA 10
RANGE $2C9E-$2CA8 DB_DATA 10
RANGE $2CA8-$2CB2 DB_DATA 10
RANGE $2CB2-$2CB9 DB_DATA 7
RANGE $2CB9-$2CC3 DB_DATA 10
RANGE $2CC3-$2CCD DB_DATA 10
RANGE $2CCD-$2CD7 DB_DATA 10
RANGE $2CD7-$2CE1 DB_DATA 10
RANGE $2CE1-$2CEB DB_DATA 10
RANGE $2CEB-$2CF5 DB_DATA 10
RANGE $2CF5-$2CFF DB_DATA 10
RANGE $2CFF-$2D09 DB_DATA 10
RANGE $2D09-$2D13 DB_DATA 10
RANGE $2D13-$2D1D DB_DATA 10
RANGE $2D1D-$2D27 DB_DATA 10
RANGE $2D27-$2D31 DB_DATA 10
RANGE $2D31-$2D3B DB_DATA 10
RANGE $2D3B-$2D45 DB_DATA 10
RANGE $2D45-$2D4F DB_DATA 10
RANGE $2D4F-$2D59 DB_DATA 10
RANGE $2D59-$2D63 DB_DATA 10
RANGE $2D63-$2D6D DB_DATA 10
RANGE $2D6D-$2D77 DB_DATA 10
RANGE $2D77-$2D81 DB_DATA 10
RANGE $2D81-$2D8B DB_DATA 10
RANGE $2D8B-$2D95 DB_DATA 10
RANGE $2D95-$2D9F DB_DATA 10
RANGE $2D9F-$2DA9 DB_DATA 10
RANGE $2DA9-$2DAF DB_DATA 6
RANGE $2DAF-$2DB9 DB_DATA 10
RANGE $2DB9-$2DC3 DB_DATA 10
RANGE $2DC3-$2DCD DB_DATA 10
RANGE $2DCD-$2DD7 DB_DATA 10
RANGE $2DD7-$2DE1 DB_DATA 10
RANGE $2DE1-$2DEB DB_DATA 10
RANGE $2DEB-$2DF5 DB_DATA 10
RANGE $2DF5-$2DFF DB_DATA 10
RANGE $2DFF-$2E09 DB_DATA 10
RANGE $2E09-$2E13 DB_DATA 10
RANGE $2E13-$2E1D DB_DATA 10
RANGE $2E1D-$2E27 DB_DATA 10
RANGE $2E27-$2E31 DB_DATA 10
RANGE $2E31-$2E3B DB_DATA 10
RANGE $2E3B-$2E45 DB_DATA 10
RANGE $2E45-$2E4F DB_DATA 10
RANGE $2E4F-$2E59 DB_DATA 10
RANGE $2E59-$2E63 DB_DATA 10
RANGE $2E63-$2E6D DB_DATA 10
RANGE $2E6D-$2E77 DB_DATA 10
RANGE $2E77-$2E81 DB_DATA 10
RANGE $2E81-$2E8B DB_DATA 10
RANGE $2E8B-$2E95 DB_DATA 10
RANGE $2E95-$2E9F DB_DATA 10
RANGE $2E9F-$2EA9 DB_DATA 10
RANGE $2EA9-$2EB3 DB_DATA 10
RANGE $2EB3-$2EBD DB_DATA 10
RANGE $2EBD-$2EC7 DB_DATA 10
RANGE $2EC7-$2ED1 DB_DATA 10
RANGE $2ED1-$2EDB DB_DATA 10
RANGE $2EDB-$2EE5 DB_DATA 10
RANGE $2EE5-$2EEF DB_DATA 10
RANGE $2EEF-$2EF0 DB_DATA 1
RANGE $2EF0-$2EFA DB_DATA 10
RANGE $2EFA-$2F04 DB_DATA 10
RANGE $2F04-$2F0E DB_DATA 10
RANGE $2F0E-$2F18 DB_DATA 10
RANGE $2F18-$2F22 DB_DATA 10
RANGE $2F22-$2F2C DB_DATA 10
RANGE $2F2C-$2F36 DB_DATA 10
RANGE $2F36-$2F40 DB_DATA 10
RANGE $2F40-$2F4A DB_DATA 10
RANGE $2F4A-$2F54 DB_DATA 10
RANGE $2F54-$2F5E DB_DATA 10
RANGE $2F5E-$2F68 DB_DATA 10
RANGE $2F68-$2F72 DB_DATA 10
RANGE $2F72-$2F7C DB_DATA 10
RANGE $2F7C-$2F86 DB_DATA 10
RANGE $2F86-$2F90 DB_DATA 10
RANGE $2F90-$2F9A DB_DATA 10
RANGE $2F9A-$2FA4 DB_DATA 10
RANGE $2FA4-$2FAE DB_DATA 10
RANGE $2FAE-$2FB0 DB_DATA 2
RANGE $2FB0-$2FBA DB_DATA 10
RANGE $2FBA-$2FC4 DB_DATA 10
RANGE $2FC4-$2FCE DB_DATA 10
RANGE $2FCE-$2FD8 DB_DATA 10
RANGE $2FD8-$2FE2 DB_DATA 10
RANGE $2FE2-$2FEC DB_DATA 10
RANGE $2FEC-$2FF6 DB_DATA 10
RANGE $2FF6-$3000 DB_DATA 10
RANGE $3000-$300A DB_DATA 10
RANGE $300A-$3014 DB_DATA 10
RANGE $3014-$301E DB_DATA 10
RANGE $301E-$3028 DB_DATA 10
RANGE $3028-$3032 DB_DATA 10
RANGE $3032-$303C DB_DATA 10
RANGE $303C-$3046 DB_DATA 10
RANGE $3046-$3050 DB_DATA 10
RANGE $3050-$305A DB_DATA 10
RANGE $305A-$3064 DB_DATA 10
RANGE $3064-$306E DB_DATA 10
RANGE $306E-$3078 DB_DATA 10
RANGE $3078-$3082 DB_DATA 10
RANGE $3082-$308C DB_DATA 10
RANGE $308C-$3096 DB_DATA 10
RANGE $3096-$30A0 DB_DATA 10
RANGE $30A0-$30A9 DB_DATA 9
RANGE $30A9-$30B3 DB_DATA 10
RANGE $30B3-$30BD DB_DATA 10
RANGE $30BD-$30C7 DB_DATA 10
RANGE $30C7-$30D1 DB_DATA 10
RANGE $30D1-$30DB DB_DATA 10
RANGE $30DB-$30E5 DB_DATA 10
RANGE $30E5-$30EF DB_DATA 10
RANGE $30EF-$30F9 DB_DATA 10
RANGE $30F9-$3103 DB_DATA 10
RANGE $3103-$310D DB_DATA 10
RANGE $310D-$3117 DB_DATA 10
RANGE $3117-$3121 DB_DATA 10
RANGE $3121-$312B DB_DATA 10
RANGE $312B-$3135 DB_DATA 10
RANGE $3135-$313F DB_DATA 10
RANGE $313F-$3149 DB_DATA 10
RANGE $3149-$3153 DB_DATA 10
RANGE $3153-$315D DB_DATA 10
RANGE $315D-$3167 DB_DATA 10
RANGE $3167-$3171 DB_DATA 10
RANGE $3171-$317B DB_DATA 10
RANGE $317B-$3185 DB_DATA 10
RANGE $3185-$318F DB_DATA 10
RANGE $318F-$3199 DB_DATA 10
RANGE $3199-$31A3 DB_DATA 10
RANGE $31A3-$31AD DB_DATA 10
RANGE $31AD-$31B1 DB_DATA 4
RANGE $31B1-$31BB DB_DATA 10
RANGE $31BB-$31C5 DB_DATA 10
RANGE $31C5-$31CF DB_DATA 10
RANGE $31CF-$31D9 DB_DATA 10
RANGE $31D9-$31E3 DB_DATA 10
RANGE $31E3-$31ED DB_DATA 10
RANGE $31ED-$31F7 DB_DATA 10
RANGE $31F7-$3201 DB_DATA 10
RANGE $3201-$320B DB_DATA 10
RANGE $320B-$3215 DB_DATA 10
RANGE $3215-$321F DB_DATA 10
RANGE $321F-$3229 DB_DATA 10
RANGE $3229-$3233 DB_DATA 10
RANGE $3233-$323D DB_DATA 10
RANGE $323D-$3247 DB_DATA 10
RANGE $3247-$3251 DB_DATA 10
RANGE $3251-$3259 DB_DATA 8
RANGE $3259-$3263 DB_DATA 10
RANGE $3263-$326D DB_DATA 10
RANGE $326D-$3277 DB_DATA 10
RANGE $3277-$3281 DB_DATA 10
RANGE $3281-$328B DB_DATA 10
RANGE $328B-$3295 DB_DATA 10
RANGE $3295-$329F DB_DATA 10
RANGE $329F-$32A9 DB_DATA 10
RANGE $32A9-$32B3 DB_DATA 10
RANGE $32B3-$32BD DB_DATA 10
RANGE $32BD-$32C7 DB_DATA 10
RANGE $32C7-$32D1 DB_DATA 10
RANGE $32D1-$32DB DB_DATA 10
RANGE $32DB-$32E5 DB_DATA 10
RANGE $32E5-$32EF DB_DATA 10
RANGE $32EF-$32F5 DB_DATA 6
RANGE $32F5-$32FF DB_DATA 10
RANGE $32FF-$3309 DB_DATA 10
RANGE $3309-$3313 DB_DATA 10
RANGE $3313-$331D DB_DATA 10
RANGE $331D-$3327 DB_DATA 10
RANGE $3327-$3331 DB_DATA 10
RANGE $3331-$333B DB_DATA 10
RANGE $333B-$3345 DB_DATA 10
RANGE $3345-$334F DB_DATA 10
RANGE $334F-$3359 DB_DATA 10
RANGE $3359-$3363 DB_DATA 10
RANGE $3363-$336D DB_DATA 10
RANGE $336D-$3377 DB_DATA 10
RANGE $3377-$3381 DB_DATA 10
RANGE $3381-$338B DB_DATA 10
RANGE $338B-$3395 DB_DATA 10
RANGE $3395-$339F DB_DATA 10
RANGE $339F-$33A9 DB_DATA 10
RANGE $33A9-$33B3 DB_DATA 10
RANGE $33B3-$33B5 DB_DATA 2
RANGE $33B5-$33BF DB_DATA 10
RANGE $33BF-$33C9 DB_DATA 10
RANGE $33C9-$33D3 DB_DATA 10
RANGE $33D3-$33DD DB_DATA 10
RANGE $33DD-$33E7 DB_DATA 10
RANGE $33E7-$33F1 DB_DATA 10
RANGE $33F1-$33FB DB_DATA 10
RANGE $33FB-$33FC DB_DATA 1
RANGE $33FC-$3406 DB_DATA 10
RANGE $3406-$3410 DB_DATA 10
RANGE $3410-$341A DB_DATA 10
RANGE $341A-$3424 DB_DATA 10
RANGE $3424-$342E DB_DATA 10
RANGE $342E-$3438 DB_DATA 10
RANGE $3438-$3442 DB_DATA 10
RANGE $3442-$344C DB_DATA 10
RANGE $344C-$3456 DB_DATA 10
RANGE $3456-$3460 DB_DATA 10
RANGE $3460-$346A DB_DATA 10
RANGE $346A-$3474 DB_DATA 10
RANGE $3474-$347E DB_DATA 10
RANGE $347E-$3488 DB_DATA 10
RANGE $3488-$348F DB_DATA 7
RANGE $348F-$3499 DB_DATA 10
RANGE $3499-$34A3 DB_DATA 10
RANGE $34A3-$34AD DB_DATA 10
RANGE $34AD-$34B7 DB_DATA 10
RANGE $34B7-$34C1 DB_DATA 10
RANGE $34C1-$34C2 DB_DATA 1
RANGE $34C2-$34CC DB_DATA 10
RANGE $34CC-$34D6 DB_DATA 10
RANGE $34D6-$34E0 DB_DATA 10
RANGE $34E0-$34EA DB_DATA 10
RANGE $34EA-$34F4 DB_DATA 10
RANGE $34F4-$34FE DB_DATA 10
RANGE $34FE-$3508 DB_DATA 10
RANGE $3508-$3512 DB_DATA 10
RANGE $3512-$351C DB_DATA 10
RANGE $351C-$3526 DB_DATA 10
RANGE $3526-$352B DB_DATA 5
RANGE $352B-$3535 DB_DATA 10
RANGE $3535-$353F DB_DATA 10
RANGE $353F-$3549 DB_DATA 10
RANGE $3549-$3553 DB_DATA 10
RANGE $3553-$355D DB_DATA 10
RANGE $355D-$3567 DB_DATA 10
RANGE $3567-$3571 DB_DATA 10
RANGE $3571-$357B DB_DATA 10
RANGE $357B-$3585 DB_DATA 10
RANGE $3585-$358F DB_DATA 10
RANGE $358F-$3599 DB_DATA 10
RANGE $3599-$35A3 DB_DATA 10
RANGE $35A3-$35AD DB_DATA 10
RANGE $35AD-$35B7 DB_DATA 10
RANGE $35B7-$35B8 DB_DATA 1
RANGE $35B8-$35C2 DB_DATA 10
RANGE $35C2-$35CC DB_DATA 10
RANGE $35CC-$35D6 DB_DATA 10
RANGE $35D6-$35E0 DB_DATA 10
RANGE $35E0-$35EA DB_DATA 10
RANGE $35EA-$35F4 DB_DATA 10
RANGE $35F4-$35FE DB_DATA 10
RANGE $35FE-$3608 DB_DATA 10
RANGE $3608-$3612 DB_DATA 10
RANGE $3612-$3615 DB_DATA 3
RANGE $3615-$361F DB_DATA 10
RANGE $361F-$3629 DB_DATA 10
RANGE $3629-$362D DB_DATA 4
RANGE $362D-$3637 DB_DATA 10
RANGE $3637-$3641 DB_DATA 10
RANGE $3641-$364B DB_DATA 10
RANGE $364B-$3655 DB_DATA 10
RANGE $3655-$365F DB_DATA 10
RANGE $365F-$3669 DB_DATA 10
RANGE $3669-$366D DB_DATA 4
RANGE $366D-$3677 DB_DATA 10
RANGE $3677-$3681 DB_DATA 10
RANGE $3681-$368B DB_DATA 10
RANGE $368B-$3695 DB_DATA 10
RANGE $3695-$369F DB_DATA 10
RANGE $369F-$36A9 DB_DATA 10
RANGE $36A9-$36B3 DB_DATA 10
RANGE $36B3-$36BB DB_DATA 8
RANGE $36BB-$36BD DW_DATA 1
RANGE $36BD-$36BF DW_DATA 1
RANGE $36BF-$36C1 DW_DATA 1
RANGE $36C1-$36C3 DW_DATA 1
RANGE $36C3-$36C5 DW_DATA 1
RANGE $36C5-$36C7 DW_DATA 1
RANGE $36C7-$36C9 DW_DATA 1
RANGE $36C9-$36CB DW_DATA 1
RANGE $36CB-$36CC DB_DATA 1
RANGE $36CC-$36CE DW_DATA 1
RANGE $36CE-$36D0 DW_DATA 1
RANGE $36D0-$36D2 DW_DATA 1
RANGE $36D2-$36D4 DW_DATA 1
RANGE $36D4-$36D6 DW_DATA 1
RANGE $36D6-$36D8 DW_DATA 1
RANGE $36D8-$36DA DW_DATA 1
RANGE $36DA-$36DC DW_DATA 1
RANGE $36DC-$36DE DW_DATA 1
RANGE $36DE-$36E0 DW_DATA 1
RANGE $36E0-$36E2 DW_DATA 1
RANGE $36E2-$36E4 DW_DATA 1
RANGE $36E4-$36E6 DW_DATA 1
RANGE $36E6-$36E8 DW_DATA 1
RANGE $36E8-$36E9 DB_DATA 1
RANGE $36E9-$36EA DB_DATA 1
RANGE $36EA-$36EB DB_DATA 1
RANGE $36EB-$36EC DB_DATA 1
RANGE $36EC-$36ED DB_DATA 1
RANGE $36ED-$36EE DB_DATA 1
RANGE $36EE-$36EF DB_DATA 1
RANGE $36EF-$36F1 DW_DATA 1
RANGE $36F1-$36F2 DB_DATA 1
RANGE $36F2-$36F3 DB_DATA 1
RANGE $36F3-$36F4 DB_DATA 1
RANGE $36F4-$36F5 DB_DATA 1
RANGE $36F5-$36F6 DB_DATA 1
RANGE $36F6-$36F7 DB_DATA 1
RANGE $36F7-$36F9 DW_DATA 1
RANGE $36F9-$36FA DB_DATA 1
RANGE $36FA-$36FB DB_DATA 1
RANGE $36FB-$36FC DB_DATA 1
RANGE $36FC-$36FD DB_DATA 1
RANGE $36FD-$36FE DB_DATA 1
RANGE $36FE-$36FF DB_DATA 1
RANGE $36FF-$3700 DB_DATA 1
RANGE $3700-$3701 DB_DATA 1
RANGE $3701-$3702 DB_DATA 1
RANGE $3702-$3703 DB_DATA 1
RANGE $3703-$3704 DB_DATA 1
RANGE $3704-$3705 DB_DATA 1
RANGE $3705-$3706 DB_DATA 1
RANGE $3706-$3707 DB_DATA 1
RANGE $3707-$3708 DB_DATA 1
RANGE $3708-$3709 DB_DATA 1
RANGE $3709-$370A DB_DATA 1
RANGE $370A-$370B DB_DATA 1
RANGE $370B-$370C DB_DATA 1
RANGE $370C-$370D DB_DATA 1
RANGE $370D-$370E DB_DATA 1
RANGE $370E-$370F DB_DATA 1
RANGE $370F-$3711 DW_DATA 1
RANGE $3711-$3712 DB_DATA 1
RANGE $3712-$3713 DB_DATA 1
RANGE $3713-$3714 DB_DATA 1
RANGE $3714-$3715 DB_DATA 1
RANGE $3715-$3716 DB_DATA 1
RANGE $3716-$3717 DB_DATA 1
RANGE $3717-$3718 DB_DATA 1
RANGE $3718-$3719 DB_DATA 1
RANGE $3719-$371A DB_DATA 1
RANGE $371A-$371C DW_DATA 1
RANGE $371C-$371D DB_DATA 1
RANGE $371D-$371E DB_DATA 1
RANGE $371E-$371F DB_DATA 1
RANGE $371F-$3720 DB_DATA 1
RANGE $3720-$3721 DB_DATA 1
RANGE $3721-$3722 DB_DATA 1
RANGE $3722-$3723 DB_DATA 1
RANGE $3723-$3724 DB_DATA 1
RANGE $3724-$3726 DW_DATA 1
RANGE $3726-$3727 DB_DATA 1
RANGE $3727-$3728 DB_DATA 1
RANGE $3728-$3729 DB_DATA 1
RANGE $3729-$372A DB_DATA 1
RANGE $372A-$372B DB_DATA 1
RANGE $372B-$372C DB_DATA 1
RANGE $372C-$372D DB_DATA 1
RANGE $372D-$372E DB_DATA 1
RANGE $372E-$372F DB_DATA 1
RANGE $372F-$3730 DB_DATA 1
RANGE $3730-$3731 DB_DATA 1
RANGE $3731-$3732 DB_DATA 1
RANGE $3732-$3733 DB_DATA 1
RANGE $3733-$3734 DB_DATA 1
RANGE $3734-$3735 DB_DATA 1
RANGE $3735-$3736 DB_DATA 1
RANGE $3736-$3737 DB_DATA 1
RANGE $3737-$3738 DB_DATA 1
RANGE $3738-$3739 DB_DATA 1
RANGE $3739-$373A DB_DATA 1
RANGE $373A-$373B DB_DATA 1
RANGE $373B-$373D DW_DATA 1
RANGE $373D-$373E DB_DATA 1
RANGE $373E-$373F DB_DATA 1
RANGE $373F-$3740 DB_DATA 1
RANGE $3740-$3741 DB_DATA 1
RANGE $3741-$3742 DB_DATA 1
RANGE $3742-$3743 DB_DATA 1
RANGE $3743-$3744 DB_DATA 1
RANGE $3744-$3745 DB_DATA 1
RANGE $3745-$3746 DB_DATA 1
RANGE $3746-$3747 DB_DATA 1
RANGE $3747-$3748 DB_DATA 1
RANGE $3748-$3749 DB_DATA 1
RANGE $3749-$374A DB_DATA 1
RANGE $374A-$374B DB_DATA 1
RANGE $374B-$374C DB_DATA 1
RANGE $374C-$374E DW_DATA 1
RANGE $374E-$374F DB_DATA 1
RANGE $374F-$3750 DB_DATA 1
RANGE $3750-$3751 DB_DATA 1
RANGE $3751-$3752 DB_DATA 1
RANGE $3752-$3753 DB_DATA 1
RANGE $3753-$3754 DB_DATA 1
RANGE $3754-$3755 DB_DATA 1
RANGE $3755-$3756 DB_DATA 1
RANGE $3756-$3757 DB_DATA 1
RANGE $3757-$3758 DB_DATA 1
RANGE $3758-$3759 DB_DATA 1
RANGE $3759-$375A DB_DATA 1
RANGE $375A-$375C DW_DATA 1
RANGE $375C-$375D DB_DATA 1
RANGE $375D-$375E DB_DATA 1
RANGE $375E-$375F DB_DATA 1
RANGE $375F-$3760 DB_DATA 1
RANGE $3760-$3761 DB_DATA 1
RANGE $3761-$3762 DB_DATA 1
RANGE $3762-$3763 DB_DATA 1
RANGE $3763-$3764 DB_DATA 1
RANGE $3764-$3765 DB_DATA 1
RANGE $3765-$3766 DB_DATA 1
RANGE $3766-$3768 DW_DATA 1
RANGE $3768-$3769 DB_DATA 1
RANGE $3769-$376A DB_DATA 1
RANGE $376A-$376B DB_DATA 1
RANGE $376B-$376C DB_DATA 1
RANGE $376C-$376D DB_DATA 1
RANGE $376D-$376E DB_DATA 1
RANGE $376E-$376F DB_DATA 1
RANGE $376F-$3770 DB_DATA 1
RANGE $3770-$3771 DB_DATA 1
RANGE $3771-$3772 DB_DATA 1
RANGE $3772-$3773 DB_DATA 1
RANGE $3773-$3774 DB_DATA 1
RANGE $3774-$3775 DB_DATA 1
RANGE $3775-$3776 DB_DATA 1
RANGE $3776-$3777 DB_DATA 1
RANGE $3777-$3778 DB_DATA 1
RANGE $3778-$3779 DB_DATA 1
RANGE $3779-$377A DB_DATA 1
RANGE $377A-$377B DB_DATA 1
RANGE $377B-$377C DB_DATA 1
RANGE $377C-$377E DW_DATA 1
RANGE $377E-$377F DB_DATA 1
RANGE $377F-$3780 DB_DATA 1
RANGE $3780-$3781 DB_DATA 1
RANGE $3781-$3782 DB_DATA 1
RANGE $3782-$3783 DB_DATA 1
RANGE $3783-$3784 DB_DATA 1
RANGE $3784-$3785 DB_DATA 1
RANGE $3785-$3786 DB_DATA 1
RANGE $3786-$3787 DB_DATA 1
RANGE $3787-$3788 DB_DATA 1
RANGE $3788-$3789 DB_DATA 1
RANGE $3789-$378B DW_DATA 1
RANGE $378B-$378C DB_DATA 1
RANGE $378C-$378D DB_DATA 1
RANGE $378D-$378E DB_DATA 1
RANGE $378E-$378F DB_DATA 1
RANGE $378F-$3790 DB_DATA 1
RANGE $3790-$3791 DB_DATA 1
RANGE $3791-$3792 DB_DATA 1
RANGE $3792-$3793 DB_DATA 1
RANGE $3793-$3794 DB_DATA 1
RANGE $3794-$3795 DB_DATA 1
RANGE $3795-$3796 DB_DATA 1
RANGE $3796-$3797 DB_DATA 1
RANGE $3797-$3798 DB_DATA 1
RANGE $3798-$3799 DB_DATA 1
RANGE $3799-$379A DB_DATA 1
RANGE $379A-$379B DB_DATA 1
RANGE $379B-$379C DB_DATA 1
RANGE $379C-$379D DB_DATA 1
RANGE $379D-$379E DB_DATA 1
RANGE $379E-$379F DB_DATA 1
RANGE $379F-$37A0 DB_DATA 1
RANGE $37A0-$37A1 DB_DATA 1
RANGE $37A1-$37A2 DB_DATA 1
RANGE $37A2-$37A3 DB_DATA 1
RANGE $37A3-$37A4 DB_DATA 1
RANGE $37A4-$37A5 DB_DATA 1
RANGE $37A5-$37A6 DB_DATA 1
RANGE $37A6-$37A7 DB_DATA 1
RANGE $37A7-$37A8 DB_DATA 1
RANGE $37A8-$37A9 DB_DATA 1
RANGE $37A9-$37AA DB_DATA 1
RANGE $37AA-$37AB DB_DATA 1
RANGE $37AB-$37AC DB_DATA 1
RANGE $37AC-$37AD DB_DATA 1
RANGE $37AD-$37AE DB_DATA 1
RANGE $37AE-$37AF DB_DATA 1
RANGE $37AF-$37B0 DB_DATA 1
RANGE $37B0-$37B1 DB_DATA 1
RANGE $37B1-$37B2 DB_DATA 1
RANGE $37B2-$37B4 DW_DATA 1
RANGE $37B4-$37B5 DB_DATA 1
RANGE $37B5-$37B6 DB_DATA 1
RANGE $37B6-$37B7 DB_DATA 1
RANGE $37B7-$37B8 DB_DATA 1
RANGE $37B8-$37B9 DB_DATA 1
RANGE $37B9-$37BA DB_DATA 1
RANGE $37BA-$37BB DB_DATA 1
RANGE $37BB-$37BC DB_DATA 1
RANGE $37BC-$37BD DB_DATA 1
RANGE $37BD-$37BE DB_DATA 1
RANGE $37BE-$37BF DB_DATA 1
RANGE $37BF-$37C0 DB_DATA 1
RANGE $37C0-$37C1 DB_DATA 1
RANGE $37C1-$37C2 DB_DATA 1
RANGE $37C2-$37C3 DB_DATA 1
RANGE $37C3-$37C5 DW_DATA 1
RANGE $37C5-$37C6 DB_DATA 1
RANGE $37C6-$37C7 DB_DATA 1
RANGE $37C7-$37C8 DB_DATA 1
RANGE $37C8-$37C9 DB_DATA 1
RANGE $37C9-$37CB DW_DATA 1
RANGE $37CB-$37CC DB_DATA 1
RANGE $37CC-$37CE DW_DATA 1
RANGE $37CE-$37D0 DW_DATA 1
RANGE $37D0-$37D2 DW_DATA 1
RANGE $37D2-$37D3 DB_DATA 1
RANGE $37D3-$37D4 DB_DATA 1
RANGE $37D4-$37D6 DW_DATA 1
RANGE $37D6-$37D8 DW_DATA 1
RANGE $37D8-$37DA DW_DATA 1
RANGE $37DA-$37DB DB_DATA 1
RANGE $37DB-$37DC DB_DATA 1
RANGE $37DC-$37DE DW_DATA 1
RANGE $37DE-$37E0 DW_DATA 1
RANGE $37E0-$37E2 DW_DATA 1
RANGE $37E2-$37E3 DB_DATA 1
RANGE $37E3-$37E4 DB_DATA 1
RANGE $37E4-$37E6 DW_DATA 1
RANGE $37E6-$37E8 DW_DATA 1
RANGE $37E8-$37EA DW_DATA 1
RANGE $37EA-$37EB DB_DATA 1
RANGE $37EB-$37ED DW_DATA 1
RANGE $37ED-$37EF DW_DATA 1
RANGE $37EF-$37F1 DW_DATA 1
RANGE $37F1-$37F2 DB_DATA 1
RANGE $37F2-$37F4 DW_DATA 1
RANGE $37F4-$37F6 DW_DATA 1
RANGE $37F6-$37F8 DW_DATA 1
RANGE $37F8-$37F9 DB_DATA 1
RANGE $37F9-$37FB DW_DATA 1
RANGE $37FB-$37FD DW_DATA 1
RANGE $37FD-$37FF DW_DATA 1
RANGE $37FF-$3800 DB_DATA 1
RANGE $3800-$3802 DW_DATA 1
RANGE $3802-$3804 DW_DATA 1
RANGE $3804-$3806 DW_DATA 1
RANGE $3806-$3807 DB_DATA 1
RANGE $3807-$3809 DW_DATA 1
RANGE $3809-$380B DW_DATA 1
RANGE $380B-$380D DW_DATA 1
RANGE $380D-$380E DB_DATA 1
RANGE $380E-$3810 DW_DATA 1
RANGE $3810-$3812 DW_DATA 1
RANGE $3812-$3814 DW_DATA 1
RANGE $3814-$3815 DB_DATA 1
RANGE $3815-$3817 DW_DATA 1
RANGE $3817-$3819 DW_DATA 1
RANGE $3819-$381B DW_DATA 1
RANGE $381B-$381C DB_DATA 1
RANGE $381C-$381E DW_DATA 1
RANGE $381E-$3820 DW_DATA 1
RANGE $3820-$3822 DW_DATA 1
RANGE $3822-$3823 DB_DATA 1
RANGE $3823-$3825 DW_DATA 1
RANGE $3825-$3827 DW_DATA 1
RANGE $3827-$3829 DW_DATA 1
RANGE $3829-$382A DB_DATA 1
RANGE $382A-$382C DW_DATA 1
RANGE $382C-$382E DW_DATA 1
RANGE $382E-$3830 DW_DATA 1
RANGE $3830-$3831 DB_DATA 1
RANGE $3831-$3833 DW_DATA 1
RANGE $3833-$3835 DW_DATA 1
RANGE $3835-$3837 DW_DATA 1
RANGE $3837-$3838 DB_DATA 1
RANGE $3838-$383A DW_DATA 1
RANGE $383A-$383C DW_DATA 1
RANGE $383C-$383E DW_DATA 1
RANGE $383E-$383F DB_DATA 1
RANGE $383F-$3841 DW_DATA 1
RANGE $3841-$3843 DW_DATA 1
RANGE $3843-$3845 DW_DATA 1
RANGE $3845-$3846 DB_DATA 1
RANGE $3846-$3848 DW_DATA 1
RANGE $3848-$384A DW_DATA 1
RANGE $384A-$384C DW_DATA 1
RANGE $384C-$384D DB_DATA 1
RANGE $384D-$384F DW_DATA 1
RANGE $384F-$3851 DW_DATA 1
RANGE $3851-$3853 DW_DATA 1
RANGE $3853-$3854 DB_DATA 1
RANGE $3854-$3856 DW_DATA 1
RANGE $3856-$3858 DW_DATA 1
RANGE $3858-$385A DW_DATA 1
RANGE $385A-$385B DB_DATA 1
RANGE $385B-$385D DW_DATA 1
RANGE $385D-$385F DW_DATA 1
RANGE $385F-$3861 DW_DATA 1
RANGE $3861-$3862 DB_DATA 1
RANGE $3862-$3864 DW_DATA 1
RANGE $3864-$3866 DW_DATA 1
RANGE $3866-$3868 DW_DATA 1
RANGE $3868-$3869 DB_DATA 1
RANGE $3869-$386B DW_DATA 1
RANGE $386B-$386D DW_DATA 1
RANGE $386D-$386F DW_DATA 1
RANGE $386F-$3870 DB_DATA 1
RANGE $3870-$3872 DW_DATA 1
RANGE $3872-$3874 DW_DATA 1
RANGE $3874-$3876 DW_DATA 1
RANGE $3876-$3877 DB_DATA 1
RANGE $3877-$3879 DW_DATA 1
RANGE $3879-$387B DW_DATA 1
RANGE $387B-$387D DW_DATA 1
RANGE $387D-$387E DB_DATA 1
RANGE $387E-$3880 DW_DATA 1
RANGE $3880-$3882 DW_DATA 1
RANGE $3882-$3884 DW_DATA 1
RANGE $3884-$3885 DB_DATA 1
RANGE $3885-$3887 DW_DATA 1
RANGE $3887-$3889 DW_DATA 1
RANGE $3889-$388B DW_DATA 1
RANGE $388B-$388C DB_DATA 1
RANGE $388C-$388E DW_DATA 1
RANGE $388E-$3890 DW_DATA 1
RANGE $3890-$3892 DW_DATA 1
RANGE $3892-$3893 DB_DATA 1
RANGE $3893-$3895 DW_DATA 1
RANGE $3895-$3897 DW_DATA 1
RANGE $3897-$3899 DW_DATA 1
RANGE $3899-$389A DB_DATA 1
RANGE $389A-$389C DW_DATA 1
RANGE $389C-$389E DW_DATA 1
RANGE $389E-$38A0 DW_DATA 1
RANGE $38A0-$38A1 DB_DATA 1
RANGE $38A1-$38A3 DW_DATA 1
RANGE $38A3-$38A5 DW_DATA 1
RANGE $38A5-$38A7 DW_DATA 1
RANGE $38A7-$38A8 DB_DATA 1
RANGE $38A8-$38AA DW_DATA 1
RANGE $38AA-$38AC DW_DATA 1
RANGE $38AC-$38AE DW_DATA 1
RANGE $38AE-$38AF DB_DATA 1
RANGE $38AF-$38B1 DW_DATA 1
RANGE $38B1-$38B3 DW_DATA 1
RANGE $38B3-$38B5 DW_DATA 1
RANGE $38B5-$38B6 DB_DATA 1
RANGE $38B6-$38B8 DW_DATA 1
RANGE $38B8-$38BA DW_DATA 1
RANGE $38BA-$38BC DW_DATA 1
RANGE $38BC-$38BD DB_DATA 1
RANGE $38BD-$38BF DW_DATA 1
RANGE $38BF-$38C1 DW_DATA 1
RANGE $38C1-$38C3 DW_DATA 1
RANGE $38C3-$38C4 DB_DATA 1
RANGE $38C4-$38C6 DW_DATA 1
RANGE $38C6-$38C8 DW_DATA 1
RANGE $38C8-$38CA DW_DATA 1
RANGE $38CA-$38CB DB_DATA 1
RANGE $38CB-$38CD DW_DATA 1
RANGE $38CD-$38CF DW_DATA 1
RANGE $38CF-$38D1 DW_DATA 1
RANGE $38D1-$38D2 DB_DATA 1
RANGE $38D2-$38D4 DW_DATA 1
RANGE $38D4-$38D6 DW_DATA 1
RANGE $38D6-$38D8 DW_DATA 1
RANGE $38D8-$38D9 DB_DATA 1
RANGE $38D9-$38DB DW_DATA 1
RANGE $38DB-$38DD DW_DATA 1
RANGE $38DD-$38DF DW_DATA 1
RANGE $38DF-$38E0 DB_DATA 1
RANGE $38E0-$38E2 DW_DATA 1
RANGE $38E2-$38E4 DW_DATA 1
RANGE $38E4-$38E6 DW_DATA 1
RANGE $38E6-$38E7 DB_DATA 1
RANGE $38E7-$38E9 DW_DATA 1
RANGE $38E9-$38EB DW_DATA 1
RANGE $38EB-$38ED DW_DATA 1
RANGE $38ED-$38EE DB_DATA 1
RANGE $38EE-$38F0 DW_DATA 1
RANGE $38F0-$38F2 DW_DATA 1
RANGE $38F2-$38F4 DW_DATA 1
RANGE $38F4-$38F5 DB_DATA 1
RANGE $38F5-$38F7 DW_DATA 1
RANGE $38F7-$38F9 DW_DATA 1
RANGE $38F9-$38FB DW_DATA 1
RANGE $38FB-$38FC DB_DATA 1
RANGE $38FC-$38FE DW_DATA 1
RANGE $38FE-$3900 DW_DATA 1
RANGE $3900-$3902 DW_DATA 1
RANGE $3902-$3903 DB_DATA 1
RANGE $3903-$3905 DW_DATA 1
RANGE $3905-$3907 DW_DATA 1
RANGE $3907-$3909 DW_DATA 1
RANGE $3909-$390A DB_DATA 1
RANGE $390A-$390C DW_DATA 1
RANGE $390C-$390E DW_DATA 1
RANGE $390E-$3910 DW_DATA 1
RANGE $3910-$3911 DB_DATA 1
RANGE $3911-$3913 DW_DATA 1
RANGE $3913-$3915 DW_DATA 1
RANGE $3915-$3917 DW_DATA 1
RANGE $3917-$3918 DB_DATA 1
RANGE $3918-$391A DW_DATA 1
RANGE $391A-$391C DW_DATA 1
RANGE $391C-$391E DW_DATA 1
RANGE $391E-$391F DB_DATA 1
RANGE $391F-$3921 DW_DATA 1
RANGE $3921-$3923 DW_DATA 1
RANGE $3923-$3925 DW_DATA 1
RANGE $3925-$3926 DB_DATA 1
RANGE $3926-$3927 DB_DATA 1
RANGE $3927-$3929 DW_DATA 1
RANGE $3929-$392B DW_DATA 1
RANGE $392B-$392D DW_DATA 1
RANGE $392D-$392E DB_DATA 1
RANGE $392E-$392F DB_DATA 1
RANGE $392F-$3931 DW_DATA 1
RANGE $3931-$3933 DW_DATA 1
RANGE $3933-$3935 DW_DATA 1
RANGE $3935-$3936 DB_DATA 1
RANGE $3936-$3937 DB_DATA 1
RANGE $3937-$3939 DW_DATA 1
RANGE $3939-$393B DW_DATA 1
RANGE $393B-$393D DW_DATA 1
RANGE $393D-$393E DB_DATA 1
RANGE $393E-$393F DB_DATA 1
RANGE $393F-$3941 DW_DATA 1
RANGE $3941-$3943 DW_DATA 1
RANGE $3943-$3945 DW_DATA 1
RANGE $3945-$3946 DB_DATA 1
RANGE $3946-$3947 DB_DATA 1
RANGE $3947-$3949 DW_DATA 1
RANGE $3949-$394B DW_DATA 1
RANGE $394B-$394D DW_DATA 1
RANGE $394D-$394E DB_DATA 1
RANGE $394E-$394F DB_DATA 1
RANGE $394F-$3951 DW_DATA 1
RANGE $3951-$3953 DW_DATA 1
RANGE $3953-$3955 DW_DATA 1
RANGE $3955-$3956 DB_DATA 1
RANGE $3956-$3957 DB_DATA 1
RANGE $3957-$3959 DW_DATA 1
RANGE $3959-$395B DW_DATA 1
RANGE $395B-$395D DW_DATA 1
RANGE $395D-$395E DB_DATA 1
RANGE $395E-$395F DB_DATA 1
RANGE $395F-$3961 DW_DATA 1
RANGE $3961-$3963 DW_DATA 1
RANGE $3963-$3965 DW_DATA 1
RANGE $3965-$3966 DB_DATA 1
RANGE $3966-$3967 DB_DATA 1
RANGE $3967-$3969 DW_DATA 1
RANGE $3969-$396B DW_DATA 1
RANGE $396B-$396D DW_DATA 1
RANGE $396D-$396E DB_DATA 1
RANGE $396E-$396F DB_DATA 1
RANGE $396F-$3971 DW_DATA 1
RANGE $3971-$3973 DW_DATA 1
RANGE $3973-$3975 DW_DATA 1
RANGE $3975-$3976 DB_DATA 1
RANGE $3976-$3977 DB_DATA 1
RANGE $3977-$3979 DW_DATA 1
RANGE $3979-$397B DW_DATA 1
RANGE $397B-$397D DW_DATA 1
RANGE $397D-$397E DB_DATA 1
RANGE $397E-$397F DB_DATA 1
RANGE $397F-$3981 DW_DATA 1
RANGE $3981-$3983 DW_DATA 1
RANGE $3983-$3985 DW_DATA 1
RANGE $3985-$3986 DB_DATA 1
RANGE $3986-$3987 DB_DATA 1
RANGE $3987-$3989 DW_DATA 1
RANGE $3989-$398B DW_DATA 1
RANGE $398B-$398D DW_DATA 1
RANGE $398D-$398E DB_DATA 1
RANGE $398E-$398F DB_DATA 1
RANGE $398F-$3991 DW_DATA 1
RANGE $3991-$3993 DW_DATA 1
RANGE $3993-$3995 DW_DATA 1
RANGE $3995-$3996 DB_DATA 1
RANGE $3996-$3997 DB_DATA 1
RANGE $3997-$3999 DW_DATA 1
RANGE $3999-$399B DW_DATA 1
RANGE $399B-$399D DW_DATA 1
RANGE $399D-$399E DB_DATA 1
RANGE $399E-$399F DB_DATA 1
RANGE $399F-$39A1 DW_DATA 1
RANGE $39A1-$39A3 DW_DATA 1
RANGE $39A3-$39A5 DW_DATA 1
RANGE $39A5-$39A6 DB_DATA 1
RANGE $39A6-$39A7 DB_DATA 1
RANGE $39A7-$39A9 DW_DATA 1
RANGE $39A9-$39AB DW_DATA 1
RANGE $39AB-$39AD DW_DATA 1
RANGE $39AD-$39AE DB_DATA 1
RANGE $39AE-$39AF DB_DATA 1
RANGE $39AF-$39B1 DW_DATA 1
RANGE $39B1-$39B3 DW_DATA 1
RANGE $39B3-$39B5 DW_DATA 1
RANGE $39B5-$39B6 DB_DATA 1
RANGE $39B6-$39B8 DW_DATA 1
RANGE $39B8-$39BA DW_DATA 1
RANGE $39BA-$39BC DW_DATA 1
RANGE $39BC-$39BD DB_DATA 1
RANGE $39BD-$39BF DW_DATA 1
RANGE $39BF-$39C1 DW_DATA 1
RANGE $39C1-$39C3 DW_DATA 1
RANGE $39C3-$39C4 DB_DATA 1
RANGE $39C4-$39C6 DW_DATA 1
RANGE $39C6-$39C8 DW_DATA 1
RANGE $39C8-$39CA DW_DATA 1
RANGE $39CA-$39CB DB_DATA 1
RANGE $39CB-$39CD DW_DATA 1
RANGE $39CD-$39CF DW_DATA 1
RANGE $39CF-$39D1 DW_DATA 1
RANGE $39D1-$39D2 DB_DATA 1
RANGE $39D2-$39D4 DW_DATA 1
RANGE $39D4-$39D6 DW_DATA 1
RANGE $39D6-$39D8 DW_DATA 1
RANGE $39D8-$39D9 DB_DATA 1
RANGE $39D9-$39DB DW_DATA 1
RANGE $39DB-$39DD DW_DATA 1
RANGE $39DD-$39DF DW_DATA 1
RANGE $39DF-$39E0 DB_DATA 1
RANGE $39E0-$39E2 DW_DATA 1
RANGE $39E2-$39E4 DW_DATA 1
RANGE $39E4-$39E6 DW_DATA 1
RANGE $39E6-$39E7 DB_DATA 1
RANGE $39E7-$39E9 DW_DATA 1
RANGE $39E9-$39EB DW_DATA 1
RANGE $39EB-$39ED DW_DATA 1
RANGE $39ED-$39EE DB_DATA 1
RANGE $39EE-$39F0 DW_DATA 1
RANGE $39F0-$39F2 DW_DATA 1
RANGE $39F2-$39F4 DW_DATA 1
RANGE $39F4-$39F5 DB_DATA 1
RANGE $39F5-$39F7 DW_DATA 1
RANGE $39F7-$39F9 DW_DATA 1
RANGE $39F9-$39FB DW_DATA 1
RANGE $39FB-$39FC DB_DATA 1
RANGE $39FC-$39FE DW_DATA 1
RANGE $39FE-$3A00 DW_DATA 1
RANGE $3A00-$3A02 DW_DATA 1
RANGE $3A02-$3A03 DB_DATA 1
RANGE $3A03-$3A05 DW_DATA 1
RANGE $3A05-$3A07 DW_DATA 1
RANGE $3A07-$3A09 DW_DATA 1
RANGE $3A09-$3A0A DB_DATA 1
RANGE $3A0A-$3A0C DW_DATA 1
RANGE $3A0C-$3A0E DW_DATA 1
RANGE $3A0E-$3A10 DW_DATA 1
RANGE $3A10-$3A11 DB_DATA 1
RANGE $3A11-$3A13 DW_DATA 1
RANGE $3A13-$3A15 DW_DATA 1
RANGE $3A15-$3A17 DW_DATA 1
RANGE $3A17-$3A18 DB_DATA 1
RANGE $3A18-$3A1A DW_DATA 1
RANGE $3A1A-$3A1C DW_DATA 1
RANGE $3A1C-$3A1E DW_DATA 1
RANGE $3A1E-$3A1F DB_DATA 1
RANGE $3A1F-$3A21 DW_DATA 1
RANGE $3A21-$3A23 DW_DATA 1
RANGE $3A23-$3A25 DW_DATA 1
RANGE $3A25-$3A26 DB_DATA 1
RANGE $3A26-$3A27 DB_DATA 1
RANGE $3A27-$3A29 DW_DATA 1
RANGE $3A29-$3A2B DW_DATA 1
RANGE $3A2B-$3A2D DW_DATA 1
RANGE $3A2D-$3A2E DB_DATA 1
RANGE $3A2E-$3A2F DB_DATA 1
RANGE $3A2F-$3A31 DW_DATA 1
RANGE $3A31-$3A33 DW_DATA 1
RANGE $3A33-$3A35 DW_DATA 1
RANGE $3A35-$3A36 DB_DATA 1
RANGE $3A36-$3A38 DW_DATA 1
RANGE $3A38-$3A3A DW_DATA 1
RANGE $3A3A-$3A3C DW_DATA 1
RANGE $3A3C-$3A3D DB_DATA 1
RANGE $3A3D-$3A3F DW_DATA 1
RANGE $3A3F-$3A41 DW_DATA 1
RANGE $3A41-$3A43 DW_DATA 1
RANGE $3A43-$3A44 DB_DATA 1
RANGE $3A44-$3A46 DW_DATA 1
RANGE $3A46-$3A48 DW_DATA 1
RANGE $3A48-$3A4A DW_DATA 1
RANGE $3A4A-$3A4B DB_DATA 1
RANGE $3A4B-$3A4D DW_DATA 1
RANGE $3A4D-$3A4F DW_DATA 1
RANGE $3A4F-$3A51 DW_DATA 1
RANGE $3A51-$3A52 DB_DATA 1
RANGE $3A52-$3A54 DW_DATA 1
RANGE $3A54-$3A56 DW_DATA 1
RANGE $3A56-$3A58 DW_DATA 1
RANGE $3A58-$3A59 DB_DATA 1
RANGE $3A59-$3A5B DW_DATA 1
RANGE $3A5B-$3A5D DW_DATA 1
RANGE $3A5D-$3A5F DW_DATA 1
RANGE $3A5F-$3A60 DB_DATA 1
RANGE $3A60-$3A62 DW_DATA 1
RANGE $3A62-$3A64 DW_DATA 1
RANGE $3A64-$3A66 DW_DATA 1
RANGE $3A66-$3A67 DB_DATA 1
RANGE $3A67-$3A69 DW_DATA 1
RANGE $3A69-$3A6B DW_DATA 1
RANGE $3A6B-$3A6D DW_DATA 1
RANGE $3A6D-$3A6E DB_DATA 1
RANGE $3A6E-$3A70 DW_DATA 1
RANGE $3A70-$3A72 DW_DATA 1
RANGE $3A72-$3A74 DW_DATA 1
RANGE $3A74-$3A75 DB_DATA 1
RANGE $3A75-$3A77 DW_DATA 1
RANGE $3A77-$3A79 DW_DATA 1
RANGE $3A79-$3A7B DW_DATA 1
RANGE $3A7B-$3A7C DB_DATA 1
RANGE $3A7C-$3A7E DW_DATA 1
RANGE $3A7E-$3A80 DW_DATA 1
RANGE $3A80-$3A82 DW_DATA 1
RANGE $3A82-$3A83 DB_DATA 1
RANGE $3A83-$3A85 DW_DATA 1
RANGE $3A85-$3A87 DW_DATA 1
RANGE $3A87-$3A89 DW_DATA 1
RANGE $3A89-$3A8A DB_DATA 1
RANGE $3A8A-$3A8C DW_DATA 1
RANGE $3A8C-$3A8E DW_DATA 1
RANGE $3A8E-$3A90 DW_DATA 1
RANGE $3A90-$3A91 DB_DATA 1
RANGE $3A91-$3A93 DW_DATA 1
RANGE $3A93-$3A95 DW_DATA 1
RANGE $3A95-$3A97 DW_DATA 1
RANGE $3A97-$3A98 DB_DATA 1
RANGE $3A98-$3A99 DB_DATA 1
RANGE $3A99-$3A9B DW_DATA 1
RANGE $3A9B-$3A9D DW_DATA 1
RANGE $3A9D-$3A9F DW_DATA 1
RANGE $3A9F-$3AA0 DB_DATA 1
RANGE $3AA0-$3AA2 DW_DATA 1
RANGE $3AA2-$3AA4 DW_DATA 1
RANGE $3AA4-$3AA6 DW_DATA 1
RANGE $3AA6-$3AA7 DB_DATA 1
RANGE $3AA7-$3AA8 DB_DATA 1
RANGE $3AA8-$3AAA DW_DATA 1
RANGE $3AAA-$3AAC DW_DATA 1
RANGE $3AAC-$3AAE DW_DATA 1
RANGE $3AAE-$3AAF DB_DATA 1
RANGE $3AAF-$3AB0 DB_DATA 1
RANGE $3AB0-$3AB2 DW_DATA 1
RANGE $3AB2-$3AB4 DW_DATA 1
RANGE $3AB4-$3AB6 DW_DATA 1
RANGE $3AB6-$3AB7 DB_DATA 1
RANGE $3AB7-$3AB9 DW_DATA 1
RANGE $3AB9-$3ABB DW_DATA 1
RANGE $3ABB-$3ABD DW_DATA 1
RANGE $3ABD-$3ABE DB_DATA 1
RANGE $3ABE-$3ABF DB_DATA 1
RANGE $3ABF-$3AC1 DW_DATA 1
RANGE $3AC1-$3AC3 DW_DATA 1
RANGE $3AC3-$3AC5 DW_DATA 1
RANGE $3AC5-$3AC6 DB_DATA 1
RANGE $3AC6-$3AC7 DB_DATA 1
RANGE $3AC7-$3AC9 DW_DATA 1
RANGE $3AC9-$3ACB DW_DATA 1
RANGE $3ACB-$3ACD DW_DATA 1
RANGE $3ACD-$3ACE DB_DATA 1
RANGE $3ACE-$3AD0 DW_DATA 1
RANGE $3AD0-$3AD2 DW_DATA 1
RANGE $3AD2-$3AD4 DW_DATA 1
RANGE $3AD4-$3AD5 DB_DATA 1
RANGE $3AD5-$3AD6 DB_DATA 1
RANGE $3AD6-$3AD8 DW_DATA 1
RANGE $3AD8-$3ADA DW_DATA 1
RANGE $3ADA-$3ADC DW_DATA 1
RANGE $3ADC-$3ADD DB_DATA 1
RANGE $3ADD-$3ADF DW_DATA 1
RANGE $3ADF-$3AE1 DW_DATA 1
RANGE $3AE1-$3AE3 DW_DATA 1
RANGE $3AE3-$3AE4 DB_DATA 1
RANGE $3AE4-$3AE6 DW_DATA 1
RANGE $3AE6-$3AE8 DW_DATA 1
RANGE $3AE8-$3AEA DW_DATA 1
RANGE $3AEA-$3AEB DB_DATA 1
RANGE $3AEB-$3AEC DB_DATA 1
RANGE $3AEC-$3AEE DW_DATA 1
RANGE $3AEE-$3AF0 DW_DATA 1
RANGE $3AF0-$3AF2 DW_DATA 1
RANGE $3AF2-$3AF3 DB_DATA 1
RANGE $3AF3-$3AF5 DW_DATA 1
RANGE $3AF5-$3AF7 DW_DATA 1
RANGE $3AF7-$3AF9 DW_DATA 1
RANGE $3AF9-$3AFA DB_DATA 1
RANGE $3AFA-$3AFB DB_DATA 1
RANGE $3AFB-$3AFD DW_DATA 1
RANGE $3AFD-$3AFF DW_DATA 1
RANGE $3AFF-$3B01 DW_DATA 1
RANGE $3B01-$3B02 DB_DATA 1
RANGE $3B02-$3B03 DB_DATA 1
RANGE $3B03-$3B05 DW_DATA 1
RANGE $3B05-$3B07 DW_DATA 1
RANGE $3B07-$3B09 DW_DATA 1
RANGE $3B09-$3B0A DB_DATA 1
RANGE $3B0A-$3B0C DW_DATA 1
RANGE $3B0C-$3B0E DW_DATA 1
RANGE $3B0E-$3B10 DW_DATA 1
RANGE $3B10-$3B11 DB_DATA 1
RANGE $3B11-$3B12 DB_DATA 1
RANGE $3B12-$3B14 DW_DATA 1
RANGE $3B14-$3B16 DW_DATA 1
RANGE $3B16-$3B18 DW_DATA 1
RANGE $3B18-$3B19 DB_DATA 1
RANGE $3B19-$3B1A DB_DATA 1
RANGE $3B1A-$3B1C DW_DATA 1
RANGE $3B1C-$3B1E DW_DATA 1
RANGE $3B1E-$3B20 DW_DATA 1
RANGE $3B20-$3B21 DB_DATA 1
RANGE $3B21-$3B23 DW_DATA 1
RANGE $3B23-$3B25 DW_DATA 1
RANGE $3B25-$3B27 DW_DATA 1
RANGE $3B27-$3B28 DB_DATA 1
RANGE $3B28-$3B29 DB_DATA 1
RANGE $3B29-$3B2B DW_DATA 1
RANGE $3B2B-$3B2D DW_DATA 1
RANGE $3B2D-$3B2F DW_DATA 1
RANGE $3B2F-$3B30 DB_DATA 1
RANGE $3B30-$3B32 DW_DATA 1
RANGE $3B32-$3B34 DW_DATA 1
RANGE $3B34-$3B36 DW_DATA 1
RANGE $3B36-$3B37 DB_DATA 1
RANGE $3B37-$3B39 DW_DATA 1
RANGE $3B39-$3B3B DW_DATA 1
RANGE $3B3B-$3B3D DW_DATA 1
RANGE $3B3D-$3B3E DB_DATA 1
RANGE $3B3E-$3B3F DB_DATA 1
RANGE $3B3F-$3B41 DW_DATA 1
RANGE $3B41-$3B43 DW_DATA 1
RANGE $3B43-$3B45 DW_DATA 1
RANGE $3B45-$3B46 DB_DATA 1
RANGE $3B46-$3B48 DW_DATA 1
RANGE $3B48-$3B4A DW_DATA 1
RANGE $3B4A-$3B4C DW_DATA 1
RANGE $3B4C-$3B4D DB_DATA 1
RANGE $3B4D-$3B4F DW_DATA 1
RANGE $3B4F-$3B51 DW_DATA 1
RANGE $3B51-$3B53 DW_DATA 1
RANGE $3B53-$3B54 DB_DATA 1
RANGE $3B54-$3B55 DB_DATA 1
RANGE $3B55-$3B57 DW_DATA 1
RANGE $3B57-$3B59 DW_DATA 1
RANGE $3B59-$3B5B DW_DATA 1
RANGE $3B5B-$3B5C DB_DATA 1
RANGE $3B5C-$3B5D DB_DATA 1
RANGE $3B5D-$3B5F DW_DATA 1
RANGE $3B5F-$3B61 DW_DATA 1
RANGE $3B61-$3B63 DW_DATA 1
RANGE $3B63-$3B64 DB_DATA 1
RANGE $3B64-$3B66 DW_DATA 1
RANGE $3B66-$3B68 DW_DATA 1
RANGE $3B68-$3B6A DW_DATA 1
RANGE $3B6A-$3B6B DB_DATA 1
RANGE $3B6B-$3B6D DW_DATA 1
RANGE $3B6D-$3B6F DW_DATA 1
RANGE $3B6F-$3B71 DW_DATA 1
RANGE $3B71-$3B72 DB_DATA 1
RANGE $3B72-$3B74 DW_DATA 1
RANGE $3B74-$3B76 DW_DATA 1
RANGE $3B76-$3B78 DW_DATA 1
RANGE $3B78-$3B79 DB_DATA 1
RANGE $3B79-$3B7B DW_DATA 1
RANGE $3B7B-$3B7D DW_DATA 1
RANGE $3B7D-$3B7F DW_DATA 1
RANGE $3B7F-$3B80 DB_DATA 1
RANGE $3B80-$3B82 DW_DATA 1
RANGE $3B82-$3B84 DW_DATA 1
RANGE $3B84-$3B86 DW_DATA 1
RANGE $3B86-$3B87 DB_DATA 1
RANGE $3B87-$3B89 DW_DATA 1
RANGE $3B89-$3B8B DW_DATA 1
RANGE $3B8B-$3B8D DW_DATA 1
RANGE $3B8D-$3B8E DB_DATA 1
RANGE $3B8E-$3B90 DW_DATA 1
RANGE $3B90-$3B92 DW_DATA 1
RANGE $3B92-$3B94 DW_DATA 1
RANGE $3B94-$3B95 DB_DATA 1
RANGE $3B95-$3B97 DW_DATA 1
RANGE $3B97-$3B99 DW_DATA 1
RANGE $3B99-$3B9B DW_DATA 1
RANGE $3B9B-$3B9C DB_DATA 1
RANGE $3B9C-$3B9D DB_DATA 1
RANGE $3B9D-$3B9F DW_DATA 1
RANGE $3B9F-$3BA1 DW_DATA 1
RANGE $3BA1-$3BA3 DW_DATA 1
RANGE $3BA3-$3BA4 DB_DATA 1
RANGE $3BA4-$3BA6 DW_DATA 1
RANGE $3BA6-$3BA8 DW_DATA 1
RANGE $3BA8-$3BAA DW_DATA 1
RANGE $3BAA-$3BAB DB_DATA 1
RANGE $3BAB-$3BAD DW_DATA 1
RANGE $3BAD-$3BAF DW_DATA 1
RANGE $3BAF-$3BB1 DW_DATA 1
RANGE $3BB1-$3BB2 DB_DATA 1
RANGE $3BB2-$3BB4 DW_DATA 1
RANGE $3BB4-$3BB6 DW_DATA 1
RANGE $3BB6-$3BB8 DW_DATA 1
RANGE $3BB8-$3BB9 DB_DATA 1
RANGE $3BB9-$3BBB DW_DATA 1
RANGE $3BBB-$3BBD DW_DATA 1
RANGE $3BBD-$3BBF DW_DATA 1
RANGE $3BBF-$3BC0 DB_DATA 1
RANGE $3BC0-$3BC2 DW_DATA 1
RANGE $3BC2-$3BC4 DW_DATA 1
RANGE $3BC4-$3BC6 DW_DATA 1
RANGE $3BC6-$3BC7 DB_DATA 1
RANGE $3BC7-$3BC8 DB_DATA 1
RANGE $3BC8-$3BCA DW_DATA 1
RANGE $3BCA-$3BCC DW_DATA 1
RANGE $3BCC-$3BCE DW_DATA 1
RANGE $3BCE-$3BCF DB_DATA 1
RANGE $3BCF-$3BD1 DW_DATA 1
RANGE $3BD1-$3BD3 DW_DATA 1
RANGE $3BD3-$3BD5 DW_DATA 1
RANGE $3BD5-$3BD6 DB_DATA 1
RANGE $3BD6-$3BD8 DW_DATA 1
RANGE $3BD8-$3BDA DW_DATA 1
RANGE $3BDA-$3BDC DW_DATA 1
RANGE $3BDC-$3BDD DB_DATA 1
RANGE $3BDD-$3BDF DW_DATA 1
RANGE $3BDF-$3BE1 DW_DATA 1
RANGE $3BE1-$3BE3 DW_DATA 1
RANGE $3BE3-$3BE4 DB_DATA 1
RANGE $3BE4-$3BE6 DW_DATA 1
RANGE $3BE6-$3BE8 DW_DATA 1
RANGE $3BE8-$3BEA DW_DATA 1
RANGE $3BEA-$3BEB DB_DATA 1
RANGE $3BEB-$3BED DW_DATA 1
RANGE $3BED-$3BEF DW_DATA 1
RANGE $3BEF-$3BF1 DW_DATA 1
RANGE $3BF1-$3BF2 DB_DATA 1
RANGE $3BF2-$3BF4 DW_DATA 1
RANGE $3BF4-$3BF6 DW_DATA 1
RANGE $3BF6-$3BF8 DW_DATA 1
RANGE $3BF8-$3BF9 DB_DATA 1
RANGE $3BF9-$3BFB DW_DATA 1
RANGE $3BFB-$3BFD DW_DATA 1
RANGE $3BFD-$3BFF DW_DATA 1
RANGE $3BFF-$3C00 DB_DATA 1
RANGE $3C00-$3C02 DW_DATA 1
RANGE $3C02-$3C04 DW_DATA 1
RANGE $3C04-$3C06 DW_DATA 1
RANGE $3C06-$3C07 DB_DATA 1
RANGE $3C07-$3C09 DW_DATA 1
RANGE $3C09-$3C0B DW_DATA 1
RANGE $3C0B-$3C0D DW_DATA 1
RANGE $3C0D-$3C0E DB_DATA 1
RANGE $3C0E-$3C10 DW_DATA 1
RANGE $3C10-$3C12 DW_DATA 1
RANGE $3C12-$3C14 DW_DATA 1
RANGE $3C14-$3C15 DB_DATA 1
RANGE $3C15-$3C17 DW_DATA 1
RANGE $3C17-$3C19 DW_DATA 1
RANGE $3C19-$3C1B DW_DATA 1
RANGE $3C1B-$3C1C DB_DATA 1
RANGE $3C1C-$3C1D DB_DATA 1
RANGE $3C1D-$3C1F DW_DATA 1
RANGE $3C1F-$3C21 DW_DATA 1
RANGE $3C21-$3C23 DW_DATA 1
RANGE $3C23-$3C24 DB_DATA 1
RANGE $3C24-$3C26 DW_DATA 1
RANGE $3C26-$3C28 DW_DATA 1
RANGE $3C28-$3C2A DW_DATA 1
RANGE $3C2A-$3C2B DB_DATA 1
RANGE $3C2B-$3C2D DW_DATA 1
RANGE $3C2D-$3C2F DW_DATA 1
RANGE $3C2F-$3C31 DW_DATA 1
RANGE $3C31-$3C32 DB_DATA 1
RANGE $3C32-$3C34 DW_DATA 1
RANGE $3C34-$3C36 DW_DATA 1
RANGE $3C36-$3C38 DW_DATA 1
RANGE $3C38-$3C39 DB_DATA 1
RANGE $3C39-$3C3B DW_DATA 1
RANGE $3C3B-$3C3D DW_DATA 1
RANGE $3C3D-$3C3F DW_DATA 1
RANGE $3C3F-$3C40 DB_DATA 1
RANGE $3C40-$3C42 DW_DATA 1
RANGE $3C42-$3C44 DW_DATA 1
RANGE $3C44-$3C46 DW_DATA 1
RANGE $3C46-$3C47 DB_DATA 1
RANGE $3C47-$3C49 DW_DATA 1
RANGE $3C49-$3C4B DW_DATA 1
RANGE $3C4B-$3C4D DW_DATA 1
RANGE $3C4D-$3C4E DB_DATA 1
RANGE $3C4E-$3C50 DW_DATA 1
RANGE $3C50-$3C52 DW_DATA 1
RANGE $3C52-$3C54 DW_DATA 1
RANGE $3C54-$3C55 DB_DATA 1
RANGE $3C55-$3C57 DW_DATA 1
RANGE $3C57-$3C59 DW_DATA 1
RANGE $3C59-$3C5B DW_DATA 1
RANGE $3C5B-$3C5C DB_DATA 1
RANGE $3C5C-$3C5E DW_DATA 1
RANGE $3C5E-$3C60 DW_DATA 1
RANGE $3C60-$3C62 DW_DATA 1
RANGE $3C62-$3C63 DB_DATA 1
RANGE $3C63-$3C65 DW_DATA 1
RANGE $3C65-$3C67 DW_DATA 1
RANGE $3C67-$3C69 DW_DATA 1
RANGE $3C69-$3C6A DB_DATA 1
RANGE $3C6A-$3C6C DW_DATA 1
RANGE $3C6C-$3C6E DW_DATA 1
RANGE $3C6E-$3C70 DW_DATA 1
RANGE $3C70-$3C71 DB_DATA 1
RANGE $3C71-$3C73 DW_DATA 1
RANGE $3C73-$3C75 DW_DATA 1
RANGE $3C75-$3C77 DW_DATA 1
RANGE $3C77-$3C78 DB_DATA 1
RANGE $3C78-$3C7A DW_DATA 1
RANGE $3C7A-$3C7C DW_DATA 1
RANGE $3C7C-$3C7E DW_DATA 1
RANGE $3C7E-$3C7F DB_DATA 1
RANGE $3C7F-$3C81 DW_DATA 1
RANGE $3C81-$3C83 DW_DATA 1
RANGE $3C83-$3C85 DW_DATA 1
RANGE $3C85-$3C86 DB_DATA 1
RANGE $3C86-$3C88 DW_DATA 1
RANGE $3C88-$3C8A DW_DATA 1
RANGE $3C8A-$3C8C DW_DATA 1
RANGE $3C8C-$3C8D DB_DATA 1
RANGE $3C8D-$3C8F DW_DATA 1
RANGE $3C8F-$3C90 DB_DATA 1
RANGE $3C90-$3C91 DB_DATA 1
RANGE $3C91-$3C92 DB_DATA 1
RANGE $3C92-$3C93 DB_DATA 1
RANGE $3C93-$3C95 DW_DATA 1
RANGE $3C95-$3C96 DB_DATA 1
RANGE $3C96-$3C97 DB_DATA 1
RANGE $3C97-$3C98 DB_DATA 1
RANGE $3C98-$3C99 DB_DATA 1
RANGE $3C99-$3C9A DB_DATA 1
RANGE $3C9A-$3C9B DB_DATA 1
RANGE $3C9B-$3C9C DB_DATA 1
RANGE $3C9C-$3C9D DB_DATA 1
RANGE $3C9D-$3C9E DB_DATA 1
RANGE $3C9E-$3C9F DB_DATA 1
RANGE $3C9F-$3CA0 DB_DATA 1
RANGE $3CA0-$3CA1 DB_DATA 1
RANGE $3CA1-$3CA2 DB_DATA 1
RANGE $3CA2-$3CA3 DB_DATA 1
RANGE $3CA3-$3CA4 DB_DATA 1
RANGE $3CA4-$3CA5 DB_DATA 1
RANGE $3CA5-$3CA6 DB_DATA 1
RANGE $3CA6-$3CA7 DB_DATA 1
RANGE $3CA7-$3CA8 DB_DATA 1
RANGE $3CA8-$3CA9 DB_DATA 1
RANGE $3CA9-$3CAA DB_DATA 1
RANGE $3CAA-$3CAB DB_DATA 1
RANGE $3CAB-$3CAC DB_DATA 1
RANGE $3CAC-$3CAD DB_DATA 1
RANGE $3CAD-$3CAE DB_DATA 1
RANGE $3CAE-$3CAF DB_DATA 1
RANGE $3CAF-$3CB0 DB_DATA 1
RANGE $3CB0-$3CB1 DB_DATA 1
RANGE $3CB1-$3CB2 DB_DATA 1
RANGE $3CB2-$3CB3 DB_DATA 1
RANGE $3CB3-$3CB4 DB_DATA 1
RANGE $3CB4-$3CB5 DB_DATA 1
RANGE $3CB5-$3CB6 DB_DATA 1
RANGE $3CB6-$3CB8 DW_DATA 1
RANGE $3CB8-$3CB9 DB_DATA 1
RANGE $3CB9-$3CBA DB_DATA 1
RANGE $3CBA-$3CBB DB_DATA 1
RANGE $3CBB-$3CBD DW_DATA 1
RANGE $3CBD-$3CBE DB_DATA 1
RANGE $3CBE-$3CBF DB_DATA 1
RANGE $3CBF-$3CC0 DB_DATA 1
RANGE $3CC0-$3CC1 DB_DATA 1
RANGE $3CC1-$3CC2 DB_DATA 1
RANGE $3CC2-$3CC3 DB_DATA 1
RANGE $3CC3-$3CC4 DB_DATA 1
RANGE $3CC4-$3CC5 DB_DATA 1
RANGE $3CC5-$3CC6 DB_DATA 1
RANGE $3CC6-$3CC7 DB_DATA 1
RANGE $3CC7-$3CC8 DB_DATA 1
RANGE $3CC8-$3CC9 DB_DATA 1
RANGE $3CC9-$3CCA DB_DATA 1
RANGE $3CCA-$3CCB DB_DATA 1
RANGE $3CCB-$3CCC DB_DATA 1
RANGE $3CCC-$3CCD DB_DATA 1
RANGE $3CCD-$3CCE DB_DATA 1
RANGE $3CCE-$3CCF DB_DATA 1
RANGE $3CCF-$3CD0 DB_DATA 1
RANGE $3CD0-$3CD1 DB_DATA 1
RANGE $3CD1-$3CD2 DB_DATA 1
RANGE $3CD2-$3CD3 DB_DATA 1
RANGE $3CD3-$3CD4 DB_DATA 1
RANGE $3CD4-$3CD5 DB_DATA 1
RANGE $3CD5-$3CD6 DB_DATA 1
RANGE $3CD6-$3CD7 DB_DATA 1
RANGE $3CD7-$3CD8 DB_DATA 1
RANGE $3CD8-$3CD9 DB_DATA 1
RANGE $3CD9-$3CDA DB_DATA 1
RANGE $3CDA-$3CDB DB_DATA 1
RANGE $3CDB-$3CDC DB_DATA 1
RANGE $3CDC-$3CDD DB_DATA 1
RANGE $3CDD-$3CDE DB_DATA 1
RANGE $3CDE-$3CDF DB_DATA 1
RANGE $3CDF-$3CE0 DB_DATA 1
RANGE $3CE0-$3CE1 DB_DATA 1
RANGE $3CE1-$3CE2 DB_DATA 1
RANGE $3CE2-$3CE3 DB_DATA 1
RANGE $3CE3-$3CE4 DB_DATA 1
RANGE $3CE4-$3CE5 DB_DATA 1
RANGE $3CE5-$3CE6 DB_DATA 1
RANGE $3CE6-$3CE7 DB_DATA 1
RANGE $3CE7-$3CE8 DB_DATA 1
RANGE $3CE8-$3CE9 DB_DATA 1
RANGE $3CE9-$3CEA DB_DATA 1
RANGE $3CEA-$3CEB DB_DATA 1
RANGE $3CEB-$3CEC DB_DATA 1
RANGE $3CEC-$3CED DB_DATA 1
RANGE $3CED-$3CEE DB_DATA 1
RANGE $3CEE-$3CEF DB_DATA 1
RANGE $3CEF-$3CF0 DB_DATA 1
RANGE $3CF0-$3CF1 DB_DATA 1
RANGE $3CF1-$3CF2 DB_DATA 1
RANGE $3CF2-$3CF3 DB_DATA 1
RANGE $3CF3-$3CF4 DB_DATA 1
RANGE $3CF4-$3CF5 DB_DATA 1
RANGE $3CF5-$3CF6 DB_DATA 1
RANGE $3CF6-$3CF7 DB_DATA 1
RANGE $3CF7-$3CF8 DB_DATA 1
RANGE $3CF8-$3CF9 DB_DATA 1
RANGE $3CF9-$3CFA DB_DATA 1
RANGE $3CFA-$3CFB DB_DATA 1
RANGE $3CFB-$3CFD DW_DATA 1
RANGE $3CFD-$3CFE DB_DATA 1
RANGE $3CFE-$3CFF DB_DATA 1
RANGE $3CFF-$3D00 DB_DATA 1
RANGE $3D00-$3D01 DB_DATA 1
RANGE $3D01-$3D02 DB_DATA 1
RANGE $3D02-$3D03 DB_DATA 1
RANGE $3D03-$3D04 DB_DATA 1
RANGE $3D04-$3D05 DB_DATA 1
RANGE $3D05-$3D06 DB_DATA 1
RANGE $3D06-$3D07 DB_DATA 1
RANGE $3D07-$3D08 DB_DATA 1
RANGE $3D08-$3D09 DB_DATA 1
RANGE $3D09-$3D0A DB_DATA 1
RANGE $3D0A-$3D0B DB_DATA 1
RANGE $3D0B-$3D0C DB_DATA 1
RANGE $3D0C-$3D0D DB_DATA 1
RANGE $3D0D-$3D0E DB_DATA 1
RANGE $3D0E-$3D0F DB_DATA 1
RANGE $3D0F-$3D10 DB_DATA 1
RANGE $3D10-$3D11 DB_DATA 1
RANGE $3D11-$3D12 DB_DATA 1
RANGE $3D12-$3D13 DB_DATA 1
RANGE $3D13-$3D14 DB_DATA 1
RANGE $3D14-$3D15 DB_DATA 1
RANGE $3D15-$3D16 DB_DATA 1
RANGE $3D16-$3D17 DB_DATA 1
RANGE $3D17-$3D18 DB_DATA 1
RANGE $3D18-$3D19 DB_DATA 1
RANGE $3D19-$3D1A DB_DATA 1
RANGE $3D1A-$3D1B DB_DATA 1
RANGE $3D1B-$3D1C DB_DATA 1
RANGE $3D1C-$3D1D DB_DATA 1
RANGE $3D1D-$3D1E DB_DATA 1
RANGE $3D1E-$3D20 DW_DATA 1
RANGE $3D20-$3D21 DB_DATA 1
RANGE $3D21-$3D22 DB_DATA 1
RANGE $3D22-$3D23 DB_DATA 1
RANGE $3D23-$3D24 DB_DATA 1
RANGE $3D24-$3D25 DB_DATA 1
RANGE $3D25-$3D26 DB_DATA 1
RANGE $3D26-$3D27 DB_DATA 1
RANGE $3D27-$3D28 DB_DATA 1
RANGE $3D28-$3D29 DB_DATA 1
RANGE $3D29-$3D2A DB_DATA 1
RANGE $3D2A-$3D2B DB_DATA 1
RANGE $3D2B-$3D2C DB_DATA 1
RANGE $3D2C-$3D2D DB_DATA 1
RANGE $3D2D-$3D2E DB_DATA 1
RANGE $3D2E-$3D30 DW_DATA 1
RANGE $3D30-$3D31 DB_DATA 1
RANGE $3D31-$3D32 DB_DATA 1
RANGE $3D32-$3D33 DB_DATA 1
RANGE $3D33-$3D34 DB_DATA 1
RANGE $3D34-$3D35 DB_DATA 1
RANGE $3D35-$3D36 DB_DATA 1
RANGE $3D36-$3D37 DB_DATA 1
RANGE $3D37-$3D38 DB_DATA 1
RANGE $3D38-$3D39 DB_DATA 1
RANGE $3D39-$3D3A DB_DATA 1
RANGE $3D3A-$3D3B DB_DATA 1
RANGE $3D3B-$3D3C DB_DATA 1
RANGE $3D3C-$3D3D DB_DATA 1
RANGE $3D3D-$3D3E DB_DATA 1
RANGE $3D3E-$3D3F DB_DATA 1
RANGE $3D3F-$3D41 DW_DATA 1
RANGE $3D41-$3D42 DB_DATA 1
RANGE $3D42-$3D43 DB_DATA 1
RANGE $3D43-$3D44 DB_DATA 1
RANGE $3D44-$3D45 DB_DATA 1
RANGE $3D45-$3D46 DB_DATA 1
RANGE $3D46-$3D47 DB_DATA 1
RANGE $3D47-$3D48 DB_DATA 1
RANGE $3D48-$3D49 DB_DATA 1
RANGE $3D49-$3D4A DB_DATA 1
RANGE $3D4A-$3D4B DB_DATA 1
RANGE $3D4B-$3D4C DB_DATA 1
RANGE $3D4C-$3D4D DB_DATA 1
RANGE $3D4D-$3D4E DB_DATA 1
RANGE $3D4E-$3D4F DB_DATA 1
RANGE $3D4F-$3D50 DB_DATA 1
RANGE $3D50-$3D51 DB_DATA 1
RANGE $3D51-$3D52 DB_DATA 1
RANGE $3D52-$3D53 DB_DATA 1
RANGE $3D53-$3D54 DB_DATA 1
RANGE $3D54-$3D55 DB_DATA 1
RANGE $3D55-$3D56 DB_DATA 1
RANGE $3D56-$3D58 DW_DATA 1
RANGE $3D58-$3D59 DB_DATA 1
RANGE $3D59-$3D5A DB_DATA 1
RANGE $3D5A-$3D5B DB_DATA 1
RANGE $3D5B-$3D5C DB_DATA 1
RANGE $3D5C-$3D5D DB_DATA 1
RANGE $3D5D-$3D5E DB_DATA 1
RANGE $3D5E-$3D5F DB_DATA 1
RANGE $3D5F-$3D60 DB_DATA 1
RANGE $3D60-$3D61 DB_DATA 1
RANGE $3D61-$3D62 DB_DATA 1
RANGE $3D62-$3D63 DB_DATA 1
RANGE $3D63-$3D64 DB_DATA 1
RANGE $3D64-$3D65 DB_DATA 1
RANGE $3D65-$3D66 DB_DATA 1
RANGE $3D66-$3D67 DB_DATA 1
RANGE $3D67-$3D68 DB_DATA 1
RANGE $3D68-$3D69 DB_DATA 1
RANGE $3D69-$3D6A DB_DATA 1
RANGE $3D6A-$3D6B DB_DATA 1
RANGE $3D6B-$3D6C DB_DATA 1
RANGE $3D6C-$3D6D DB_DATA 1
RANGE $3D6D-$3D6E DB_DATA 1
RANGE $3D6E-$3D70 DW_DATA 1
RANGE $3D70-$3D71 DB_DATA 1
RANGE $3D71-$3D72 DB_DATA 1
RANGE $3D72-$3D73 DB_DATA 1
RANGE $3D73-$3D74 DB_DATA 1
RANGE $3D74-$3D75 DB_DATA 1
RANGE $3D75-$3D76 DB_DATA 1
RANGE $3D76-$3D77 DB_DATA 1
RANGE $3D77-$3D78 DB_DATA 1
RANGE $3D78-$3D79 DB_DATA 1
RANGE $3D79-$3D7A DB_DATA 1
RANGE $3D7A-$3D7B DB_DATA 1
RANGE $3D7B-$3D7C DB_DATA 1
RANGE $3D7C-$3D7D DB_DATA 1
RANGE $3D7D-$3D7E DB_DATA 1
RANGE $3D7E-$3D7F DB_DATA 1
RANGE $3D7F-$3D80 DB_DATA 1
RANGE $3D80-$3D81 DB_DATA 1
RANGE $3D81-$3D82 DB_DATA 1
RANGE $3D82-$3D83 DB_DATA 1
RANGE $3D83-$3D84 DB_DATA 1
RANGE $3D84-$3D85 DB_DATA 1
RANGE $3D85-$3D87 DW_DATA 1
RANGE $3D87-$3D88 DB_DATA 1
RANGE $3D88-$3D89 DB_DATA 1
RANGE $3D89-$3D8A DB_DATA 1
RANGE $3D8A-$3D8B DB_DATA 1
RANGE $3D8B-$3D8C DB_DATA 1
RANGE $3D8C-$3D8D DB_DATA 1
RANGE $3D8D-$3D8E DB_DATA 1
RANGE $3D8E-$3D8F DB_DATA 1
RANGE $3D8F-$3D90 DB_DATA 1
RANGE $3D90-$3D91 DB_DATA 1
RANGE $3D91-$3D92 DB_DATA 1
RANGE $3D92-$3D93 DB_DATA 1
RANGE $3D93-$3D94 DB_DATA 1
RANGE $3D94-$3D95 DB_DATA 1
RANGE $3D95-$3D96 DB_DATA 1
RANGE $3D96-$3D97 DB_DATA 1
RANGE $3D97-$3D98 DB_DATA 1
RANGE $3D98-$3D99 DB_DATA 1
RANGE $3D99-$3D9A DB_DATA 1
RANGE $3D9A-$3D9B DB_DATA 1
RANGE $3D9B-$3D9C DB_DATA 1
RANGE $3D9C-$3D9D DB_DATA 1
RANGE $3D9D-$3D9E DB_DATA 1
RANGE $3D9E-$3D9F DB_DATA 1
RANGE $3D9F-$3DA1 DW_DATA 1
RANGE $3DA1-$3DA2 DB_DATA 1
RANGE $3DA2-$3DA3 DB_DATA 1
RANGE $3DA3-$3DA4 DB_DATA 1
RANGE $3DA4-$3DA5 DB_DATA 1
RANGE $3DA5-$3DA6 DB_DATA 1
RANGE $3DA6-$3DA7 DB_DATA 1
RANGE $3DA7-$3DA8 DB_DATA 1
RANGE $3DA8-$3DA9 DB_DATA 1
RANGE $3DA9-$3DAA DB_DATA 1
RANGE $3DAA-$3DAB DB_DATA 1
RANGE $3DAB-$3DAC DB_DATA 1
RANGE $3DAC-$3DAD DB_DATA 1
RANGE $3DAD-$3DAE DB_DATA 1
RANGE $3DAE-$3DAF DB_DATA 1
RANGE $3DAF-$3DB0 DB_DATA 1
RANGE $3DB0-$3DB1 DB_DATA 1
RANGE $3DB1-$3DB2 DB_DATA 1
RANGE $3DB2-$3DB3 DB_DATA 1
RANGE $3DB3-$3DB4 DB_DATA 1
RANGE $3DB4-$3DB5 DB_DATA 1
RANGE $3DB5-$3DB6 DB_DATA 1
RANGE $3DB6-$3DB7 DB_DATA 1
RANGE $3DB7-$3DB9 DW_DATA 1
RANGE $3DB9-$3DBA DB_DATA 1
RANGE $3DBA-$3DBB DB_DATA 1
RANGE $3DBB-$3DBC DB_DATA 1
RANGE $3DBC-$3DBD DB_DATA 1
RANGE $3DBD-$3DBE DB_DATA 1
RANGE $3DBE-$3DBF DB_DATA 1
RANGE $3DBF-$3DC0 DB_DATA 1
RANGE $3DC0-$3DC1 DB_DATA 1
RANGE $3DC1-$3DC2 DB_DATA 1
RANGE $3DC2-$3DC3 DB_DATA 1
RANGE $3DC3-$3DC4 DB_DATA 1
RANGE $3DC4-$3DC5 DB_DATA 1
RANGE $3DC5-$3DC6 DB_DATA 1
RANGE $3DC6-$3DC7 DB_DATA 1
RANGE $3DC7-$3DC8 DB_DATA 1
RANGE $3DC8-$3DC9 DB_DATA 1
RANGE $3DC9-$3DCA DB_DATA 1
RANGE $3DCA-$3DCB DB_DATA 1
RANGE $3DCB-$3DCC DB_DATA 1
RANGE $3DCC-$3DCD DB_DATA 1
RANGE $3DCD-$3DCE DB_DATA 1
RANGE $3DCE-$3DCF DB_DATA 1
RANGE $3DCF-$3DD0 DB_DATA 1
RANGE $3DD0-$3DD1 DB_DATA 1
RANGE $3DD1-$3DD3 DW_DATA 1
RANGE $3DD3-$3DD4 DB_DATA 1
RANGE $3DD4-$3DD5 DB_DATA 1
RANGE $3DD5-$3DD6 DB_DATA 1
RANGE $3DD6-$3DD7 DB_DATA 1
RANGE $3DD7-$3DD8 DB_DATA 1
RANGE $3DD8-$3DD9 DB_DATA 1
RANGE $3DD9-$3DDA DB_DATA 1
RANGE $3DDA-$3DDB DB_DATA 1
RANGE $3DDB-$3DDC DB_DATA 1
RANGE $3DDC-$3DDD DB_DATA 1
RANGE $3DDD-$3DDE DB_DATA 1
RANGE $3DDE-$3DDF DB_DATA 1
RANGE $3DDF-$3DE0 DB_DATA 1
RANGE $3DE0-$3DE1 DB_DATA 1
RANGE $3DE1-$3DE2 DB_DATA 1
RANGE $3DE2-$3DE3 DB_DATA 1
RANGE $3DE3-$3DE4 DB_DATA 1
RANGE $3DE4-$3DE5 DB_DATA 1
RANGE $3DE5-$3DE6 DB_DATA 1
RANGE $3DE6-$3DE7 DB_DATA 1
RANGE $3DE7-$3DE8 DB_DATA 1
RANGE $3DE8-$3DE9 DB_DATA 1
RANGE $3DE9-$3DEA DB_DATA 1
RANGE $3DEA-$3DEB DB_DATA 1
RANGE $3DEB-$3DED DW_DATA 1
RANGE $3DED-$3DEE DB_DATA 1
RANGE $3DEE-$3DEF DB_DATA 1
RANGE $3DEF-$3DF0 DB_DATA 1
RANGE $3DF0-$3DF1 DB_DATA 1
RANGE $3DF1-$3DF2 DB_DATA 1
RANGE $3DF2-$3DF3 DB_DATA 1
RANGE $3DF3-$3DF4 DB_DATA 1
RANGE $3DF4-$3DF5 DB_DATA 1
RANGE $3DF5-$3DF6 DB_DATA 1
RANGE $3DF6-$3DF7 DB_DATA 1
RANGE $3DF7-$3DF8 DB_DATA 1
RANGE $3DF8-$3DF9 DB_DATA 1
RANGE $3DF9-$3DFA DB_DATA 1
RANGE $3DFA-$3DFB DB_DATA 1
RANGE $3DFB-$3DFC DB_DATA 1
RANGE $3DFC-$3DFD DB_DATA 1
RANGE $3DFD-$3DFE DB_DATA 1
RANGE $3DFE-$3DFF DB_DATA 1
RANGE $3DFF-$3E00 DB_DATA 1
RANGE $3E00-$3E01 DB_DATA 1
RANGE $3E01-$3E02 DB_DATA 1
RANGE $3E02-$3E03 DB_DATA 1
RANGE $3E03-$3E04 DB_DATA 1
RANGE $3E04-$3E05 DB_DATA 1
RANGE $3E05-$3E06 DB_DATA 1
RANGE $3E06-$3E07 DB_DATA 1
RANGE $3E07-$3E08 DB_DATA 1
RANGE $3E08-$3E09 DB_DATA 1
RANGE $3E09-$3E0A DB_DATA 1
RANGE $3E0A-$3E0B DB_DATA 1
RANGE $3E0B-$3E0C DB_DATA 1
RANGE $3E0C-$3E0D DB_DATA 1
RANGE $3E0D-$3E0E DB_DATA 1
RANGE $3E0E-$3E0F DB_DATA 1
RANGE $3E0F-$3E10 DB_DATA 1
RANGE $3E10-$3E11 DB_DATA 1
RANGE $3E11-$3E12 DB_DATA 1
RANGE $3E12-$3E13 DB_DATA 1
RANGE $3E13-$3E14 DB_DATA 1
RANGE $3E14-$3E15 DB_DATA 1
RANGE $3E15-$3E16 DB_DATA 1
RANGE $3E16-$3E17 DB_DATA 1
RANGE $3E17-$3E18 DB_DATA 1
RANGE $3E18-$3E19 DB_DATA 1
RANGE $3E19-$3E1A DB_DATA 1
RANGE $3E1A-$3E1B DB_DATA 1
RANGE $3E1B-$3E1C DB_DATA 1
RANGE $3E1C-$3E1D DB_DATA 1
RANGE $3E1D-$3E1E DB_DATA 1
RANGE $3E1E-$3E1F DB_DATA 1
RANGE $3E1F-$3E20 DB_DATA 1
RANGE $3E20-$3E21 DB_DATA 1
RANGE $3E21-$3E22 DB_DATA 1
RANGE $3E22-$3E23 DB_DATA 1
RANGE $3E23-$3E24 DB_DATA 1
RANGE $3E24-$3E25 DB_DATA 1
RANGE $3E25-$3E26 DB_DATA 1
RANGE $3E26-$3E27 DB_DATA 1
RANGE $3E27-$3E28 DB_DATA 1
RANGE $3E28-$3E29 DB_DATA 1
RANGE $3E29-$3E2A DB_DATA 1
RANGE $3E2A-$3E2B DB_DATA 1
RANGE $3E2B-$3E2C DB_DATA 1
RANGE $3E2C-$3E2D DB_DATA 1
RANGE $3E2D-$3E2E DB_DATA 1
RANGE $3E2E-$3E2F DB_DATA 1
RANGE $3E2F-$3E30 DB_DATA 1
RANGE $3E30-$3E31 DB_DATA 1
RANGE $3E31-$3E32 DB_DATA 1
RANGE $3E32-$3E33 DB_DATA 1
RANGE $3E33-$3E34 DB_DATA 1
RANGE $3E34-$3E36 DW_DATA 1
RANGE $3E36-$3E37 DB_DATA 1
RANGE $3E37-$3E38 DB_DATA 1
RANGE $3E38-$3E39 DB_DATA 1
RANGE $3E39-$3E3A DB_DATA 1
RANGE $3E3A-$3E3B DB_DATA 1
RANGE $3E3B-$3E3C DB_DATA 1
RANGE $3E3C-$3E3D DB_DATA 1
RANGE $3E3D-$3E3E DB_DATA 1
RANGE $3E3E-$3E3F DB_DATA 1
RANGE $3E3F-$3E40 DB_DATA 1
RANGE $3E40-$3E41 DB_DATA 1
RANGE $3E41-$3E42 DB_DATA 1
RANGE $3E42-$3E43 DB_DATA 1
RANGE $3E43-$3E44 DB_DATA 1
RANGE $3E44-$3E45 DB_DATA 1
RANGE $3E45-$3E46 DB_DATA 1
RANGE $3E46-$3E47 DB_DATA 1
RANGE $3E47-$3E48 DB_DATA 1
RANGE $3E48-$3E49 DB_DATA 1
RANGE $3E49-$3E4A DB_DATA 1
RANGE $3E4A-$3E4B DB_DATA 1
RANGE $3E4B-$3E4C DB_DATA 1
RANGE $3E4C-$3E4D DB_DATA 1
RANGE $3E4D-$3E4E DB_DATA 1
RANGE $3E4E-$3E50 DW_DATA 1
RANGE $3E50-$3E51 DB_DATA 1
RANGE $3E51-$3E52 DB_DATA 1
RANGE $3E52-$3E53 DB_DATA 1
RANGE $3E53-$3E54 DB_DATA 1
RANGE $3E54-$3E55 DB_DATA 1
RANGE $3E55-$3E56 DB_DATA 1
RANGE $3E56-$3E57 DB_DATA 1
RANGE $3E57-$3E58 DB_DATA 1
RANGE $3E58-$3E59 DB_DATA 1
RANGE $3E59-$3E5A DB_DATA 1
RANGE $3E5A-$3E5C DW_DATA 1
RANGE $3E5C-$3E5D DB_DATA 1
RANGE $3E5D-$3E5E DB_DATA 1
RANGE $3E5E-$3E60 DW_DATA 1
RANGE $3E60-$3E61 DB_DATA 1
RANGE $3E61-$3E62 DB_DATA 1
RANGE $3E62-$3E63 DB_DATA 1
RANGE $3E63-$3E64 DB_DATA 1
RANGE $3E64-$3E65 DB_DATA 1
RANGE $3E65-$3E66 DB_DATA 1
RANGE $3E66-$3E67 DB_DATA 1
RANGE $3E67-$3E68 DB_DATA 1
RANGE $3E68-$3E69 DB_DATA 1
RANGE $3E69-$3E6A DB_DATA 1
RANGE $3E6A-$3E6B DB_DATA 1
RANGE $3E6B-$3E6C DB_DATA 1
RANGE $3E6C-$3E6D DB_DATA 1
RANGE $3E6D-$3E6E DB_DATA 1
RANGE $3E6E-$3E6F DB_DATA 1
RANGE $3E6F-$3E70 DB_DATA 1
RANGE $3E70-$3E71 DB_DATA 1
RANGE $3E71-$3E72 DB_DATA 1
RANGE $3E72-$3E73 DB_DATA 1
RANGE $3E73-$3E74 DB_DATA 1
RANGE $3E74-$3E75 DB_DATA 1
RANGE $3E75-$3E76 DB_DATA 1
RANGE $3E76-$3E77 DB_DATA 1
RANGE $3E77-$3E78 DB_DATA 1
RANGE $3E78-$3E7A DW_DATA 1
RANGE $3E7A-$3E7B DB_DATA 1
RANGE $3E7B-$3E7C DB_DATA 1
RANGE $3E7C-$3E7D DB_DATA 1
RANGE $3E7D-$3E7E DB_DATA 1
RANGE $3E7E-$3E7F DB_DATA 1
RANGE $3E7F-$3E80 DB_DATA 1
RANGE $3E80-$3E81 DB_DATA 1
RANGE $3E81-$3E82 DB_DATA 1
RANGE $3E82-$3E83 DB_DATA 1
RANGE $3E83-$3E84 DB_DATA 1
RANGE $3E84-$3E85 DB_DATA 1
RANGE $3E85-$3E86 DB_DATA 1
RANGE $3E86-$3E87 DB_DATA 1
RANGE $3E87-$3E88 DB_DATA 1
RANGE $3E88-$3E89 DB_DATA 1
RANGE $3E89-$3E8A DB_DATA 1
RANGE $3E8A-$3E8B DB_DATA 1
RANGE $3E8B-$3E8C DB_DATA 1
RANGE $3E8C-$3E8D DB_DATA 1
RANGE $3E8D-$3E8E DB_DATA 1
RANGE $3E8E-$3E8F DB_DATA 1
RANGE $3E8F-$3E90 DB_DATA 1
RANGE $3E90-$3E91 DB_DATA 1
RANGE $3E91-$3E93 DW_DATA 1
RANGE $3E93-$3E94 DB_DATA 1
RANGE $3E94-$3E95 DB_DATA 1
RANGE $3E95-$3E96 DB_DATA 1
RANGE $3E96-$3E97 DB_DATA 1
RANGE $3E97-$3E98 DB_DATA 1
RANGE $3E98-$3E99 DB_DATA 1
RANGE $3E99-$3E9A DB_DATA 1
RANGE $3E9A-$3E9B DB_DATA 1
RANGE $3E9B-$3E9C DB_DATA 1
RANGE $3E9C-$3E9D DB_DATA 1
RANGE $3E9D-$3E9E DB_DATA 1
RANGE $3E9E-$3E9F DB_DATA 1
RANGE $3E9F-$3EA0 DB_DATA 1
RANGE $3EA0-$3EA1 DB_DATA 1
RANGE $3EA1-$3EA2 DB_DATA 1
RANGE $3EA2-$3EA3 DB_DATA 1
RANGE $3EA3-$3EA4 DB_DATA 1
RANGE $3EA4-$3EA5 DB_DATA 1
RANGE $3EA5-$3EA6 DB_DATA 1
RANGE $3EA6-$3EA8 DW_DATA 1
RANGE $3EA8-$3EA9 DB_DATA 1
RANGE $3EA9-$3EAA DB_DATA 1
RANGE $3EAA-$3EAB DB_DATA 1
RANGE $3EAB-$3EAC DB_DATA 1
RANGE $3EAC-$3EAD DB_DATA 1
RANGE $3EAD-$3EAE DB_DATA 1
RANGE $3EAE-$3EAF DB_DATA 1
RANGE $3EAF-$3EB0 DB_DATA 1
RANGE $3EB0-$3EB1 DB_DATA 1
RANGE $3EB1-$3EB2 DB_DATA 1
RANGE $3EB2-$3EB3 DB_DATA 1
RANGE $3EB3-$3EB4 DB_DATA 1
RANGE $3EB4-$3EB5 DB_DATA 1
RANGE $3EB5-$3EB6 DB_DATA 1
RANGE $3EB6-$3EB7 DB_DATA 1
RANGE $3EB7-$3EB8 DB_DATA 1
RANGE $3EB8-$3EB9 DB_DATA 1
RANGE $3EB9-$3EBA DB_DATA 1
RANGE $3EBA-$3EBB DB_DATA 1
RANGE $3EBB-$3EBC DB_DATA 1
RANGE $3EBC-$3EBE DW_DATA 1
RANGE $3EBE-$3EBF DB_DATA 1
RANGE $3EBF-$3EC0 DB_DATA 1
RANGE $3EC0-$3EC1 DB_DATA 1
RANGE $3EC1-$3EC2 DB_DATA 1
RANGE $3EC2-$3EC3 DB_DATA 1
RANGE $3EC3-$3EC4 DB_DATA 1
RANGE $3EC4-$3EC5 DB_DATA 1
RANGE $3EC5-$3EC6 DB_DATA 1
RANGE $3EC6-$3EC7 DB_DATA 1
RANGE $3EC7-$3EC8 DB_DATA 1
RANGE $3EC8-$3EC9 DB_DATA 1
RANGE $3EC9-$3ECA DB_DATA 1
RANGE $3ECA-$3ECB DB_DATA 1
RANGE $3ECB-$3ECC DB_DATA 1
RANGE $3ECC-$3ECD DB_DATA 1
RANGE $3ECD-$3ECE DB_DATA 1
RANGE $3ECE-$3ECF DB_DATA 1
RANGE $3ECF-$3ED0 DB_DATA 1
RANGE $3ED0-$3ED1 DB_DATA 1
RANGE $3ED1-$3ED2 DB_DATA 1
RANGE $3ED2-$3ED3 DB_DATA 1
RANGE $3ED3-$3ED4 DB_DATA 1
RANGE $3ED4-$3ED5 DB_DATA 1
RANGE $3ED5-$3ED6 DB_DATA 1
RANGE $3ED6-$3ED7 DB_DATA 1
RANGE $3ED7-$3ED8 DB_DATA 1
RANGE $3ED8-$3ED9 DB_DATA 1
RANGE $3ED9-$3EDA DB_DATA 1
RANGE $3EDA-$3EDB DB_DATA 1
RANGE $3EDB-$3EDC DB_DATA 1
RANGE $3EDC-$3EDD DB_DATA 1
RANGE $3EDD-$3EDE DB_DATA 1
RANGE $3EDE-$3EDF DB_DATA 1
RANGE $3EDF-$3EE0 DB_DATA 1
RANGE $3EE0-$3EE1 DB_DATA 1
RANGE $3EE1-$3EE2 DB_DATA 1
RANGE $3EE2-$3EE3 DB_DATA 1
RANGE $3EE3-$3EE4 DB_DATA 1
RANGE $3EE4-$3EE5 DB_DATA 1
RANGE $3EE5-$3EE6 DB_DATA 1
RANGE $3EE6-$3EE7 DB_DATA 1
RANGE $3EE7-$3EE8 DB_DATA 1
RANGE $3EE8-$3EE9 DB_DATA 1
RANGE $3EE9-$3EEA DB_DATA 1
RANGE $3EEA-$3EEB DB_DATA 1
RANGE $3EEB-$3EEC DB_DATA 1
RANGE $3EEC-$3EED DB_DATA 1
RANGE $3EED-$3EEE DB_DATA 1
RANGE $3EEE-$3EEF DB_DATA 1
RANGE $3EEF-$3EF0 DB_DATA 1
RANGE $3EF0-$3EF1 DB_DATA 1
RANGE $3EF1-$3EF2 DB_DATA 1
RANGE $3EF2-$3EF3 DB_DATA 1
RANGE $3EF3-$3EF4 DB_DATA 1
RANGE $3EF4-$3EF5 DB_DATA 1
RANGE $3EF5-$3EF6 DB_DATA 1
RANGE $3EF6-$3EF7 DB_DATA 1
RANGE $3EF7-$3EF8 DB_DATA 1
RANGE $3EF8-$3EF9 DB_DATA 1
RANGE $3EF9-$3EFA DB_DATA 1
RANGE $3EFA-$3EFC DW_DATA 1
RANGE $3EFC-$3EFD DB_DATA 1
RANGE $3EFD-$3EFE DB_DATA 1
RANGE $3EFE-$3EFF DB_DATA 1
RANGE $3EFF-$3F00 DB_DATA 1
RANGE $3F00-$3F01 DB_DATA 1
RANGE $3F01-$3F02 DB_DATA 1
RANGE $3F02-$3F03 DB_DATA 1
RANGE $3F03-$3F04 DB_DATA 1
RANGE $3F04-$3F05 DB_DATA 1
RANGE $3F05-$3F06 DB_DATA 1
RANGE $3F06-$3F07 DB_DATA 1
RANGE $3F07-$3F08 DB_DATA 1
RANGE $3F08-$3F09 DB_DATA 1
RANGE $3F09-$3F0A DB_DATA 1
RANGE $3F0A-$3F0B DB_DATA 1
RANGE $3F0B-$3F0C DB_DATA 1
RANGE $3F0C-$3F0D DB_DATA 1
RANGE $3F0D-$3F0E DB_DATA 1
RANGE $3F0E-$3F0F DB_DATA 1
RANGE $3F0F-$3F10 DB_DATA 1
RANGE $3F10-$3F11 DB_DATA 1
RANGE $3F11-$3F12 DB_DATA 1
RANGE $3F12-$3F13 DB_DATA 1
RANGE $3F13-$3F14 DB_DATA 1
RANGE $3F14-$3F15 DB_DATA 1
RANGE $3F15-$3F16 DB_DATA 1
RANGE $3F16-$3F17 DB_DATA 1
RANGE $3F17-$3F18 DB_DATA 1
RANGE $3F18-$3F19 DB_DATA 1
RANGE $3F19-$3F1A DB_DATA 1
RANGE $3F1A-$3F1B DB_DATA 1
RANGE $3F1B-$3F1C DB_DATA 1
RANGE $3F1C-$3F1D DB_DATA 1
RANGE $3F1D-$3F1E DB_DATA 1
RANGE $3F1E-$3F1F DB_DATA 1
RANGE $3F1F-$3F21 DW_DATA 1
RANGE $3F21-$3F22 DB_DATA 1
RANGE $3F22-$3F23 DB_DATA 1
RANGE $3F23-$3F24 DB_DATA 1
RANGE $3F24-$3F25 DB_DATA 1
RANGE $3F25-$3F26 DB_DATA 1
RANGE $3F26-$3F27 DB_DATA 1
RANGE $3F27-$3F28 DB_DATA 1
RANGE $3F28-$3F29 DB_DATA 1
RANGE $3F29-$3F2A DB_DATA 1
RANGE $3F2A-$3F2B DB_DATA 1
RANGE $3F2B-$3F2C DB_DATA 1
RANGE $3F2C-$3F2D DB_DATA 1
RANGE $3F2D-$3F2E DB_DATA 1
RANGE $3F2E-$3F2F DB_DATA 1
RANGE $3F2F-$3F30 DB_DATA 1
RANGE $3F30-$3F31 DB_DATA 1
RANGE $3F31-$3F32 DB_DATA 1
RANGE $3F32-$3F33 DB_DATA 1
RANGE $3F33-$3F34 DB_DATA 1
RANGE $3F34-$3F35 DB_DATA 1
RANGE $3F35-$3F36 DB_DATA 1
RANGE $3F36-$3F37 DB_DATA 1
RANGE $3F37-$3F38 DB_DATA 1
RANGE $3F38-$3F39 DB_DATA 1
RANGE $3F39-$3F3A DB_DATA 1
RANGE $3F3A-$3F3B DB_DATA 1
RANGE $3F3B-$3F3C DB_DATA 1
RANGE $3F3C-$3F3D DB_DATA 1
RANGE $3F3D-$3F3E DB_DATA 1
RANGE $3F3E-$3F3F DB_DATA 1
RANGE $3F3F-$3F40 DB_DATA 1
RANGE $3F40-$3F41 DB_DATA 1
RANGE $3F41-$3F42 DB_DATA 1
RANGE $3F42-$3F43 DB_DATA 1
RANGE $3F43-$3F44 DB_DATA 1
RANGE $3F44-$3F46 DW_DATA 1
RANGE $3F46-$3F47 DB_DATA 1
RANGE $3F47-$3F48 DB_DATA 1
RANGE $3F48-$3F49 DB_DATA 1
RANGE $3F49-$3F4A DB_DATA 1
RANGE $3F4A-$3F4B DB_DATA 1
RANGE $3F4B-$3F4D DW_DATA 1
RANGE $3F4D-$3F4E DB_DATA 1
RANGE $3F4E-$3F4F DB_DATA 1
RANGE $3F4F-$3F50 DB_DATA 1
RANGE $3F50-$3F51 DB_DATA 1
RANGE $3F51-$3F52 DB_DATA 1
RANGE $3F52-$3F53 DB_DATA 1
RANGE $3F53-$3F54 DB_DATA 1
RANGE $3F54-$3F55 DB_DATA 1
RANGE $3F55-$3F56 DB_DATA 1
RANGE $3F56-$3F57 DB_DATA 1
RANGE $3F57-$3F58 DB_DATA 1
RANGE $3F58-$3F59 DB_DATA 1
RANGE $3F59-$3F5B DW_DATA 1
RANGE $3F5B-$3F5C DB_DATA 1
RANGE $3F5C-$3F5D DB_DATA 1
RANGE $3F5D-$3F5E DB_DATA 1
RANGE $3F5E-$3F5F DB_DATA 1
RANGE $3F5F-$3F60 DB_DATA 1
RANGE $3F60-$3F62 DW_DATA 1
RANGE $3F62-$3F63 DB_DATA 1
RANGE $3F63-$3F64 DB_DATA 1
RANGE $3F64-$3F65 DB_DATA 1
RANGE $3F65-$3F66 DB_DATA 1
RANGE $3F66-$3F67 DB_DATA 1
RANGE $3F67-$3F69 DW_DATA 1
RANGE $3F69-$3F6A DB_DATA 1
RANGE $3F6A-$3F6B DB_DATA 1
RANGE $3F6B-$3F6C DB_DATA 1
RANGE $3F6C-$3F6D DB_DATA 1
RANGE $3F6D-$3F6E DB_DATA 1
RANGE $3F6E-$3F70 DW_DATA 1
RANGE $3F70-$3F71 DB_DATA 1
RANGE $3F71-$3F72 DB_DATA 1
RANGE $3F72-$3F73 DB_DATA 1
RANGE $3F73-$3F74 DB_DATA 1
RANGE $3F74-$3F75 DB_DATA 1
RANGE $3F75-$3F76 DB_DATA 1
RANGE $3F76-$3F77 DB_DATA 1
RANGE $3F77-$3F78 DB_DATA 1
RANGE $3F78-$3F79 DB_DATA 1
RANGE $3F79-$3F7A DB_DATA 1
RANGE $3F7A-$3F7C DW_DATA 1
RANGE $3F7C-$3F7D DB_DATA 1
RANGE $3F7D-$3F7E DB_DATA 1
RANGE $3F7E-$3F7F DB_DATA 1
RANGE $3F7F-$3F80 DB_DATA 1
RANGE $3F80-$3F81 DB_DATA 1
RANGE $3F81-$3F82 DB_DATA 1
RANGE $3F82-$3F83 DB_DATA 1
RANGE $3F83-$3F84 DB_DATA 1
RANGE $3F84-$3F85 DB_DATA 1
RANGE $3F85-$3F86 DB_DATA 1
RANGE $3F86-$3F87 DB_DATA 1
RANGE $3F87-$3F88 DB_DATA 1
RANGE $3F88-$3F89 DB_DATA 1
RANGE $3F89-$3F8A DB_DATA 1
RANGE $3F8A-$3F8B DB_DATA 1
RANGE $3F8B-$3F8C DB_DATA 1
RANGE $3F8C-$3F8D DB_DATA 1
RANGE $3F8D-$3F8E DB_DATA 1
RANGE $3F8E-$3F8F DB_DATA 1
RANGE $3F8F-$3F90 DB_DATA 1
RANGE $3F90-$3F91 DB_DATA 1
RANGE $3F91-$3F92 DB_DATA 1
RANGE $3F92-$3F94 DW_DATA 1
RANGE $3F94-$3F95 DB_DATA 1
RANGE $3F95-$3F96 DB_DATA 1
RANGE $3F96-$3F97 DB_DATA 1
RANGE $3F97-$3F98 DB_DATA 1
RANGE $3F98-$3F99 DB_DATA 1
RANGE $3F99-$3F9A DB_DATA 1
RANGE $3F9A-$3F9B DB_DATA 1
RANGE $3F9B-$3F9C DB_DATA 1
RANGE $3F9C-$3F9D DB_DATA 1
RANGE $3F9D-$3F9E DB_DATA 1
RANGE $3F9E-$3F9F DB_DATA 1
RANGE $3F9F-$3FA0 DB_DATA 1
RANGE $3FA0-$3FA1 DB_DATA 1
RANGE $3FA1-$3FA2 DB_DATA 1
RANGE $3FA2-$3FA3 DB_DATA 1
RANGE $3FA3-$3FA4 DB_DATA 1
RANGE $3FA4-$3FA5 DB_DATA 1
RANGE $3FA5-$3FA6 DB_DATA 1
RANGE $3FA6-$3FA7 DB_DATA 1
RANGE $3FA7-$3FA8 DB_DATA 1
RANGE $3FA8-$3FA9 DB_DATA 1
RANGE $3FA9-$3FAA DB_DATA 1
RANGE $3FAA-$3FAC DW_DATA 1
RANGE $3FAC-$3FAD DB_DATA 1
RANGE $3FAD-$3FAE DB_DATA 1
RANGE $3FAE-$3FAF DB_DATA 1
RANGE $3FAF-$3FB0 DB_DATA 1
RANGE $3FB0-$3FB1 DB_DATA 1
RANGE $3FB1-$3FB2 DB_DATA 1
RANGE $3FB2-$3FB3 DB_DATA 1
RANGE $3FB3-$3FB4 DB_DATA 1
RANGE $3FB4-$3FB5 DB_DATA 1
RANGE $3FB5-$3FB6 DB_DATA 1
RANGE $3FB6-$3FB7 DB_DATA 1
RANGE $3FB7-$3FB8 DB_DATA 1
RANGE $3FB8-$3FB9 DB_DATA 1
RANGE $3FB9-$3FBA DB_DATA 1
RANGE $3FBA-$3FBB DB_DATA 1
RANGE $3FBB-$3FBC DB_DATA 1
RANGE $3FBC-$3FBD DB_DATA 1
RANGE $3FBD-$3FBE DB_DATA 1
RANGE $3FBE-$3FBF DB_DATA 1
RANGE $3FBF-$3FC0 DB_DATA 1
RANGE $3FC0-$3FC1 DB_DATA 1
RANGE $3FC1-$3FC2 DB_DATA 1
RANGE $3FC2-$3FC4 DW_DATA 1
RANGE $3FC4-$3FC5 DB_DATA 1
RANGE $3FC5-$3FC6 DB_DATA 1
RANGE $3FC6-$3FC7 DB_DATA 1
RANGE $3FC7-$3FC8 DB_DATA 1
RANGE $3FC8-$3FC9 DB_DATA 1
RANGE $3FC9-$3FCA DB_DATA 1
RANGE $3FCA-$3FCB DB_DATA 1
RANGE $3FCB-$3FCC DB_DATA 1
RANGE $3FCC-$3FCD DB_DATA 1
RANGE $3FCD-$3FCE DB_DATA 1
RANGE $3FCE-$3FCF DB_DATA 1
RANGE $3FCF-$3FD0 DB_DATA 1
RANGE $3FD0-$3FD2 DW_DATA 1
RANGE $3FD2-$3FD3 DB_DATA 1
RANGE $3FD3-$3FD4 DB_DATA 1
RANGE $3FD4-$3FD5 DB_DATA 1
RANGE $3FD5-$3FD6 DB_DATA 1
RANGE $3FD6-$3FD7 DB_DATA 1
RANGE $3FD7-$3FD9 DW_DATA 1
RANGE $3FD9-$3FDA DB_DATA 1
RANGE $3FDA-$3FDB DB_DATA 1
RANGE $3FDB-$3FDC DB_DATA 1
RANGE $3FDC-$3FDD DB_DATA 1
RANGE $3FDD-$3FDF DW_DATA 1
RANGE $3FDF-$3FE0 DB_DATA 1
RANGE $3FE0-$3FE1 DB_DATA 1
RANGE $3FE1-$3FE2 DB_DATA 1
RANGE $3FE2-$3FE3 DB_DATA 1
RANGE $3FE3-$3FE4 DB_DATA 1
RANGE $3FE4-$3FE5 DB_DATA 1
RANGE $3FE5-$3FE6 DB_DATA 1
RANGE $3FE6-$3FE7 DB_DATA 1
RANGE $3FE7-$3FE9 DW_DATA 1
RANGE $3FE9-$3FEB DW_DATA 1
RANGE $3FEB-$3FED DW_DATA 1
RANGE $3FED-$3FEF DW_DATA 1
RANGE $3FEF-$3FF1 DW_DATA 1
RANGE $3FF1-$3FF3 DW_DATA 1
RANGE $3FF3-$3FF5 DW_DATA 1
RANGE $3FF5-$3FF7 DW_DATA 1
RANGE $3FF7-$3FF9 DW_DATA 1
RANGE $3FF9-$3FFB DW_DATA 1
RANGE $3FFB-$3FFD DW_DATA 1
RANGE $3FFD-$3FFF DW_DATA 1
RANGE $3FFF-$4001 DW_DATA 1
RANGE $4001-$4003 DW_DATA 1
RANGE $4003-$4005 DW_DATA 1
RANGE $4005-$4007 DW_DATA 1
RANGE $4007-$4009 DW_DATA 1
RANGE $4009-$400B DW_DATA 1
RANGE $400B-$400D DW_DATA 1
RANGE $400D-$400F DW_DATA 1
RANGE $400F-$4010 DB_DATA 1
RANGE $4010-$4011 DB_DATA 1
RANGE $4011-$4012 DB_DATA 1
RANGE $4012-$4013 DB_DATA 1
RANGE $4013-$4014 DB_DATA 1
RANGE $4014-$4015 DB_DATA 1
RANGE $4015-$4016 DB_DATA 1
RANGE $4016-$4018 DW_DATA 1
RANGE $4018-$4019 DB_DATA 1
RANGE $4019-$401A DB_DATA 1
RANGE $401A-$401B DB_DATA 1
RANGE $401B-$401C DB_DATA 1
RANGE $401C-$401D DB_DATA 1
RANGE $401D-$401E DB_DATA 1
RANGE $401E-$4020 DW_DATA 1
RANGE $4020-$4021 DB_DATA 1
RANGE $4021-$4022 DB_DATA 1
RANGE $4022-$4023 DB_DATA 1
RANGE $4023-$4025 DW_DATA 1
RANGE $4025-$4026 DB_DATA 1
RANGE $4026-$4027 DB_DATA 1
RANGE $4027-$4029 DW_DATA 1
RANGE $4029-$402A DB_DATA 1
RANGE $402A-$402B DB_DATA 1
RANGE $402B-$402D DW_DATA 1
RANGE $402D-$402E DB_DATA 1
RANGE $402E-$4030 DW_DATA 1
RANGE $4030-$4031 DB_DATA 1
RANGE $4031-$4032 DB_DATA 1
RANGE $4032-$4033 DB_DATA 1
RANGE $4033-$4034 DB_DATA 1
RANGE $4034-$4035 DB_DATA 1
RANGE $4035-$4036 DB_DATA 1
RANGE $4036-$4037 DB_DATA 1
RANGE $4037-$4038 DB_DATA 1
RANGE $4038-$4039 DB_DATA 1
RANGE $4039-$403A DB_DATA 1
RANGE $403A-$403B DB_DATA 1
RANGE $403B-$403C DB_DATA 1
RANGE $403C-$403D DB_DATA 1
RANGE $403D-$403F DW_DATA 1
RANGE $403F-$4040 DB_DATA 1
RANGE $4040-$4041 DB_DATA 1
RANGE $4041-$4042 DB_DATA 1
RANGE $4042-$4043 DB_DATA 1
RANGE $4043-$4044 DB_DATA 1
RANGE $4044-$4045 DB_DATA 1
RANGE $4045-$4046 DB_DATA 1
RANGE $4046-$4047 DB_DATA 1
RANGE $4047-$4048 DB_DATA 1
RANGE $4048-$4049 DB_DATA 1
RANGE $4049-$404A DB_DATA 1
RANGE $404A-$404B DB_DATA 1
RANGE $404B-$404D DW_DATA 1
RANGE $404D-$404E DB_DATA 1
RANGE $404E-$404F DB_DATA 1
RANGE $404F-$4050 DB_DATA 1
RANGE $4050-$4051 DB_DATA 1
RANGE $4051-$4052 DB_DATA 1
RANGE $4052-$4053 DB_DATA 1
RANGE $4053-$4054 DB_DATA 1
RANGE $4054-$4055 DB_DATA 1
RANGE $4055-$4056 DB_DATA 1
RANGE $4056-$4057 DB_DATA 1
RANGE $4057-$4058 DB_DATA 1
RANGE $4058-$4059 DB_DATA 1
RANGE $4059-$405B DW_DATA 1
RANGE $405B-$405C DB_DATA 1
RANGE $405C-$405D DB_DATA 1
RANGE $405D-$405E DB_DATA 1
RANGE $405E-$405F DB_DATA 1
RANGE $405F-$4060 DB_DATA 1
RANGE $4060-$4061 DB_DATA 1
RANGE $4061-$4062 DB_DATA 1
RANGE $4062-$4064 DW_DATA 1
RANGE $4064-$4065 DB_DATA 1
RANGE $4065-$4066 DB_DATA 1
RANGE $4066-$4067 DB_DATA 1
RANGE $4067-$4068 DB_DATA 1
RANGE $4068-$4069 DB_DATA 1
RANGE $4069-$406A DB_DATA 1
RANGE $406A-$406B DB_DATA 1
RANGE $406B-$406C DB_DATA 1
RANGE $406C-$406D DB_DATA 1
RANGE $406D-$406E DB_DATA 1
RANGE $406E-$406F DB_DATA 1
RANGE $406F-$4071 DW_DATA 1
RANGE $4071-$4072 DB_DATA 1
RANGE $4072-$4073 DB_DATA 1
RANGE $4073-$4074 DB_DATA 1
RANGE $4074-$4075 DB_DATA 1
RANGE $4075-$4076 DB_DATA 1
RANGE $4076-$4077 DB_DATA 1
RANGE $4077-$4078 DB_DATA 1
RANGE $4078-$407A DW_DATA 1
RANGE $407A-$407B DB_DATA 1
RANGE $407B-$407C DB_DATA 1
RANGE $407C-$407D DB_DATA 1
RANGE $407D-$407E DB_DATA 1
RANGE $407E-$407F DB_DATA 1
RANGE $407F-$4080 DB_DATA 1
RANGE $4080-$4081 DB_DATA 1
RANGE $4081-$4082 DB_DATA 1
RANGE $4082-$4083 DB_DATA 1
RANGE $4083-$4084 DB_DATA 1
RANGE $4084-$4085 DB_DATA 1
RANGE $4085-$4086 DB_DATA 1
RANGE $4086-$4087 DB_DATA 1
RANGE $4087-$4088 DB_DATA 1
RANGE $4088-$4089 DB_DATA 1
RANGE $4089-$408A DB_DATA 1
RANGE $408A-$408B DB_DATA 1
RANGE $408B-$408C DB_DATA 1
RANGE $408C-$408D DB_DATA 1
RANGE $408D-$408E DB_DATA 1
RANGE $408E-$408F DB_DATA 1
RANGE $408F-$4090 DB_DATA 1
RANGE $4090-$4091 DB_DATA 1
RANGE $4091-$4093 DW_DATA 1
RANGE $4093-$4094 DB_DATA 1
RANGE $4094-$4095 DB_DATA 1
RANGE $4095-$4096 DB_DATA 1
RANGE $4096-$4097 DB_DATA 1
RANGE $4097-$4098 DB_DATA 1
RANGE $4098-$4099 DB_DATA 1
RANGE $4099-$409A DB_DATA 1
RANGE $409A-$409B DB_DATA 1
RANGE $409B-$409C DB_DATA 1
RANGE $409C-$409D DB_DATA 1
RANGE $409D-$409E DB_DATA 1
RANGE $409E-$409F DB_DATA 1
RANGE $409F-$40A0 DB_DATA 1
RANGE $40A0-$40A1 DB_DATA 1
RANGE $40A1-$40A2 DB_DATA 1
RANGE $40A2-$40A3 DB_DATA 1
RANGE $40A3-$40A5 DW_DATA 1
RANGE $40A5-$40A6 DB_DATA 1
RANGE $40A6-$40A7 DB_DATA 1
RANGE $40A7-$40A8 DB_DATA 1
RANGE $40A8-$40A9 DB_DATA 1
RANGE $40A9-$40AA DB_DATA 1
RANGE $40AA-$40AB DB_DATA 1
RANGE $40AB-$40AC DB_DATA 1
RANGE $40AC-$40AD DB_DATA 1
RANGE $40AD-$40AE DB_DATA 1
RANGE $40AE-$40AF DB_DATA 1
RANGE $40AF-$40B0 DB_DATA 1
RANGE $40B0-$40B1 DB_DATA 1
RANGE $40B1-$40B2 DB_DATA 1
RANGE $40B2-$40B3 DB_DATA 1
RANGE $40B3-$40B4 DB_DATA 1
RANGE $40B4-$40B5 DB_DATA 1
RANGE $40B5-$40B6 DB_DATA 1
RANGE $40B6-$40B7 DB_DATA 1
RANGE $40B7-$40B8 DB_DATA 1
RANGE $40B8-$40BA DW_DATA 1
RANGE $40BA-$40BB DB_DATA 1
RANGE $40BB-$40BC DB_DATA 1
RANGE $40BC-$40BD DB_DATA 1
RANGE $40BD-$40BE DB_DATA 1
RANGE $40BE-$40BF DB_DATA 1
RANGE $40BF-$40C0 DB_DATA 1
RANGE $40C0-$40C1 DB_DATA 1
RANGE $40C1-$40C2 DB_DATA 1
RANGE $40C2-$40C3 DB_DATA 1
RANGE $40C3-$40C4 DB_DATA 1
RANGE $40C4-$40C5 DB_DATA 1
RANGE $40C5-$40C6 DB_DATA 1
RANGE $40C6-$40C7 DB_DATA 1
RANGE $40C7-$40C8 DB_DATA 1
RANGE $40C8-$40C9 DB_DATA 1
RANGE $40C9-$40CA DB_DATA 1
RANGE $40CA-$40CC DW_DATA 1
RANGE $40CC-$40CD DB_DATA 1
RANGE $40CD-$40CE DB_DATA 1
RANGE $40CE-$40CF DB_DATA 1
RANGE $40CF-$40D0 DB_DATA 1
RANGE $40D0-$40D1 DB_DATA 1
RANGE $40D1-$40D2 DB_DATA 1
RANGE $40D2-$40D3 DB_DATA 1
RANGE $40D3-$40D4 DB_DATA 1
RANGE $40D4-$40D6 DW_DATA 1
RANGE $40D6-$40D7 DB_DATA 1
RANGE $40D7-$40D8 DB_DATA 1
RANGE $40D8-$40D9 DB_DATA 1
RANGE $40D9-$40DA DB_DATA 1
RANGE $40DA-$40DB DB_DATA 1
RANGE $40DB-$40DC DB_DATA 1
RANGE $40DC-$40DD DB_DATA 1
RANGE $40DD-$40DE DB_DATA 1
RANGE $40DE-$40DF DB_DATA 1
RANGE $40DF-$40E1 DW_DATA 1
RANGE $40E1-$40E2 DB_DATA 1
RANGE $40E2-$40E3 DB_DATA 1
RANGE $40E3-$40E4 DB_DATA 1
RANGE $40E4-$40E6 DW_DATA 1
RANGE $40E6-$40E7 DB_DATA 1
RANGE $40E7-$40E8 DB_DATA 1
RANGE $40E8-$40E9 DB_DATA 1
RANGE $40E9-$40EA DB_DATA 1
RANGE $40EA-$40EB DB_DATA 1
RANGE $40EB-$40EC DB_DATA 1
RANGE $40EC-$40ED DB_DATA 1
RANGE $40ED-$40EE DB_DATA 1
RANGE $40EE-$40EF DB_DATA 1
RANGE $40EF-$40F0 DB_DATA 1
RANGE $40F0-$40F2 DW_DATA 1
RANGE $40F2-$40F3 DB_DATA 1
RANGE $40F3-$40F4 DB_DATA 1
RANGE $40F4-$40F5 DB_DATA 1
RANGE $40F5-$40F6 DB_DATA 1
RANGE $40F6-$40F7 DB_DATA 1
RANGE $40F7-$40F8 DB_DATA 1
RANGE $40F8-$40FA DW_DATA 1
RANGE $40FA-$40FB DB_DATA 1
RANGE $40FB-$40FC DB_DATA 1
RANGE $40FC-$40FD DB_DATA 1
RANGE $40FD-$40FF DW_DATA 1
RANGE $40FF-$4100 DB_DATA 1
RANGE $4100-$4101 DB_DATA 1
RANGE $4101-$4103 DW_DATA 1
RANGE $4103-$4104 DB_DATA 1
RANGE $4104-$4105 DB_DATA 1
RANGE $4105-$4107 DW_DATA 1
RANGE $4107-$4108 DB_DATA 1
RANGE $4108-$4109 DB_DATA 1
RANGE $4109-$410B DW_DATA 1
RANGE $410B-$410C DB_DATA 1
RANGE $410C-$410D DB_DATA 1
RANGE $410D-$410F DW_DATA 1
RANGE $410F-$4110 DB_DATA 1
RANGE $4110-$4111 DB_DATA 1
RANGE $4111-$4113 DW_DATA 1
RANGE $4113-$4114 DB_DATA 1
RANGE $4114-$4115 DB_DATA 1
RANGE $4115-$4117 DW_DATA 1
RANGE $4117-$4118 DB_DATA 1
RANGE $4118-$4119 DB_DATA 1
RANGE $4119-$411B DW_DATA 1
RANGE $411B-$411C DB_DATA 1
RANGE $411C-$411D DB_DATA 1
RANGE $411D-$411F DW_DATA 1
RANGE $411F-$4120 DB_DATA 1
RANGE $4120-$4121 DB_DATA 1
RANGE $4121-$4122 DB_DATA 1
RANGE $4122-$4123 DB_DATA 1
RANGE $4123-$4124 DB_DATA 1
RANGE $4124-$4125 DB_DATA 1
RANGE $4125-$4126 DB_DATA 1
RANGE $4126-$4127 DB_DATA 1
RANGE $4127-$4128 DB_DATA 1
RANGE $4128-$4129 DB_DATA 1
RANGE $4129-$412A DB_DATA 1
RANGE $412A-$412B DB_DATA 1
RANGE $412B-$412C DB_DATA 1
RANGE $412C-$412D DB_DATA 1
RANGE $412D-$412E DB_DATA 1
RANGE $412E-$412F DB_DATA 1
RANGE $412F-$4130 DB_DATA 1
RANGE $4130-$4131 DB_DATA 1
RANGE $4131-$4132 DB_DATA 1
RANGE $4132-$4133 DB_DATA 1
RANGE $4133-$4134 DB_DATA 1
RANGE $4134-$4135 DB_DATA 1
RANGE $4135-$4136 DB_DATA 1
RANGE $4136-$4138 DW_DATA 1
RANGE $4138-$4139 DB_DATA 1
RANGE $4139-$413A DB_DATA 1
RANGE $413A-$413B DB_DATA 1
RANGE $413B-$413C DB_DATA 1
RANGE $413C-$413D DB_DATA 1
RANGE $413D-$413E DB_DATA 1
RANGE $413E-$413F DB_DATA 1
RANGE $413F-$4140 DB_DATA 1
RANGE $4140-$4141 DB_DATA 1
RANGE $4141-$4142 DB_DATA 1
RANGE $4142-$4143 DB_DATA 1
RANGE $4143-$4144 DB_DATA 1
RANGE $4144-$4145 DB_DATA 1
RANGE $4145-$4146 DB_DATA 1
RANGE $4146-$4147 DB_DATA 1
RANGE $4147-$4148 DB_DATA 1
RANGE $4148-$4149 DB_DATA 1
RANGE $4149-$414A DB_DATA 1
RANGE $414A-$414B DB_DATA 1
RANGE $414B-$414C DB_DATA 1
RANGE $414C-$414D DB_DATA 1
RANGE $414D-$414E DB_DATA 1
RANGE $414E-$414F DB_DATA 1
RANGE $414F-$4151 DW_DATA 1
RANGE $4151-$4152 DB_DATA 1
RANGE $4152-$4153 DB_DATA 1
RANGE $4153-$4154 DB_DATA 1
RANGE $4154-$4155 DB_DATA 1
RANGE $4155-$4157 DW_DATA 1
RANGE $4157-$4158 DB_DATA 1
RANGE $4158-$415A DW_DATA 1
RANGE $415A-$415C DW_DATA 1
RANGE $415C-$415E DW_DATA 1
RANGE $415E-$415F DB_DATA 1
RANGE $415F-$4160 DB_DATA 1
RANGE $4160-$4162 DW_DATA 1
RANGE $4162-$4164 DW_DATA 1
RANGE $4164-$4166 DW_DATA 1
RANGE $4166-$4167 DB_DATA 1
RANGE $4167-$4168 DB_DATA 1
RANGE $4168-$416A DW_DATA 1
RANGE $416A-$416C DW_DATA 1
RANGE $416C-$416E DW_DATA 1
RANGE $416E-$416F DB_DATA 1
RANGE $416F-$4170 DB_DATA 1
RANGE $4170-$4172 DW_DATA 1
RANGE $4172-$4174 DW_DATA 1
RANGE $4174-$4176 DW_DATA 1
RANGE $4176-$4177 DB_DATA 1
RANGE $4177-$4179 DW_DATA 1
RANGE $4179-$417B DW_DATA 1
RANGE $417B-$417D DW_DATA 1
RANGE $417D-$417E DB_DATA 1
RANGE $417E-$4180 DW_DATA 1
RANGE $4180-$4182 DW_DATA 1
RANGE $4182-$4184 DW_DATA 1
RANGE $4184-$4185 DB_DATA 1
RANGE $4185-$4187 DW_DATA 1
RANGE $4187-$4189 DW_DATA 1
RANGE $4189-$418B DW_DATA 1
RANGE $418B-$418C DB_DATA 1
RANGE $418C-$418E DW_DATA 1
RANGE $418E-$4190 DW_DATA 1
RANGE $4190-$4192 DW_DATA 1
RANGE $4192-$4193 DB_DATA 1
RANGE $4193-$4195 DW_DATA 1
RANGE $4195-$4197 DW_DATA 1
RANGE $4197-$4199 DW_DATA 1
RANGE $4199-$419A DB_DATA 1
RANGE $419A-$419C DW_DATA 1
RANGE $419C-$419E DW_DATA 1
RANGE $419E-$41A0 DW_DATA 1
RANGE $41A0-$41A1 DB_DATA 1
RANGE $41A1-$41A2 DB_DATA 1
RANGE $41A2-$41A4 DW_DATA 1
RANGE $41A4-$41A6 DW_DATA 1
RANGE $41A6-$41A8 DW_DATA 1
RANGE $41A8-$41A9 DB_DATA 1
RANGE $41A9-$41AB DW_DATA 1
RANGE $41AB-$41AD DW_DATA 1
RANGE $41AD-$41AF DW_DATA 1
RANGE $41AF-$41B0 DB_DATA 1
RANGE $41B0-$41B2 DW_DATA 1
RANGE $41B2-$41B4 DW_DATA 1
RANGE $41B4-$41B6 DW_DATA 1
RANGE $41B6-$41B7 DB_DATA 1
RANGE $41B7-$41B9 DW_DATA 1
RANGE $41B9-$41BB DW_DATA 1
RANGE $41BB-$41BD DW_DATA 1
RANGE $41BD-$41BE DB_DATA 1
RANGE $41BE-$41BF DB_DATA 1
RANGE $41BF-$41C1 DW_DATA 1
RANGE $41C1-$41C3 DW_DATA 1
RANGE $41C3-$41C5 DW_DATA 1
RANGE $41C5-$41C6 DB_DATA 1
RANGE $41C6-$41C8 DW_DATA 1
RANGE $41C8-$41CA DW_DATA 1
RANGE $41CA-$41CC DW_DATA 1
RANGE $41CC-$41CD DB_DATA 1
RANGE $41CD-$41CF DW_DATA 1
RANGE $41CF-$41D1 DW_DATA 1
RANGE $41D1-$41D3 DW_DATA 1
RANGE $41D3-$41D4 DB_DATA 1
RANGE $41D4-$41D6 DW_DATA 1
RANGE $41D6-$41D8 DW_DATA 1
RANGE $41D8-$41DA DW_DATA 1
RANGE $41DA-$41DB DB_DATA 1
RANGE $41DB-$41DC DB_DATA 1
RANGE $41DC-$41DE DW_DATA 1
RANGE $41DE-$41E0 DW_DATA 1
RANGE $41E0-$41E2 DW_DATA 1
RANGE $41E2-$41E3 DB_DATA 1
RANGE $41E3-$41E5 DW_DATA 1
RANGE $41E5-$41E7 DW_DATA 1
RANGE $41E7-$41E9 DW_DATA 1
RANGE $41E9-$41EA DB_DATA 1
RANGE $41EA-$41EC DW_DATA 1
RANGE $41EC-$41EE DW_DATA 1
RANGE $41EE-$41F0 DW_DATA 1
RANGE $41F0-$41F1 DB_DATA 1
RANGE $41F1-$41F3 DW_DATA 1
RANGE $41F3-$41F5 DW_DATA 1
RANGE $41F5-$41F7 DW_DATA 1
RANGE $41F7-$41F8 DB_DATA 1
RANGE $41F8-$41F9 DB_DATA 1
RANGE $41F9-$41FB DW_DATA 1
RANGE $41FB-$41FD DW_DATA 1
RANGE $41FD-$41FF DW_DATA 1
RANGE $41FF-$4200 DB_DATA 1
RANGE $4200-$4202 DW_DATA 1
RANGE $4202-$4204 DW_DATA 1
RANGE $4204-$4206 DW_DATA 1
RANGE $4206-$4207 DB_DATA 1
RANGE $4207-$4209 DW_DATA 1
RANGE $4209-$420B DW_DATA 1
RANGE $420B-$420D DW_DATA 1
RANGE $420D-$420E DB_DATA 1
RANGE $420E-$4210 DW_DATA 1
RANGE $4210-$4212 DW_DATA 1
RANGE $4212-$4214 DW_DATA 1
RANGE $4214-$4215 DB_DATA 1
RANGE $4215-$4216 DB_DATA 1
RANGE $4216-$4218 DW_DATA 1
RANGE $4218-$421A DW_DATA 1
RANGE $421A-$421C DW_DATA 1
RANGE $421C-$421D DB_DATA 1
RANGE $421D-$421F DW_DATA 1
RANGE $421F-$4221 DW_DATA 1
RANGE $4221-$4223 DW_DATA 1
RANGE $4223-$4224 DB_DATA 1
RANGE $4224-$4226 DW_DATA 1
RANGE $4226-$4228 DW_DATA 1
RANGE $4228-$422A DW_DATA 1
RANGE $422A-$422B DB_DATA 1
RANGE $422B-$422D DW_DATA 1
RANGE $422D-$422F DW_DATA 1
RANGE $422F-$4231 DW_DATA 1
RANGE $4231-$4232 DB_DATA 1
RANGE $4232-$4233 DB_DATA 1
RANGE $4233-$4235 DW_DATA 1
RANGE $4235-$4237 DW_DATA 1
RANGE $4237-$4239 DW_DATA 1
RANGE $4239-$423A DB_DATA 1
RANGE $423A-$423C DW_DATA 1
RANGE $423C-$423E DW_DATA 1
RANGE $423E-$4240 DW_DATA 1
RANGE $4240-$4241 DB_DATA 1
RANGE $4241-$4243 DW_DATA 1
RANGE $4243-$4245 DW_DATA 1
RANGE $4245-$4247 DW_DATA 1
RANGE $4247-$4248 DB_DATA 1
RANGE $4248-$424A DW_DATA 1
RANGE $424A-$424C DW_DATA 1
RANGE $424C-$424E DW_DATA 1
RANGE $424E-$424F DB_DATA 1
RANGE $424F-$4250 DB_DATA 1
RANGE $4250-$4252 DW_DATA 1
RANGE $4252-$4254 DW_DATA 1
RANGE $4254-$4256 DW_DATA 1
RANGE $4256-$4257 DB_DATA 1
RANGE $4257-$4259 DW_DATA 1
RANGE $4259-$425B DW_DATA 1
RANGE $425B-$425D DW_DATA 1
RANGE $425D-$425E DB_DATA 1
RANGE $425E-$4260 DW_DATA 1
RANGE $4260-$4262 DW_DATA 1
RANGE $4262-$4264 DW_DATA 1
RANGE $4264-$4265 DB_DATA 1
RANGE $4265-$4267 DW_DATA 1
RANGE $4267-$4269 DW_DATA 1
RANGE $4269-$426B DW_DATA 1
RANGE $426B-$426C DB_DATA 1
RANGE $426C-$426E DW_DATA 1
RANGE $426E-$4270 DW_DATA 1
RANGE $4270-$4272 DW_DATA 1
RANGE $4272-$4273 DB_DATA 1
RANGE $4273-$4275 DW_DATA 1
RANGE $4275-$4277 DW_DATA 1
RANGE $4277-$4279 DW_DATA 1
RANGE $4279-$427A DB_DATA 1
RANGE $427A-$427C DW_DATA 1
RANGE $427C-$427E DW_DATA 1
RANGE $427E-$4280 DW_DATA 1
RANGE $4280-$4281 DB_DATA 1
RANGE $4281-$4283 DW_DATA 1
RANGE $4283-$4285 DW_DATA 1
RANGE $4285-$4287 DW_DATA 1
RANGE $4287-$4288 DB_DATA 1
RANGE $4288-$428A DW_DATA 1
RANGE $428A-$428C DW_DATA 1
RANGE $428C-$428E DW_DATA 1
RANGE $428E-$428F DB_DATA 1
RANGE $428F-$4291 DW_DATA 1
RANGE $4291-$4293 DW_DATA 1
RANGE $4293-$4295 DW_DATA 1
RANGE $4295-$4296 DB_DATA 1
RANGE $4296-$4298 DW_DATA 1
RANGE $4298-$429A DW_DATA 1
RANGE $429A-$429C DW_DATA 1
RANGE $429C-$429D DB_DATA 1
RANGE $429D-$429F DW_DATA 1
RANGE $429F-$42A1 DW_DATA 1
RANGE $42A1-$42A3 DW_DATA 1
RANGE $42A3-$42A4 DB_DATA 1
RANGE $42A4-$42A6 DW_DATA 1
RANGE $42A6-$42A8 DW_DATA 1
RANGE $42A8-$42AA DW_DATA 1
RANGE $42AA-$42AB DB_DATA 1
RANGE $42AB-$42AD DW_DATA 1
RANGE $42AD-$42AF DW_DATA 1
RANGE $42AF-$42B1 DW_DATA 1
RANGE $42B1-$42B2 DB_DATA 1
RANGE $42B2-$42B4 DW_DATA 1
RANGE $42B4-$42B6 DW_DATA 1
RANGE $42B6-$42B8 DW_DATA 1
RANGE $42B8-$42B9 DB_DATA 1
RANGE $42B9-$42BB DW_DATA 1
RANGE $42BB-$42BD DW_DATA 1
RANGE $42BD-$42BF DW_DATA 1
RANGE $42BF-$42C0 DB_DATA 1
RANGE $42C0-$42C2 DW_DATA 1
RANGE $42C2-$42C4 DW_DATA 1
RANGE $42C4-$42C6 DW_DATA 1
RANGE $42C6-$42C7 DB_DATA 1
RANGE $42C7-$42C9 DW_DATA 1
RANGE $42C9-$42CB DW_DATA 1
RANGE $42CB-$42CD DW_DATA 1
RANGE $42CD-$42CE DB_DATA 1
RANGE $42CE-$42D0 DW_DATA 1
RANGE $42D0-$42D2 DW_DATA 1
RANGE $42D2-$42D4 DW_DATA 1
RANGE $42D4-$42D5 DB_DATA 1
RANGE $42D5-$42D7 DW_DATA 1
RANGE $42D7-$42D9 DW_DATA 1
RANGE $42D9-$42DB DW_DATA 1
RANGE $42DB-$42DC DB_DATA 1
RANGE $42DC-$42DE DW_DATA 1
RANGE $42DE-$42E0 DW_DATA 1
RANGE $42E0-$42E2 DW_DATA 1
RANGE $42E2-$42E3 DB_DATA 1
RANGE $42E3-$42E5 DW_DATA 1
RANGE $42E5-$42E7 DW_DATA 1
RANGE $42E7-$42E9 DW_DATA 1
RANGE $42E9-$42EA DB_DATA 1
RANGE $42EA-$42EC DW_DATA 1
RANGE $42EC-$42EE DW_DATA 1
RANGE $42EE-$42F0 DW_DATA 1
RANGE $42F0-$42F1 DB_DATA 1
RANGE $42F1-$42F3 DW_DATA 1
RANGE $42F3-$42F5 DW_DATA 1
RANGE $42F5-$42F7 DW_DATA 1
RANGE $42F7-$42F8 DB_DATA 1
RANGE $42F8-$42FA DW_DATA 1
RANGE $42FA-$42FC DW_DATA 1
RANGE $42FC-$42FE DW_DATA 1
RANGE $42FE-$42FF DB_DATA 1
RANGE $42FF-$4301 DW_DATA 1
RANGE $4301-$4303 DW_DATA 1
RANGE $4303-$4305 DW_DATA 1
RANGE $4305-$4306 DB_DATA 1
RANGE $4306-$4308 DW_DATA 1
RANGE $4308-$430A DW_DATA 1
RANGE $430A-$430C DW_DATA 1
RANGE $430C-$430D DB_DATA 1
RANGE $430D-$430F DW_DATA 1
RANGE $430F-$4311 DW_DATA 1
RANGE $4311-$4313 DW_DATA 1
RANGE $4313-$4314 DB_DATA 1
RANGE $4314-$4316 DW_DATA 1
RANGE $4316-$4318 DW_DATA 1
RANGE $4318-$431A DW_DATA 1
RANGE $431A-$431B DB_DATA 1
RANGE $431B-$431D DW_DATA 1
RANGE $431D-$431F DW_DATA 1
RANGE $431F-$4321 DW_DATA 1
RANGE $4321-$4322 DB_DATA 1
RANGE $4322-$4324 DW_DATA 1
RANGE $4324-$4326 DW_DATA 1
RANGE $4326-$4328 DW_DATA 1
RANGE $4328-$4329 DB_DATA 1
RANGE $4329-$432B DW_DATA 1
RANGE $432B-$432D DW_DATA 1
RANGE $432D-$432F DW_DATA 1
RANGE $432F-$4330 DB_DATA 1
RANGE $4330-$4332 DW_DATA 1
RANGE $4332-$4334 DW_DATA 1
RANGE $4334-$4336 DW_DATA 1
RANGE $4336-$4337 DB_DATA 1
RANGE $4337-$4339 DW_DATA 1
RANGE $4339-$433B DW_DATA 1
RANGE $433B-$433D DW_DATA 1
RANGE $433D-$433E DB_DATA 1
RANGE $433E-$4340 DW_DATA 1
RANGE $4340-$4342 DW_DATA 1
RANGE $4342-$4344 DW_DATA 1
RANGE $4344-$4345 DB_DATA 1
RANGE $4345-$4347 DW_DATA 1
RANGE $4347-$4349 DW_DATA 1
RANGE $4349-$434B DW_DATA 1
RANGE $434B-$434C DB_DATA 1
RANGE $434C-$434E DW_DATA 1
RANGE $434E-$4350 DW_DATA 1
RANGE $4350-$4352 DW_DATA 1
RANGE $4352-$4353 DB_DATA 1
RANGE $4353-$4355 DW_DATA 1
RANGE $4355-$4357 DW_DATA 1
RANGE $4357-$4359 DW_DATA 1
RANGE $4359-$435A DB_DATA 1
RANGE $435A-$435C DW_DATA 1
RANGE $435C-$435E DW_DATA 1
RANGE $435E-$4360 DW_DATA 1
RANGE $4360-$4361 DB_DATA 1
RANGE $4361-$4363 DW_DATA 1
RANGE $4363-$4365 DW_DATA 1
RANGE $4365-$4367 DW_DATA 1
RANGE $4367-$4368 DB_DATA 1
RANGE $4368-$436A DW_DATA 1
RANGE $436A-$436C DW_DATA 1
RANGE $436C-$436E DW_DATA 1
RANGE $436E-$436F DB_DATA 1
RANGE $436F-$4371 DW_DATA 1
RANGE $4371-$4373 DW_DATA 1
RANGE $4373-$4375 DW_DATA 1
RANGE $4375-$4376 DB_DATA 1
RANGE $4376-$4378 DW_DATA 1
RANGE $4378-$4379 DB_DATA 1
RANGE $4379-$437A DB_DATA 1
RANGE $437A-$437B DB_DATA 1
RANGE $437B-$437C DB_DATA 1
RANGE $437C-$437E DW_DATA 1
RANGE $437E-$437F DB_DATA 1
RANGE $437F-$4380 DB_DATA 1
RANGE $4380-$4381 DB_DATA 1
RANGE $4381-$4383 DW_DATA 1
RANGE $4383-$4384 DB_DATA 1
RANGE $4384-$4385 DB_DATA 1
RANGE $4385-$4386 DB_DATA 1
RANGE $4386-$4388 DW_DATA 1
RANGE $4388-$4389 DB_DATA 1
RANGE $4389-$438A DB_DATA 1
RANGE $438A-$438B DB_DATA 1
RANGE $438B-$438C DB_DATA 1
RANGE $438C-$438D DB_DATA 1
RANGE $438D-$438E DB_DATA 1
RANGE $438E-$438F DB_DATA 1
RANGE $438F-$4390 DB_DATA 1
RANGE $4390-$4391 DB_DATA 1
RANGE $4391-$4392 DB_DATA 1
RANGE $4392-$4393 DB_DATA 1
RANGE $4393-$4394 DB_DATA 1
RANGE $4394-$4395 DB_DATA 1
RANGE $4395-$4396 DB_DATA 1
RANGE $4396-$4397 DB_DATA 1
RANGE $4397-$4398 DB_DATA 1
RANGE $4398-$4399 DB_DATA 1
RANGE $4399-$439A DB_DATA 1
RANGE $439A-$439B DB_DATA 1
RANGE $439B-$439C DB_DATA 1
RANGE $439C-$439D DB_DATA 1
RANGE $439D-$439E DB_DATA 1
RANGE $439E-$439F DB_DATA 1
RANGE $439F-$43A0 DB_DATA 1
RANGE $43A0-$43A1 DB_DATA 1
RANGE $43A1-$43A2 DB_DATA 1
RANGE $43A2-$43A3 DB_DATA 1
RANGE $43A3-$43A4 DB_DATA 1
RANGE $43A4-$43A5 DB_DATA 1
RANGE $43A5-$43A6 DB_DATA 1
RANGE $43A6-$43A7 DB_DATA 1
RANGE $43A7-$43A8 DB_DATA 1
RANGE $43A8-$43A9 DB_DATA 1
RANGE $43A9-$43AA DB_DATA 1
RANGE $43AA-$43AB DB_DATA 1
RANGE $43AB-$43AC DB_DATA 1
RANGE $43AC-$43AD DB_DATA 1
RANGE $43AD-$43AE DB_DATA 1
RANGE $43AE-$43AF DB_DATA 1
RANGE $43AF-$43B0 DB_DATA 1
RANGE $43B0-$43B1 DB_DATA 1
RANGE $43B1-$43B2 DB_DATA 1
RANGE $43B2-$43B3 DB_DATA 1
RANGE $43B3-$43B4 DB_DATA 1
RANGE $43B4-$43B5 DB_DATA 1
RANGE $43B5-$43B6 DB_DATA 1
RANGE $43B6-$43B7 DB_DATA 1
RANGE $43B7-$43B8 DB_DATA 1
RANGE $43B8-$43B9 DB_DATA 1
RANGE $43B9-$43BA DB_DATA 1
RANGE $43BA-$43BB DB_DATA 1
RANGE $43BB-$43BC DB_DATA 1
RANGE $43BC-$43BD DB_DATA 1
RANGE $43BD-$43BE DB_DATA 1
RANGE $43BE-$43BF DB_DATA 1
RANGE $43BF-$43C0 DB_DATA 1
RANGE $43C0-$43C1 DB_DATA 1
RANGE $43C1-$43C2 DB_DATA 1
RANGE $43C2-$43C3 DB_DATA 1
RANGE $43C3-$43C4 DB_DATA 1
RANGE $43C4-$43C5 DB_DATA 1
RANGE $43C5-$43C6 DB_DATA 1
RANGE $43C6-$43C8 DW_DATA 1
RANGE $43C8-$43C9 DB_DATA 1
RANGE $43C9-$43CA DB_DATA 1
RANGE $43CA-$43CB DB_DATA 1
RANGE $43CB-$43CC DB_DATA 1
RANGE $43CC-$43CD DB_DATA 1
RANGE $43CD-$43CE DB_DATA 1
RANGE $43CE-$43CF DB_DATA 1
RANGE $43CF-$43D0 DB_DATA 1
RANGE $43D0-$43D1 DB_DATA 1
RANGE $43D1-$43D2 DB_DATA 1
RANGE $43D2-$43D3 DB_DATA 1
RANGE $43D3-$43D5 DW_DATA 1
RANGE $43D5-$43D6 DB_DATA 1
RANGE $43D6-$43D7 DB_DATA 1
RANGE $43D7-$43D8 DB_DATA 1
RANGE $43D8-$43D9 DB_DATA 1
RANGE $43D9-$43DA DB_DATA 1
RANGE $43DA-$43DB DB_DATA 1
RANGE $43DB-$43DC DB_DATA 1
RANGE $43DC-$43DD DB_DATA 1
RANGE $43DD-$43DE DB_DATA 1
RANGE $43DE-$43DF DB_DATA 1
RANGE $43DF-$43E0 DB_DATA 1
RANGE $43E0-$43E1 DB_DATA 1
RANGE $43E1-$43E3 DW_DATA 1
RANGE $43E3-$43E4 DB_DATA 1
RANGE $43E4-$43E5 DB_DATA 1
RANGE $43E5-$43E6 DB_DATA 1
RANGE $43E6-$43E7 DB_DATA 1
RANGE $43E7-$43E8 DB_DATA 1
RANGE $43E8-$43E9 DB_DATA 1
RANGE $43E9-$43EA DB_DATA 1
RANGE $43EA-$43EB DB_DATA 1
RANGE $43EB-$43EC DB_DATA 1
RANGE $43EC-$43ED DB_DATA 1
RANGE $43ED-$43EE DB_DATA 1
RANGE $43EE-$43F0 DW_DATA 1
RANGE $43F0-$43F1 DB_DATA 1
RANGE $43F1-$43F2 DB_DATA 1
RANGE $43F2-$43F3 DB_DATA 1
RANGE $43F3-$43F4 DB_DATA 1
RANGE $43F4-$43F5 DB_DATA 1
RANGE $43F5-$43F6 DB_DATA 1
RANGE $43F6-$43F7 DB_DATA 1
RANGE $43F7-$43F8 DB_DATA 1
RANGE $43F8-$43F9 DB_DATA 1
RANGE $43F9-$43FA DB_DATA 1
RANGE $43FA-$43FB DB_DATA 1
RANGE $43FB-$43FC DB_DATA 1
RANGE $43FC-$43FD DB_DATA 1
RANGE $43FD-$43FE DB_DATA 1
RANGE $43FE-$43FF DB_DATA 1
RANGE $43FF-$4400 DB_DATA 1
RANGE $4400-$4401 DB_DATA 1
RANGE $4401-$4402 DB_DATA 1
RANGE $4402-$4403 DB_DATA 1
RANGE $4403-$4405 DW_DATA 1
RANGE $4405-$4406 DB_DATA 1
RANGE $4406-$4407 DB_DATA 1
RANGE $4407-$4408 DB_DATA 1
RANGE $4408-$4409 DB_DATA 1
RANGE $4409-$440A DB_DATA 1
RANGE $440A-$440B DB_DATA 1
RANGE $440B-$440C DB_DATA 1
RANGE $440C-$440D DB_DATA 1
RANGE $440D-$440E DB_DATA 1
RANGE $440E-$440F DB_DATA 1
RANGE $440F-$4410 DB_DATA 1
RANGE $4410-$4411 DB_DATA 1
RANGE $4411-$4412 DB_DATA 1
RANGE $4412-$4413 DB_DATA 1
RANGE $4413-$4414 DB_DATA 1
RANGE $4414-$4415 DB_DATA 1
RANGE $4415-$4416 DB_DATA 1
RANGE $4416-$4417 DB_DATA 1
RANGE $4417-$4418 DB_DATA 1
RANGE $4418-$4419 DB_DATA 1
RANGE $4419-$441A DB_DATA 1
RANGE $441A-$441B DB_DATA 1
RANGE $441B-$441C DB_DATA 1
RANGE $441C-$441D DB_DATA 1
RANGE $441D-$441E DB_DATA 1
RANGE $441E-$441F DB_DATA 1
RANGE $441F-$4420 DB_DATA 1
RANGE $4420-$4421 DB_DATA 1
RANGE $4421-$4422 DB_DATA 1
RANGE $4422-$4423 DB_DATA 1
RANGE $4423-$4424 DB_DATA 1
RANGE $4424-$4425 DB_DATA 1
RANGE $4425-$4426 DB_DATA 1
RANGE $4426-$4428 DW_DATA 1
RANGE $4428-$4429 DB_DATA 1
RANGE $4429-$442A DB_DATA 1
RANGE $442A-$442B DB_DATA 1
RANGE $442B-$442C DB_DATA 1
RANGE $442C-$442D DB_DATA 1
RANGE $442D-$442E DB_DATA 1
RANGE $442E-$442F DB_DATA 1
RANGE $442F-$4430 DB_DATA 1
RANGE $4430-$4431 DB_DATA 1
RANGE $4431-$4432 DB_DATA 1
RANGE $4432-$4433 DB_DATA 1
RANGE $4433-$4434 DB_DATA 1
RANGE $4434-$4435 DB_DATA 1
RANGE $4435-$4436 DB_DATA 1
RANGE $4436-$4437 DB_DATA 1
RANGE $4437-$4438 DB_DATA 1
RANGE $4438-$4439 DB_DATA 1
RANGE $4439-$443A DB_DATA 1
RANGE $443A-$443B DB_DATA 1
RANGE $443B-$443C DB_DATA 1
RANGE $443C-$443D DB_DATA 1
RANGE $443D-$443E DB_DATA 1
RANGE $443E-$443F DB_DATA 1
RANGE $443F-$4440 DB_DATA 1
RANGE $4440-$4441 DB_DATA 1
RANGE $4441-$4442 DB_DATA 1
RANGE $4442-$4443 DB_DATA 1
RANGE $4443-$4444 DB_DATA 1
RANGE $4444-$4445 DB_DATA 1
RANGE $4445-$4446 DB_DATA 1
RANGE $4446-$4447 DB_DATA 1
RANGE $4447-$4448 DB_DATA 1
RANGE $4448-$4449 DB_DATA 1
RANGE $4449-$444B DW_DATA 1
RANGE $444B-$444C DB_DATA 1
RANGE $444C-$444D DB_DATA 1
RANGE $444D-$444E DB_DATA 1
RANGE $444E-$444F DB_DATA 1
RANGE $444F-$4450 DB_DATA 1
RANGE $4450-$4451 DB_DATA 1
RANGE $4451-$4452 DB_DATA 1
RANGE $4452-$4453 DB_DATA 1
RANGE $4453-$4454 DB_DATA 1
RANGE $4454-$4455 DB_DATA 1
RANGE $4455-$4456 DB_DATA 1
RANGE $4456-$4457 DB_DATA 1
RANGE $4457-$4458 DB_DATA 1
RANGE $4458-$4459 DB_DATA 1
RANGE $4459-$445A DB_DATA 1
RANGE $445A-$445B DB_DATA 1
RANGE $445B-$445C DB_DATA 1
RANGE $445C-$445D DB_DATA 1
RANGE $445D-$445F DW_DATA 1
RANGE $445F-$4460 DB_DATA 1
RANGE $4460-$4461 DB_DATA 1
RANGE $4461-$4462 DB_DATA 1
RANGE $4462-$4463 DB_DATA 1
RANGE $4463-$4464 DB_DATA 1
RANGE $4464-$4465 DB_DATA 1
RANGE $4465-$4466 DB_DATA 1
RANGE $4466-$4467 DB_DATA 1
RANGE $4467-$4468 DB_DATA 1
RANGE $4468-$4469 DB_DATA 1
RANGE $4469-$446A DB_DATA 1
RANGE $446A-$446B DB_DATA 1
RANGE $446B-$446C DB_DATA 1
RANGE $446C-$446D DB_DATA 1
RANGE $446D-$446E DB_DATA 1
RANGE $446E-$446F DB_DATA 1
RANGE $446F-$4470 DB_DATA 1
RANGE $4470-$4471 DB_DATA 1
RANGE $4471-$4472 DB_DATA 1
RANGE $4472-$4473 DB_DATA 1
RANGE $4473-$4474 DB_DATA 1
RANGE $4474-$4475 DB_DATA 1
RANGE $4475-$4476 DB_DATA 1
RANGE $4476-$4477 DB_DATA 1
RANGE $4477-$4478 DB_DATA 1
RANGE $4478-$4479 DB_DATA 1
RANGE $4479-$447A DB_DATA 1
RANGE $447A-$447B DB_DATA 1
RANGE $447B-$447C DB_DATA 1
RANGE $447C-$447D DB_DATA 1
RANGE $447D-$447E DB_DATA 1
RANGE $447E-$447F DB_DATA 1
RANGE $447F-$4480 DB_DATA 1
RANGE $4480-$4481 DB_DATA 1
RANGE $4481-$4482 DB_DATA 1
RANGE $4482-$4483 DB_DATA 1
RANGE $4483-$4484 DB_DATA 1
RANGE $4484-$4485 DB_DATA 1
RANGE $4485-$4486 DB_DATA 1
RANGE $4486-$4487 DB_DATA 1
RANGE $4487-$4488 DB_DATA 1
RANGE $4488-$4489 DB_DATA 1
RANGE $4489-$448A DB_DATA 1
RANGE $448A-$448B DB_DATA 1
RANGE $448B-$448D DW_DATA 1
RANGE $448D-$448E DB_DATA 1
RANGE $448E-$448F DB_DATA 1
RANGE $448F-$4490 DB_DATA 1
RANGE $4490-$4491 DB_DATA 1
RANGE $4491-$4492 DB_DATA 1
RANGE $4492-$4493 DB_DATA 1
RANGE $4493-$4494 DB_DATA 1
RANGE $4494-$4495 DB_DATA 1
RANGE $4495-$4496 DB_DATA 1
RANGE $4496-$4497 DB_DATA 1
RANGE $4497-$4498 DB_DATA 1
RANGE $4498-$4499 DB_DATA 1
RANGE $4499-$449A DB_DATA 1
RANGE $449A-$449B DB_DATA 1
RANGE $449B-$449C DB_DATA 1
RANGE $449C-$449D DB_DATA 1
RANGE $449D-$449E DB_DATA 1
RANGE $449E-$449F DB_DATA 1
RANGE $449F-$44A0 DB_DATA 1
RANGE $44A0-$44A1 DB_DATA 1
RANGE $44A1-$44A2 DB_DATA 1
RANGE $44A2-$44A3 DB_DATA 1
RANGE $44A3-$44A4 DB_DATA 1
RANGE $44A4-$44A5 DB_DATA 1
RANGE $44A5-$44A6 DB_DATA 1
RANGE $44A6-$44A7 DB_DATA 1
RANGE $44A7-$44A8 DB_DATA 1
RANGE $44A8-$44A9 DB_DATA 1
RANGE $44A9-$44AA DB_DATA 1
RANGE $44AA-$44AB DB_DATA 1
RANGE $44AB-$44AC DB_DATA 1
RANGE $44AC-$44AD DB_DATA 1
RANGE $44AD-$44AE DB_DATA 1
RANGE $44AE-$44AF DB_DATA 1
RANGE $44AF-$44B0 DB_DATA 1
RANGE $44B0-$44B1 DB_DATA 1
RANGE $44B1-$44B2 DB_DATA 1
RANGE $44B2-$44B3 DB_DATA 1
RANGE $44B3-$44B4 DB_DATA 1
RANGE $44B4-$44B5 DB_DATA 1
RANGE $44B5-$44B6 DB_DATA 1
RANGE $44B6-$44B7 DB_DATA 1
RANGE $44B7-$44B8 DB_DATA 1
RANGE $44B8-$44B9 DB_DATA 1
RANGE $44B9-$44BA DB_DATA 1
RANGE $44BA-$44BC DW_DATA 1
RANGE $44BC-$44BD DB_DATA 1
RANGE $44BD-$44BE DB_DATA 1
RANGE $44BE-$44BF DB_DATA 1
RANGE $44BF-$44C0 DB_DATA 1
RANGE $44C0-$44C1 DB_DATA 1
RANGE $44C1-$44C2 DB_DATA 1
RANGE $44C2-$44C3 DB_DATA 1
RANGE $44C3-$44C4 DB_DATA 1
RANGE $44C4-$44C5 DB_DATA 1
RANGE $44C5-$44C6 DB_DATA 1
RANGE $44C6-$44C7 DB_DATA 1
RANGE $44C7-$44C8 DB_DATA 1
RANGE $44C8-$44C9 DB_DATA 1
RANGE $44C9-$44CA DB_DATA 1
RANGE $44CA-$44CB DB_DATA 1
RANGE $44CB-$44CC DB_DATA 1
RANGE $44CC-$44CD DB_DATA 1
RANGE $44CD-$44CE DB_DATA 1
RANGE $44CE-$44CF DB_DATA 1
RANGE $44CF-$44D0 DB_DATA 1
RANGE $44D0-$44D1 DB_DATA 1
RANGE $44D1-$44D2 DB_DATA 1
RANGE $44D2-$44D3 DB_DATA 1
RANGE $44D3-$44D4 DB_DATA 1
RANGE $44D4-$44D5 DB_DATA 1
RANGE $44D5-$44D6 DB_DATA 1
RANGE $44D6-$44D7 DB_DATA 1
RANGE $44D7-$44D8 DB_DATA 1
RANGE $44D8-$44D9 DB_DATA 1
RANGE $44D9-$44DA DB_DATA 1
RANGE $44DA-$44DB DB_DATA 1
RANGE $44DB-$44DC DB_DATA 1
RANGE $44DC-$44DD DB_DATA 1
RANGE $44DD-$44DE DB_DATA 1
RANGE $44DE-$44DF DB_DATA 1
RANGE $44DF-$44E0 DB_DATA 1
RANGE $44E0-$44E1 DB_DATA 1
RANGE $44E1-$44E3 DW_DATA 1
RANGE $44E3-$44E4 DB_DATA 1
RANGE $44E4-$44E5 DB_DATA 1
RANGE $44E5-$44E6 DB_DATA 1
RANGE $44E6-$44E7 DB_DATA 1
RANGE $44E7-$44E8 DB_DATA 1
RANGE $44E8-$44E9 DB_DATA 1
RANGE $44E9-$44EA DB_DATA 1
RANGE $44EA-$44EB DB_DATA 1
RANGE $44EB-$44EC DB_DATA 1
RANGE $44EC-$44ED DB_DATA 1
RANGE $44ED-$44EE DB_DATA 1
RANGE $44EE-$44EF DB_DATA 1
RANGE $44EF-$44F0 DB_DATA 1
RANGE $44F0-$44F1 DB_DATA 1
RANGE $44F1-$44F2 DB_DATA 1
RANGE $44F2-$44F3 DB_DATA 1
RANGE $44F3-$44F4 DB_DATA 1
RANGE $44F4-$44F5 DB_DATA 1
RANGE $44F5-$44F6 DB_DATA 1
RANGE $44F6-$44F7 DB_DATA 1
RANGE $44F7-$44F8 DB_DATA 1
RANGE $44F8-$44F9 DB_DATA 1
RANGE $44F9-$44FA DB_DATA 1
RANGE $44FA-$44FB DB_DATA 1
RANGE $44FB-$44FC DB_DATA 1
RANGE $44FC-$44FD DB_DATA 1
RANGE $44FD-$44FE DB_DATA 1
RANGE $44FE-$44FF DB_DATA 1
RANGE $44FF-$4500 DB_DATA 1
RANGE $4500-$4501 DB_DATA 1
RANGE $4501-$4502 DB_DATA 1
RANGE $4502-$4503 DB_DATA 1
RANGE $4503-$4504 DB_DATA 1
RANGE $4504-$4505 DB_DATA 1
RANGE $4505-$4506 DB_DATA 1
RANGE $4506-$4507 DB_DATA 1
RANGE $4507-$4508 DB_DATA 1
RANGE $4508-$450A DW_DATA 1
RANGE $450A-$450B DB_DATA 1
RANGE $450B-$450C DB_DATA 1
RANGE $450C-$450D DB_DATA 1
RANGE $450D-$450E DB_DATA 1
RANGE $450E-$450F DB_DATA 1
RANGE $450F-$4510 DB_DATA 1
RANGE $4510-$4511 DB_DATA 1
RANGE $4511-$4512 DB_DATA 1
RANGE $4512-$4513 DB_DATA 1
RANGE $4513-$4514 DB_DATA 1
RANGE $4514-$4515 DB_DATA 1
RANGE $4515-$4516 DB_DATA 1
RANGE $4516-$4517 DB_DATA 1
RANGE $4517-$4518 DB_DATA 1
RANGE $4518-$4519 DB_DATA 1
RANGE $4519-$451A DB_DATA 1
RANGE $451A-$451B DB_DATA 1
RANGE $451B-$451C DB_DATA 1
RANGE $451C-$451D DB_DATA 1
RANGE $451D-$451E DB_DATA 1
RANGE $451E-$451F DB_DATA 1
RANGE $451F-$4520 DB_DATA 1
RANGE $4520-$4521 DB_DATA 1
RANGE $4521-$4522 DB_DATA 1
RANGE $4522-$4523 DB_DATA 1
RANGE $4523-$4524 DB_DATA 1
RANGE $4524-$4525 DB_DATA 1
RANGE $4525-$4526 DB_DATA 1
RANGE $4526-$4527 DB_DATA 1
RANGE $4527-$4528 DB_DATA 1
RANGE $4528-$4529 DB_DATA 1
RANGE $4529-$452A DB_DATA 1
RANGE $452A-$452B DB_DATA 1
RANGE $452B-$452C DB_DATA 1
RANGE $452C-$452D DB_DATA 1
RANGE $452D-$452E DB_DATA 1
RANGE $452E-$452F DB_DATA 1
RANGE $452F-$4530 DB_DATA 1
RANGE $4530-$4531 DB_DATA 1
RANGE $4531-$4532 DB_DATA 1
RANGE $4532-$4533 DB_DATA 1
RANGE $4533-$4534 DB_DATA 1
RANGE $4534-$4535 DB_DATA 1
RANGE $4535-$4536 DB_DATA 1
RANGE $4536-$4537 DB_DATA 1
RANGE $4537-$4538 DB_DATA 1
RANGE $4538-$453A DW_DATA 1
RANGE $453A-$453B DB_DATA 1
RANGE $453B-$453C DB_DATA 1
RANGE $453C-$453D DB_DATA 1
RANGE $453D-$453E DB_DATA 1
RANGE $453E-$453F DB_DATA 1
RANGE $453F-$4540 DB_DATA 1
RANGE $4540-$4541 DB_DATA 1
RANGE $4541-$4542 DB_DATA 1
RANGE $4542-$4543 DB_DATA 1
RANGE $4543-$4544 DB_DATA 1
RANGE $4544-$4545 DB_DATA 1
RANGE $4545-$4546 DB_DATA 1
RANGE $4546-$4547 DB_DATA 1
RANGE $4547-$4548 DB_DATA 1
RANGE $4548-$4549 DB_DATA 1
RANGE $4549-$454A DB_DATA 1
RANGE $454A-$454B DB_DATA 1
RANGE $454B-$454C DB_DATA 1
RANGE $454C-$454D DB_DATA 1
RANGE $454D-$454E DB_DATA 1
RANGE $454E-$454F DB_DATA 1
RANGE $454F-$4550 DB_DATA 1
RANGE $4550-$4551 DB_DATA 1
RANGE $4551-$4552 DB_DATA 1
RANGE $4552-$4553 DB_DATA 1
RANGE $4553-$4554 DB_DATA 1
RANGE $4554-$4555 DB_DATA 1
RANGE $4555-$4556 DB_DATA 1
RANGE $4556-$4557 DB_DATA 1
RANGE $4557-$4558 DB_DATA 1
RANGE $4558-$4559 DB_DATA 1
RANGE $4559-$455A DB_DATA 1
RANGE $455A-$455B DB_DATA 1
RANGE $455B-$455C DB_DATA 1
RANGE $455C-$455D DB_DATA 1
RANGE $455D-$455E DB_DATA 1
RANGE $455E-$455F DB_DATA 1
RANGE $455F-$4560 DB_DATA 1
RANGE $4560-$4562 DW_DATA 1
RANGE $4562-$4563 DB_DATA 1
RANGE $4563-$4564 DB_DATA 1
RANGE $4564-$4565 DB_DATA 1
RANGE $4565-$4566 DB_DATA 1
RANGE $4566-$4567 DB_DATA 1
RANGE $4567-$4568 DB_DATA 1
RANGE $4568-$4569 DB_DATA 1
RANGE $4569-$456A DB_DATA 1
RANGE $456A-$456B DB_DATA 1
RANGE $456B-$456C DB_DATA 1
RANGE $456C-$456D DB_DATA 1
RANGE $456D-$456E DB_DATA 1
RANGE $456E-$456F DB_DATA 1
RANGE $456F-$4570 DB_DATA 1
RANGE $4570-$4571 DB_DATA 1
RANGE $4571-$4572 DB_DATA 1
RANGE $4572-$4573 DB_DATA 1
RANGE $4573-$4574 DB_DATA 1
RANGE $4574-$4575 DB_DATA 1
RANGE $4575-$4576 DB_DATA 1
RANGE $4576-$4577 DB_DATA 1
RANGE $4577-$4578 DB_DATA 1
RANGE $4578-$4579 DB_DATA 1
RANGE $4579-$457A DB_DATA 1
RANGE $457A-$457B DB_DATA 1
RANGE $457B-$457C DB_DATA 1
RANGE $457C-$457D DB_DATA 1
RANGE $457D-$457E DB_DATA 1
RANGE $457E-$457F DB_DATA 1
RANGE $457F-$4580 DB_DATA 1
RANGE $4580-$4581 DB_DATA 1
RANGE $4581-$4582 DB_DATA 1
RANGE $4582-$4583 DB_DATA 1
RANGE $4583-$4585 DW_DATA 1
RANGE $4585-$4586 DB_DATA 1
RANGE $4586-$4587 DB_DATA 1
RANGE $4587-$4588 DB_DATA 1
RANGE $4588-$4589 DB_DATA 1
RANGE $4589-$458A DB_DATA 1
RANGE $458A-$458B DB_DATA 1
RANGE $458B-$458C DB_DATA 1
RANGE $458C-$458D DB_DATA 1
RANGE $458D-$458E DB_DATA 1
RANGE $458E-$458F DB_DATA 1
RANGE $458F-$4590 DB_DATA 1
RANGE $4590-$4591 DB_DATA 1
RANGE $4591-$4592 DB_DATA 1
RANGE $4592-$4593 DB_DATA 1
RANGE $4593-$4594 DB_DATA 1
RANGE $4594-$4595 DB_DATA 1
RANGE $4595-$4596 DB_DATA 1
RANGE $4596-$4597 DB_DATA 1
RANGE $4597-$4598 DB_DATA 1
RANGE $4598-$4599 DB_DATA 1
RANGE $4599-$459A DB_DATA 1
RANGE $459A-$459B DB_DATA 1
RANGE $459B-$459C DB_DATA 1
RANGE $459C-$459D DB_DATA 1
RANGE $459D-$459E DB_DATA 1
RANGE $459E-$459F DB_DATA 1
RANGE $459F-$45A0 DB_DATA 1
RANGE $45A0-$45A1 DB_DATA 1
RANGE $45A1-$45A2 DB_DATA 1
RANGE $45A2-$45A3 DB_DATA 1
RANGE $45A3-$45A4 DB_DATA 1
RANGE $45A4-$45A5 DB_DATA 1
RANGE $45A5-$45A7 DW_DATA 1
RANGE $45A7-$45A8 DB_DATA 1
RANGE $45A8-$45A9 DB_DATA 1
RANGE $45A9-$45AA DB_DATA 1
RANGE $45AA-$45AB DB_DATA 1
RANGE $45AB-$45AC DB_DATA 1
RANGE $45AC-$45AD DB_DATA 1
RANGE $45AD-$45AE DB_DATA 1
RANGE $45AE-$45AF DB_DATA 1
RANGE $45AF-$45B0 DB_DATA 1
RANGE $45B0-$45B1 DB_DATA 1
RANGE $45B1-$45B2 DB_DATA 1
RANGE $45B2-$45B3 DB_DATA 1
RANGE $45B3-$45B4 DB_DATA 1
RANGE $45B4-$45B5 DB_DATA 1
RANGE $45B5-$45B6 DB_DATA 1
RANGE $45B6-$45B7 DB_DATA 1
RANGE $45B7-$45B8 DB_DATA 1
RANGE $45B8-$45B9 DB_DATA 1
RANGE $45B9-$45BA DB_DATA 1
RANGE $45BA-$45BB DB_DATA 1
RANGE $45BB-$45BC DB_DATA 1
RANGE $45BC-$45BD DB_DATA 1
RANGE $45BD-$45BE DB_DATA 1
RANGE $45BE-$45BF DB_DATA 1
RANGE $45BF-$45C0 DB_DATA 1
RANGE $45C0-$45C1 DB_DATA 1
RANGE $45C1-$45C2 DB_DATA 1
RANGE $45C2-$45C3 DB_DATA 1
RANGE $45C3-$45C4 DB_DATA 1
RANGE $45C4-$45C5 DB_DATA 1
RANGE $45C5-$45C6 DB_DATA 1
RANGE $45C6-$45C7 DB_DATA 1
RANGE $45C7-$45C9 DW_DATA 1
RANGE $45C9-$45CA DB_DATA 1
RANGE $45CA-$45CB DB_DATA 1
RANGE $45CB-$45CC DB_DATA 1
RANGE $45CC-$45CD DB_DATA 1
RANGE $45CD-$45CE DB_DATA 1
RANGE $45CE-$45CF DB_DATA 1
RANGE $45CF-$45D0 DB_DATA 1
RANGE $45D0-$45D1 DB_DATA 1
RANGE $45D1-$45D2 DB_DATA 1
RANGE $45D2-$45D3 DB_DATA 1
RANGE $45D3-$45D4 DB_DATA 1
RANGE $45D4-$45D5 DB_DATA 1
RANGE $45D5-$45D6 DB_DATA 1
RANGE $45D6-$45D7 DB_DATA 1
RANGE $45D7-$45D8 DB_DATA 1
RANGE $45D8-$45D9 DB_DATA 1
RANGE $45D9-$45DA DB_DATA 1
RANGE $45DA-$45DB DB_DATA 1
RANGE $45DB-$45DC DB_DATA 1
RANGE $45DC-$45DD DB_DATA 1
RANGE $45DD-$45DE DB_DATA 1
RANGE $45DE-$45DF DB_DATA 1
RANGE $45DF-$45E0 DB_DATA 1
RANGE $45E0-$45E1 DB_DATA 1
RANGE $45E1-$45E2 DB_DATA 1
RANGE $45E2-$45E3 DB_DATA 1
RANGE $45E3-$45E4 DB_DATA 1
RANGE $45E4-$45E5 DB_DATA 1
RANGE $45E5-$45E6 DB_DATA 1
RANGE $45E6-$45E7 DB_DATA 1
RANGE $45E7-$45E8 DB_DATA 1
RANGE $45E8-$45E9 DB_DATA 1
RANGE $45E9-$45EA DB_DATA 1
RANGE $45EA-$45EB DB_DATA 1
RANGE $45EB-$45EC DB_DATA 1
RANGE $45EC-$45ED DB_DATA 1
RANGE $45ED-$45EE DB_DATA 1
RANGE $45EE-$45EF DB_DATA 1
RANGE $45EF-$45F0 DB_DATA 1
RANGE $45F0-$45F1 DB_DATA 1
RANGE $45F1-$45F2 DB_DATA 1
RANGE $45F2-$45F3 DB_DATA 1
RANGE $45F3-$45F4 DB_DATA 1
RANGE $45F4-$45F5 DB_DATA 1
RANGE $45F5-$45F6 DB_DATA 1
RANGE $45F6-$45F7 DB_DATA 1
RANGE $45F7-$45F9 DW_DATA 1
RANGE $45F9-$45FA DB_DATA 1
RANGE $45FA-$45FB DB_DATA 1
RANGE $45FB-$45FC DB_DATA 1
RANGE $45FC-$45FD DB_DATA 1
RANGE $45FD-$45FE DB_DATA 1
RANGE $45FE-$45FF DB_DATA 1
RANGE $45FF-$4600 DB_DATA 1
RANGE $4600-$4601 DB_DATA 1
RANGE $4601-$4602 DB_DATA 1
RANGE $4602-$4603 DB_DATA 1
RANGE $4603-$4604 DB_DATA 1
RANGE $4604-$4605 DB_DATA 1
RANGE $4605-$4606 DB_DATA 1
RANGE $4606-$4607 DB_DATA 1
RANGE $4607-$4608 DB_DATA 1
RANGE $4608-$4609 DB_DATA 1
RANGE $4609-$460A DB_DATA 1
RANGE $460A-$460B DB_DATA 1
RANGE $460B-$460C DB_DATA 1
RANGE $460C-$460D DB_DATA 1
RANGE $460D-$460E DB_DATA 1
RANGE $460E-$460F DB_DATA 1
RANGE $460F-$4610 DB_DATA 1
RANGE $4610-$4611 DB_DATA 1
RANGE $4611-$4612 DB_DATA 1
RANGE $4612-$4613 DB_DATA 1
RANGE $4613-$4614 DB_DATA 1
RANGE $4614-$4615 DB_DATA 1
RANGE $4615-$4616 DB_DATA 1
RANGE $4616-$4617 DB_DATA 1
RANGE $4617-$4618 DB_DATA 1
RANGE $4618-$4619 DB_DATA 1
RANGE $4619-$461A DB_DATA 1
RANGE $461A-$461B DB_DATA 1
RANGE $461B-$461C DB_DATA 1
RANGE $461C-$461D DB_DATA 1
RANGE $461D-$461E DB_DATA 1
RANGE $461E-$461F DB_DATA 1
RANGE $461F-$4621 DW_DATA 1
RANGE $4621-$4622 DB_DATA 1
RANGE $4622-$4623 DB_DATA 1
RANGE $4623-$4624 DB_DATA 1
RANGE $4624-$4625 DB_DATA 1
RANGE $4625-$4626 DB_DATA 1
RANGE $4626-$4627 DB_DATA 1
RANGE $4627-$4628 DB_DATA 1
RANGE $4628-$4629 DB_DATA 1
RANGE $4629-$462A DB_DATA 1
RANGE $462A-$462B DB_DATA 1
RANGE $462B-$462C DB_DATA 1
RANGE $462C-$462D DB_DATA 1
RANGE $462D-$462E DB_DATA 1
RANGE $462E-$462F DB_DATA 1
RANGE $462F-$4630 DB_DATA 1
RANGE $4630-$4631 DB_DATA 1
RANGE $4631-$4632 DB_DATA 1
RANGE $4632-$4633 DB_DATA 1
RANGE $4633-$4634 DB_DATA 1
RANGE $4634-$4635 DB_DATA 1
RANGE $4635-$4636 DB_DATA 1
RANGE $4636-$4637 DB_DATA 1
RANGE $4637-$4638 DB_DATA 1
RANGE $4638-$4639 DB_DATA 1
RANGE $4639-$463A DB_DATA 1
RANGE $463A-$463B DB_DATA 1
RANGE $463B-$463C DB_DATA 1
RANGE $463C-$463D DB_DATA 1
RANGE $463D-$463E DB_DATA 1
RANGE $463E-$463F DB_DATA 1
RANGE $463F-$4640 DB_DATA 1
RANGE $4640-$4641 DB_DATA 1
RANGE $4641-$4642 DB_DATA 1
RANGE $4642-$4644 DW_DATA 1
RANGE $4644-$4645 DB_DATA 1
RANGE $4645-$4646 DB_DATA 1
RANGE $4646-$4647 DB_DATA 1
RANGE $4647-$4648 DB_DATA 1
RANGE $4648-$4649 DB_DATA 1
RANGE $4649-$464A DB_DATA 1
RANGE $464A-$464B DB_DATA 1
RANGE $464B-$464C DB_DATA 1
RANGE $464C-$464D DB_DATA 1
RANGE $464D-$464E DB_DATA 1
RANGE $464E-$464F DB_DATA 1
RANGE $464F-$4650 DB_DATA 1
RANGE $4650-$4651 DB_DATA 1
RANGE $4651-$4652 DB_DATA 1
RANGE $4652-$4653 DB_DATA 1
RANGE $4653-$4654 DB_DATA 1
RANGE $4654-$4655 DB_DATA 1
RANGE $4655-$4656 DB_DATA 1
RANGE $4656-$4657 DB_DATA 1
RANGE $4657-$4658 DB_DATA 1
RANGE $4658-$4659 DB_DATA 1
RANGE $4659-$465A DB_DATA 1
RANGE $465A-$465B DB_DATA 1
RANGE $465B-$465C DB_DATA 1
RANGE $465C-$465D DB_DATA 1
RANGE $465D-$465E DB_DATA 1
RANGE $465E-$465F DB_DATA 1
RANGE $465F-$4660 DB_DATA 1
RANGE $4660-$4661 DB_DATA 1
RANGE $4661-$4662 DB_DATA 1
RANGE $4662-$4663 DB_DATA 1
RANGE $4663-$4664 DB_DATA 1
RANGE $4664-$4665 DB_DATA 1
RANGE $4665-$4667 DW_DATA 1
RANGE $4667-$4668 DB_DATA 1
RANGE $4668-$4669 DB_DATA 1
RANGE $4669-$466A DB_DATA 1
RANGE $466A-$466B DB_DATA 1
RANGE $466B-$466C DB_DATA 1
RANGE $466C-$466D DB_DATA 1
RANGE $466D-$466E DB_DATA 1
RANGE $466E-$466F DB_DATA 1
RANGE $466F-$4670 DB_DATA 1
RANGE $4670-$4671 DB_DATA 1
RANGE $4671-$4672 DB_DATA 1
RANGE $4672-$4673 DB_DATA 1
RANGE $4673-$4674 DB_DATA 1
RANGE $4674-$4675 DB_DATA 1
RANGE $4675-$4676 DB_DATA 1
RANGE $4676-$4677 DB_DATA 1
RANGE $4677-$4678 DB_DATA 1
RANGE $4678-$4679 DB_DATA 1
RANGE $4679-$467A DB_DATA 1
RANGE $467A-$467B DB_DATA 1
RANGE $467B-$467C DB_DATA 1
RANGE $467C-$467D DB_DATA 1
RANGE $467D-$467E DB_DATA 1
RANGE $467E-$4680 DW_DATA 1
RANGE $4680-$4681 DB_DATA 1
RANGE $4681-$4682 DB_DATA 1
RANGE $4682-$4683 DB_DATA 1
RANGE $4683-$4684 DB_DATA 1
RANGE $4684-$4685 DB_DATA 1
RANGE $4685-$4686 DB_DATA 1
RANGE $4686-$4687 DB_DATA 1
RANGE $4687-$4688 DB_DATA 1
RANGE $4688-$4689 DB_DATA 1
RANGE $4689-$468A DB_DATA 1
RANGE $468A-$468B DB_DATA 1
RANGE $468B-$468C DB_DATA 1
RANGE $468C-$468D DB_DATA 1
RANGE $468D-$468E DB_DATA 1
RANGE $468E-$468F DB_DATA 1
RANGE $468F-$4690 DB_DATA 1
RANGE $4690-$4691 DB_DATA 1
RANGE $4691-$4692 DB_DATA 1
RANGE $4692-$4693 DB_DATA 1
RANGE $4693-$4694 DB_DATA 1
RANGE $4694-$4695 DB_DATA 1
RANGE $4695-$4696 DB_DATA 1
RANGE $4696-$4697 DB_DATA 1
RANGE $4697-$4698 DB_DATA 1
RANGE $4698-$469A DW_DATA 1
RANGE $469A-$469B DB_DATA 1
RANGE $469B-$469C DB_DATA 1
RANGE $469C-$469D DB_DATA 1
RANGE $469D-$469E DB_DATA 1
RANGE $469E-$469F DB_DATA 1
RANGE $469F-$46A0 DB_DATA 1
RANGE $46A0-$46A1 DB_DATA 1
RANGE $46A1-$46A2 DB_DATA 1
RANGE $46A2-$46A3 DB_DATA 1
RANGE $46A3-$46A4 DB_DATA 1
RANGE $46A4-$46A6 DW_DATA 1
RANGE $46A6-$46A7 DB_DATA 1
RANGE $46A7-$46A8 DB_DATA 1
RANGE $46A8-$46A9 DB_DATA 1
RANGE $46A9-$46AA DB_DATA 1
RANGE $46AA-$46AB DB_DATA 1
RANGE $46AB-$46AC DB_DATA 1
RANGE $46AC-$46AD DB_DATA 1
RANGE $46AD-$46AE DB_DATA 1
RANGE $46AE-$46AF DB_DATA 1
RANGE $46AF-$46B1 DW_DATA 1
RANGE $46B1-$46B2 DB_DATA 1
RANGE $46B2-$46B3 DB_DATA 1
RANGE $46B3-$46B4 DB_DATA 1
RANGE $46B4-$46B6 DW_DATA 1
RANGE $46B6-$46B7 DB_DATA 1
RANGE $46B7-$46B8 DB_DATA 1
RANGE $46B8-$46B9 DB_DATA 1
RANGE $46B9-$46BA DB_DATA 1
RANGE $46BA-$46BB DB_DATA 1
RANGE $46BB-$46BC DB_DATA 1
RANGE $46BC-$46BD DB_DATA 1
RANGE $46BD-$46BE DB_DATA 1
RANGE $46BE-$46BF DB_DATA 1
RANGE $46BF-$46C0 DB_DATA 1
RANGE $46C0-$46C1 DB_DATA 1
RANGE $46C1-$46C2 DB_DATA 1
RANGE $46C2-$46C3 DB_DATA 1
RANGE $46C3-$46C4 DB_DATA 1
RANGE $46C4-$46C5 DB_DATA 1
RANGE $46C5-$46C6 DB_DATA 1
RANGE $46C6-$46C7 DB_DATA 1
RANGE $46C7-$46C8 DB_DATA 1
RANGE $46C8-$46C9 DB_DATA 1
RANGE $46C9-$46CA DB_DATA 1
RANGE $46CA-$46CB DB_DATA 1
RANGE $46CB-$46CC DB_DATA 1
RANGE $46CC-$46CD DB_DATA 1
RANGE $46CD-$46CE DB_DATA 1
RANGE $46CE-$46CF DB_DATA 1
RANGE $46CF-$46D0 DB_DATA 1
RANGE $46D0-$46D1 DB_DATA 1
RANGE $46D1-$46D2 DB_DATA 1
RANGE $46D2-$46D3 DB_DATA 1
RANGE $46D3-$46D4 DB_DATA 1
RANGE $46D4-$46D5 DB_DATA 1
RANGE $46D5-$46D7 DW_DATA 1
RANGE $46D7-$46D9 DW_DATA 1
RANGE $46D9-$46DB DW_DATA 1
RANGE $46DB-$46DD DW_DATA 1
RANGE $46DD-$46DF DW_DATA 1
RANGE $46DF-$46E1 DW_DATA 1
RANGE $46E1-$46E3 DW_DATA 1
RANGE $46E3-$46E5 DW_DATA 1
RANGE $46E5-$46E7 DW_DATA 1
RANGE $46E7-$46E8 DB_DATA 1
RANGE $46E8-$46E9 DB_DATA 1
RANGE $46E9-$46EA DB_DATA 1
RANGE $46EA-$46EB DB_DATA 1
RANGE $46EB-$46EC DB_DATA 1
RANGE $46EC-$46ED DB_DATA 1
RANGE $46ED-$46EE DB_DATA 1
RANGE $46EE-$46F0 DW_DATA 1
RANGE $46F0-$46F1 DB_DATA 1
RANGE $46F1-$46F2 DB_DATA 1
RANGE $46F2-$46F3 DB_DATA 1
RANGE $46F3-$46F4 DB_DATA 1
RANGE $46F4-$46F6 DW_DATA 1
RANGE $46F6-$46F7 DB_DATA 1
RANGE $46F7-$46F8 DB_DATA 1
RANGE $46F8-$46FA DW_DATA 1
RANGE $46FA-$46FB DB_DATA 1
RANGE $46FB-$46FC DB_DATA 1
RANGE $46FC-$46FE DW_DATA 1
RANGE $46FE-$46FF DB_DATA 1
RANGE $46FF-$4700 DB_DATA 1
RANGE $4700-$4702 DW_DATA 1
RANGE $4702-$4703 DB_DATA 1
RANGE $4703-$4704 DB_DATA 1
RANGE $4704-$4706 DW_DATA 1
RANGE $4706-$4707 DB_DATA 1
RANGE $4707-$4708 DB_DATA 1
RANGE $4708-$4709 DB_DATA 1
RANGE $4709-$470B DW_DATA 1
RANGE $470B-$470C DB_DATA 1
RANGE $470C-$470D DB_DATA 1
RANGE $470D-$470E DB_DATA 1
RANGE $470E-$4710 DW_DATA 1
RANGE $4710-$4711 DB_DATA 1
RANGE $4711-$4713 DW_DATA 1
RANGE $4713-$4714 DB_DATA 1
RANGE $4714-$4716 DW_DATA 1
RANGE $4716-$4717 DB_DATA 1
RANGE $4717-$4718 DB_DATA 1
RANGE $4718-$471A DW_DATA 1
RANGE $471A-$471B DB_DATA 1
RANGE $471B-$471D DW_DATA 1
RANGE $471D-$471E DB_DATA 1
RANGE $471E-$4720 DW_DATA 1
RANGE $4720-$4721 DB_DATA 1
RANGE $4721-$4722 DB_DATA 1
RANGE $4722-$4724 DW_DATA 1
RANGE $4724-$4725 DB_DATA 1
RANGE $4725-$4727 DW_DATA 1
RANGE $4727-$4728 DB_DATA 1
RANGE $4728-$4729 DB_DATA 1
RANGE $4729-$472A DB_DATA 1
RANGE $472A-$472B DB_DATA 1
RANGE $472B-$472C DB_DATA 1
RANGE $472C-$472D DB_DATA 1
RANGE $472D-$472E DB_DATA 1
RANGE $472E-$472F DB_DATA 1
RANGE $472F-$4730 DB_DATA 1
RANGE $4730-$4731 DB_DATA 1
RANGE $4731-$4732 DB_DATA 1
RANGE $4732-$4733 DB_DATA 1
RANGE $4733-$4734 DB_DATA 1
RANGE $4734-$4735 DB_DATA 1
RANGE $4735-$4736 DB_DATA 1
RANGE $4736-$4737 DB_DATA 1
RANGE $4737-$4739 DW_DATA 1
RANGE $4739-$473A DB_DATA 1
RANGE $473A-$473B DB_DATA 1
RANGE $473B-$473C DB_DATA 1
RANGE $473C-$473D DB_DATA 1
RANGE $473D-$473E DB_DATA 1
RANGE $473E-$473F DB_DATA 1
RANGE $473F-$4740 DB_DATA 1
RANGE $4740-$4741 DB_DATA 1
RANGE $4741-$4742 DB_DATA 1
RANGE $4742-$4744 DW_DATA 1
RANGE $4744-$4745 DB_DATA 1
RANGE $4745-$4746 DB_DATA 1
RANGE $4746-$4747 DB_DATA 1
RANGE $4747-$4748 DB_DATA 1
RANGE $4748-$4749 DB_DATA 1
RANGE $4749-$474A DB_DATA 1
RANGE $474A-$474B DB_DATA 1
RANGE $474B-$474C DB_DATA 1
RANGE $474C-$474D DB_DATA 1
RANGE $474D-$474E DB_DATA 1
RANGE $474E-$474F DB_DATA 1
RANGE $474F-$4750 DB_DATA 1
RANGE $4750-$4751 DB_DATA 1
RANGE $4751-$4752 DB_DATA 1
RANGE $4752-$4753 DB_DATA 1
RANGE $4753-$4754 DB_DATA 1
RANGE $4754-$4755 DB_DATA 1
RANGE $4755-$4756 DB_DATA 1
RANGE $4756-$4757 DB_DATA 1
RANGE $4757-$4758 DB_DATA 1
RANGE $4758-$4759 DB_DATA 1
RANGE $4759-$475A DB_DATA 1
RANGE $475A-$475B DB_DATA 1
RANGE $475B-$475C DB_DATA 1
RANGE $475C-$475D DB_DATA 1
RANGE $475D-$475E DB_DATA 1
RANGE $475E-$475F DB_DATA 1
RANGE $475F-$4760 DB_DATA 1
RANGE $4760-$4761 DB_DATA 1
RANGE $4761-$4762 DB_DATA 1
RANGE $4762-$4763 DB_DATA 1
RANGE $4763-$4764 DB_DATA 1
RANGE $4764-$4766 DW_DATA 1
RANGE $4766-$4767 DB_DATA 1
RANGE $4767-$4768 DB_DATA 1
RANGE $4768-$4769 DB_DATA 1
RANGE $4769-$476A DB_DATA 1
RANGE $476A-$476B DB_DATA 1
RANGE $476B-$476C DB_DATA 1
RANGE $476C-$476D DB_DATA 1
RANGE $476D-$476F DW_DATA 1
RANGE $476F-$4770 DB_DATA 1
RANGE $4770-$4771 DB_DATA 1
RANGE $4771-$4772 DB_DATA 1
RANGE $4772-$4774 DW_DATA 1
RANGE $4774-$4775 DB_DATA 1
RANGE $4775-$4776 DB_DATA 1
RANGE $4776-$4777 DB_DATA 1
RANGE $4777-$4778 DB_DATA 1
RANGE $4778-$4779 DB_DATA 1
RANGE $4779-$477A DB_DATA 1
RANGE $477A-$477B DB_DATA 1
RANGE $477B-$477C DB_DATA 1
RANGE $477C-$477D DB_DATA 1
RANGE $477D-$477E DB_DATA 1
RANGE $477E-$4780 DW_DATA 1
RANGE $4780-$4781 DB_DATA 1
RANGE $4781-$4782 DB_DATA 1
RANGE $4782-$4783 DB_DATA 1
RANGE $4783-$4784 DB_DATA 1
RANGE $4784-$4785 DB_DATA 1
RANGE $4785-$4786 DB_DATA 1
RANGE $4786-$4788 DW_DATA 1
RANGE $4788-$4789 DB_DATA 1
RANGE $4789-$478A DB_DATA 1
RANGE $478A-$478B DB_DATA 1
RANGE $478B-$478C DB_DATA 1
RANGE $478C-$478E DW_DATA 1
RANGE $478E-$478F DB_DATA 1
RANGE $478F-$4791 DW_DATA 1
RANGE $4791-$4793 DW_DATA 1
RANGE $4793-$4795 DW_DATA 1
RANGE $4795-$4796 DB_DATA 1
RANGE $4796-$4798 DW_DATA 1
RANGE $4798-$479A DW_DATA 1
RANGE $479A-$479C DW_DATA 1
RANGE $479C-$479D DB_DATA 1
RANGE $479D-$479F DW_DATA 1
RANGE $479F-$47A1 DW_DATA 1
RANGE $47A1-$47A3 DW_DATA 1
RANGE $47A3-$47A4 DB_DATA 1
RANGE $47A4-$47A6 DW_DATA 1
RANGE $47A6-$47A8 DW_DATA 1
RANGE $47A8-$47AA DW_DATA 1
RANGE $47AA-$47AB DB_DATA 1
RANGE $47AB-$47AD DW_DATA 1
RANGE $47AD-$47AF DW_DATA 1
RANGE $47AF-$47B1 DW_DATA 1
RANGE $47B1-$47B2 DB_DATA 1
RANGE $47B2-$47B4 DW_DATA 1
RANGE $47B4-$47B6 DW_DATA 1
RANGE $47B6-$47B8 DW_DATA 1
RANGE $47B8-$47B9 DB_DATA 1
RANGE $47B9-$47BB DW_DATA 1
RANGE $47BB-$47BD DW_DATA 1
RANGE $47BD-$47BF DW_DATA 1
RANGE $47BF-$47C0 DB_DATA 1
RANGE $47C0-$47C2 DW_DATA 1
RANGE $47C2-$47C4 DW_DATA 1
RANGE $47C4-$47C6 DW_DATA 1
RANGE $47C6-$47C7 DB_DATA 1
RANGE $47C7-$47C9 DW_DATA 1
RANGE $47C9-$47CB DW_DATA 1
RANGE $47CB-$47CD DW_DATA 1
RANGE $47CD-$47CE DB_DATA 1
RANGE $47CE-$47D0 DW_DATA 1
RANGE $47D0-$47D2 DW_DATA 1
RANGE $47D2-$47D4 DW_DATA 1
RANGE $47D4-$47D5 DB_DATA 1
RANGE $47D5-$47D7 DW_DATA 1
RANGE $47D7-$47D9 DW_DATA 1
RANGE $47D9-$47DB DW_DATA 1
RANGE $47DB-$47DC DB_DATA 1
RANGE $47DC-$47DE DW_DATA 1
RANGE $47DE-$47E0 DW_DATA 1
RANGE $47E0-$47E2 DW_DATA 1
RANGE $47E2-$47E3 DB_DATA 1
RANGE $47E3-$47E5 DW_DATA 1
RANGE $47E5-$47E7 DW_DATA 1
RANGE $47E7-$47E9 DW_DATA 1
RANGE $47E9-$47EA DB_DATA 1
RANGE $47EA-$47EC DW_DATA 1
RANGE $47EC-$47EE DW_DATA 1
RANGE $47EE-$47F0 DW_DATA 1
RANGE $47F0-$47F1 DB_DATA 1
RANGE $47F1-$47F3 DW_DATA 1
RANGE $47F3-$47F5 DW_DATA 1
RANGE $47F5-$47F7 DW_DATA 1
RANGE $47F7-$47F8 DB_DATA 1
RANGE $47F8-$47FA DW_DATA 1
RANGE $47FA-$47FC DW_DATA 1
RANGE $47FC-$47FE DW_DATA 1
RANGE $47FE-$47FF DB_DATA 1
RANGE $47FF-$4801 DW_DATA 1
RANGE $4801-$4802 DB_DATA 1
RANGE $4802-$4803 DB_DATA 1
RANGE $4803-$4804 DB_DATA 1
RANGE $4804-$4805 DB_DATA 1
RANGE $4805-$4807 DW_DATA 1
RANGE $4807-$4808 DB_DATA 1
RANGE $4808-$4809 DB_DATA 1
RANGE $4809-$480A DB_DATA 1
RANGE $480A-$480C DW_DATA 1
RANGE $480C-$480D DB_DATA 1
RANGE $480D-$480E DB_DATA 1
RANGE $480E-$480F DB_DATA 1
RANGE $480F-$4810 DB_DATA 1
RANGE $4810-$4811 DB_DATA 1
RANGE $4811-$4812 DB_DATA 1
RANGE $4812-$4813 DB_DATA 1
RANGE $4813-$4814 DB_DATA 1
RANGE $4814-$4815 DB_DATA 1
RANGE $4815-$4816 DB_DATA 1
RANGE $4816-$4817 DB_DATA 1
RANGE $4817-$4818 DB_DATA 1
RANGE $4818-$4819 DB_DATA 1
RANGE $4819-$481A DB_DATA 1
RANGE $481A-$481B DB_DATA 1
RANGE $481B-$481C DB_DATA 1
RANGE $481C-$481D DB_DATA 1
RANGE $481D-$481E DB_DATA 1
RANGE $481E-$481F DB_DATA 1
RANGE $481F-$4820 DB_DATA 1
RANGE $4820-$4821 DB_DATA 1
RANGE $4821-$4822 DB_DATA 1
RANGE $4822-$4823 DB_DATA 1
RANGE $4823-$4824 DB_DATA 1
RANGE $4824-$4825 DB_DATA 1
RANGE $4825-$4826 DB_DATA 1
RANGE $4826-$4828 DW_DATA 1
RANGE $4828-$4829 DB_DATA 1
RANGE $4829-$482A DB_DATA 1
RANGE $482A-$482B DB_DATA 1
RANGE $482B-$482C DB_DATA 1
RANGE $482C-$482D DB_DATA 1
RANGE $482D-$482E DB_DATA 1
RANGE $482E-$482F DB_DATA 1
RANGE $482F-$4830 DB_DATA 1
RANGE $4830-$4831 DB_DATA 1
RANGE $4831-$4832 DB_DATA 1
RANGE $4832-$4833 DB_DATA 1
RANGE $4833-$4834 DB_DATA 1
RANGE $4834-$4835 DB_DATA 1
RANGE $4835-$4836 DB_DATA 1
RANGE $4836-$4837 DB_DATA 1
RANGE $4837-$4838 DB_DATA 1
RANGE $4838-$4839 DB_DATA 1
RANGE $4839-$483A DB_DATA 1
RANGE $483A-$483B DB_DATA 1
RANGE $483B-$483C DB_DATA 1
RANGE $483C-$483D DB_DATA 1
RANGE $483D-$483E DB_DATA 1
RANGE $483E-$483F DB_DATA 1
RANGE $483F-$4840 DB_DATA 1
RANGE $4840-$4841 DB_DATA 1
RANGE $4841-$4842 DB_DATA 1
RANGE $4842-$4843 DB_DATA 1
RANGE $4843-$4844 DB_DATA 1
RANGE $4844-$4845 DB_DATA 1
RANGE $4845-$4846 DB_DATA 1
RANGE $4846-$4847 DB_DATA 1
RANGE $4847-$4848 DB_DATA 1
RANGE $4848-$4849 DB_DATA 1
RANGE $4849-$484B DW_DATA 1
RANGE $484B-$484C DB_DATA 1
RANGE $484C-$484D DB_DATA 1
RANGE $484D-$484E DB_DATA 1
RANGE $484E-$484F DB_DATA 1
RANGE $484F-$4850 DB_DATA 1
RANGE $4850-$4851 DB_DATA 1
RANGE $4851-$4852 DB_DATA 1
RANGE $4852-$4853 DB_DATA 1
RANGE $4853-$4854 DB_DATA 1
RANGE $4854-$4855 DB_DATA 1
RANGE $4855-$4856 DB_DATA 1
RANGE $4856-$4857 DB_DATA 1
RANGE $4857-$4858 DB_DATA 1
RANGE $4858-$4859 DB_DATA 1
RANGE $4859-$485A DB_DATA 1
RANGE $485A-$485B DB_DATA 1
RANGE $485B-$485C DB_DATA 1
RANGE $485C-$485D DB_DATA 1
RANGE $485D-$485E DB_DATA 1
RANGE $485E-$485F DB_DATA 1
RANGE $485F-$4860 DB_DATA 1
RANGE $4860-$4861 DB_DATA 1
RANGE $4861-$4862 DB_DATA 1
RANGE $4862-$4863 DB_DATA 1
RANGE $4863-$4864 DB_DATA 1
RANGE $4864-$4865 DB_DATA 1
RANGE $4865-$4866 DB_DATA 1
RANGE $4866-$4867 DB_DATA 1
RANGE $4867-$4868 DB_DATA 1
RANGE $4868-$4869 DB_DATA 1
RANGE $4869-$486A DB_DATA 1
RANGE $486A-$486B DB_DATA 1
RANGE $486B-$486C DB_DATA 1
RANGE $486C-$486E DW_DATA 1
RANGE $486E-$486F DB_DATA 1
RANGE $486F-$4870 DB_DATA 1
RANGE $4870-$4871 DB_DATA 1
RANGE $4871-$4872 DB_DATA 1
RANGE $4872-$4873 DB_DATA 1
RANGE $4873-$4874 DB_DATA 1
RANGE $4874-$4875 DB_DATA 1
RANGE $4875-$4876 DB_DATA 1
RANGE $4876-$4877 DB_DATA 1
RANGE $4877-$4878 DB_DATA 1
RANGE $4878-$4879 DB_DATA 1
RANGE $4879-$487A DB_DATA 1
RANGE $487A-$487B DB_DATA 1
RANGE $487B-$487C DB_DATA 1
RANGE $487C-$487D DB_DATA 1
RANGE $487D-$487E DB_DATA 1
RANGE $487E-$487F DB_DATA 1
RANGE $487F-$4880 DB_DATA 1
RANGE $4880-$4881 DB_DATA 1
RANGE $4881-$4882 DB_DATA 1
RANGE $4882-$4883 DB_DATA 1
RANGE $4883-$4884 DB_DATA 1
RANGE $4884-$4885 DB_DATA 1
RANGE $4885-$4886 DB_DATA 1
RANGE $4886-$4887 DB_DATA 1
RANGE $4887-$4888 DB_DATA 1
RANGE $4888-$4889 DB_DATA 1
RANGE $4889-$488A DB_DATA 1
RANGE $488A-$488B DB_DATA 1
RANGE $488B-$488C DB_DATA 1
RANGE $488C-$488D DB_DATA 1
RANGE $488D-$488E DB_DATA 1
RANGE $488E-$488F DB_DATA 1
RANGE $488F-$4891 DW_DATA 1
RANGE $4891-$4892 DB_DATA 1
RANGE $4892-$4893 DB_DATA 1
RANGE $4893-$4894 DB_DATA 1
RANGE $4894-$4895 DB_DATA 1
RANGE $4895-$4896 DB_DATA 1
RANGE $4896-$4897 DB_DATA 1
RANGE $4897-$4898 DB_DATA 1
RANGE $4898-$4899 DB_DATA 1
RANGE $4899-$489A DB_DATA 1
RANGE $489A-$489B DB_DATA 1
RANGE $489B-$489C DB_DATA 1
RANGE $489C-$489D DB_DATA 1
RANGE $489D-$489E DB_DATA 1
RANGE $489E-$489F DB_DATA 1
RANGE $489F-$48A0 DB_DATA 1
RANGE $48A0-$48A1 DB_DATA 1
RANGE $48A1-$48A2 DB_DATA 1
RANGE $48A2-$48A3 DB_DATA 1
RANGE $48A3-$48A4 DB_DATA 1
RANGE $48A4-$48A5 DB_DATA 1
RANGE $48A5-$48A6 DB_DATA 1
RANGE $48A6-$48A7 DB_DATA 1
RANGE $48A7-$48A8 DB_DATA 1
RANGE $48A8-$48A9 DB_DATA 1
RANGE $48A9-$48AA DB_DATA 1
RANGE $48AA-$48AB DB_DATA 1
RANGE $48AB-$48AC DB_DATA 1
RANGE $48AC-$48AD DB_DATA 1
RANGE $48AD-$48AE DB_DATA 1
RANGE $48AE-$48AF DB_DATA 1
RANGE $48AF-$48B0 DB_DATA 1
RANGE $48B0-$48B1 DB_DATA 1
RANGE $48B1-$48B3 DW_DATA 1
RANGE $48B3-$48B4 DB_DATA 1
RANGE $48B4-$48B5 DB_DATA 1
RANGE $48B5-$48B6 DB_DATA 1
RANGE $48B6-$48B7 DB_DATA 1
RANGE $48B7-$48B8 DB_DATA 1
RANGE $48B8-$48B9 DB_DATA 1
RANGE $48B9-$48BA DB_DATA 1
RANGE $48BA-$48BB DB_DATA 1
RANGE $48BB-$48BC DB_DATA 1
RANGE $48BC-$48BD DB_DATA 1
RANGE $48BD-$48BE DB_DATA 1
RANGE $48BE-$48BF DB_DATA 1
RANGE $48BF-$48C0 DB_DATA 1
RANGE $48C0-$48C1 DB_DATA 1
RANGE $48C1-$48C2 DB_DATA 1
RANGE $48C2-$48C3 DB_DATA 1
RANGE $48C3-$48C4 DB_DATA 1
RANGE $48C4-$48C5 DB_DATA 1
RANGE $48C5-$48C6 DB_DATA 1
RANGE $48C6-$48C7 DB_DATA 1
RANGE $48C7-$48C8 DB_DATA 1
RANGE $48C8-$48C9 DB_DATA 1
RANGE $48C9-$48CA DB_DATA 1
RANGE $48CA-$48CB DB_DATA 1
RANGE $48CB-$48CC DB_DATA 1
RANGE $48CC-$48CD DB_DATA 1
RANGE $48CD-$48CE DB_DATA 1
RANGE $48CE-$48CF DB_DATA 1
RANGE $48CF-$48D0 DB_DATA 1
RANGE $48D0-$48D2 DW_DATA 1
RANGE $48D2-$48D4 DW_DATA 1
RANGE $48D4-$48D6 DW_DATA 1
RANGE $48D6-$48D8 DW_DATA 1
RANGE $48D8-$48DA DW_DATA 1
RANGE $48DA-$48DB DB_DATA 1
RANGE $48DB-$48DC DB_DATA 1
RANGE $48DC-$48DD DB_DATA 1
RANGE $48DD-$48DE DB_DATA 1
RANGE $48DE-$48DF DB_DATA 1
RANGE $48DF-$48E0 DB_DATA 1
RANGE $48E0-$48E1 DB_DATA 1
RANGE $48E1-$48E3 DW_DATA 1
RANGE $48E3-$48E4 DB_DATA 1
RANGE $48E4-$48E5 DB_DATA 1
RANGE $48E5-$48E6 DB_DATA 1
RANGE $48E6-$48E7 DB_DATA 1
RANGE $48E7-$48E9 DW_DATA 1
RANGE $48E9-$48EA DB_DATA 1
RANGE $48EA-$48EB DB_DATA 1
RANGE $48EB-$48ED DW_DATA 1
RANGE $48ED-$48EE DB_DATA 1
RANGE $48EE-$48F0 DW_DATA 1
RANGE $48F0-$48F1 DB_DATA 1
RANGE $48F1-$48F3 DW_DATA 1
RANGE $48F3-$48F4 DB_DATA 1
RANGE $48F4-$48F6 DW_DATA 1
RANGE $48F6-$48F7 DB_DATA 1
RANGE $48F7-$48F9 DW_DATA 1
RANGE $48F9-$48FA DB_DATA 1
RANGE $48FA-$48FC DW_DATA 1
RANGE $48FC-$48FD DB_DATA 1
RANGE $48FD-$48FF DW_DATA 1
RANGE $48FF-$4900 DB_DATA 1
RANGE $4900-$4901 DB_DATA 1
RANGE $4901-$4903 DW_DATA 1
RANGE $4903-$4904 DB_DATA 1
RANGE $4904-$4905 DB_DATA 1
RANGE $4905-$4907 DW_DATA 1
RANGE $4907-$4908 DB_DATA 1
RANGE $4908-$490A DW_DATA 1
RANGE $490A-$490B DB_DATA 1
RANGE $490B-$490C DB_DATA 1
RANGE $490C-$490E DW_DATA 1
RANGE $490E-$490F DB_DATA 1
RANGE $490F-$4911 DW_DATA 1
RANGE $4911-$4912 DB_DATA 1
RANGE $4912-$4913 DB_DATA 1
RANGE $4913-$4915 DW_DATA 1
RANGE $4915-$4916 DB_DATA 1
RANGE $4916-$4917 DB_DATA 1
RANGE $4917-$4919 DW_DATA 1
RANGE $4919-$491A DB_DATA 1
RANGE $491A-$491B DB_DATA 1
RANGE $491B-$491D DW_DATA 1
RANGE $491D-$491E DB_DATA 1
RANGE $491E-$491F DB_DATA 1
RANGE $491F-$4920 DB_DATA 1
RANGE $4920-$4922 DW_DATA 1
RANGE $4922-$4923 DB_DATA 1
RANGE $4923-$4924 DB_DATA 1
RANGE $4924-$4925 DB_DATA 1
RANGE $4925-$4927 DW_DATA 1
RANGE $4927-$4928 DB_DATA 1
RANGE $4928-$4929 DB_DATA 1
RANGE $4929-$492A DB_DATA 1
RANGE $492A-$492B DB_DATA 1
RANGE $492B-$492D DW_DATA 1
RANGE $492D-$492E DB_DATA 1
RANGE $492E-$4930 DW_DATA 1
RANGE $4930-$4931 DB_DATA 1
RANGE $4931-$4932 DB_DATA 1
RANGE $4932-$4933 DB_DATA 1
RANGE $4933-$4934 DB_DATA 1
RANGE $4934-$4936 DW_DATA 1
RANGE $4936-$4937 DB_DATA 1
RANGE $4937-$4938 DB_DATA 1
RANGE $4938-$4939 DB_DATA 1
RANGE $4939-$493B DW_DATA 1
RANGE $493B-$493C DB_DATA 1
RANGE $493C-$493D DB_DATA 1
RANGE $493D-$493E DB_DATA 1
RANGE $493E-$4940 DW_DATA 1
RANGE $4940-$4941 DB_DATA 1
RANGE $4941-$4942 DB_DATA 1
RANGE $4942-$4944 DW_DATA 1
RANGE $4944-$4945 DB_DATA 1
RANGE $4945-$4946 DB_DATA 1
RANGE $4946-$4947 DB_DATA 1
RANGE $4947-$4949 DW_DATA 1
RANGE $4949-$494A DB_DATA 1
RANGE $494A-$494B DB_DATA 1
RANGE $494B-$494D DW_DATA 1
RANGE $494D-$494E DB_DATA 1
RANGE $494E-$494F DB_DATA 1
RANGE $494F-$4950 DB_DATA 1
RANGE $4950-$4951 DB_DATA 1
RANGE $4951-$4953 DW_DATA 1
RANGE $4953-$4954 DB_DATA 1
RANGE $4954-$4955 DB_DATA 1
RANGE $4955-$4956 DB_DATA 1
RANGE $4956-$4957 DB_DATA 1
RANGE $4957-$4958 DB_DATA 1
RANGE $4958-$495A DW_DATA 1
RANGE $495A-$495B DB_DATA 1
RANGE $495B-$495C DB_DATA 1
RANGE $495C-$495E DW_DATA 1
RANGE $495E-$495F DB_DATA 1
RANGE $495F-$4960 DB_DATA 1
RANGE $4960-$4961 DB_DATA 1
RANGE $4961-$4963 DW_DATA 1
RANGE $4963-$4964 DB_DATA 1
RANGE $4964-$4965 DB_DATA 1
RANGE $4965-$4967 DW_DATA 1
RANGE $4967-$4968 DB_DATA 1
RANGE $4968-$4969 DB_DATA 1
RANGE $4969-$496A DB_DATA 1
RANGE $496A-$496B DB_DATA 1
RANGE $496B-$496D DW_DATA 1
RANGE $496D-$496E DB_DATA 1
RANGE $496E-$4970 DW_DATA 1
RANGE $4970-$4972 DW_DATA 1
RANGE $4972-$4974 DW_DATA 1
RANGE $4974-$4975 DB_DATA 1
RANGE $4975-$4977 DW_DATA 1
RANGE $4977-$4979 DW_DATA 1
RANGE $4979-$497B DW_DATA 1
RANGE $497B-$497C DB_DATA 1
RANGE $497C-$497E DW_DATA 1
RANGE $497E-$4980 DW_DATA 1
RANGE $4980-$4982 DW_DATA 1
RANGE $4982-$4983 DB_DATA 1
RANGE $4983-$4985 DW_DATA 1
RANGE $4985-$4986 DB_DATA 1
RANGE $4986-$4987 DB_DATA 1
RANGE $4987-$4988 DB_DATA 1
RANGE $4988-$4989 DB_DATA 1
RANGE $4989-$498B DW_DATA 1
RANGE $498B-$498C DB_DATA 1
RANGE $498C-$498D DB_DATA 1
RANGE $498D-$498E DB_DATA 1
RANGE $498E-$498F DB_DATA 1
RANGE $498F-$4990 DB_DATA 1
RANGE $4990-$4991 DB_DATA 1
RANGE $4991-$4992 DB_DATA 1
RANGE $4992-$4993 DB_DATA 1
RANGE $4993-$4994 DB_DATA 1
RANGE $4994-$4995 DB_DATA 1
RANGE $4995-$4996 DB_DATA 1
RANGE $4996-$4997 DB_DATA 1
RANGE $4997-$4998 DB_DATA 1
RANGE $4998-$4999 DB_DATA 1
RANGE $4999-$499A DB_DATA 1
RANGE $499A-$499B DB_DATA 1
RANGE $499B-$499C DB_DATA 1
RANGE $499C-$499D DB_DATA 1
RANGE $499D-$499E DB_DATA 1
RANGE $499E-$499F DB_DATA 1
RANGE $499F-$49A0 DB_DATA 1
RANGE $49A0-$49A1 DB_DATA 1
RANGE $49A1-$49A2 DB_DATA 1
RANGE $49A2-$49A3 DB_DATA 1
RANGE $49A3-$49A4 DB_DATA 1
RANGE $49A4-$49A5 DB_DATA 1
RANGE $49A5-$49A6 DB_DATA 1
RANGE $49A6-$49A7 DB_DATA 1
RANGE $49A7-$49A8 DB_DATA 1
RANGE $49A8-$49A9 DB_DATA 1
RANGE $49A9-$49AA DB_DATA 1
RANGE $49AA-$49AB DB_DATA 1
RANGE $49AB-$49AC DB_DATA 1
RANGE $49AC-$49AE DW_DATA 1
RANGE $49AE-$49AF DB_DATA 1
RANGE $49AF-$49B0 DB_DATA 1
RANGE $49B0-$49B1 DB_DATA 1
RANGE $49B1-$49B3 DW_DATA 1
RANGE $49B3-$49B4 DB_DATA 1
RANGE $49B4-$49B5 DB_DATA 1
RANGE $49B5-$49B6 DB_DATA 1
RANGE $49B6-$49B7 DB_DATA 1
RANGE $49B7-$49B8 DB_DATA 1
RANGE $49B8-$49B9 DB_DATA 1
RANGE $49B9-$49BA DB_DATA 1
RANGE $49BA-$49BB DB_DATA 1
RANGE $49BB-$49BC DB_DATA 1
RANGE $49BC-$49BD DB_DATA 1
RANGE $49BD-$49BE DB_DATA 1
RANGE $49BE-$49BF DB_DATA 1
RANGE $49BF-$49C0 DB_DATA 1
RANGE $49C0-$49C1 DB_DATA 1
RANGE $49C1-$49C2 DB_DATA 1
RANGE $49C2-$49C3 DB_DATA 1
RANGE $49C3-$49C4 DB_DATA 1
RANGE $49C4-$49C5 DB_DATA 1
RANGE $49C5-$49C6 DB_DATA 1
RANGE $49C6-$49C7 DB_DATA 1
RANGE $49C7-$49C8 DB_DATA 1
RANGE $49C8-$49C9 DB_DATA 1
RANGE $49C9-$49CA DB_DATA 1
RANGE $49CA-$49CB DB_DATA 1
RANGE $49CB-$49CC DB_DATA 1
RANGE $49CC-$49CD DB_DATA 1
RANGE $49CD-$49CE DB_DATA 1
RANGE $49CE-$49CF DB_DATA 1
RANGE $49CF-$49D0 DB_DATA 1
RANGE $49D0-$49D1 DB_DATA 1
RANGE $49D1-$49D3 DW_DATA 1
RANGE $49D3-$49D4 DB_DATA 1
RANGE $49D4-$49D5 DB_DATA 1
RANGE $49D5-$49D6 DB_DATA 1
RANGE $49D6-$49D7 DB_DATA 1
RANGE $49D7-$49D8 DB_DATA 1
RANGE $49D8-$49D9 DB_DATA 1
RANGE $49D9-$49DA DB_DATA 1
RANGE $49DA-$49DB DB_DATA 1
RANGE $49DB-$49DC DB_DATA 1
RANGE $49DC-$49DD DB_DATA 1
RANGE $49DD-$49DE DB_DATA 1
RANGE $49DE-$49DF DB_DATA 1
RANGE $49DF-$49E0 DB_DATA 1
RANGE $49E0-$49E1 DB_DATA 1
RANGE $49E1-$49E2 DB_DATA 1
RANGE $49E2-$49E3 DB_DATA 1
RANGE $49E3-$49E4 DB_DATA 1
RANGE $49E4-$49E5 DB_DATA 1
RANGE $49E5-$49E6 DB_DATA 1
RANGE $49E6-$49E7 DB_DATA 1
RANGE $49E7-$49E8 DB_DATA 1
RANGE $49E8-$49E9 DB_DATA 1
RANGE $49E9-$49EA DB_DATA 1
RANGE $49EA-$49EB DB_DATA 1
RANGE $49EB-$49EC DB_DATA 1
RANGE $49EC-$49ED DB_DATA 1
RANGE $49ED-$49EE DB_DATA 1
RANGE $49EE-$49EF DB_DATA 1
RANGE $49EF-$49F0 DB_DATA 1
RANGE $49F0-$49F1 DB_DATA 1
RANGE $49F1-$49F2 DB_DATA 1
RANGE $49F2-$49F3 DB_DATA 1
RANGE $49F3-$49F4 DB_DATA 1
RANGE $49F4-$49F6 DW_DATA 1
RANGE $49F6-$49F7 DB_DATA 1
RANGE $49F7-$49F8 DB_DATA 1
RANGE $49F8-$49F9 DB_DATA 1
RANGE $49F9-$49FA DB_DATA 1
RANGE $49FA-$49FB DB_DATA 1
RANGE $49FB-$49FC DB_DATA 1
RANGE $49FC-$49FD DB_DATA 1
RANGE $49FD-$49FE DB_DATA 1
RANGE $49FE-$49FF DB_DATA 1
RANGE $49FF-$4A00 DB_DATA 1
RANGE $4A00-$4A01 DB_DATA 1
RANGE $4A01-$4A02 DB_DATA 1
RANGE $4A02-$4A03 DB_DATA 1
RANGE $4A03-$4A04 DB_DATA 1
RANGE $4A04-$4A05 DB_DATA 1
RANGE $4A05-$4A06 DB_DATA 1
RANGE $4A06-$4A07 DB_DATA 1
RANGE $4A07-$4A08 DB_DATA 1
RANGE $4A08-$4A09 DB_DATA 1
RANGE $4A09-$4A0A DB_DATA 1
RANGE $4A0A-$4A0B DB_DATA 1
RANGE $4A0B-$4A0C DB_DATA 1
RANGE $4A0C-$4A0D DB_DATA 1
RANGE $4A0D-$4A0E DB_DATA 1
RANGE $4A0E-$4A0F DB_DATA 1
RANGE $4A0F-$4A10 DB_DATA 1
RANGE $4A10-$4A11 DB_DATA 1
RANGE $4A11-$4A12 DB_DATA 1
RANGE $4A12-$4A13 DB_DATA 1
RANGE $4A13-$4A14 DB_DATA 1
RANGE $4A14-$4A15 DB_DATA 1
RANGE $4A15-$4A16 DB_DATA 1
RANGE $4A16-$4A18 DW_DATA 1
RANGE $4A18-$4A19 DB_DATA 1
RANGE $4A19-$4A1A DB_DATA 1
RANGE $4A1A-$4A1B DB_DATA 1
RANGE $4A1B-$4A1C DB_DATA 1
RANGE $4A1C-$4A1D DB_DATA 1
RANGE $4A1D-$4A1E DB_DATA 1
RANGE $4A1E-$4A1F DB_DATA 1
RANGE $4A1F-$4A20 DB_DATA 1
RANGE $4A20-$4A21 DB_DATA 1
RANGE $4A21-$4A22 DB_DATA 1
RANGE $4A22-$4A23 DB_DATA 1
RANGE $4A23-$4A24 DB_DATA 1
RANGE $4A24-$4A25 DB_DATA 1
RANGE $4A25-$4A26 DB_DATA 1
RANGE $4A26-$4A27 DB_DATA 1
RANGE $4A27-$4A28 DB_DATA 1
RANGE $4A28-$4A29 DB_DATA 1
RANGE $4A29-$4A2A DB_DATA 1
RANGE $4A2A-$4A2B DB_DATA 1
RANGE $4A2B-$4A2C DB_DATA 1
RANGE $4A2C-$4A2D DB_DATA 1
RANGE $4A2D-$4A2E DB_DATA 1
RANGE $4A2E-$4A2F DB_DATA 1
RANGE $4A2F-$4A30 DB_DATA 1
RANGE $4A30-$4A31 DB_DATA 1
RANGE $4A31-$4A32 DB_DATA 1
RANGE $4A32-$4A33 DB_DATA 1
RANGE $4A33-$4A34 DB_DATA 1
RANGE $4A34-$4A35 DB_DATA 1
RANGE $4A35-$4A36 DB_DATA 1
RANGE $4A36-$4A38 DW_DATA 1
RANGE $4A38-$4A39 DB_DATA 1
RANGE $4A39-$4A3A DB_DATA 1
RANGE $4A3A-$4A3C DW_DATA 1
RANGE $4A3C-$4A3D DB_DATA 1
RANGE $4A3D-$4A3E DB_DATA 1
RANGE $4A3E-$4A3F DB_DATA 1
RANGE $4A3F-$4A40 DB_DATA 1
RANGE $4A40-$4A41 DB_DATA 1
RANGE $4A41-$4A42 DB_DATA 1
RANGE $4A42-$4A43 DB_DATA 1
RANGE $4A43-$4A44 DB_DATA 1
RANGE $4A44-$4A45 DB_DATA 1
RANGE $4A45-$4A46 DB_DATA 1
RANGE $4A46-$4A47 DB_DATA 1
RANGE $4A47-$4A48 DB_DATA 1
RANGE $4A48-$4A49 DB_DATA 1
RANGE $4A49-$4A4A DB_DATA 1
RANGE $4A4A-$4A4B DB_DATA 1
RANGE $4A4B-$4A4C DB_DATA 1
RANGE $4A4C-$4A4D DB_DATA 1
RANGE $4A4D-$4A4E DB_DATA 1
RANGE $4A4E-$4A4F DB_DATA 1
RANGE $4A4F-$4A50 DB_DATA 1
RANGE $4A50-$4A51 DB_DATA 1
RANGE $4A51-$4A52 DB_DATA 1
RANGE $4A52-$4A53 DB_DATA 1
RANGE $4A53-$4A54 DB_DATA 1
RANGE $4A54-$4A55 DB_DATA 1
RANGE $4A55-$4A56 DB_DATA 1
RANGE $4A56-$4A57 DB_DATA 1
RANGE $4A57-$4A58 DB_DATA 1
RANGE $4A58-$4A59 DB_DATA 1
RANGE $4A59-$4A5A DB_DATA 1
RANGE $4A5A-$4A5C DW_DATA 1
RANGE $4A5C-$4A5D DB_DATA 1
RANGE $4A5D-$4A5E DB_DATA 1
RANGE $4A5E-$4A60 DW_DATA 1
RANGE $4A60-$4A61 DB_DATA 1
RANGE $4A61-$4A62 DB_DATA 1
RANGE $4A62-$4A63 DB_DATA 1
RANGE $4A63-$4A64 DB_DATA 1
RANGE $4A64-$4A65 DB_DATA 1
RANGE $4A65-$4A66 DB_DATA 1
RANGE $4A66-$4A67 DB_DATA 1
RANGE $4A67-$4A68 DB_DATA 1
RANGE $4A68-$4A69 DB_DATA 1
RANGE $4A69-$4A6A DB_DATA 1
RANGE $4A6A-$4A6B DB_DATA 1
RANGE $4A6B-$4A6C DB_DATA 1
RANGE $4A6C-$4A6D DB_DATA 1
RANGE $4A6D-$4A6E DB_DATA 1
RANGE $4A6E-$4A6F DB_DATA 1
RANGE $4A6F-$4A70 DB_DATA 1
RANGE $4A70-$4A71 DB_DATA 1
RANGE $4A71-$4A72 DB_DATA 1
RANGE $4A72-$4A73 DB_DATA 1
RANGE $4A73-$4A74 DB_DATA 1
RANGE $4A74-$4A75 DB_DATA 1
RANGE $4A75-$4A76 DB_DATA 1
RANGE $4A76-$4A77 DB_DATA 1
RANGE $4A77-$4A78 DB_DATA 1
RANGE $4A78-$4A79 DB_DATA 1
RANGE $4A79-$4A7A DB_DATA 1
RANGE $4A7A-$4A7B DB_DATA 1
RANGE $4A7B-$4A7C DB_DATA 1
RANGE $4A7C-$4A7D DB_DATA 1
RANGE $4A7D-$4A7E DB_DATA 1
RANGE $4A7E-$4A7F DB_DATA 1
RANGE $4A7F-$4A81 DW_DATA 1
RANGE $4A81-$4C5F CODE
RANGE $4C5F-$4C61 DW_DATA 1
RANGE $4C61-$4C63 DW_DATA 1
RANGE $4C63-$4C65 DW_DATA 1
RANGE $4C65-$4C67 DW_DATA 1
RANGE $4C67-$4C69 DW_DATA 1
RANGE $4C69-$4C6B DW_DATA 1
RANGE $4C6B-$4C6D DW_DATA 1
RANGE $4C6D-$4C6F DW_DATA 1
RANGE $4C6F-$4C71 DW_DATA 1
RANGE $4C71-$4C73 DW_DATA 1
RANGE $4C73-$4C75 DW_DATA 1
RANGE $4C75-$4C77 DW_DATA 1
RANGE $4C77-$4C79 DW_DATA 1
RANGE $4C79-$4C7B DW_DATA 1
RANGE $4C7B-$50F5 CODE
RANGE $50F5-$50F7 DW_DATA 1
RANGE $50F7-$50F9 DW_DATA 1
RANGE $50F9-$50FB DW_DATA 1
RANGE $50FB-$50FD DW_DATA 1
RANGE $50FD-$50FF DW_DATA 1
RANGE $50FF-$5101 DW_DATA 1
RANGE $5101-$5103 DW_DATA 1
RANGE $5103-$5105 DW_DATA 1
RANGE $5105-$5107 DW_DATA 1
RANGE $5107-$5109 DW_DATA 1
RANGE $5109-$510B DW_DATA 1
RANGE $510B-$510D DW_DATA 1
RANGE $510D-$510F DW_DATA 1
RANGE $510F-$5111 DW_DATA 1
RANGE $5111-$5113 DW_DATA 1
RANGE $5113-$5115 DW_DATA 1
RANGE $5115-$5117 DW_DATA 1
RANGE $5117-$5119 DW_DATA 1
RANGE $5119-$511B DW_DATA 1
RANGE $511B-$511D DW_DATA 1
RANGE $511D-$511F DW_DATA 1
RANGE $511F-$5121 DW_DATA 1
RANGE $5121-$5123 DW_DATA 1
RANGE $5123-$5125 DW_DATA 1
RANGE $5125-$5127 DW_DATA 1
RANGE $5127-$5129 DW_DATA 1
RANGE $5129-$512B DW_DATA 1
RANGE $512B-$512D DW_DATA 1
RANGE $512D-$512F DW_DATA 1
RANGE $512F-$5131 DW_DATA 1
RANGE $5131-$5133 DW_DATA 1
RANGE $5133-$5135 DW_DATA 1
RANGE $5135-$5137 DW_DATA 1
RANGE $5137-$5139 DW_DATA 1
RANGE $5139-$513B DW_DATA 1
RANGE $513B-$513C DB_DATA 1
RANGE $513C-$513D DB_DATA 1
RANGE $513D-$513E DB_DATA 1
RANGE $513E-$513F DB_DATA 1
RANGE $513F-$5140 DB_DATA 1
RANGE $5140-$5141 DB_DATA 1
RANGE $5141-$5142 DB_DATA 1
RANGE $5142-$5143 DB_DATA 1
RANGE $5143-$5144 DB_DATA 1
RANGE $5144-$5145 DB_DATA 1
RANGE $5145-$5146 DB_DATA 1
RANGE $5146-$5147 DB_DATA 1
RANGE $5147-$5148 DB_DATA 1
RANGE $5148-$5149 DB_DATA 1
RANGE $5149-$514A DB_DATA 1
RANGE $514A-$514B DB_DATA 1
RANGE $514B-$514D DW_DATA 1
RANGE $514D-$514E DB_DATA 1
RANGE $514E-$514F DB_DATA 1
RANGE $514F-$5150 DB_DATA 1
RANGE $5150-$5151 DB_DATA 1
RANGE $5151-$5152 DB_DATA 1
RANGE $5152-$5153 DB_DATA 1
RANGE $5153-$5154 DB_DATA 1
RANGE $5154-$5155 DB_DATA 1
RANGE $5155-$5156 DB_DATA 1
RANGE $5156-$5157 DB_DATA 1
RANGE $5157-$5159 DW_DATA 1
RANGE $5159-$515A DB_DATA 1
RANGE $515A-$515B DB_DATA 1
RANGE $515B-$515C DB_DATA 1
RANGE $515C-$515D DB_DATA 1
RANGE $515D-$515E DB_DATA 1
RANGE $515E-$515F DB_DATA 1
RANGE $515F-$5160 DB_DATA 1
RANGE $5160-$5161 DB_DATA 1
RANGE $5161-$5162 DB_DATA 1
RANGE $5162-$5163 DB_DATA 1
RANGE $5163-$5164 DB_DATA 1
RANGE $5164-$5165 DB_DATA 1
RANGE $5165-$5166 DB_DATA 1
RANGE $5166-$5167 DB_DATA 1
RANGE $5167-$5168 DB_DATA 1
RANGE $5168-$5169 DB_DATA 1
RANGE $5169-$516B DW_DATA 1
RANGE $516B-$516C DB_DATA 1
RANGE $516C-$516D DB_DATA 1
RANGE $516D-$516E DB_DATA 1
RANGE $516E-$516F DB_DATA 1
RANGE $516F-$5170 DB_DATA 1
RANGE $5170-$5171 DB_DATA 1
RANGE $5171-$5172 DB_DATA 1
RANGE $5172-$5173 DB_DATA 1
RANGE $5173-$5174 DB_DATA 1
RANGE $5174-$5175 DB_DATA 1
RANGE $5175-$5177 DW_DATA 1
RANGE $5177-$5178 DB_DATA 1
RANGE $5178-$5179 DB_DATA 1
RANGE $5179-$517A DB_DATA 1
RANGE $517A-$517B DB_DATA 1
RANGE $517B-$517C DB_DATA 1
RANGE $517C-$517D DB_DATA 1
RANGE $517D-$517E DB_DATA 1
RANGE $517E-$517F DB_DATA 1
RANGE $517F-$5180 DB_DATA 1
RANGE $5180-$5181 DB_DATA 1
RANGE $5181-$5182 DB_DATA 1
RANGE $5182-$5183 DB_DATA 1
RANGE $5183-$5184 DB_DATA 1
RANGE $5184-$5185 DB_DATA 1
RANGE $5185-$5186 DB_DATA 1
RANGE $5186-$5187 DB_DATA 1
RANGE $5187-$5189 DW_DATA 1
RANGE $5189-$518A DB_DATA 1
RANGE $518A-$518B DB_DATA 1
RANGE $518B-$518C DB_DATA 1
RANGE $518C-$518D DB_DATA 1
RANGE $518D-$518E DB_DATA 1
RANGE $518E-$518F DB_DATA 1
RANGE $518F-$5190 DB_DATA 1
RANGE $5190-$5191 DB_DATA 1
RANGE $5191-$5192 DB_DATA 1
RANGE $5192-$5193 DB_DATA 1
RANGE $5193-$5195 DW_DATA 1
RANGE $5195-$5196 DB_DATA 1
RANGE $5196-$5197 DB_DATA 1
RANGE $5197-$5198 DB_DATA 1
RANGE $5198-$5199 DB_DATA 1
RANGE $5199-$519A DB_DATA 1
RANGE $519A-$519B DB_DATA 1
RANGE $519B-$519C DB_DATA 1
RANGE $519C-$519D DB_DATA 1
RANGE $519D-$519E DB_DATA 1
RANGE $519E-$519F DB_DATA 1
RANGE $519F-$51A0 DB_DATA 1
RANGE $51A0-$51A1 DB_DATA 1
RANGE $51A1-$51A2 DB_DATA 1
RANGE $51A2-$51A3 DB_DATA 1
RANGE $51A3-$51A4 DB_DATA 1
RANGE $51A4-$51A5 DB_DATA 1
RANGE $51A5-$51A7 DW_DATA 1
RANGE $51A7-$51A8 DB_DATA 1
RANGE $51A8-$51A9 DB_DATA 1
RANGE $51A9-$51AA DB_DATA 1
RANGE $51AA-$51AB DB_DATA 1
RANGE $51AB-$51AC DB_DATA 1
RANGE $51AC-$51AD DB_DATA 1
RANGE $51AD-$51AE DB_DATA 1
RANGE $51AE-$51AF DB_DATA 1
RANGE $51AF-$51B0 DB_DATA 1
RANGE $51B0-$51B1 DB_DATA 1
RANGE $51B1-$51B3 DW_DATA 1
RANGE $51B3-$51B4 DB_DATA 1
RANGE $51B4-$51B5 DB_DATA 1
RANGE $51B5-$51B6 DB_DATA 1
RANGE $51B6-$51B7 DB_DATA 1
RANGE $51B7-$51B8 DB_DATA 1
RANGE $51B8-$51B9 DB_DATA 1
RANGE $51B9-$51BA DB_DATA 1
RANGE $51BA-$51BB DB_DATA 1
RANGE $51BB-$51BC DB_DATA 1
RANGE $51BC-$51BD DB_DATA 1
RANGE $51BD-$51BE DB_DATA 1
RANGE $51BE-$51BF DB_DATA 1
RANGE $51BF-$51C0 DB_DATA 1
RANGE $51C0-$51C1 DB_DATA 1
RANGE $51C1-$51C2 DB_DATA 1
RANGE $51C2-$51C3 DB_DATA 1
RANGE $51C3-$51C5 DW_DATA 1
RANGE $51C5-$51C6 DB_DATA 1
RANGE $51C6-$51C7 DB_DATA 1
RANGE $51C7-$51C8 DB_DATA 1
RANGE $51C8-$51C9 DB_DATA 1
RANGE $51C9-$51CA DB_DATA 1
RANGE $51CA-$51CB DB_DATA 1
RANGE $51CB-$51CC DB_DATA 1
RANGE $51CC-$51CD DB_DATA 1
RANGE $51CD-$51CE DB_DATA 1
RANGE $51CE-$51CF DB_DATA 1
RANGE $51CF-$51D1 DW_DATA 1
RANGE $51D1-$51D2 DB_DATA 1
RANGE $51D2-$51D3 DB_DATA 1
RANGE $51D3-$51D4 DB_DATA 1
RANGE $51D4-$51D5 DB_DATA 1
RANGE $51D5-$51D6 DB_DATA 1
RANGE $51D6-$51D7 DB_DATA 1
RANGE $51D7-$51D8 DB_DATA 1
RANGE $51D8-$51D9 DB_DATA 1
RANGE $51D9-$51DA DB_DATA 1
RANGE $51DA-$51DB DB_DATA 1
RANGE $51DB-$51DC DB_DATA 1
RANGE $51DC-$51DD DB_DATA 1
RANGE $51DD-$51DE DB_DATA 1
RANGE $51DE-$51DF DB_DATA 1
RANGE $51DF-$51E0 DB_DATA 1
RANGE $51E0-$51E1 DB_DATA 1
RANGE $51E1-$51E3 DW_DATA 1
RANGE $51E3-$51E4 DB_DATA 1
RANGE $51E4-$51E5 DB_DATA 1
RANGE $51E5-$51E6 DB_DATA 1
RANGE $51E6-$51E7 DB_DATA 1
RANGE $51E7-$51E8 DB_DATA 1
RANGE $51E8-$51E9 DB_DATA 1
RANGE $51E9-$51EA DB_DATA 1
RANGE $51EA-$51EB DB_DATA 1
RANGE $51EB-$51EC DB_DATA 1
RANGE $51EC-$51ED DB_DATA 1
RANGE $51ED-$51EF DW_DATA 1
RANGE $51EF-$51F0 DB_DATA 1
RANGE $51F0-$51F1 DB_DATA 1
RANGE $51F1-$51F2 DB_DATA 1
RANGE $51F2-$51F3 DB_DATA 1
RANGE $51F3-$51F4 DB_DATA 1
RANGE $51F4-$51F5 DB_DATA 1
RANGE $51F5-$51F6 DB_DATA 1
RANGE $51F6-$51F7 DB_DATA 1
RANGE $51F7-$51F8 DB_DATA 1
RANGE $51F8-$51F9 DB_DATA 1
RANGE $51F9-$51FA DB_DATA 1
RANGE $51FA-$51FB DB_DATA 1
RANGE $51FB-$51FC DB_DATA 1
RANGE $51FC-$51FD DB_DATA 1
RANGE $51FD-$51FE DB_DATA 1
RANGE $51FE-$51FF DB_DATA 1
RANGE $51FF-$5201 DW_DATA 1
RANGE $5201-$5202 DB_DATA 1
RANGE $5202-$5203 DB_DATA 1
RANGE $5203-$5204 DB_DATA 1
RANGE $5204-$5205 DB_DATA 1
RANGE $5205-$5206 DB_DATA 1
RANGE $5206-$5207 DB_DATA 1
RANGE $5207-$5208 DB_DATA 1
RANGE $5208-$5209 DB_DATA 1
RANGE $5209-$520A DB_DATA 1
RANGE $520A-$520B DB_DATA 1
RANGE $520B-$520D DW_DATA 1
RANGE $520D-$520E DB_DATA 1
RANGE $520E-$520F DB_DATA 1
RANGE $520F-$5210 DB_DATA 1
RANGE $5210-$5211 DB_DATA 1
RANGE $5211-$5212 DB_DATA 1
RANGE $5212-$5213 DB_DATA 1
RANGE $5213-$5214 DB_DATA 1
RANGE $5214-$5215 DB_DATA 1
RANGE $5215-$5216 DB_DATA 1
RANGE $5216-$5217 DB_DATA 1
RANGE $5217-$5218 DB_DATA 1
RANGE $5218-$5219 DB_DATA 1
RANGE $5219-$521A DB_DATA 1
RANGE $521A-$521B DB_DATA 1
RANGE $521B-$521C DB_DATA 1
RANGE $521C-$521D DB_DATA 1
RANGE $521D-$521F DW_DATA 1
RANGE $521F-$5220 DB_DATA 1
RANGE $5220-$5221 DB_DATA 1
RANGE $5221-$5222 DB_DATA 1
RANGE $5222-$5223 DB_DATA 1
RANGE $5223-$5224 DB_DATA 1
RANGE $5224-$5225 DB_DATA 1
RANGE $5225-$5226 DB_DATA 1
RANGE $5226-$5227 DB_DATA 1
RANGE $5227-$5228 DB_DATA 1
RANGE $5228-$5229 DB_DATA 1
RANGE $5229-$522B DW_DATA 1
RANGE $522B-$522C DB_DATA 1
RANGE $522C-$522D DB_DATA 1
RANGE $522D-$522E DB_DATA 1
RANGE $522E-$522F DB_DATA 1
RANGE $522F-$5230 DB_DATA 1
RANGE $5230-$5231 DB_DATA 1
RANGE $5231-$5232 DB_DATA 1
RANGE $5232-$5233 DB_DATA 1
RANGE $5233-$5234 DB_DATA 1
RANGE $5234-$5235 DB_DATA 1
RANGE $5235-$5236 DB_DATA 1
RANGE $5236-$5237 DB_DATA 1
RANGE $5237-$5238 DB_DATA 1
RANGE $5238-$5239 DB_DATA 1
RANGE $5239-$523A DB_DATA 1
RANGE $523A-$523B DB_DATA 1
RANGE $523B-$523D DW_DATA 1
RANGE $523D-$523E DB_DATA 1
RANGE $523E-$523F DB_DATA 1
RANGE $523F-$5240 DB_DATA 1
RANGE $5240-$5241 DB_DATA 1
RANGE $5241-$5242 DB_DATA 1
RANGE $5242-$5243 DB_DATA 1
RANGE $5243-$5244 DB_DATA 1
RANGE $5244-$5245 DB_DATA 1
RANGE $5245-$5246 DB_DATA 1
RANGE $5246-$5247 DB_DATA 1
RANGE $5247-$5249 DW_DATA 1
RANGE $5249-$524A DB_DATA 1
RANGE $524A-$524B DB_DATA 1
RANGE $524B-$524C DB_DATA 1
RANGE $524C-$524D DB_DATA 1
RANGE $524D-$524E DB_DATA 1
RANGE $524E-$524F DB_DATA 1
RANGE $524F-$5250 DB_DATA 1
RANGE $5250-$5251 DB_DATA 1
RANGE $5251-$5252 DB_DATA 1
RANGE $5252-$5253 DB_DATA 1
RANGE $5253-$5254 DB_DATA 1
RANGE $5254-$5255 DB_DATA 1
RANGE $5255-$5256 DB_DATA 1
RANGE $5256-$5257 DB_DATA 1
RANGE $5257-$5258 DB_DATA 1
RANGE $5258-$5259 DB_DATA 1
RANGE $5259-$525B DW_DATA 1
RANGE $525B-$525C DB_DATA 1
RANGE $525C-$525D DB_DATA 1
RANGE $525D-$525E DB_DATA 1
RANGE $525E-$525F DB_DATA 1
RANGE $525F-$5260 DB_DATA 1
RANGE $5260-$5261 DB_DATA 1
RANGE $5261-$5262 DB_DATA 1
RANGE $5262-$5263 DB_DATA 1
RANGE $5263-$5264 DB_DATA 1
RANGE $5264-$5265 DB_DATA 1
RANGE $5265-$5267 DW_DATA 1
RANGE $5267-$5268 DB_DATA 1
RANGE $5268-$5269 DB_DATA 1
RANGE $5269-$526A DB_DATA 1
RANGE $526A-$526B DB_DATA 1
RANGE $526B-$526C DB_DATA 1
RANGE $526C-$526D DB_DATA 1
RANGE $526D-$526E DB_DATA 1
RANGE $526E-$526F DB_DATA 1
RANGE $526F-$5270 DB_DATA 1
RANGE $5270-$5271 DB_DATA 1
RANGE $5271-$5272 DB_DATA 1
RANGE $5272-$5273 DB_DATA 1
RANGE $5273-$5274 DB_DATA 1
RANGE $5274-$5275 DB_DATA 1
RANGE $5275-$5276 DB_DATA 1
RANGE $5276-$5277 DB_DATA 1
RANGE $5277-$5279 DW_DATA 1
RANGE $5279-$527A DB_DATA 1
RANGE $527A-$527B DB_DATA 1
RANGE $527B-$527C DB_DATA 1
RANGE $527C-$527D DB_DATA 1
RANGE $527D-$527E DB_DATA 1
RANGE $527E-$527F DB_DATA 1
RANGE $527F-$5280 DB_DATA 1
RANGE $5280-$5281 DB_DATA 1
RANGE $5281-$5282 DB_DATA 1
RANGE $5282-$5283 DB_DATA 1
RANGE $5283-$5285 DW_DATA 1
RANGE $5285-$5286 DB_DATA 1
RANGE $5286-$5287 DB_DATA 1
RANGE $5287-$5288 DB_DATA 1
RANGE $5288-$5289 DB_DATA 1
RANGE $5289-$528A DB_DATA 1
RANGE $528A-$528B DB_DATA 1
RANGE $528B-$528C DB_DATA 1
RANGE $528C-$528D DB_DATA 1
RANGE $528D-$528E DB_DATA 1
RANGE $528E-$528F DB_DATA 1
RANGE $528F-$5290 DB_DATA 1
RANGE $5290-$5291 DB_DATA 1
RANGE $5291-$5292 DB_DATA 1
RANGE $5292-$5293 DB_DATA 1
RANGE $5293-$5294 DB_DATA 1
RANGE $5294-$5295 DB_DATA 1
RANGE $5295-$5297 DW_DATA 1
RANGE $5297-$5298 DB_DATA 1
RANGE $5298-$5299 DB_DATA 1
RANGE $5299-$529A DB_DATA 1
RANGE $529A-$529B DB_DATA 1
RANGE $529B-$529C DB_DATA 1
RANGE $529C-$529D DB_DATA 1
RANGE $529D-$529E DB_DATA 1
RANGE $529E-$529F DB_DATA 1
RANGE $529F-$52A0 DB_DATA 1
RANGE $52A0-$52A1 DB_DATA 1
RANGE $52A1-$52A3 DW_DATA 1
RANGE $52A3-$52A4 DB_DATA 1
RANGE $52A4-$52A5 DB_DATA 1
RANGE $52A5-$52A6 DB_DATA 1
RANGE $52A6-$52A7 DB_DATA 1
RANGE $52A7-$52A8 DB_DATA 1
RANGE $52A8-$52A9 DB_DATA 1
RANGE $52A9-$52AA DB_DATA 1
RANGE $52AA-$52AB DB_DATA 1
RANGE $52AB-$52AC DB_DATA 1
RANGE $52AC-$52AD DB_DATA 1
RANGE $52AD-$52AE DB_DATA 1
RANGE $52AE-$52AF DB_DATA 1
RANGE $52AF-$52B0 DB_DATA 1
RANGE $52B0-$52B1 DB_DATA 1
RANGE $52B1-$52B2 DB_DATA 1
RANGE $52B2-$52B3 DB_DATA 1
RANGE $52B3-$52B5 DW_DATA 1
RANGE $52B5-$52B6 DB_DATA 1
RANGE $52B6-$52B7 DB_DATA 1
RANGE $52B7-$52B8 DB_DATA 1
RANGE $52B8-$52B9 DB_DATA 1
RANGE $52B9-$52BA DB_DATA 1
RANGE $52BA-$52BB DB_DATA 1
RANGE $52BB-$52BC DB_DATA 1
RANGE $52BC-$52BD DB_DATA 1
RANGE $52BD-$52BE DB_DATA 1
RANGE $52BE-$52BF DB_DATA 1
RANGE $52BF-$52C1 DW_DATA 1
RANGE $52C1-$52C2 DB_DATA 1
RANGE $52C2-$52C3 DB_DATA 1
RANGE $52C3-$52C4 DB_DATA 1
RANGE $52C4-$52C5 DB_DATA 1
RANGE $52C5-$52C6 DB_DATA 1
RANGE $52C6-$52C7 DB_DATA 1
RANGE $52C7-$52C8 DB_DATA 1
RANGE $52C8-$52C9 DB_DATA 1
RANGE $52C9-$52CA DB_DATA 1
RANGE $52CA-$52CB DB_DATA 1
RANGE $52CB-$52CC DB_DATA 1
RANGE $52CC-$52CD DB_DATA 1
RANGE $52CD-$52CE DB_DATA 1
RANGE $52CE-$52CF DB_DATA 1
RANGE $52CF-$52D0 DB_DATA 1
RANGE $52D0-$52D1 DB_DATA 1
RANGE $52D1-$52D3 DW_DATA 1
RANGE $52D3-$52D4 DB_DATA 1
RANGE $52D4-$52D5 DB_DATA 1
RANGE $52D5-$52D6 DB_DATA 1
RANGE $52D6-$52D7 DB_DATA 1
RANGE $52D7-$52D8 DB_DATA 1
RANGE $52D8-$52D9 DB_DATA 1
RANGE $52D9-$52DA DB_DATA 1
RANGE $52DA-$52DB DB_DATA 1
RANGE $52DB-$52DC DB_DATA 1
RANGE $52DC-$52DD DB_DATA 1
RANGE $52DD-$52DF DW_DATA 1
RANGE $52DF-$52E0 DB_DATA 1
RANGE $52E0-$52E1 DB_DATA 1
RANGE $52E1-$52E2 DB_DATA 1
RANGE $52E2-$52E3 DB_DATA 1
RANGE $52E3-$52E4 DB_DATA 1
RANGE $52E4-$52E5 DB_DATA 1
RANGE $52E5-$52E6 DB_DATA 1
RANGE $52E6-$52E7 DB_DATA 1
RANGE $52E7-$52E8 DB_DATA 1
RANGE $52E8-$52E9 DB_DATA 1
RANGE $52E9-$52EA DB_DATA 1
RANGE $52EA-$52EB DB_DATA 1
RANGE $52EB-$52EC DB_DATA 1
RANGE $52EC-$52ED DB_DATA 1
RANGE $52ED-$52EE DB_DATA 1
RANGE $52EE-$52EF DB_DATA 1
RANGE $52EF-$52F1 DW_DATA 1
RANGE $52F1-$52F2 DB_DATA 1
RANGE $52F2-$52F3 DB_DATA 1
RANGE $52F3-$52F4 DB_DATA 1
RANGE $52F4-$52F5 DB_DATA 1
RANGE $52F5-$52F6 DB_DATA 1
RANGE $52F6-$52F7 DB_DATA 1
RANGE $52F7-$52F8 DB_DATA 1
RANGE $52F8-$52F9 DB_DATA 1
RANGE $52F9-$52FA DB_DATA 1
RANGE $52FA-$52FB DB_DATA 1
RANGE $52FB-$52FD DW_DATA 1
RANGE $52FD-$52FE DB_DATA 1
RANGE $52FE-$52FF DB_DATA 1
RANGE $52FF-$5300 DB_DATA 1
RANGE $5300-$5301 DB_DATA 1
RANGE $5301-$5302 DB_DATA 1
RANGE $5302-$5303 DB_DATA 1
RANGE $5303-$5304 DB_DATA 1
RANGE $5304-$5305 DB_DATA 1
RANGE $5305-$5306 DB_DATA 1
RANGE $5306-$5307 DB_DATA 1
RANGE $5307-$5308 DB_DATA 1
RANGE $5308-$5309 DB_DATA 1
RANGE $5309-$530A DB_DATA 1
RANGE $530A-$530B DB_DATA 1
RANGE $530B-$530C DB_DATA 1
RANGE $530C-$530D DB_DATA 1
RANGE $530D-$530F DW_DATA 1
RANGE $530F-$5310 DB_DATA 1
RANGE $5310-$5311 DB_DATA 1
RANGE $5311-$5312 DB_DATA 1
RANGE $5312-$5313 DB_DATA 1
RANGE $5313-$5314 DB_DATA 1
RANGE $5314-$5315 DB_DATA 1
RANGE $5315-$5316 DB_DATA 1
RANGE $5316-$5317 DB_DATA 1
RANGE $5317-$5318 DB_DATA 1
RANGE $5318-$5319 DB_DATA 1
RANGE $5319-$531B DW_DATA 1
RANGE $531B-$531C DB_DATA 1
RANGE $531C-$531D DB_DATA 1
RANGE $531D-$531E DB_DATA 1
RANGE $531E-$531F DB_DATA 1
RANGE $531F-$5320 DB_DATA 1
RANGE $5320-$5321 DB_DATA 1
RANGE $5321-$5322 DB_DATA 1
RANGE $5322-$5323 DB_DATA 1
RANGE $5323-$5324 DB_DATA 1
RANGE $5324-$5325 DB_DATA 1
RANGE $5325-$5326 DB_DATA 1
RANGE $5326-$5327 DB_DATA 1
RANGE $5327-$5328 DB_DATA 1
RANGE $5328-$5329 DB_DATA 1
RANGE $5329-$532A DB_DATA 1
RANGE $532A-$532B DB_DATA 1
RANGE $532B-$532D DW_DATA 1
RANGE $532D-$532E DB_DATA 1
RANGE $532E-$532F DB_DATA 1
RANGE $532F-$5330 DB_DATA 1
RANGE $5330-$5331 DB_DATA 1
RANGE $5331-$5332 DB_DATA 1
RANGE $5332-$5333 DB_DATA 1
RANGE $5333-$5334 DB_DATA 1
RANGE $5334-$5335 DB_DATA 1
RANGE $5335-$5336 DB_DATA 1
RANGE $5336-$5337 DB_DATA 1
RANGE $5337-$5339 DW_DATA 1
RANGE $5339-$533A DB_DATA 1
RANGE $533A-$533B DB_DATA 1
RANGE $533B-$533C DB_DATA 1
RANGE $533C-$533D DB_DATA 1
RANGE $533D-$533E DB_DATA 1
RANGE $533E-$533F DB_DATA 1
RANGE $533F-$5340 DB_DATA 1
RANGE $5340-$5341 DB_DATA 1
RANGE $5341-$5342 DB_DATA 1
RANGE $5342-$5343 DB_DATA 1
RANGE $5343-$5344 DB_DATA 1
RANGE $5344-$5345 DB_DATA 1
RANGE $5345-$5346 DB_DATA 1
RANGE $5346-$5347 DB_DATA 1
RANGE $5347-$5348 DB_DATA 1
RANGE $5348-$5349 DB_DATA 1
RANGE $5349-$534B DW_DATA 1
RANGE $534B-$534C DB_DATA 1
RANGE $534C-$534D DB_DATA 1
RANGE $534D-$534E DB_DATA 1
RANGE $534E-$534F DB_DATA 1
RANGE $534F-$5350 DB_DATA 1
RANGE $5350-$5351 DB_DATA 1
RANGE $5351-$5352 DB_DATA 1
RANGE $5352-$5353 DB_DATA 1
RANGE $5353-$5354 DB_DATA 1
RANGE $5354-$5355 DB_DATA 1
RANGE $5355-$5357 DW_DATA 1
RANGE $5357-$5358 DB_DATA 1
RANGE $5358-$5359 DB_DATA 1
RANGE $5359-$535A DB_DATA 1
RANGE $535A-$535B DB_DATA 1
RANGE $535B-$535C DB_DATA 1
RANGE $535C-$535D DB_DATA 1
RANGE $535D-$535E DB_DATA 1
RANGE $535E-$535F DB_DATA 1
RANGE $535F-$5360 DB_DATA 1
RANGE $5360-$5361 DB_DATA 1
RANGE $5361-$5362 DB_DATA 1
RANGE $5362-$5363 DB_DATA 1
RANGE $5363-$5364 DB_DATA 1
RANGE $5364-$5365 DB_DATA 1
RANGE $5365-$5366 DB_DATA 1
RANGE $5366-$5367 DB_DATA 1
RANGE $5367-$5369 DW_DATA 1
RANGE $5369-$536A DB_DATA 1
RANGE $536A-$536B DB_DATA 1
RANGE $536B-$536C DB_DATA 1
RANGE $536C-$536D DB_DATA 1
RANGE $536D-$536E DB_DATA 1
RANGE $536E-$536F DB_DATA 1
RANGE $536F-$5370 DB_DATA 1
RANGE $5370-$5371 DB_DATA 1
RANGE $5371-$5372 DB_DATA 1
RANGE $5372-$5373 DB_DATA 1
RANGE $5373-$5375 DW_DATA 1
RANGE $5375-$5376 DB_DATA 1
RANGE $5376-$5377 DB_DATA 1
RANGE $5377-$5378 DB_DATA 1
RANGE $5378-$5379 DB_DATA 1
RANGE $5379-$537A DB_DATA 1
RANGE $537A-$537B DB_DATA 1
RANGE $537B-$537C DB_DATA 1
RANGE $537C-$537D DB_DATA 1
RANGE $537D-$537E DB_DATA 1
RANGE $537E-$537F DB_DATA 1
RANGE $537F-$5380 DB_DATA 1
RANGE $5380-$5381 DB_DATA 1
RANGE $5381-$5382 DB_DATA 1
RANGE $5382-$5383 DB_DATA 1
RANGE $5383-$5384 DB_DATA 1
RANGE $5384-$5385 DB_DATA 1
RANGE $5385-$5387 DW_DATA 1
RANGE $5387-$5388 DB_DATA 1
RANGE $5388-$5389 DB_DATA 1
RANGE $5389-$538A DB_DATA 1
RANGE $538A-$538B DB_DATA 1
RANGE $538B-$538C DB_DATA 1
RANGE $538C-$538D DB_DATA 1
RANGE $538D-$538E DB_DATA 1
RANGE $538E-$538F DB_DATA 1
RANGE $538F-$5390 DB_DATA 1
RANGE $5390-$5391 DB_DATA 1
RANGE $5391-$5393 DW_DATA 1
RANGE $5393-$5735 CODE
RANGE $5735-$5737 DW_DATA 1
RANGE $5737-$5739 DW_DATA 1
RANGE $5739-$573B DW_DATA 1
RANGE $573B-$573D DW_DATA 1
RANGE $573D-$573F DW_DATA 1
RANGE $573F-$5741 DW_DATA 1
RANGE $5741-$5743 DW_DATA 1
RANGE $5743-$5745 DW_DATA 1
RANGE $5745-$5747 DW_DATA 1
RANGE $5747-$5749 DW_DATA 1
RANGE $5749-$574B DW_DATA 1
RANGE $574B-$574D DW_DATA 1
RANGE $574D-$574F DW_DATA 1
RANGE $574F-$5751 DW_DATA 1
RANGE $5751-$5753 DW_DATA 1
RANGE $5753-$5755 DW_DATA 1
RANGE $5755-$5757 DW_DATA 1
RANGE $5757-$5759 DW_DATA 1
RANGE $5759-$575B DW_DATA 1
RANGE $575B-$575D DW_DATA 1
RANGE $575D-$575F DW_DATA 1
RANGE $575F-$5761 DW_DATA 1
RANGE $5761-$5763 DW_DATA 1
RANGE $5763-$5765 DW_DATA 1
RANGE $5765-$5767 DW_DATA 1
RANGE $5767-$5769 DW_DATA 1
RANGE $5769-$576B DW_DATA 1
RANGE $576B-$576D DW_DATA 1
RANGE $576D-$576F DW_DATA 1
RANGE $576F-$5772 DB_DATA 3
RANGE $5772-$5775 DB_DATA 3
RANGE $5775-$5778 DB_DATA 3
RANGE $5778-$577B DB_DATA 3
RANGE $577B-$577E DB_DATA 3
RANGE $577E-$5781 DB_DATA 3
RANGE $5781-$5782 DB_DATA 1
RANGE $5782-$5785 DB_DATA 3
RANGE $5785-$5788 DB_DATA 3
RANGE $5788-$578B DB_DATA 3
RANGE $578B-$578E DB_DATA 3
RANGE $578E-$5791 DB_DATA 3
RANGE $5791-$5794 DB_DATA 3
RANGE $5794-$5795 DB_DATA 1
RANGE $5795-$5798 DB_DATA 3
RANGE $5798-$579B DB_DATA 3
RANGE $579B-$579E DB_DATA 3
RANGE $579E-$57A1 DB_DATA 3
RANGE $57A1-$57A4 DB_DATA 3
RANGE $57A4-$57A7 DB_DATA 3
RANGE $57A7-$57AA DB_DATA 3
RANGE $57AA-$57AD DB_DATA 3
RANGE $57AD-$57AE DB_DATA 1
RANGE $57AE-$57B1 DB_DATA 3
RANGE $57B1-$57B4 DB_DATA 3
RANGE $57B4-$57B7 DB_DATA 3
RANGE $57B7-$57BA DB_DATA 3
RANGE $57BA-$57BD DB_DATA 3
RANGE $57BD-$57C0 DB_DATA 3
RANGE $57C0-$57C1 DB_DATA 1
RANGE $57C1-$57C4 DB_DATA 3
RANGE $57C4-$57C7 DB_DATA 3
RANGE $57C7-$57CA DB_DATA 3
RANGE $57CA-$57CD DB_DATA 3
RANGE $57CD-$57D0 DB_DATA 3
RANGE $57D0-$57D3 DB_DATA 3
RANGE $57D3-$57D6 DB_DATA 3
RANGE $57D6-$57D7 DB_DATA 1
RANGE $57D7-$57DA DB_DATA 3
RANGE $57DA-$57DD DB_DATA 3
RANGE $57DD-$57E0 DB_DATA 3
RANGE $57E0-$57E3 DB_DATA 3
RANGE $57E3-$57E6 DB_DATA 3
RANGE $57E6-$57E7 DB_DATA 1
RANGE $57E7-$57EA DB_DATA 3
RANGE $57EA-$57ED DB_DATA 3
RANGE $57ED-$57F0 DB_DATA 3
RANGE $57F0-$57F3 DB_DATA 3
RANGE $57F3-$57F6 DB_DATA 3
RANGE $57F6-$57F9 DB_DATA 3
RANGE $57F9-$57FC DB_DATA 3
RANGE $57FC-$57FF DB_DATA 3
RANGE $57FF-$5800 DB_DATA 1
RANGE $5800-$5803 DB_DATA 3
RANGE $5803-$5806 DB_DATA 3
RANGE $5806-$5809 DB_DATA 3
RANGE $5809-$580C DB_DATA 3
RANGE $580C-$580F DB_DATA 3
RANGE $580F-$5810 DB_DATA 1
RANGE $5810-$5813 DB_DATA 3
RANGE $5813-$5816 DB_DATA 3
RANGE $5816-$5819 DB_DATA 3
RANGE $5819-$581C DB_DATA 3
RANGE $581C-$581F DB_DATA 3
RANGE $581F-$5820 DB_DATA 1
RANGE $5820-$5823 DB_DATA 3
RANGE $5823-$5826 DB_DATA 3
RANGE $5826-$5829 DB_DATA 3
RANGE $5829-$582C DB_DATA 3
RANGE $582C-$582F DB_DATA 3
RANGE $582F-$5830 DB_DATA 1
RANGE $5830-$5833 DB_DATA 3
RANGE $5833-$5836 DB_DATA 3
RANGE $5836-$5839 DB_DATA 3
RANGE $5839-$583C DB_DATA 3
RANGE $583C-$583F DB_DATA 3
RANGE $583F-$5840 DB_DATA 1
RANGE $5840-$5843 DB_DATA 3
RANGE $5843-$5846 DB_DATA 3
RANGE $5846-$5849 DB_DATA 3
RANGE $5849-$584A DB_DATA 1
RANGE $584A-$584D DB_DATA 3
RANGE $584D-$5850 DB_DATA 3
RANGE $5850-$5853 DB_DATA 3
RANGE $5853-$5856 DB_DATA 3
RANGE $5856-$5857 DB_DATA 1
RANGE $5857-$585A DB_DATA 3
RANGE $585A-$585D DB_DATA 3
RANGE $585D-$5860 DB_DATA 3
RANGE $5860-$5861 DB_DATA 1
RANGE $5861-$5864 DB_DATA 3
RANGE $5864-$5867 DB_DATA 3
RANGE $5867-$586A DB_DATA 3
RANGE $586A-$586D DB_DATA 3
RANGE $586D-$5870 DB_DATA 3
RANGE $5870-$5873 DB_DATA 3
RANGE $5873-$5876 DB_DATA 3
RANGE $5876-$5877 DB_DATA 1
RANGE $5877-$587A DB_DATA 3
RANGE $587A-$587D DB_DATA 3
RANGE $587D-$5880 DB_DATA 3
RANGE $5880-$5883 DB_DATA 3
RANGE $5883-$5884 DB_DATA 1
RANGE $5884-$5887 DB_DATA 3
RANGE $5887-$588A DB_DATA 3
RANGE $588A-$588D DB_DATA 3
RANGE $588D-$5890 DB_DATA 3
RANGE $5890-$5893 DB_DATA 3
RANGE $5893-$5896 DB_DATA 3
RANGE $5896-$5899 DB_DATA 3
RANGE $5899-$589C DB_DATA 3
RANGE $589C-$589F DB_DATA 3
RANGE $589F-$58A2 DB_DATA 3
RANGE $58A2-$58A3 DB_DATA 1
RANGE $58A3-$58A6 DB_DATA 3
RANGE $58A6-$58A9 DB_DATA 3
RANGE $58A9-$58AC DB_DATA 3
RANGE $58AC-$58AF DB_DATA 3
RANGE $58AF-$58B2 DB_DATA 3
RANGE $58B2-$58B5 DB_DATA 3
RANGE $58B5-$58B8 DB_DATA 3
RANGE $58B8-$58B9 DB_DATA 1
RANGE $58B9-$58BC DB_DATA 3
RANGE $58BC-$58BF DB_DATA 3
RANGE $58BF-$58C2 DB_DATA 3
RANGE $58C2-$58C5 DB_DATA 3
RANGE $58C5-$58C8 DB_DATA 3
RANGE $58C8-$58CB DB_DATA 3
RANGE $58CB-$58CE DB_DATA 3
RANGE $58CE-$58D1 DB_DATA 3
RANGE $58D1-$58D4 DB_DATA 3
RANGE $58D4-$58D5 DB_DATA 1
RANGE $58D5-$58D8 DB_DATA 3
RANGE $58D8-$58DB DB_DATA 3
RANGE $58DB-$58DE DB_DATA 3
RANGE $58DE-$58E1 DB_DATA 3
RANGE $58E1-$58E2 DB_DATA 1
RANGE $58E2-$58E5 DB_DATA 3
RANGE $58E5-$58E8 DB_DATA 3
RANGE $58E8-$58EB DB_DATA 3
RANGE $58EB-$58EE DB_DATA 3
RANGE $58EE-$58EF DB_DATA 1
RANGE $58EF-$58F2 DB_DATA 3
RANGE $58F2-$58F5 DB_DATA 3
RANGE $58F5-$58F8 DB_DATA 3
RANGE $58F8-$58F9 DB_DATA 1
RANGE $58F9-$58FC DB_DATA 3
RANGE $58FC-$58FF DB_DATA 3
RANGE $58FF-$5902 DB_DATA 3
RANGE $5902-$5905 DB_DATA 3
RANGE $5905-$5908 DB_DATA 3
RANGE $5908-$5909 DB_DATA 1
RANGE $5909-$590C DB_DATA 3
RANGE $590C-$590F DB_DATA 3
RANGE $590F-$5912 DB_DATA 3
RANGE $5912-$5913 DB_DATA 1
RANGE $5913-$5916 DB_DATA 3
RANGE $5916-$5919 DB_DATA 3
RANGE $5919-$591C DB_DATA 3
RANGE $591C-$591F DB_DATA 3
RANGE $591F-$5922 DB_DATA 3
RANGE $5922-$5923 DB_DATA 1
RANGE $5923-$5926 DB_DATA 3
RANGE $5926-$5929 DB_DATA 3
RANGE $5929-$592C DB_DATA 3
RANGE $592C-$592F DB_DATA 3
RANGE $592F-$5930 DB_DATA 1
RANGE $5930-$5933 DB_DATA 3
RANGE $5933-$5936 DB_DATA 3
RANGE $5936-$5939 DB_DATA 3
RANGE $5939-$593C DB_DATA 3
RANGE $593C-$593D DB_DATA 1
RANGE $593D-$593E DB_DATA 1
RANGE $593E-$5941 DB_DATA 3
RANGE $5941-$5944 DB_DATA 3
RANGE $5944-$5947 DB_DATA 3
RANGE $5947-$594A DB_DATA 3
RANGE $594A-$594D DB_DATA 3
RANGE $594D-$5950 DB_DATA 3
RANGE $5950-$5953 DB_DATA 3
RANGE $5953-$5956 DB_DATA 3
RANGE $5956-$5959 DB_DATA 3
RANGE $5959-$595A DB_DATA 1
RANGE $595A-$61EA CODE
RANGE $61EA-$61F2 CHAR_DATA 8
RANGE $61F2-$61F8 CHAR_DATA 6
RANGE $61F8-$61FC CHAR_DATA 4
RANGE $61FC-$6202 CHAR_DATA 6
RANGE $6202-$6207 CHAR_DATA 5
RANGE $6207-$620B CHAR_DATA 4
RANGE $620B-$620E CHAR_DATA 3
RANGE $620E-$6213 CHAR_DATA 5
RANGE $6213-$6218 CHAR_DATA 5
RANGE $6218-$688D CODE
RANGE $688D-$6898 DB_DATA 11
RANGE $6898-$68A3 DB_DATA 11
RANGE $68A3-$68AE DB_DATA 11
RANGE $68AE-$68B9 DB_DATA 11
RANGE $68B9-$68C4 DB_DATA 11
RANGE $68C4-$68CD DB_DATA 9
RANGE $68CD-$68D8 DB_DATA 11
RANGE $68D8-$68E3 DB_DATA 11
RANGE $68E3-$68EE DB_DATA 11
RANGE $68EE-$68F9 DB_DATA 11
RANGE $68F9-$6904 DB_DATA 11
RANGE $6904-$690D DB_DATA 9
RANGE $690D-$6BCC CODE
RANGE $6BCC-$6BCE DW_DATA 1
RANGE $6BCE-$6BD0 DW_DATA 1
RANGE $6BD0-$6BD2 DW_DATA 1
RANGE $6BD2-$6BD4 DW_DATA 1
RANGE $6BD4-$6BD6 DW_DATA 1
RANGE $6BD6-$6BD8 DW_DATA 1
RANGE $6BD8-$6BDA DW_DATA 1
RANGE $6BDA-$6BDE DW_DATA 2
RANGE $6BDE-$6BE2 DW_DATA 2
RANGE $6BE2-$6BE6 DW_DATA 2
RANGE $6BE6-$6BEA DW_DATA 2
RANGE $6BEA-$6BEE DW_DATA 2
RANGE $6BEE-$6BF2 DW_DATA 2
RANGE $6BF2-$6BF6 DW_DATA 2
RANGE $6BF6-$6BFA DW_DATA 2
RANGE $6BFA-$6BFE DW_DATA 2
RANGE $6BFE-$6BFF DB_DATA 1
RANGE $6BFF-$6C03 DW_DATA 2
RANGE $6C03-$6C07 DW_DATA 2
RANGE $6C07-$6C0B DW_DATA 2
RANGE $6C0B-$6C0F DW_DATA 2
RANGE $6C0F-$6C13 DW_DATA 2
RANGE $6C13-$6C17 DW_DATA 2
RANGE $6C17-$6C1B DW_DATA 2
RANGE $6C1B-$6C1F DW_DATA 2
RANGE $6C1F-$6C23 DW_DATA 2
RANGE $6C23-$6C24 DB_DATA 1
RANGE $6C24-$6C28 DW_DATA 2
RANGE $6C28-$6C2C DW_DATA 2
RANGE $6C2C-$6C30 DW_DATA 2
RANGE $6C30-$6C34 DW_DATA 2
RANGE $6C34-$6C38 DW_DATA 2
RANGE $6C38-$6C3C DW_DATA 2
RANGE $6C3C-$6C40 DW_DATA 2
RANGE $6C40-$6C44 DW_DATA 2
RANGE $6C44-$6C48 DW_DATA 2
RANGE $6C48-$6C4C DW_DATA 2
RANGE $6C4C-$6C50 DW_DATA 2
RANGE $6C50-$6C51 DB_DATA 1
RANGE $6C51-$6C55 DW_DATA 2
RANGE $6C55-$6C59 DW_DATA 2
RANGE $6C59-$6C5D DW_DATA 2
RANGE $6C5D-$6C61 DW_DATA 2
RANGE $6C61-$6C65 DW_DATA 2
RANGE $6C65-$6C69 DW_DATA 2
RANGE $6C69-$6C6D DW_DATA 2
RANGE $6C6D-$6C6E DB_DATA 1
RANGE $6C6E-$6C72 DW_DATA 2
RANGE $6C72-$6C76 DW_DATA 2
RANGE $6C76-$6C7A DW_DATA 2
RANGE $6C7A-$6C7E DW_DATA 2
RANGE $6C7E-$6C82 DW_DATA 2
RANGE $6C82-$6C86 DW_DATA 2
RANGE $6C86-$6C8A DW_DATA 2
RANGE $6C8A-$6C8E DW_DATA 2
RANGE $6C8E-$6C92 DW_DATA 2
RANGE $6C92-$6C93 DB_DATA 1
RANGE $6C93-$6C97 DW_DATA 2
RANGE $6C97-$6C9B DW_DATA 2
RANGE $6C9B-$6C9F DW_DATA 2
RANGE $6C9F-$6CA3 DW_DATA 2
RANGE $6CA3-$6CA7 DW_DATA 2
RANGE $6CA7-$6CAB DW_DATA 2
RANGE $6CAB-$6CAF DW_DATA 2
RANGE $6CAF-$6CB0 DB_DATA 1
RANGE $6CB0-$6CB4 DW_DATA 2
RANGE $6CB4-$6CB8 DW_DATA 2
RANGE $6CB8-$6CBC DW_DATA 2
RANGE $6CBC-$6CC0 DW_DATA 2
RANGE $6CC0-$6CC4 DW_DATA 2
RANGE $6CC4-$6CC5 DB_DATA 1
RANGE $6CC5-$6E8F CODE
RANGE $6E8F-$6EA7 DW_DATA 12
RANGE $6EA7-$6EBF DW_DATA 12
RANGE $6EBF-$6ED7 DW_DATA 12
RANGE $6ED7-$6EEF DW_DATA 12
RANGE $6EEF-$6F07 DW_DATA 12
RANGE $6F07-$6F1F DW_DATA 12
RANGE $6F1F-$6F37 DW_DATA 12
RANGE $6F37-$6F4F DW_DATA 12
RANGE $6F4F-$6F67 DW_DATA 12
RANGE $6F67-$6F7F DW_DATA 12
RANGE $6F7F-$6F97 DW_DATA 12
RANGE $6F97-$6FAF DW_DATA 12
RANGE $6FAF-$7F45 CODE
RANGE $7F45-$7F6D DB_DATA 40
RANGE $7F6D-$7FF0 DB_DATA 131
RANGE $7FF0-$8000 DB_DATA 16

